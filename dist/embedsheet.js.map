{"version":3,"sources":["webpack://EmbedSheet/webpack/bootstrap","webpack://EmbedSheet/./node_modules/xlsx/xlsx.js","webpack://EmbedSheet/(webpack)/buildin/global.js","webpack://EmbedSheet/./node_modules/buffer/index.js","webpack://EmbedSheet/./node_modules/process/browser.js","webpack://EmbedSheet/./node_modules/codepage/cputils.js","webpack://EmbedSheet/./node_modules/lokijs/src/lokijs.js","webpack://EmbedSheet/./node_modules/base64-js/index.js","webpack://EmbedSheet/./node_modules/ieee754/index.js","webpack://EmbedSheet/./node_modules/isarray/index.js","webpack://EmbedSheet/./node_modules/xlsx/jszip.js","webpack://EmbedSheet/./node_modules/lokijs/src/loki-indexed-adapter.js","webpack://EmbedSheet/./src/data.js","webpack://EmbedSheet/./src/renderer.js","webpack://EmbedSheet/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","Buffer","process","XLSX","version","current_codepage","current_ansi","cptable","window","VALID_ANSI","push","CS2CP","0","1","2","77","128","129","130","134","136","161","162","163","177","178","186","204","222","238","255","69","set_ansi","cp","indexOf","set_cp","reset_cp","char_codes","data","len","length","charCodeAt","debom","c1","c2","String","fromCharCode","join","utf16leread","slice","utf16beread","_getchar","x","utils","decode","map","DENSE","Base64","encode","input","c3","e1","e2","e3","e4","isNaN","charAt","replace","has_buf","versions","node","Buffer_from","nbfs","from","e","buf","enc","alloc","allocUnsafe","new_raw_buf","Array","new_unsafe_buf","s2a","split","s2ab","ArrayBuffer","view","Uint8Array","a2s","isArray","_chr","ab2a","Error","bconcat","bufs","concat","apply","chr0","chr1","SSF","make_ssf","_strrev","fill","pad0","v","pad_","rpad_","p2_32","Math","pow","pad0r","round","pad0r1","pad0r2","isgeneral","days","months","init_table","table_fmt","frac","D","mixed","sgn","B","P_2","P_1","P","Q_2","Q_1","Q","A","floor","q","parse_date_code","opts","b2","date","time","dow","dout","out","T","u","y","H","M","S","abs","date1904","Date","setDate","getDate","getFullYear","getMonth","getDay","basedate","dnthresh","getTime","base1904","datenum_local","epoch","getTimezoneOffset","general_fmt_int","toString","_general_int","general_fmt_num","gnr1","gnr2","gnr4","gnr5","gnr6","gfn5","V","log","LOG10E","toPrecision","w","toFixed","toExponential","gfn2","substr","gfn3","gfn4","general_fmt","format","write_date","type","fmt","val","ss0","ss","tt","outl","commaify","j","_general_num","_general","write_num","pct1","frac1","dec1","closeparen","phone","hashq","str","cc","rnd","dd","dec","write_num_flt","match","ffmt","idx","write_num_cm","sfmt","mul","write_num_pct","write_num_exp","period","ee","fakee","$$","$1","$2","$3","ri","ff","aval","sign","den","parseInt","rr","base","myn","myd","write_num_f1","carry","oa","min","max","lres","rres","flr","write_num_int","write_num_cm2","write_num_pct2","write_num_exp2","write_num_f2","lastIndexOf","split_fmt","in_str","_split","abstime","fmt_is_date","toUpperCase","eval_fmt","flen","dt","lst","hr","toLowerCase","ssm","bt","jj","nstr","myv","ostr","vv","decpt","lasti","retval","is_date","_eval","cfregex","cfregex2","chkcond","thresh","parseFloat","dateNF","table","f","lat","m1","m2","choose_fmt","load_entry","undefined","load","_table","get_table","load_table","tbl","CRC32","XLMLFormatMap","General Number","General Date","Long Date","Medium Date","Short Date","Long Time","Medium Time","Short Time","Currency","Fixed","Standard","Percent","Scientific","Yes/No","True/False","On/Off","SSFImplicit","5","6","7","8","23","24","25","26","27","28","29","30","31","32","33","34","35","36","41","42","43","44","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","70","71","72","73","74","75","76","78","79","80","81","dateNFregex","Int32Array","signed_crc_table","bstr","seed","C","L","crc32_buf_8","factory","_fs","CFB","fs","dirname","filename","write_dos_date","hms","getHours","getMinutes","getSeconds","write_shift","ymd","parse_extra_field","blob","prep_blob","flags","read_shift","sz","tgt","mtime","atime","ctime","mt","get_fs","parse","file","options","parse_zip","mver","nmfs","difat_sec_cnt","dir_start","minifat_start","difat_start","ssz","fat_addrs","mv","chk","HEADER_SIGNATURE","HEADER_CLSID","check_get_mver","header","shift","check_shifts","dir_cnt","sectors","nsectors","ceil","sectorify","sleuth_fat","cnt","ENDOFCHAIN","sector","__readInt32LE","sector_list","sl","chkd","buf_chain","modulus","k","addr","nodes","__toBuffer","make_sector_list","Paths","FileIndex","FullPaths","files","mini","minifat_store","pl","namelen","__utf16le","color","R","clsid","state","start","size","ct","read_date","storage","get_sector_list","content","get_mfat_entry","read_directory","FI","FP","dad","build_full_paths","raw","entry","payload","MSSZ","new_buf","offset","__readUInt32LE","init_cfb","cfb","root","CLSID","nm","find","rebuild_cfb","seed_cfb","gc","_file","pop","now","sort","Z","namecmp","elt","_write","_opts","fileType","cdirs","method","compression","start_cd","fcnt","fp","fi","crcs","sz_cd","namebuf","outbuf","_zlib","deflateRawSync","_deflate","write_zip","mini_size","fat_size","mfat_cnt","fat_base","fat_cnt","difat_cnt","HEADER_SIG","chainit","consts","DIFSECT","FATSECT","_nm","MAXREGSECT","FREESECT","HEADER_MINOR_VERSION","MAXREGSID","NOSTREAM","EntryTypes","CLEN_ORDER","LEN_LN","DST_LN","use_typed_arrays","bitswap8","read_bits_2","bl","h","read_bits_3","read_bits_5","read_bits_7","read_bits_n","realloc","b","copy","a","set","zero_fill_array","_deflateRaw","boff","off","build_tree","clens","cmap","MAX","maxlen","ccode","bl_count","Uint16Array","ctree","rev","cleni","fix_lmap","fix_dmap","dlens","dyn_lmap","dyn_dmap","dyn_cmap","dyn_len_1","dyn_len_2","dyn","_HLIT","_HDIST","_HCLEN","read_bits_4","next_code","hcodes","h1","h2","_inflate","usz","woff","OL","max_len_1","max_len_2","bits","code","len_eb","dst_eb","dst","inflate","warn_or_throw","wrn","msg","console","error","csz","efsz","fcsz","EF","parse_local_file","meth","setMilliseconds","setFullYear","setMonth","setHours","setMinutes","setSeconds","parse_dos_date","crc32","_csz","_usz","ef","InflRaw","InflateRaw","_processChunk","_finishFlushFlag","bytesRead","_inflateRawSync","_crc32","cfb_add","unsafe","fpath","cfb_gc","path","UCFullPaths","UCPaths","UCPath","read","readFileSync","read_file","write","writeFileSync","writeFile","cfb_new","cfb_del","splice","cfb_mov","old_name","new_name","ReadShift","CheckField","use_zlib","zlib","message","_inflateRaw","blobify","a2u","write_dl","fname","utf8write","IE_SaveFile","Blob","navigator","msSaveBlob","saveAs","URL","document","createElement","createObjectURL","url","chrome","downloads","download","revokeObjectURL","setTimeout","href","body","appendChild","click","removeChild","$","File","Folder","open","encoding","close","keys","ks","o2","evert_key","obj","K","evert","evert_num","datenum","numdate","setTime","parse_isodur","sec","good_pd_date","good_pd","parseDate","fixdate","cc2str","arr","dup","JSON","stringify","fuzzynum","Number","wt","fuzzydate","NaN","getYear","jszip","safe_split_regex","getdatastr","asNodeBuffer","asBinary","_data","getContent","getdata","getdatabin","safegetzipfile","zip","g","getzipfile","getzipdata","safe","getzipstr","resolve_path","result","target","step","JSZipSync","XML_HEADER","attregexg","tagregex","nsregex","nsregex2","parsexmltag","tag","skip_root","z","eq","quot","trim","strip_ns","encregex","coderegex","encodings","&quot;","&apos;","&gt;","&lt;","&amp;","rencoding","unescapexml","text","decregex","charegex","escapexml","escapexmltag","htmlcharegex","escapehtml","xlml_fixstr","entregex","entrepl","xlml_unfixstr","parsexmlbool","utf8read","orig","utf8readb","ww","corpus","utf8readc","mtcache","entities","vt_cache","matchtag","RegExp","htmldecode","vtregex","vtvregex","vtmregex","parseVector","matches","baseType","res","WTF","forEach","wtregex","writetag","wxt_helper","writextag","write_w3cdtf","toISOString","__lpp4","___lpp4","XMLNS","dc","dcterms","dcmitype","mx","sjs","vt","xsi","xsd","main","XLMLNS","html","___toBuffer","__readUInt16LE","___utf16le","__hexlify","___hexlify","__utf8","__readUInt8","___utf8","__lpstr","___lpstr","__cpstr","___cpstr","__lpwstr","___lpwstr","__double","___double","__8lpp4","___8lpp4","Infinity","read_double_le","is_buf","isBuffer","readUInt32LE","readDoubleLE","__readInt16LE","__readInt32BE","oI","oR","loc","oo","this","lens","__writeUInt32LE","__writeInt32LE","__writeUInt16LE","WriteShift","end","bs","av","isFinite","LN2","write_double_le","hexstr","fld","pos","parsenoop","recordhopper","cb","tmpbyte","cntbyte","RT","XLSBRecordEnum","buf_array","blksz","newblk","curbuf","endbuf","next","_bufs","write_record","ba","XLSBRE","shift_cell_xls","cell","cRel","rRel","biff","shift_range_xls","range","encode_cell_xls","encode_cell","cstr","fix_row","encode_range_xls","encode_row","encode_col","decode_row","rowstr","row","decode_col","colstr","col","split_cell","decode_cell","splt","decode_range","encode_range","cs","ce","safe_decode_range","safe_format_cell","XF","numFmtId","format_cell","sheet_to_workbook","sheet","sheets","SheetNames","Sheets","sheet_add_aoa","_ws","dense","ws","_R","_C","origin","_origin","_range","__R","__C","sheetStubs","cellDates","aoa_to_sheet","write_UInt32LE","parse_XLWideString","cchCharacters","write_XLWideString","_null","parse_StrRun","ich","ifnt","parse_RichStr","rgsStrRun","dwSizeStrRun","O","_crypto","crypto","rc4","md5","hex","createHash","update","digest","make_offcrypto","parse_BrtCommentText","write_BrtCommentText","run","write_StrRun","parse_XLSBCell","iStyleRef","write_XLSBCell","parse_XLSBCodeName","write_XLSBCodeName","parse_XLNullableWideString","write_XLNullableWideString","parse_XLNameWideString","parse_RelID","write_RelID","parse_RkNumber","fX100","fInt","RK","parse_RfX","parse_UncheckedRfX","write_UncheckedRfX","parse_Xnum","write_Xnum","BErr","15","RBErr","write_BrtColor","auto","index","theme","nTS","tint","rgb","parse_ClipboardFormatOrString","3","14","VT_I2","VT_I4","VT_VARIANT","VT_USTR","VT_CUSTOM","DocSummaryPIDDSI","4","9","10","11","12","13","VT_VECTOR","16","17","19","22","SummaryPIDSI","18","SpecialProperties","2147483648","2147483651","1919054434","DocSummaryRE","SummaryRE","CountryEnum","20","39","45","46","47","48","49","82","84","86","90","105","213","216","218","351","354","358","420","886","961","962","963","964","965","966","971","972","974","981","65535","XLSFillPattern","XLSIcv","ct2type","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml","application/vnd.ms-excel.binIndexWs","application/vnd.ms-excel.intlmacrosheet","application/vnd.ms-excel.binIndexMs","application/vnd.openxmlformats-package.core-properties+xml","application/vnd.openxmlformats-officedocument.custom-properties+xml","application/vnd.openxmlformats-officedocument.extended-properties+xml","application/vnd.openxmlformats-officedocument.customXmlProperties+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty","application/vnd.ms-excel.pivotTable","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml","application/vnd.ms-office.chartcolorstyle+xml","application/vnd.ms-office.chartstyle+xml","application/vnd.ms-excel.calcChain","application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings","application/vnd.ms-office.activeX","application/vnd.ms-office.activeX+xml","application/vnd.ms-excel.attachedToolbars","application/vnd.ms-excel.connections","application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml","application/vnd.ms-excel.externalLink","application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml","application/vnd.ms-excel.sheetMetadata","application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml","application/vnd.ms-excel.pivotCacheDefinition","application/vnd.ms-excel.pivotCacheRecords","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml","application/vnd.ms-excel.queryTable","application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml","application/vnd.ms-excel.userNames","application/vnd.ms-excel.revisionHeaders","application/vnd.ms-excel.revisionLog","application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml","application/vnd.ms-excel.tableSingleCells","application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml","application/vnd.ms-excel.slicer","application/vnd.ms-excel.slicerCache","application/vnd.ms-excel.slicer+xml","application/vnd.ms-excel.slicerCache+xml","application/vnd.ms-excel.wsSortMap","application/vnd.ms-excel.table","application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml","application/vnd.openxmlformats-officedocument.theme+xml","application/vnd.openxmlformats-officedocument.themeOverride+xml","application/vnd.ms-excel.Timeline+xml","application/vnd.ms-excel.TimelineCache+xml","application/vnd.ms-office.vbaProject","application/vnd.ms-office.vbaProjectSignature","application/vnd.ms-office.volatileDependencies","application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml","application/vnd.ms-excel.controlproperties+xml","application/vnd.openxmlformats-officedocument.model+data","application/vnd.ms-excel.Survey+xml","application/vnd.openxmlformats-officedocument.drawing+xml","application/vnd.openxmlformats-officedocument.drawingml.chart+xml","application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml","application/vnd.openxmlformats-officedocument.vmlDrawing","application/vnd.openxmlformats-package.relationships+xml","application/vnd.openxmlformats-officedocument.oleObject","image/png","CT_LIST","workbooks","xlsx","xlsm","xlsb","xlam","xltx","strs","comments","charts","dialogs","macros","styles","type2ct","evert_arr","CT","CTYPE_XML_ROOT","xmlns","xmlns:xsd","xmlns:xsi","CTYPE_DEFAULTS","rels","Extension","ContentType","RELS","WB","SHEET","HLINK","VML","VBA","get_rels_path","parse_rels","currentFilePath","hash","rel","Type","Target","Id","TargetMode","canonictarget","RELS_ROOT","write_rels","rid","add_rels","rId","relobj","CT_ODS","write_rdf_type","write_meta_ods","CORE_PROPS","CORE_PROPS_REGEX","parse_core_props","cur","CORE_PROPS_XML_ROOT","xmlns:cp","xmlns:dc","xmlns:dcterms","xmlns:dcmitype","cp_doit","EXT_PROPS","load_props_pairs","HP","TOP","props","hp","parts","Worksheets","NamedRanges","DefinedNames","Chartsheets","ChartNames","EXT_PROPS_XML_ROOT","xmlns:vt","CUST_PROPS","custregex","CUST_PROPS_XML_ROOT","write_cust_props","pid","write_vt","fmtid","XLMLDocPropsMap","Title","Subject","Author","Keywords","Comments","LastAuthor","RevNumber","Application","LastPrinted","CreatedDate","ModifiedDate","Category","Manager","Company","AppVersion","ContentStatus","Identifier","Language","evert_XLMLDPM","xlml_set_prop","Props","parse_FILETIME","dwLowDateTime","dwHighDateTime","parse_lpstr","pad","parse_lpwstr","parse_VtStringBase","stringType","parse_VtString","parse_VtVecUnalignedLpstr","ret","parse_VtVecUnalignedLpstrValue","parse_VtHeadingPair","parse_TypedPropertyValue","parse_VtVecHeadingPair","cElements","parse_VtVecHeadingPairValue","parse_dictionary","CodePage","dict","parse_BLOB","bytes","Size","parse_ClipboardData","parse_VtUnalignedString","write_TypedPropertyValue","write_FILETIME","parse_PropertySet","PIDSI","start_addr","NumProps","Dictionary","DictObj","PropID","Offset","PropH","fail","piddsi","oldpos","parsebool","XLSPSSkip","guess_property_type","write_PropertySet","entries","RE","hdr","piao","prop","pr","pio","unshift","pinfo","parse_PropertySetStream","NumSets","FMTID0","FMTID1","Offset0","Offset1","SystemIdentifier","PSet1","PSet0","rval","FMTID","write_PropertySetStream","entries2","clsid2","ps0","ps1","parsenoop2","writebool","parseuint16","writeuint16","parseuint16a","parslurp","parse_ShortXLUnicodeString","cch","parse_XLUnicodeRichExtendedString","cbExtRst","fExtSt","fRichSt","width","cRun","parse_XLUnicodeStringNoCch","parse_XLUnicodeString","parse_XLUnicodeString2","write_XLUnicodeString","parse_HyperlinkMoniker","extra","parse_URLMoniker","ansiPath","parse_FileMoniker","parse_HyperlinkString","write_Hyperlink","hl","F","parse_LongRGBA","parse_LongRGB","parse_XLSCell","ixfe","write_XLSCell","parse_XTI","parse_RkRec","parse_Ref8U","rwFirst","rwLast","write_Ref8U","parse_RefU","parse_Ref","parse_FtCmo","ot","id","parse_FtSkip","FtTab","cf","fSharedNote","21","parse_BOF","BIFFVer","write_BOF","wb","bookType","write_BoundSheet8","hs","parse_DefaultRowHeight","miyRw","Unsynced","DyZero","ExAsc","ExDsc","write_Format","b5","parse_BIFF2Format","parse_Dimensions","write_XF","ixfeP","style","parse_BoolErr","parse_Bes","write_BoolErr","os","write_Bes","parse_XLHeaderFooter","parse_ExternName","fBuiltIn","fWantAdvise","fWantPict","fOle","fOleLink","fIcon","sbcch","udfName","parse_AddinUdf","Name","XLSLblBuiltIn","parse_Lbl","chKey","cce","itab","npflen","rgce","rgcb","parse_Rgce","parse_RgbExtra","parse_NameParsedFormula","parse_ExternSheet","parse_BIFF5ExternSheet","parse_Array","ref","parse_ArrayParsedFormula","parse_BIFF5OT","write_HLink","write_HLinkTooltip","TT","Tooltip","parse_ColInfo","cellStyles","colFirst","colLast","coldx","cchName","parse_Blank","parse_Scl","parse_String","DBF","dbf_codepage_map","100","101","102","103","104","106","107","120","121","122","123","124","125","126","150","151","152","200","201","202","203","37","38","87","88","89","dbf_to_sheet","ft","memo","vfp","l7","nrow","fpos","rlen","current_cp","fields","field","hend","sheetRows","dbf_to_aoa","_RLEN","?","","to_workbook","to_sheet","from_sheet","aoa","sheet_to_json","headers","hcnt","coltypes","guess","_guess","hf","_f","hb","rout","_s","SYLK","sylk_to_aoa_str","records","rj","formats","next_cell_format","sht","rowinfo","colinfo","cw","Mval","rstr","record","C_seen_K","C_seen_X","codepage","formula","rc_to_a1","F_seen","hidden","wch","process_col","hpt","hpx","pt2px","sylk_to_sheet","aoasht","sylk_to_aoa","write_ws_cell_sylk","a1_to_rc","preamble","RS","rec","wpx","width2px","px2char","rows","px2pt","write_ws_rows_sylk","coord","DIF","dif_to_aoa_str","metadata","dif_to_sheet","dif_to_aoa","push_field","push_value","topic","ETH","eth_to_sheet","eth_to_aoa","sep","meta","sheet_to_eth_data","PRN","set_text_arr","guess_seps","guess_sep_weights","dsv_to_sheet_str","instr","guess_sep","sepcc","_re","finish_cell","Y","datestr","timestr","dateNF_fix","cellText","cellNF","outer","prn_to_sheet_str","lines","prn_to_aoa_str","prn_to_sheet","firstbyte","WK_","lotus_to_workbook_buf","sidx","snames","refguess","Enum","WK1Enum","WK3Enum","qpro","lotushopper","Rn","vers","parse_cell","parse_LABEL","parse_cell_3","parse_NUMBER_17","v1","v2","parse_NUMBER_27","40","parse_rs","tregex","rpregex","rregex","rend","nlregex","parse_rpr","rpr","intro","outro","font","align","pass","shadow","outline","strike","uval","family","parse_r","terms","rs","sitregex","sirregex","sirphregex","parse_si","cellHTML","sstr0","sstr1","sstr2","SST","straywsregex","write_BrtSSTItem","write_sst_bin","sst","Count","Unique","write_BrtBeginSst","_JS2ANSI","parse_CRYPTOVersion","Major","Minor","parse_DataSpaceMapEntry","comps","parse_Primary","U","W","parse_TransformInfoHeader","ename","cmode","parse_EncryptionHeader","Flags","AlgID","valid","AlgIDHash","KeySize","ProviderType","CSPName","parse_EncryptionVerifier","Salt","Verifier","VerifierHash","parse_EncInfoStd","parse_EncInfoExt","parse_EncInfoAgl","KeyData","xml","encryptedHmacKey","encryptedHmacValue","encs","uri","crypto_CreatePasswordVerifier_Method1","Password","PasswordArray","PasswordDecoded","PadArray","InitialCode","XorMatrix","XorRor","crypto_CreateXorArray_Method1","byte1","byte2","Byte","password","Temp","PasswordLastChar","PadIndex","XorKey","CurrentElement","Char","CreateXorKey_Method1","Index","ObfuscationArray","crypto_MakeXorDecryptor","XorArrayIndex","XorArray","Data","Value","crypto_DecryptData_Method1","parse_FilePassHeader","Info","EncryptionVersionInfo","EncryptedVerifier","EncryptedVerifierHash","parse_RC4Header","EncryptionHeader","EncryptionVerifier","parse_RC4CryptoHeader","RTF","rtf_to_sheet","rtf_to_sheet_str","rgb2Hex","rgb_tint","hsl","G","H6","L2","rgb2HSL","X","h6","hsl2RGB","DEF_MDW","MAX_MDW","MIN_MDW","MDW","px","char2width","chr","cycle_width","collw","find_mdw_colw","delta","_MDW","coll","customWidth","PPI","pt","numFmtRegex","cellXfRegex","fillsRegex","fontsRegex","bordersRegex","XLMLPatternTypeMap","None","Solid","Gray50","Gray75","Gray25","HorzStripe","VertStripe","ReverseDiagStripe","DiagStripe","DiagCross","ThickDiagCross","ThinHorzStripe","ThinVertStripe","ThinReverseDiagStripe","ThinHorzCross","cellXF_uint","cellXF_bool","parse_sty_xml","themes","NumberFmt","formatCode","parse_numFmts","Fonts","bold","italic","underline","condense","extend","vertAlign","scheme","indexed","icv","themeElements","clrScheme","parse_fonts","Fills","patternType","bgColor","fgColor","parse_fills","Borders","border","diagonalUp","diagonalDown","parse_borders","xf","CellXf","alignment","vertical","horizontal","textRotation","indent","wrapText","parse_cellXfs","STYLES_XML_ROOT","write_sty_xml","NF","count","write_numFmts","cellXfs","write_cellXfs","write_BrtFmt","write_BrtFont","grbit","write_FontFlags","sss","charset","STY","rev_XLSBFillPTNames","parse_BrtFill","write_BrtFill","fls","write_BrtXF","write_Blxf","parse_BrtBorder","write_BORDERS_bin","write_STYLES_bin","xfId","builtinId","write_TABLESTYLES_bin","defTableStyle","defPivotStyle","write_BrtBeginTableStyles","write_sty_bin","write_FMTS_bin","write_FONTS_bin","write_FILLS_bin","fontId","fillId","borderId","write_CELLSTYLEXFS_bin","write_CELLXFS_bin","write_DXFS_bin","parse_clrScheme","lastClr","parse_fontScheme","parse_fmtScheme","THEME","clrsregex","fntsregex","fmtsregex","themeltregex","parse_theme_xml","write_theme","parse_themeElements","Themes","themeXLSX","parse_FullColorExt","xclrType","nTintShade","xclrValue","parse_IcvXF","parse_ColorTheme","parse_ExtProp","extType","parse_XFExtGradient","IMG","DRAW","_shapeid","write_comments_vml","csize","bbox","xmlns:v","xmlns:o","xmlns:x","xmlns:mv","v:ext","joinstyle","gradientshapeok","o:connecttype","o:spt","coordsize","fillcolor","strokecolor","color2","angle","on","obscured","insertCommentsIntoSheet","sheetName","comment","encoded","author","CMNT","CMNT_XML_ROOT","parse_BrtCommentAuthor","write_comments_bin","iauthor","CT_VBA","VBAFMTS","DS","MS","rcregex","rcbase","rcfunc","$4","$5","fstr","crefregex","$0","shift_formula_xlsx","shift_formula_str","_xlfn","parseread1","parse_ColRelU","parse_RgceArea","parse_RgceArea_BIFF2","parse_RgceLoc","parse_RgceLoc_BIFF2","parse_RgceElfLoc","fQuoted","parse_PtgAttrSpaceType","parse_SerAr","parse_PtgExtraMem","parse_PtgExtraArray","cols","parse_PtgElfLoc","parse_PtgElfNoop","parse_PtgElfCol","parse_PtgElfColS","parse_PtgElfColSV","parse_PtgElfColV","parse_PtgElfLel","parse_PtgElfRadical","parse_PtgElfRadicalLel","parse_PtgElfRadicalS","parse_PtgElfRw","parse_PtgElfRwV","PtgListRT","PtgTypes","iftab","FtabArgc","Ftab","cparams","tab","parsetab","Cetab","nameindex","rl","parse_RgceLocRel_BIFF2","cl","parse_RgceLocRel","parse_RgceAreaRel","ixti","parse_PtgNameX_BIFF5","PtgDupes","96","97","98","99","108","109","110","111","91","92","93","Ptg18","coltype","rt","Ptg19","bitSemi","bitIf","bitGoto","ptgs","stringify_array","PtgBinOp","PtgAdd","PtgConcat","PtgDiv","PtgEq","PtgGe","PtgGt","PtgLe","PtgLt","PtgMul","PtgNe","PtgPower","PtgSub","get_ixti","supbooks","sname","formula_quote_sheet_name","XTI","SID","get_ixti_raw","stringify_formula","stack","nameidx","last_sp","sp","fflen","argc","func","args","lbl","names","XLSXFutureFunctions","externbook","bookidx","lp","rp","sharedf","parsedf","fnd","arrayf","_left","parse_SharedParsedFormula","parse_Formula","parse_FormulaValue","cbf","parse_XLSCellParsedFormula","shared","parse_XLSBParsedFormula","parse_XLSBArrayParsedFormula","parse_XLSBCellParsedFormula","parse_XLSBNameParsedFormula","parse_XLSBSharedParsedFormula","83","85","94","95","112","113","114","115","116","117","118","119","127","131","132","133","135","137","138","139","140","142","143","144","145","146","147","148","149","153","155","159","164","166","167","168","169","170","171","172","173","174","175","185","187","188","189","190","191","192","193","194","195","196","197","198","199","206","207","208","209","210","211","212","214","215","217","219","220","223","224","225","226","227","228","229","240","243","249","250","251","252","253","254","256","259","260","265","266","267","268","269","272","273","274","276","277","278","279","280","281","282","283","284","285","288","289","290","291","292","293","295","296","297","298","302","305","306","307","308","309","310","311","312","313","314","315","316","318","319","320","321","322","323","324","325","328","330","336","338","339","342","343","344","350","352","355","356","370","373","374","375","376","377","378","379","380","381","382","383","384","385","386","388","390","391","392","393","394","395","396","397","398","399","400","412","413","414","415","416","417","421","422","423","424","425","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","480","481","482","485","489","491","493","494","495","509","510","511","517","518","519","520","521","522","523","545","546","547","548","549","620","621","647","653","667","673","753","755","808","141","154","156","157","158","160","165","176","179","180","181","182","183","184","205","221","230","231","232","233","234","235","236","237","239","241","242","244","245","246","247","248","257","258","261","262","263","264","270","271","275","286","287","294","299","300","301","303","304","317","326","327","329","331","332","334","335","337","340","341","345","346","347","348","349","353","357","359","360","361","362","363","364","365","366","367","368","369","371","372","387","389","401","402","403","404","405","406","407","408","409","410","411","418","419","426","427","428","429","457","724","479","483","484","_xlfn.ACOT","_xlfn.ACOTH","_xlfn.AGGREGATE","_xlfn.ARABIC","_xlfn.AVERAGEIF","_xlfn.AVERAGEIFS","_xlfn.BASE","_xlfn.BETA.DIST","_xlfn.BETA.INV","_xlfn.BINOM.DIST","_xlfn.BINOM.DIST.RANGE","_xlfn.BINOM.INV","_xlfn.BITAND","_xlfn.BITLSHIFT","_xlfn.BITOR","_xlfn.BITRSHIFT","_xlfn.BITXOR","_xlfn.CEILING.MATH","_xlfn.CEILING.PRECISE","_xlfn.CHISQ.DIST","_xlfn.CHISQ.DIST.RT","_xlfn.CHISQ.INV","_xlfn.CHISQ.INV.RT","_xlfn.CHISQ.TEST","_xlfn.COMBINA","_xlfn.CONCAT","_xlfn.CONFIDENCE.NORM","_xlfn.CONFIDENCE.T","_xlfn.COT","_xlfn.COTH","_xlfn.COUNTIFS","_xlfn.COVARIANCE.P","_xlfn.COVARIANCE.S","_xlfn.CSC","_xlfn.CSCH","_xlfn.DAYS","_xlfn.DECIMAL","_xlfn.ECMA.CEILING","_xlfn.ERF.PRECISE","_xlfn.ERFC.PRECISE","_xlfn.EXPON.DIST","_xlfn.F.DIST","_xlfn.F.DIST.RT","_xlfn.F.INV","_xlfn.F.INV.RT","_xlfn.F.TEST","_xlfn.FILTERXML","_xlfn.FLOOR.MATH","_xlfn.FLOOR.PRECISE","_xlfn.FORECAST.ETS","_xlfn.FORECAST.ETS.CONFINT","_xlfn.FORECAST.ETS.SEASONALITY","_xlfn.FORECAST.ETS.STAT","_xlfn.FORECAST.LINEAR","_xlfn.FORMULATEXT","_xlfn.GAMMA","_xlfn.GAMMA.DIST","_xlfn.GAMMA.INV","_xlfn.GAMMALN.PRECISE","_xlfn.GAUSS","_xlfn.HYPGEOM.DIST","_xlfn.IFERROR","_xlfn.IFNA","_xlfn.IFS","_xlfn.IMCOSH","_xlfn.IMCOT","_xlfn.IMCSC","_xlfn.IMCSCH","_xlfn.IMSEC","_xlfn.IMSECH","_xlfn.IMSINH","_xlfn.IMTAN","_xlfn.ISFORMULA","_xlfn.ISO.CEILING","_xlfn.ISOWEEKNUM","_xlfn.LOGNORM.DIST","_xlfn.LOGNORM.INV","_xlfn.MAXIFS","_xlfn.MINIFS","_xlfn.MODE.MULT","_xlfn.MODE.SNGL","_xlfn.MUNIT","_xlfn.NEGBINOM.DIST","_xlfn.NETWORKDAYS.INTL","_xlfn.NIGBINOM","_xlfn.NORM.DIST","_xlfn.NORM.INV","_xlfn.NORM.S.DIST","_xlfn.NORM.S.INV","_xlfn.NUMBERVALUE","_xlfn.PDURATION","_xlfn.PERCENTILE.EXC","_xlfn.PERCENTILE.INC","_xlfn.PERCENTRANK.EXC","_xlfn.PERCENTRANK.INC","_xlfn.PERMUTATIONA","_xlfn.PHI","_xlfn.POISSON.DIST","_xlfn.QUARTILE.EXC","_xlfn.QUARTILE.INC","_xlfn.QUERYSTRING","_xlfn.RANK.AVG","_xlfn.RANK.EQ","_xlfn.RRI","_xlfn.SEC","_xlfn.SECH","_xlfn.SHEET","_xlfn.SHEETS","_xlfn.SKEW.P","_xlfn.STDEV.P","_xlfn.STDEV.S","_xlfn.SUMIFS","_xlfn.SWITCH","_xlfn.T.DIST","_xlfn.T.DIST.2T","_xlfn.T.DIST.RT","_xlfn.T.INV","_xlfn.T.INV.2T","_xlfn.T.TEST","_xlfn.TEXTJOIN","_xlfn.UNICHAR","_xlfn.UNICODE","_xlfn.VAR.P","_xlfn.VAR.S","_xlfn.WEBSERVICE","_xlfn.WEIBULL.DIST","_xlfn.WORKDAY.INTL","_xlfn.XOR","_xlfn.Z.TEST","ods_to_csf_formula","ods_to_csf_3D","_ssfopts","WS","browser_has_Map","Map","get_sst_id","has","revarr","col_obj_w","default_margins","margins","defs","left","right","top","bottom","footer","get_cell_style","revssf","ssf","applyNumberFormat","safe_format","fillid","raw_rgb","check_ws","mergecregex","sheetdataregex","hlinkregex","dimregex","colregex","afregex","marginregex","sheetprregex","svsregex","parse_ws_xml","data1","data2","mtch","sheetPr","parse_ws_xml_sheetpr","ridx","parse_ws_xml_dim","svs","sviewregex","rightToLeft","Views","RTL","parse_ws_xml_sheetviews","columns","seencol","coli","colm","colM","parse_ws_xml_cols","parse_ws_xml_data","afilter","parse_ws_xml_autofilter","merges","_merge","hlink","location","Rel","tooltip","rng","parse_ws_xml_hlinks","margin","tmpref","codeName","CodeName","write_ws_xml_cell","oldt","oldv","bookSST","Strings","revStrings","cellregex","rowregex","isregex","refregex","match_v","match_f","sdata","sstr","ftag","cells","cref","tagr","tagc","do_format","rowobj","rowrite","marr","marrlen","xlen","ht","outlineLevel","level","cellFormula","si","_tag","_r","WS_XML_ROOT","xmlns:r","write_ws_xml","rdata","vbaraw","cname","Workbook","sview","workbookViewId","write_ws_xml_sheetviews","sheetFormat","defaultRowHeight","baseColWidth","outlineLevelRow","params","height","_cell","customHeight","write_ws_xml_data","write_ws_xml_protection","Names","Sheet","Ref","write_ws_xml_autofilter","relc","ignoreEC","numberStoredAsText","sqref","r:id","write_row_header","ncolspan","lcs","caddr","first","last","write_BrtRowHdr","parse_BrtWsDim","write_BrtWsDim","write_BrtCellRk","ncell","d100","write_RkNumber","parse_BrtMergeCell","write_BrtMergeCell","BrtMarginKeys","write_ws_bin_cell","write_BrtCellIsst","write_BrtCellSt","write_BrtCellReal","write_BrtCellBool","write_BrtCellBlank","write_MERGECELLS","write_COLINFOS","write_BrtColInfo","write_IGNOREECS","write_HLINKS","locidx","write_BrtHLink","write_WSVIEWS2","write_BrtBeginWsView","write_SHEETPROTECT","write_ws_bin","write_BrtWsProp","cap","write_CELLTABLE","write_AUTOFILTER","write_LEGACYDRAWING","parse_chart","csheet","!type","nc","cache","nf","parse_numCache","CS","WBPropsDef","WBViewDef","SheetDef","CalcPrDef","push_defaults_array","defaults","push_defaults","parse_wb_defaults","WBProps","CalcPr","WBView","badchars","check_ws_name","_good","check_wb","N","codes","cn","wbnsregex","WB_XML_ROOT","write_BOOKVIEWS","vistab","Hidden","write_wb_bin","write_BrtFileVersion","filterPrivacy","write_BrtWbProp","iTabID","strRelID","write_BrtBundleSh","write_BUNDLESHS","parse_wb","R_n","Ptg","parse_wb_bin","dname","dnstart","Comment","localSheetId","parse_wb_xml","parse_ws","!id","ai","af","aii","_d","relId","rfx","parse_ws_bin","parse_cs","!chart","!rel","parse_cs_bin","parse_cs_xml","parse_sty","parse_sty_bin","parse_sst","parse_sst_bin","uniqueCount","parse_sst_xml","parse_cmnt","authors","parse_comments_bin","commentList","authtag","cmnttag","cm","authorId","guid","textMatch","parse_comments_xml","parse_cc","parse_cc_bin","parse_cc_xml","parse_xlink","parse_xlink_bin","write_wb","write_names","workbookPr","sheetId","write_ws","write_sst","sitag","write_cmnt","attregexg2","attregex2","xlml_parsexmltag","words","xlml_parsexmltagobj","xlml_set_custprop","Custprops","oval","safe_format_xlml","process_style_xlml","stag","Interior","I","Pattern","ID","parse_xlml_data","csty","sid","StyleID","interiors","Parent","UTC","Formula","ArrayRange","xlml_clean_comment","xlml_normalize","xlmlregex","parse_xlml_xml","opening","ishtml","HTML_","tmp","sheetnames","cursheet","sheetname","dtag","didx","fidx","pidx","cstys","wsprops","lastIndex","exec","HRef","HRefScreenTip","MergeAcross","MergeDown","cma","cmd","AutoFitHeight","Height","Format","ssfidx","Width","_col","Span","_NamedRange","_DefinedName","RefersTo","AutoFilter","Range","parse_fods","seen","Margin","pagemargins","Top","Left","Right","Bottom","bookSheets","bookProps","parse_xlml","fix_read_opts","write_props_xlml","xlml_write_docprops","BLACKLIST","dt:dt","xlml_write_custprops","write_name_xlml","ss:Name","ss:RefersTo","write_ws_xlml_cell","attr","mi","ss:Author","write_ws_xlml_row","write_ws_xlml","write_ws_xlml_names","ss:Index","skip","write_ws_xlml_table","x:Margin","x:Bottom","x:Left","x:Right","x:Top","objects","scenarios","selectLockedCells","selectUnlockedCells","write_ws_xlml_wsopts","write_xlml","General","ss:Format","ss:ID","write_sty_xlml","write_names_xlml","xmlns:ss","xmlns:dt","xmlns:html","parse_compobj","AnsiUserType","AnsiClipboardFormat","parse_ClipboardFormatOrAnsiString","Reserved1","UnicodeClipboardFormat","parse_ClipboardFormatOrUnicodeString","Reserved2","slurp","insitu","XLSRecordEnum","ll","safe_format_xf","make_cell","parse_workbook","lastcell","cmnt","rngC","rngR","temp_val","country","Directory","last_formula","cur_sheet","Preamble","last_cell","cell_valid","XFs","palette","get_rgb","addcell","line","file_depth","xfd","icvFore","icvBack","process_cell_style","afi","rrtabid","lastuser","winlocked","wtf","last_lbl","last_Rn","BIFF2Fmt","BIFF2FmtTable","FilterDatabases","seen_codepage","RecordType","Date1904","WriteProtect","CalcRefMode","FullCalc","fDialog","ExternCount","tmpri","1033","512","768","1024","1280","1536","fakebs8","rknum","rkrec","_fr","_fc","_fe","_arraystart","isst","_j","_ixfe","b4idx","b2idx","cmo","lastobj","TxO","ImData","noteobj","ext","xfe","Encryption","Metadata","Country","PSCLSID","SI","DSI","UDI","parse_xlscfb","CompObj","WorkbookP","bookVBA","newcfb","newpath","make_vba_xls","DocSummary","Summary","HeadingPairs","TitlesOfParts","parse_xls_props","bookFiles","write_xlscfb","wbpath","write_biff_buf","Keys","DSEntries","SEntries","CEntries","CEntries2","write_xls_props","vba","fill_vba_xls","ArchID","fItalic","fStrikeout","fOutline","fShadow","fCondense","fExtend","parse_FontFlags","bCharSet","xColorType","bR","bG","bB","parse_BrtColor","ixfeParent","ifmt","defaultThemeVersion","strName","autoCompressPictures","backupFile","checkCompatibility","hidePivotFieldList","promptedSolutions","publishItems","refreshAllConnections","saveExternalLinkValues","showBorderUnselectedTables","showInkAnnotation","showObjects","showPivotChartFilter","updateLinks","333","fAlwaysCalc","486","487","488","490","492","display","496","497","498","499","500","501","502","503","504","505","506","507","508","513","514","515","516","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","550","551","552","553","554","555","556","557","558","559","560","561","562","564","565","566","569","570","572","573","574","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","648","649","650","651","652","654","655","656","657","658","659","660","661","662","663","664","665","666","668","669","671","672","674","675","676","677","678","679","680","1025","1026","1027","1028","1029","1030","1031","1032","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1177","1178","1180","1181","1182","2048","2049","2050","2051","2052","2053","2054","2055","2056","2057","2058","2060","2067","2068","2069","2070","2071","2072","2073","2075","2076","2077","2078","2079","2080","2081","2082","2083","2084","2085","2086","2087","2088","2089","2090","2091","2092","2093","2094","2095","2096","2097","2098","2099","2100","2101","2102","2103","2104","2105","2106","2107","2108","2109","2110","2111","2112","2113","2114","2115","2116","2117","2118","2119","2120","2121","2122","2123","2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140","2141","3072","3073","5095","5096","5097","num","idObj","stAuthor","parse_NoteSh","verificationBytes","verifier","parse_XORObfuscation","dyHeight","fl","Pos","Dim","CurTab","FirstTab","Selected","TabRatio","UserName","fts","parse_BIFF5Obj","parse_FtArray","ccv","rw","rkrecs","lastcol","ixfes","fStyle","alc","fWrap","alcV","fJustLast","trot","cIndent","fShrinkToFit","iReadOrder","fAtrNum","fAtrFnt","fAtrAlc","fAtrBdr","fAtrPat","fAtrProt","dgLeft","dgRight","dgTop","dgBottom","icvLeft","icvRight","grbitDiag","icvTop","icvBottom","icvDiag","dgDiag","fsxButton","parse_CellStyleXF","cmcs","ucnt","extsst","dsst","ctab","virtPath","rgst","texts","parse_ControlInfo","cchText","sVer","displayName","targetFrameName","moniker","oleMoniker","fileTime","Loc","parse_Hyperlink","xnum","1212","cUse","wzTooltip","2059","2061","2062","2063","2064","2066","2146","2147","2148","2149","2150","2151","2152","2154","2155","2156","2161","2162","2164","2165","2166","2167","2168","2169","2170","2171","2172","cxfs","crc","2173","cexts","2174","2175","2180","2181","2182","2183","2184","2185","2186","2187","2188","2189","2190","2191","2192","2194","2195","2196","cchComment","2197","2198","themeXML","2199","2200","2201","2202","2203","2204","2205","2206","2207","2211","parse_frtHeader","2212","2213","2214","2215","4097","4098","4099","4102","4103","4105","4106","4107","4108","4109","4116","4117","4118","4119","4120","4121","4122","4123","4124","4125","4126","4127","4128","4129","4130","4132","4133","4134","4135","4146","4147","4148","4149","4154","4156","4157","4158","4159","4160","4161","4163","4164","def","area","4165","4166","4168","4170","4171","4174","4175","4176","4177","4187","4188","4189","4191","4192","4193","4194","4195","4196","4197","4198","4199","4200","env","lcb","2157","2163","2177","2240","2241","2242","2243","2244","2245","2246","2247","2248","2249","2250","2251","2262","29282","XLSRE","write_biff_rec","write_BIFF2Cell","write_ws_biff2_cell","write_BIFF2NUM","write_BIFF2BERR","write_BIFF2LABEL","write_biff2_buf","write_ws_biff2","write_FONTS_biff8","write_Font","write_ws_biff8_cell","write_Number","b8","write_Label","write_ws_biff8","guts","_WB","_sheet","MAX_ROWS","write_Dimensions","write_Window2","write_MergeCells","HL","write_ws_biff8_hlinks","write_FEAT","write_biff8_global","_sheets","_wb","writezeroes","write_WriteAccess","write_RRTabId","safe1904","write_FMTS_biff8","write_CELLXFS_biff8","write_Country","blen","write_biff8_buf","html_to_sheet","mtch2","re","split_regex","hd","colspan","rowspan","_t","make_html_row","editable","make_html_preamble","_BEGIN","_END","_row","BEGIN","END","_preamble","parse_dom_table","getElementsByTagName","midx","is_dom_element_hidden","elts","innerHTML","getAttribute","element","get_computed_style","ownerDocument","defaultView","getComputedStyle","get_get_computed_style_function","getPropertyValue","number_formats","parse_content_xml","day","month","year","hours","minutes","seconds","am-pm","day-of-week","era","quarter","sheetag","rowtag","fixed","NFtag","ctag","textp","textpidx","textR","row_ol","number_format_map","mrange","rowpeat","colpeat","atag","_Ref","creator","creatoridx","isstub","intable","rptR","rpt","nrange","ptp","parse_ods","ods","FEtag","parse_manifest","write_styles_ods","xmlns:office","xmlns:table","xmlns:style","xmlns:text","xmlns:draw","xmlns:fo","xmlns:xlink","xmlns:number","xmlns:svg","xmlns:of","office:version","write_content_ods","null_cell_xml","_Fref","text_p","_tgt","xlink:href","xmlns:meta","xmlns:presentation","xmlns:chart","xmlns:dr3d","xmlns:math","xmlns:form","xmlns:script","xmlns:ooo","xmlns:ooow","xmlns:oooc","xmlns:dom","xmlns:xforms","xmlns:sheet","xmlns:rpt","xmlns:xhtml","xmlns:grddl","xmlns:tableooo","xmlns:drawooo","xmlns:calcext","xmlns:loext","xmlns:field","xmlns:formx","xmlns:css3t","fods","xmlns:config","office:mimetype","write_automatic_styles_ods","write_ods","manifest","rdf","write_rdf","write_manifest","write_obj_str","write_sheet_index","write_htm_str","write_csv_str","sheet_to_csv","write_slk_str","write_dif_str","write_prn_str","write_rtf_str","write_txt_str","sheet_to_txt","write_dbf_buf","write_eth_str","fix_opts_func","fix_write_opts","safe_parse_sheet","relsPath","sheetRels","stype","dfile","drelsp","chartp","parse_drawing","crelsp","parse_ds","strip_front_slash","binname","zipentries","dir","links","coreprops","extprops","custprops","calcchains","drawings","TODO","ctext","PartName","calcchain","parse_ct","parse_theme","link","propdata","parse_ext_props","toks","warn","parse_cust_props","deps","bookDeps","wbsheets","wbext","wbrelsi","wbrelsfile","wbrels","safe_parse_wbrels","nmode","dirComments","canonicalpath","sheetNames","parse_comments","Deps","Styles","bin","parse_xlsxcfb","dsm","parse_DataSpaceMap","seds","parse_DataSpaceDefinition","einfo","parse_EncryptionInfo","decrypt_agile","decrypt_std76","foo","vbafmt","xsi:type","write_core_props","_sn","_i","wsrels","need_vml","rId1","write_sty","f1","f2","f3","write_ct","read_plaintext","read_prn","readSync","infile","read_binary","bstrify","ab","vu","read_cfb","OLD_WTF","read_wb_ID","base64","read_zip","read_utf16","read_plaintext_raw","write_cfb_ctr","write_string_type","bom","write_binary_type","writeSync","write_stxt_type","write_cfb_type","oopts","generate","encrypt_agile","write_zip_type","resolve_book_type","xls","htm","slk","socialcalc","Sh33tJS","make_json_row","defval","isempty","__rowNum__","outi","counter","CC","blankrows","qreg","make_csv_row","FS","txt","endregex","skipHidden","strip","sheet_to_formulae","cmds","sheet_add_json","js","skipHeader","JS","Readable","get_formulae","make_csv","make_json","make_formulae","json_to_sheet","table_to_sheet","table_to_book","sheet_to_html","sheet_to_dif","sheet_to_slk","sheet_to_eth","sheet_to_row_object_array","get_default","ws_get_cell_stub","book_new","book_append_sheet","book_set_sheet_visibility","sh","vis","wb_sheet_idx","cell_set_number_format","cell_set_hyperlink","cell_set_internal_link","cell_add_comment","sheet_set_array_formula","rngstr","stream","to_json","objectMode","_read","to_html","to_csv","BOM","readFile","writeFileAsync","_cb","Function","make_xlsx_lib","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","TypeError","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","isEncoding","actual","fromString","checked","buffer","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","swap","bidirectionalIndexOf","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","INSPECT_MAX_BYTES","subarray","typedArraySupport","poolSize","_augment","species","configurable","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","toJSON","_arr","toHex","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","leadSurrogate","toByteArray","stringtrim","base64clean","src","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","marker","runClearTimeout","Item","noop","nextTick","title","browser","argv","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","cpt","DO_NOT_EXPORT_CODEPAGE","magic","1200","1201","12000","12001","16969","20127","65000","65001","sbcs_cache","dbcs_cache","magic_cache","magic_decode","magic_encode","cpdcache","cpecache","sfcc","cca","mdl","mdb","sbcs_encode","EE","E","make_EE","ofmt","sbcs_decode","DD","dbcs_encode","dbcs_decode","utf8_d","direct","encache","null_enc","cp_decache","decache","last_enc","last_cp","sbcs","dbcs","BM","dash","o64","isstr","hascp","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","Utils","copyProperties","dest","resolveTransformObject","subObj","depth","pname","substring","resolveTransformParams","transform","clonedStep","resolvedTransform","clone","getIn","usingDotNotation","Comparators","aeq","aeqHelper","lt","ltHelper","gt","gtHelper","prop1","prop2","cv1","cv2","t1","t2","equal","sortHelper","desc","dotSubScan","paths","poffset","pathOffset","valueFound","containsCheckFn","doQueryOp","op","LokiOps","$eq","$aeq","$ne","$dteq","$gt","$gte","$lt","$lte","$jgt","$jgte","$jlt","$jlte","$between","vals","$jbetween","$in","$nin","$keyin","$nkeyin","$definedin","$undefinedin","$regex","test","$containsString","$containsNone","$containsAny","checkFn","some","$contains","every","$type","$finite","$size","$len","$where","$not","$and","$or","$exists","indexedOps","cloned","cloneMethod","jQuery","constructor","assign","objarray","cloneObjectArray","localStorageAvailable","localStorage","LokiEventEmitter","Loki","collections","databaseVersion","engineVersion","autosave","autosaveInterval","autosaveHandle","throttledSaves","persistenceMethod","persistenceAdapter","throttledSavePending","throttledCallbacks","verbose","events","init","loaded","flushChanges","changes","warning","ENV","android","NSObject","configureOptions","clearChanges","LokiMemoryAdapter","hashStore","asyncResponses","asyncTimeout","LokiPartitioningAdapter","adapter","dbref","dbname","pageIterator","paging","pageSize","delimiter","LokiFsAdapter","LokiLocalStorageAdapter","Resultset","collection","filteredrows","filterInitialized","DynamicView","rebuildPending","persistent","sortPriority","minRebuildInterval","resultset","resultdata","resultsdirty","cachedresultset","filterPipeline","sortFunction","sortCriteria","sortCriteriaSimple","sortDirty","rebuild","Collection","idIndex","binaryIndices","constraints","unique","exact","uniqueNames","transforms","objType","dirty","cachedIndex","cachedBinaryIndex","cachedData","self","UniqueIndex","ExactIndex","adaptiveBinaryIndices","transactional","cloneObjects","asyncListeners","disableMeta","disableChangesApi","disableDeltaChangesApi","autoupdate","serializableIndices","ttl","age","ttlInterval","daemon","setTTL","maxId","DynamicViews","insert","pre-insert","pre-update","flushbuffer","delete","ensureId","indices","ensureIndex","getObjectDelta","oldObject","newObject","propertyNames","propertyName","propertyDelta","observerCallback","changedObjects","Set","add","change","removeAutoUpdateObserver","err","getChangeDelta","old","getChanges","setChangesApi","enabled","createChange","isDeepProperty","parseBase10","average","reduce","deepProperty","isDeep","pieces","binarySearch","item","compared","mid","BSonSort","KeyValueStore","uniqueField","keyMap","lokiMap","exactField","eventName","listener","event","currentEventName","selfArgs","getIndexedAdapter","initialConfig","persistenceMethods","memory","autoload","loadDatabase","autoloadCallback","autosaveDisable","autosaveEnable","autosaveCallback","serializationMethod","destructureDelimiter","NODEJS","BROWSER","CORDOVA","MEMORY","clen","databaseCopy","loadJSONObject","retainDirtyFlags","removeNonSerializable","addCollection","loadCollection","getCollection","collectionName","renameCollection","oldName","newName","listCollections","colls","removeCollection","tmpcol","curcol","getName","serializeReplacer","serialize","serializeDestructured","toJson","resultlen","dbcopy","reconstruct","partitioned","delimited","partition","serializeCollection","collectionIndex","doccount","docidx","resultlines","deserializeDestructured","destructuredSource","cdb","collCount","currObject","workarray","collIndex","lineIndex","done","deserializeCollection","loadJSON","serializedDb","dbObject","copyColl","loader","collObj","makeLoader","inflater","collOptions","proto","addAutoUpdateObserver","ensureUniqueIndex","colldv","dv","addDynamicView","rematerialize","removeWhereFilters","ensureAllIndexes","callback","autosaveDirty","saveDatabase","generateChangesNotification","arrayOfCollectionNames","getCollName","selectedCollections","serializeChanges","collectionNamesArray","dbstring","saveCount","savecount","lastsave","deleteDatabase","db","pageIndex","loadNextPartition","keyname","loadNextPage","dlen","isLastPage","exportDatabase","dirtyPartitions","saveNextPartition","docIndex","saveNextPage","pageLen","cdlen","delimlen","serializedObject","pageBuilder","doneWithPartition","doneWithPage","pageSaveCallback","stat","stats","isFile","tmpdbname","rename","unlink","getItem","setItem","removeItem","throttledSaveDrain","recursiveWait","recursiveWaitLimit","recursiveWaitLimitDuration","started","loadDatabaseInternal","cFun","dbString","parseSuccess","success","saveDatabaseInternal","autosaveClearFlags","localCallbacks","pcb","save","delay","setInterval","clearInterval","reset","qty","prepareFullDocIndex","rscopy","branch","parameters","where","simplesort","compoundsort","dataOptions","eqJoin","joinData","leftJoinKey","rightJoinKey","mapFun","mapReduce","mapFunction","reduceFunction","remove","comparefun","userComparer","wrappedComparer","propname","eff","targetEff","frl","hasBinaryIndex","values","reverse","disableIndexIntersect","useJavascriptSorting","forceIndexIntersect","fr","io","pv","filter","obj1","obj2","val1","val2","properties","compoundeval","findOr","expressionArray","fri","frlen","docset","idxset","origCount","ei","elen","findAnd","query","firstOnly","queryObjectOp","operator","queryObject","searchByIndex","filters","precompileQuery","doIndexCheck","rowIdx","segm","calculateRange","viewFunction","removeMeta","forceClones","forceCloneMethod","$loki","updateFunction","rcd","removeBatchByPositions","leftDataLength","rightDataLength","leftData","rightData","leftKeyisFunction","rightKeyisFunction","joinMap","chain","fpl","fpi","ofp","applyFind","branchResultset","removeFilters","queueSortPhase","applySort","applySimpleSort","applySortCriteria","criteria","startTransaction","commit","rollback","_indexOfFilterWithId","uid","_addFilter","reapplyFilters","queueRebuildEvent","applyFilter","applyWhere","removeFilter","performSortPhase","suppressRebuildEvent","evaluateDocument","objIndex","isNew","ofr","oldPos","oldlen","evalResultset","newPos","removeDocument","rmidx","rmlen","rxo","fxo","adjels","drs","di","filt","operation","insertMeta","created","revision","updateMeta","updated","createInsertChange","createUpdateChange","insertMetaWithChange","updateMetaWithChange","observe","unobserve","addTransform","getTransform","setTransform","removeTransform","byExample","template","findObject","findOne","findObjects","ttlDaemonFuncGen","toRemove","member","timestamp","diff","interval","indexes","force","checkAllIndexes","bIndices","results","checkIndex","randomSamplingFactor","randomSampling","iter","biv","repair","random","getBinaryIndexValues","idxvals","flagBinaryIndexesDirty","flagBinaryIndexDirty","ensureIdAsync","async","removeDynamicView","getDynamicView","findAndUpdate","filterObject","updateWhere","findAndRemove","doc","insertOne","bulkInsert","returnObj","clear","removeIndices","biname","uiname","adaptiveBatchOverride","oldInternal","newInternal","position","adaptiveBinaryIndexUpdate","constrUnique","addedPos","dvlen","adaptiveBinaryIndexInsert","filterFunction","removeWhere","removeDataOnly","positions","xo","bic","uic","adaptiveOverride","adaptiveBinaryIndexRemove","removeBatch","batch","xlt","posx","returnPosition","retpos","getBinaryIndexPosition","dataPosition","binaryIndexName","idxPos","calculateRangeStart","removedFromIndexOnly","curr","bi","sortedPositions","adaptive","lbound","calculateRangeEnd","ubound","lval","minVal","maxVal","segResult","seg","by","findOneUnindexed","leftJoinProp","rightJoinProp","stages","getStage","commitLog","stage","stageName","commitStage","no_op","extract","isDotNotation","maxRecord","deep","minRecord","extractNumerical","avg","stdDev","avgSquareDiff","sqrDiff","sqrt","median","half","setSort","fieldValue","byId","idxSet","persistenceAdapters","b64","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","require","DO_NOT_EXPORT_JSZIP","_dereq_","_keyStr","utf8","chr2","chr3","enc1","enc2","enc3","enc4","CompressedObject","compressedSize","uncompressedSize","compressionMethod","compressedContent","getCompressedContent","STORE","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","./flate","getTypeOf","iTop","./utils","DataReader","newIndex","setIndex","byteAt","readInt","readString","transformTo","readData","lastIndexOfSignature","sig","readDate","dostime","binary","createFolders","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","outputType","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","USE_TYPEDARRAY","Uint32Array","pako","deflateRaw","inflateRaw","newObj","support","compressions","./base64","./compressions","./defaults","./deprecatedPublicUtils","./load","./object","./support","ZipEntries","zipEntries","fileName","decompressed","optimizedBinaryString","fileComment","zipComment","./zipEntries","Uint8ArrayReader","NodeBufferReader","./uint8ArrayReader","signature","nodeBuffer","StringWriter","Uint8ArrayWriter","getRawData","getBinaryData","nodebuffer","dataToString","asUTF8","utf8decode","utf8encode","ZipObject","_initialMetadata","asText","asUint8Array","asArrayBuffer","decToHex","fileAdd","parent","dataType","prepareFileAttrs","parentFolder","folderAdd","lastSlash","generateCompressedObjectFrom","generateZipParts","compressedObject","dosTime","dosDate","utfEncodedFileName","utfEncodedComment","useUTF8ForFileName","useUTF8ForComment","extraFields","unicodePathExtraField","unicodeCommentExtraField","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","search","relativePath","fileClone","regexp","folder","newFolder","kids","writer","zipData","localDirLength","centralDirLength","compressionName","zipPart","dirEnd","CENTRAL_DIRECTORY_END","typeName","append","finalize","./compressedObject","./crc32","./nodeBuffer","./signature","./stringWriter","./uint8ArrayWriter","./utf8","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","StringReader","./dataReader","arraybuffer","uint8array","builder","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","sig0","sig1","sig2","sig3","_utf8len","utf8border","buf2string","c_len","utf16buf","applyFromCharCode","m_pos","str_len","buf_len","string2buf","nextBoundary","identity","stringToArrayLike","arrayLikeToString","chunk","canUseApply","resultStr","arrayLikeToArrayLike","arrayFrom","arrayTo","inputType","ZipEntry","jszipProto","loadOptions","checkSignature","expectedSignature","reader","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","extraFieldId","extraFieldLength","extraFieldValue","extraDataSize","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","./nodeBufferReader","./stringReader","./zipEntry","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","previousIndex","compressedFileData","prepareContent","uncompressedFileData","localExtraFieldsLength","fileNameLength","checkCRC32","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","extraReader","upath","findExtraFieldUnicodePath","ucomment","findExtraFieldUnicodeComment","upathField","ucommentField","./lib/deflate","./lib/inflate","./lib/utils/common","./lib/zlib/constants","zlib_deflate","strings","zstream","Deflate","chunkSize","windowBits","memLevel","strategy","to","opt","gzip","ended","chunks","strm","avail_out","status","deflateInit2","deflateSetHeader","deflate","deflator","_mode","next_in","avail_in","Buf8","next_out","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","./utils/common","./utils/strings","./zlib/deflate.js","./zlib/messages","./zlib/zstream","zlib_inflate","gzheader","Inflate","inflateInit2","Z_OK","inflateGetHeader","inflator","next_out_utf8","tail","utf8str","Z_FINISH","Z_NO_FLUSH","binstring2buf","Z_STREAM_END","arraySet","inflateEnd","ungzip","./zlib/constants","./zlib/gzheader","./zlib/inflate.js","TYPED_OK","sources","source","fnTyped","src_offs","dest_offs","fnUntyped","setTyped","Buf16","Buf32","STR_APPLY_OK","STR_APPLY_UIA_OK","__","./common","adler","s1","s2","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","crcTable","makeTable","trees","adler32","MAX_MEM_LEVEL","MAX_WBITS","DEF_MEM_LEVEL","L_CODES","LITERALS","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","MIN_MATCH","MAX_MATCH","MIN_LOOKAHEAD","PRESET_DICT","INIT_STATE","EXTRA_STATE","NAME_STATE","COMMENT_STATE","HCRC_STATE","BUSY_STATE","FINISH_STATE","BS_NEED_MORE","BS_BLOCK_DONE","BS_FINISH_STARTED","BS_FINISH_DONE","OS_CODE","errorCode","rank","zero","flush_pending","pending","pending_buf","pending_out","total_out","flush_block_only","_tr_flush_block","block_start","strstart","put_byte","putShortMSB","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","w_size","_win","wmask","w_mask","prev","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","more","_w_size","window_size","hash_size","head","wrap","total_in","ins_h","hash_shift","hash_mask","deflate_fast","flush","hash_head","bflush","match_length","_tr_tally","max_lazy_match","last_lit","deflate_slow","max_insert","prev_match","match_available","configuration_table","Config","good_length","max_lazy","nice_length","max_chain","DeflateState","pending_buf_size","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","heap","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","deflateResetKeep","data_type","_tr_init","deflateReset","max_block_size","max_start","deflateInit","old_flush","beg","hcrc","bstate","deflate_huff","deflate_rle","_tr_align","_tr_stored_block","deflateInfo","../utils/common","./adler32","./messages","./trees","xflags","extra_len","_in","_out","dmax","wsize","whave","wnext","hold","lcode","dcode","lmask","dmask","here","dist","from_source","lencode","distcode","lenbits","distbits","dolen","dodist","sane","inflate_fast","inflate_table","CODES","LENS","DISTS","Z_MEM_ERROR","HEAD","FLAGS","TIME","OS","EXLEN","EXTRA","NAME","COMMENT","HCRC","DICTID","DICT","TYPE","TYPEDO","STORED","COPY_","COPY","TABLE","LENLENS","CODELENS","LEN_","LEN","LENEXT","DIST","DISTEXT","MATCH","LIT","CHECK","LENGTH","DONE","BAD","MEM","SYNC","ENOUGH_LENS","ENOUGH_DISTS","DEF_WBITS","ZSWAP32","InflateState","havedict","check","total","wbits","ncode","nlen","ndist","have","work","lendyn","distdyn","back","was","inflateResetKeep","inflateReset","inflateReset2","lenfix","distfix","virgin","fixedtables","sym","inflateInit","put","here_bits","here_op","here_val","last_bits","last_op","last_val","hbuf","order","inf_leave","updatewindow","inflateInfo","./inffast","./inftrees","lbase","lext","dbase","dext","lens_index","table_index","incr","low","mask","drop","used","huff","base_index","MAXBITS","offs","extra_index","-1","-2","-3","-4","-5","-6","STORED_BLOCK","STATIC_TREES","DYN_TREES","LENGTH_CODES","Buf_size","MAX_BL_BITS","END_BLOCK","REP_3_6","REPZ_3_10","REPZ_11_138","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","_length_code","base_length","base_dist","static_l_desc","static_d_desc","static_bl_desc","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","TreeDesc","dyn_tree","stat_desc","max_code","d_code","put_short","send_bits","send_code","tree","bi_reverse","gen_codes","init_block","bi_windup","smaller","_n2","_m2","pqdownheap","compress_block","ltree","dtree","lc","lx","stree","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","send_tree","static_init_done","stored_len","copy_block","tr_static_init","opt_lenb","static_lenb","max_blindex","black_mask","detect_data_type","build_bl_tree","lcodes","dcodes","blcodes","send_all_trees","bi_flush","LokiIndexedAdapter","appname","app","catalog","checkAvailability","LokiCatalog","initializeLokiCatalog","closeDatabase","indexedDB","appName","getAppKey","cat","loadKey","saveCallback","closeAfterSave","setAppKey","saveKey","deleteAppKey","deleteKey","deleteDatabasePartitions","getDatabaseList","startsWith","getAppKeys","getKeyList","getCatalogSummary","getAllKeys","oapp","okey","openRequest","onupgradeneeded","thisDB","objectStoreNames","contains","deleteObjectStore","objectStore","createObjectStore","keyPath","autoIncrement","createIndex","onsuccess","onerror","usercallback","transaction","store","appkey","request","getAppKeyById","requestPut","evt","singleKeyRange","IDBKeyRange","only","cursor","openCursor","continue","EmbedSheetData","lokijs_default","items","workbook","xlsx_default","sortby","EmbedSheetRenderer","activePage","filterConditions","component","pagedQuery","conditions","page","rows_per_page","total_rows","max_pages","getFilter","label","choices","fromURL","complete","FileReader","onload","datastore","fetch","then","response","readAsArrayBuffer","catch","getPagedData","CustomEvent","detail","dispatchEvent","render","tableContainer","classList","renderFilters","renderPager","addEventListener","renderTable","scrollIntoView","behavior","focus","container","prevButton","nextButton","setAttribute","hasAttribute","newPage","disabled","renderFilter","setFilterValue","elem","filterData","textContent","select","textfield","wait","immediate","onChange","context","callNow","required","selected","__webpack_exports__","EmbedSheet","_idCounter","defaultOptions","baseID","userOptions","inputs","parseOptions","parentNode","insertBefore","_this","renderer","fromLink","fromLinks","querySelectorAll","readyState","attachEvent"],"mappings":"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GAAA,KACAG,GAAA,KACAE,GAAA,KACAa,GAAA,KACA0nB,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,MAAA,MAIAC,GAAA,CACA,KACA,QACA,aACA,WACA,YACA,iBACA,eACA,WACA,SACA,WACA,cACA,kBACA,gBACA,YACA,UACA,YACA,eACA,UACA,YAOAC,GAAA,CAEA,EACA,SACA,SACA,MACA,IACA,SACA,SACA,MAGA,EACA,SACA,SACA,MACA,IACA,SACA,SACA,MAEA,QACA,MACA,IACA,QACA,QACA,MACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,MACA,SAEA,IACA,SACA,SACA,MACA,QACA,QACA,MACA,IACA,MACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,MACA,QACA,MACA,QACA,SACA,SACA,QACA,QAGA,SACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GA9FsBt8B,IAAA,SAAAH,GAA6B,OAAAA,GAAA,OAAAA,GAAA,UAAAA,KAqGnD08B,GAA8B,CAE9BC,6EAAA,YAGAC,sCAAA,OAGAC,0CAAA,OACAC,sCAAA,OAGAC,6DAAA,YACAC,sEAAA,YACAC,wEAAA,WAGAC,wEAAA,OACAC,6EAAA,OAGAC,sCAAA,OACAC,6EAAA,OAGAC,gDAAA,OAGAC,2CAAA,OAGAC,qCAAA,aACAC,4EAAA,aAGAC,8EAAA,OAGAC,oCAAA,OACAC,wCAAA,OAGAC,4CAAA,OAGAC,uCAAA,OACAC,8EAAA,OAGAC,wCAAA,QACAC,+EAAA,QAGAC,yCAAA,OACAC,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ACAC,GAAA,cACAC,GAAA,kBACAC,GAAA,cACAC,GAAA,YACAC,GAAA,cACAC,GAAA,YACAvV,GAAA,gBACAwV,GAAA,OACAC,GAAA,SACAC,GAAA,cACAC,GAAA,YACA0nB,GAAA,eACA47B,GAAA,mBACA37B,GAAA,WACA47B,GAAA,aACA37B,GAAA,UACAmZ,GAAA,QACAC,GAAA,gBACAC,GAAA,cACApZ,GAAA,cACAy3B,GAAA,QACAC,GAAA,UACAC,GAAA,OACAgE,GAAA,SACAC,GAAA,YACA3E,GAAA,UACAC,GAAA,eACAC,GAAA,gBACAC,GAAA,iBACAzf,IAAA,iBACAC,IAAA,oBACAC,IAAA,oBACAC,IAAA,WACAC,IAAA,gBACA9X,IAAA,gBACA+X,IAAA,gBACAC,IAAA,gBACAof,IAAA,eACAC,IAAA,SACAC,IAAA,cACAC,IAAA,gBACAqE,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,UACAC,IAAA,UACAC,IAAA,QACAC,IAAA,MACAlkB,IAAA,cACAC,IAAA,iBACAC,IAAA,UACAE,IAAA,aACAC,IAAA,eACAC,IAAA,eACA6jB,IAAA,aACA55D,IAAA,cACAC,IAAA,cACAC,IAAA,kBACA25D,IAAA,YACAC,IAAA,iBACAC,IAAA,cACA55D,IAAA,eACA65D,IAAA,eACA55D,IAAA,YACA65D,IAAA,QACAC,IAAA,YACAC,IAAA,UACAC,IAAA,gBACAC,IAAA,UACAC,IAAA,aACAC,IAAA,aACAC,IAAA,gBACAC,IAAA,YACAC,IAAA,aACAC,IAAA,UACAC,IAAA,OACA5kB,IAAA,cACAC,IAAA,UACAC,IAAA,YACA2kB,IAAA,iBACAC,IAAA,cACAC,IAAA,oBACA16D,IAAA,gBACAC,IAAA,eACAC,IAAA,iBACAy6D,IAAA,kBACAC,IAAA,cACAC,IAAA,qBACAC,IAAA,SACAC,IAAA,cACAC,IAAA,WACAC,IAAA,WACAC,IAAA,eACAC,IAAA,eACAC,IAAA,iBACAC,IAAA,eACAC,IAAA,kBACAj7D,IAAA,qBACAk7D,IAAA,aACAC,IAAA,YACAC,IAAA,YACAC,IAAA,gBACAC,IAAA,cACAC,IAAA,eACAC,IAAA,kBACAC,IAAA,oBACAC,IAAA,kBACAC,IAAA,iBACAC,IAAA,UACAC,IAAA,YACAC,IAAA,YACArmB,IAAA,aACAC,IAAA,cACAC,IAAA,UACAC,IAAA,SACA31C,IAAA,cACA87D,IAAA,UACAC,IAAA,oBACAC,IAAA,kBACAC,IAAA,QACAC,IAAA,aACAC,IAAA,YACAC,IAAA,cACAt/B,IAAA,mBACAu/B,IAAA,oBACAC,IAAA,cACAv/B,IAAA,cACAw/B,IAAA,mBACAv/B,IAAA,eACAw/B,IAAA,aACAC,IAAA,eACAx8D,IAAA,gBACAy8D,IAAA,aACAC,IAAA,cACAC,IAAA,cACAC,IAAA,iBACAC,IAAA,YACAC,IAAA,cACAC,IAAA,eACAC,IAAA,aACAC,IAAA,aACAC,IAAA,gBACAC,IAAA,eACAC,IAAA,kBACAC,IAAA,gBACAC,IAAA,qBACAC,IAAA,WACAC,IAAA,OACAC,IAAA,gBACAC,IAAA,kBACAC,IAAA,aACAC,IAAA,aACAC,IAAA,eACAC,IAAA,iBACAC,IAAA,cACAC,IAAA,iBACAC,IAAA,qBACAC,IAAA,YACAC,IAAA,oBACAC,IAAA,WACAC,IAAA,cACAC,IAAA,iBACAC,IAAA,WACAC,IAAA,eACAC,IAAA,gBACAC,IAAA,gBACAC,IAAA,mBACAC,IAAA,iBACAC,IAAA,eACAC,IAAA,cACAC,IAAA,YACAC,IAAA,kBACAC,IAAA,oBACAC,IAAA,iBACAC,IAAA,YACAC,IAAA,aACAC,IAAA,oBACAC,IAAA,aACAC,IAAA,eACAC,IAAA,iBACAC,IAAA,kBACAC,IAAA,eACAC,IAAA,gBACAC,IAAA,gBACAC,IAAA,qBACAC,IAAA,mBACAC,IAAA,qBACAC,IAAA,yBACAC,IAAA,cACAC,IAAA,aACAC,IAAA,mBACAC,IAAA,sBACAC,IAAA,eACAC,IAAA,eACAC,IAAA,gBACAC,IAAA,cACAC,IAAA,kBACAC,IAAA,cACAC,IAAA,gBACAC,IAAA,kBACAC,IAAA,2BACAC,IAAA,eACAC,IAAA,iBACAC,IAAA,aACAC,IAAA,iBACAC,IAAA,YACAC,IAAA,mBACAC,IAAA,cACAC,IAAA,wBACApkC,IAAA,kBACAqkC,IAAA,qBACAC,IAAA,kBACAC,IAAA,kBACAC,IAAA,kBACAC,IAAA,qBACAC,IAAA,aACAC,IAAA,iBACAC,IAAA,eACAC,IAAA,mBACAC,IAAA,aACAC,IAAA,eACAC,IAAA,kBACAC,IAAA,gBACAC,IAAA,gBACAC,IAAA,kBACAC,IAAA,kBACAC,IAAA,gBACAC,IAAA,iBACAC,IAAA,uBACAC,IAAA,0BACAC,IAAA,iBACAC,IAAA,eACAC,IAAA,YACAC,IAAA,cACAC,IAAA,aACAC,IAAA,iBACAC,IAAA,kBACAC,IAAA,kBACAC,IAAA,gBACAC,IAAA,kBACAC,IAAA,gBACAC,IAAA,gBACAC,IAAA,qBACAC,IAAA,cACAC,IAAA,mBACArmC,IAAA,uBACAsmC,IAAA,mBACAC,IAAA,kBACAC,IAAA,mBACAC,IAAA,cACAC,IAAA,iBACAC,IAAA,kBACAC,IAAA,eACAC,IAAA,eACAC,IAAA,oBACAC,IAAA,sBACAC,IAAA,sBACAC,IAAA,mBACAC,IAAA,qBACAC,IAAA,qBACAC,IAAA,gBACAC,IAAA,aACAC,IAAA,YACAC,IAAA,cACAC,IAAA,mBACAC,IAAA,gBACAC,IAAA,wBACAC,IAAA,qBACAC,IAAA,SACAC,IAAA,kBACAC,IAAA,gBACAC,IAAA,kBACAC,IAAA,gBACAC,IAAA,gBACAC,IAAA,mBACAC,IAAA,mBACAC,IAAA,oBACAC,IAAA,eACAC,IAAA,oBACAC,IAAA,uBACAC,IAAA,cACAC,IAAA,WACAC,IAAA,WACAC,IAAA,aACAC,IAAA,aACAC,IAAA,eACAC,IAAA,eACAC,IAAA,cACAC,IAAA,qBACAC,IAAA,yBACAC,IAAA,mBACAC,IAAA,WACAC,IAAA,iBACAC,IAAA,iBACAC,IAAA,eACAC,IAAA,YACAC,IAAA,mBACAC,IAAA,mBACAC,IAAA,iBACAC,IAAA,kBACAC,IAAA,oBACAC,IAAA,mBACAC,IAAA,cACAC,IAAA,gBACAC,IAAA,WACAC,IAAA,YACAC,IAAA,cACAC,IAAA,cACAC,IAAA,mBACAC,IAAA,oBACAC,IAAA,iBACAC,IAAA,YACAC,IAAA,SACAC,IAAA,SACAC,IAAA,gBACAC,IAAA,mBACAC,IAAA,iBACAC,IAAA,WACAC,IAAA,gBACAC,IAAA,gBACAC,IAAA,cACAC,IAAA,iBACAC,IAAA,iBACAC,IAAA,oBACAC,IAAA,sBACAC,IAAA,aACAC,IAAA,cACAC,IAAA,cACAC,IAAA,oBACAC,IAAA,eACAC,IAAA,gBACAC,IAAA,qBAKAhW,GAAA,CACA9zD,EAAA,QACAC,EAAA,KACAC,EAAA,OACAm7B,EAAA,UACAQ,EAAA,MACAlpB,EAAA,UACAC,EAAA,MACAC,EAAA,MACAC,EAAA,MACAgpB,EAAA,SACAC,GAAA,KACAC,GAAA,MACAC,GAAA,QACAC,GAAA,SACAZ,GAAA,QACAX,GAAA,MACAyB,GAAA,MACAC,GAAA,MACAI,GAAA,OACAH,GAAA,KACAW,GAAA,OACA+T,GAAA,MACAzU,GAAA,KACAxpB,GAAA,QACAC,GAAA,MACAC,GAAA,MACAC,GAAA,OACAC,GAAA,QACAC,GAAA,SACAC,GAAA,QACAC,GAAA,OACAC,GAAA,MACAC,GAAA,MACAC,GAAA,QACAC,GAAA,OACAC,GAAA,QACAC,GAAA,MACA+iC,GAAA,KACAC,GAAA,MACA1Z,GAAA,MACA6hB,GAAA,SACAlrC,GAAA,OACAC,GAAA,WACAC,GAAA,OACAC,GAAA,OACAmpB,GAAA,SACAC,GAAA,MACAC,GAAA,OACAC,GAAA,OACAC,GAAA,SACAtpB,GAAA,QACAC,GAAA,SACAC,GAAA,SACAC,GAAA,OACAC,GAAA,OACAC,GAAA,SACAC,GAAA,KACAC,GAAA,KACAC,GAAA,OACAC,GAAA,MACAC,GAAA,OACAC,GAAA,OACAC,GAAA,MACAC,GAAA,OACAC,GAAA,QACAC,GAAA,OACAC,GAAA,OACAC,GAAA,MACAC,GAAA,QACAhU,GAAA,OACAiU,GAAA,UACAC,GAAA,OACAC,GAAA,SACAC,GAAA,SACAC,GAAA,MACAC,GAAA,QACAC,GAAA,OACAvV,GAAA,UACAwV,GAAA,SACAC,GAAA,SACAC,GAAA,SACAC,GAAA,WACA0nB,GAAA,SACA47B,GAAA,YACA37B,GAAA,QACA47B,GAAA,OACA37B,GAAA,OACAmZ,GAAA,OACAC,GAAA,WACAC,GAAA,SACApZ,GAAA,QACAy3B,GAAA,UACAC,GAAA,SACAC,GAAA,YACAgE,GAAA,cACAC,GAAA,YACA3E,GAAA,SACAC,GAAA,QACAC,GAAA,OACAC,GAAA,OACAzf,IAAA,SACAC,IAAA,UACAC,IAAA,UACAC,IAAA,QACAC,IAAA,QACA9X,IAAA,QACA+X,IAAA,cACAC,IAAA,WACAof,IAAA,YACAC,IAAA,MACAC,IAAA,OACAC,IAAA,OACAqE,IAAA,QACAC,IAAA,QACAC,IAAA,SACAC,IAAA,OACAC,IAAA,QACAC,IAAA,QACAC,IAAA,OACAC,IAAA,UACAlkB,IAAA,aACAC,IAAA,OACAC,IAAA,QACAC,IAAA,YACAC,IAAA,OACAC,IAAA,OACAC,IAAA,QACA6jB,IAAA,SACA55D,IAAA,WACAC,IAAA,UACAC,IAAA,IACA25D,IAAA,IACAC,IAAA,QACAC,IAAA,SACA55D,IAAA,QACA65D,IAAA,UACA55D,IAAA,QACA65D,IAAA,WACAC,IAAA,SACAC,IAAA,OACAC,IAAA,YACAuP,IAAA,YACAtP,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,UACAC,IAAA,UACAC,IAAA,UACAC,IAAA,WACAC,IAAA,WACA5kB,IAAA,OACAC,IAAA,UACAC,IAAA,WACA2kB,IAAA,cACA+O,IAAA,iBACA9O,IAAA,gBACA+O,IAAA,iBACAC,IAAA,WACAC,IAAA,cACAhP,IAAA,iBACAiP,IAAA,iBACA3pE,IAAA,aACAC,IAAA,QACAC,IAAA,UACAy6D,IAAA,WACAiP,IAAA,QACAhP,IAAA,QACAC,IAAA,OACAC,IAAA,OACAC,IAAA,SACAC,IAAA,aACAC,IAAA,MACAC,IAAA,QACAC,IAAA,QACAC,IAAA,OACAC,IAAA,WACAwO,IAAA,UACA1pE,IAAA,OACAC,IAAA,UACA0pE,IAAA,YACAC,IAAA,UAC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,EACAG,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAijC,GAAA,EACA1Z,GAAA,EACA6hB,GAAA,EACAlrC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAmpB,GAAA,EACAE,GAAA,EACAC,GAAA,EACAlpB,GAAA,EACAQ,GAAA,EACAE,GAAA,EACAE,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAhU,GAAA,EACAiU,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAvV,GAAA,EACAyV,GAAA,EACAC,GAAA,EACAujD,GAAA,EACAC,GAAA,EACA37B,GAAA,EACAqZ,GAAA,EACApZ,GAAA,EACA27B,GAAA,EACAC,GAAA,EACA1E,GAAA,EACAC,GAAA,EACAC,GAAA,EACAxf,IAAA,EACAC,IAAA,EACA5X,IAAA,EACA+X,IAAA,EACAqf,IAAA,EACAG,IAAA,EACAqE,IAAA,EACAC,IAAA,EACAC,IAAA,EACAG,IAAA,EACAC,IAAA,EACAC,IAAA,EACAjkB,IAAA,EACAK,IAAA,EACA6jB,IAAA,EACA55D,IAAA,EACAC,IAAA,EACAC,IAAA,EACA25D,IAAA,EACAE,IAAA,EACA55D,IAAA,EACA65D,IAAA,EACA55D,IAAA,EACA65D,IAAA,EACAC,IAAA,EACAE,IAAA,EACAuP,IAAA,EACAtP,IAAA,EACAC,IAAA,EACAC,IAAA,EACAl6D,IAAA,EACAC,IAAA,EACAC,IAAA,EACAy6D,IAAA,EACAiP,IAAA,EACA1O,IAAA,EACAG,IAAA,EACAwO,IAAA,EACA1pE,IAAA,EACAC,IAAA,EACA0pE,IAAA,EACAK,IAAA,EACA9pE,IAAA,EACAo7D,IAAA,EACAC,IAAA,EACAK,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACApmB,IAAA,EACAsmB,IAAA,EACAG,IAAA,EACAC,IAAA,EACAC,IAAA,EACAt/B,IAAA,EACAu/B,IAAA,EACAC,IAAA,EACAM,IAAA,EACAI,IAAA,EACAgN,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAM,IAAA,EACAG,IAAA,EACAxN,IAAA,EACA0N,IAAA,EACAE,IAAA,EACAK,IAAA,EACArN,IAAA,EACAC,IAAA,EACAqN,IAAA,EACApN,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACA4M,IAAA,EACAC,IAAA,EACA5M,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAwM,IAAA,EACAvM,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAqM,IAAA,EACAC,IAAA,EACAC,IAAA,EACAtM,IAAA,EACAuM,IAAA,EACAC,IAAA,EACAvM,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAQ,IAAA,EACAsL,IAAA,EACAC,IAAA,EACAtL,IAAA,EACAwL,IAAA,EACAC,IAAA,EACAG,IAAA,EACAvL,IAAA,EACAC,IAAA,EACA0L,IAAA,EACAC,IAAA,EACAzL,IAAA,EACApkC,IAAA,EACAqkC,IAAA,EACA2L,IAAA,EACAG,IAAA,EACAQ,IAAA,EACAC,IAAA,EACApM,IAAA,EACAqM,IAAA,EACAC,IAAA,EACArM,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAI,IAAA,EACAG,IAAA,EACAK,IAAA,EACAC,IAAA,EACAG,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACA+K,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACArL,IAAA,EACAC,IAAA,EACAC,IAAA,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AzD,GAAAzqC,EAAA,IACAwsC,EAAA,gBAA+B12C,IAAA6F,GAAAuyC,GAAAC,OAAAlpF,QAAA,WAC/B6X,EAAAtb,KAAA,CAAAw+C,EAAA,QAEA,MAEA,iBAEA,uBACA,yBACA,+BACA,6BACA,iBACA,iBACA,YACA,cACA,iBACA,iBACA,qBACA,cACA,aACA,WACA,4BACA,mBACA,gBACA,oBACA,sBACA,uBACA,SAAAA,EAAA,IAAmB,IAAAssC,EAAAxvE,EAAA+B,OAAA,KAAAmhC,EAAA,aAAAt5C,MAAA,cAAA4lF,EAAAzoF,KAAA,UACnB,MAAAm8C,EAAA,GAAAh7C,OAAAg7C,EAAA,GAAA18C,OAAA,IAAAwZ,EAAAtb,KAAA,CAAAw+C,EAAA,QACA,MAEA,QAEA,MAAAljC,EAAAxZ,QAAA,YAAA08C,EAAA,UAAAouC,GAAA1gF,EAAAtE,GAEA,MAAA0T,EAAAxZ,QAAA,OAAA08C,EAAA,UAAAouC,GAAA1gF,EAAAtE,GAEA,IAAAilF,IAAA,EACA,OAAAvxE,IAAAxZ,OAAA,OAEA,oCAAA08C,EAAA,IACA,eACA,gCACA,yBACA,2BACA,aACA,YACA,YACA,UACA,oBACA,uBACA,gCACA,QAAAquC,IAAA,EACK,MAGL,8BAAAruC,EAAA,IACA,cACA,qBACA,yBACA,YACA,cACA,gBACA,eACA,4BACA,QAAAquC,IAAA,EACK,MAGL,2BAAAruC,EAAA,IACA,eACA8gC,EAAA6E,QAAAz7E,UAAA,EACA,MACA,mBACA,kBACA,iBACA,iBACA,eACA,uBACA,qBACA,kBACA,sBACA,wBACA,cACA,gBACA,iBACA,sBACA,qBACA,UACA,6BACA,0BACA,gBACA,oBACA,gBACA,WACA,UACA,YACA,qBACA,kBACA,eACA,oBACA,UACA,iBACA,cACA,eACA,cACA,iBACA,cACA,YACA,WACA,UACA,oBACA,qBACA,+BACA,aACA,kBACA,+BACA,QAAAmkF,IAAA,EACK,MAGL,6BAAAruC,EAAA,IACA,iBACA,aACA,kBACA,QAAAquC,IAAA,EACK,MAGL,8BAAAruC,EAAA,IACA,cACA,UAAAA,EAAA,GAAAj8C,OAAA,SACA,SAAAi8C,EAAA,UAAAtyC,EAAA3J,MAAA8oF,EAAA7sC,EAAAvjB,QACA,kBAAAswD,EAAAtG,OAAA,EAA8C,MAC9C,sBAAAsG,EAAAtG,OAAA,OAEAoG,EAAA7sC,EAAAvjB,MAAAujB,EAAA,GAAA18C,OACA,MACA,aACAkpF,EAAA,aAAA5R,GAAA4R,EAAA,eAAuE,QACvEA,EAAA,YAAA7xE,OAAAqT,GAAAgyB,EAAA,IAAAsuC,OACA,MACA,aACA9B,EAAA,aAAA5R,GAAA4R,EAAA,eAAuE,QACvEA,EAAA,YAAArR,OAAAntD,GAAAgyB,EAAA,IAAAsuC,OACA,MACA,kBACA,IAAAC,GAAAvgE,GAAAgyB,EAAA,IACAwsC,EAAA,aAAA5R,GAAA4R,EAAA,eAAuE,QACvE+B,GAAAC,MAAAhC,EAAA,YAAAvR,IAAAsT,GAAAC,KACAD,GAAAE,OAAAjC,EAAA,YAAAzR,KAAAwT,GAAAE,MACAF,GAAAG,QAAAlC,EAAA,YAAAxR,MAAAuT,GAAAG,OACAH,GAAAI,SAAAnC,EAAA,YAAAtR,OAAAqT,GAAAI,QACA,MACA,yBACA7N,EAAA9D,QAAA8D,EAAA9D,MAAA,IACA8D,EAAA9D,MAAA,KAAA8D,EAAA9D,MAAA,OACA8D,EAAA9D,MAAA,GAAAC,KAAA,EACA,MAEA,eACA,YACA,YACA,YACA,WACA,aACA,aACA,gBACA,eACA,qBACA,sBACA,uBACA,uBACA,2BACA,yBACA,qBACA,gBACA,gBACA,iBACA,oBACA,uBACA,wBACA,0BACA,gBACA,qBACA,qBACA,qBACA,oBACA,eACA,4BACA,sBACA,oBACA,kBACA,oBACA,eACA,gBACA,qBACA,WACA,kBACA,gBACA,gBACA,kBACA,sBACA,sBACA,sBACA,sBACA,4BACA,uBACA,oBACA,oBACA,+BACA,oBACA,2BACA,yBACA,kCACA,oBACA,wBACA,uBACA,qBACA,0BACA,oBACA,0BACA,iBACA,oBACA,gBACA,4BACA,QAAAoR,IAAA,EACK,MAGL,yCAAAruC,EAAA,IACA,2BACA,gCACA,uBACA,eACA,iBACA,kBACA,iBACA,6BACA,uBACA,eACA,gBACA,eACA,gBACA,iBACA,kBACA,kBACA,iBACA,uBACA,WACA,eACA,eACA,iBACA,6BACA,eACA,gBACA,oBACA,iBACA,0BACA,aACA,eACA,gBACA,oBACA,eACA,wBACA,qBACA,kBACA,qBACA,kBACA,kBACA,sBACA,yBACA,wBACA,2BACA,4BACA,wBACA,QAAAquC,IAAA,EACK,MAGL,wBAAAruC,EAAA,IACA,gBACA,eACA,gBACA,eACA,eACA,aACA,mBACA,QAAAquC,IAAA,EACK,MAGL,wBAAAruC,EAAA,IACA,uBACA,0BACA,oBACA,yBACA,QAAAquC,IAAA,EACK,MAGL,wBAAAruC,EAAA,IACA,SACA,qBACA,wBACA,kBACA,gBACA,yBACA,qBACA,gBACA,iBACA,iBACA,kBACA,kBACA,eACA,aACA,iBACA,qBACA,yBACA,yBACA,aACA,aACA,cACA,wBACA,2BACA,qBACA,gBACA,iBACA,UACA,YACA,qBACA,sBACA,+BACA,QAAAquC,IAAA,EACK,MAEL,cACA,4BACA,qBACA,OAAAruC,EAAA,IACA,YACA,WACA,UACA,UACA,WACA,iBACA,YACA,oBACA,YACA,iBACA,mBACA,iBACA,oBACA,mBACA,iBACA,gBACA,gBACA,gBACA,gBACA,eACA,aACA,aACA,mBACA,QAAAquC,IAAA,EACK,MAGL,6CAAAruC,EAAA,IACA,UACA,YACA,YACA,YACA,YACA,cACA,eACA,gBACA,kBACA,0BAEA,aACA,cACA,kBACA,eACA,UACA,gBACA,cAEA,gBACA,QAAAquC,IAAA,EACK,MAGL,sBAEA,QAAAA,IAAA,EAEA,GAAAA,GAAA,MAEA,IAAAvxE,IAAAxZ,OAAA,gCAAA08C,EAAA,OAAAljC,EAAAjZ,KAAA,KACA,gCAAAiZ,IAAAxZ,OAAA,OACA,UAAA08C,EAAA,GAAAj8C,OAAA,SACA,MAAAi8C,EAAA,GAAA4qC,GAAAC,EAAA7qC,EAAA,GAAAj9C,EAAA2K,EAAA3J,MAAA8oF,EAAA7sC,EAAAvjB,SACU15B,EAAAi9C,EAAS6sC,EAAA7sC,EAAAvjB,MAAAujB,EAAA,GAAA18C,QACnB,MAEA,GAAA8F,EAAA6nB,IAAA,0BAAA+uB,EAAA,OAAAljC,EAAAjZ,KAAA,KAEA,IAAA6F,GAAA,GAOA,OANAN,EAAAwlF,YAAAxlF,EAAAylF,YAAAnlF,GAAA+uB,OAAAF,GACA7uB,GAAA8uB,WAAA+zD,EACA7iF,GAAAo3E,WACAp3E,GAAAzC,MAAA8L,YACArJ,GAAA4hC,QACA5hC,GAAAmhF,YACAnhF,GAGA,SAAAolF,GAAA1rF,EAAAgG,GAEA,OADA2lF,GAAA3lF,KAAA,IACAA,EAAAoD,MAAA,UACA,oBAAA0/E,GAAA3nF,EAAAH,OAAAhB,GAAAgG,GACA,4CAAA8iF,GAAA9oF,EAAAgG,GACA,mBAAA8iF,GAAA5lF,EAAAlD,GAAAgG,IAKA,SAAA4lF,GAAAl8C,EAAA1pC,GACA,IAAA7J,EAAA,GAKA,OAHAuzC,EAAAxH,OAAA/rC,EAAAiC,KAh0VA,SAAA8pC,EAAAliC,GACA,IAAA7J,EAAA,GAgBA,OAfAmrB,EAAAuf,IAAA5lC,IAAA,SAAAnF,GACA,QAAAJ,EAAA,EAAgBA,EAAAopC,GAAA5kC,SAAuBxE,EAAA,GAAAopC,GAAAppC,GAAA,IAAAI,EAAA,OAAAgpC,GAAAppC,GACvC,IAAAA,EAAA,EAAYA,EAAA8pC,GAAAtlC,SAAsBxE,EAAA,GAAA8pC,GAAA9pC,GAAA,IAAAI,EAAA,OAAA0pC,GAAA9pC,GAClC,MAAAI,IACEgyB,QAAA,SAAAtwB,GACF,SAAA0qC,EAAA1qC,EAAA,KACA,IAAA1B,EAAAkK,KAAAkiC,OAAA,MAAAliC,EAAAkiC,MAAA1qC,EAAA,IAAAwI,EAAAkiC,MAAA1qC,EAAA,IAAA0qC,EAAA1qC,EAAA,IACA,OAAAA,EAAA,IACA,WAAA1B,EAAA,IAAAiL,KAAAjL,GAAAsyB,cAAAvsB,QAAA,cAEA,iBAAA/F,IAAAyE,OAAAzE,IACA,IAAAA,IAAA,IAAAA,EAAsCA,IAAA,QACtCA,aAAAiL,OAAAjL,EAAA,IAAAiL,KAAAjL,GAAAsyB,cAAAvsB,QAAA,cACA1F,EAAAiC,KAAA4vB,GAAA6Y,GAAArpC,EAAA,KAAAA,EAAA,GAAA1B,OAEAoyB,GAAA,qBAAA/xB,EAAAsE,KAAA,KAAqDqiC,MAAA7T,GAAA9yB,IA+yVrD0vF,CAAAn8C,EAAAxH,MAAAliC,IAEA0pC,EAAA+3C,WAAAtrF,EAAAiC,KA/yVA,SAAA8pC,EAAAu/C,GACA,IAAAqE,EAAA,4BACAvlF,EAAA,2BACApK,EAAA,GAyBA,OAxBA+rC,GAAA5gB,EAAA4gB,GAAApa,QAAA,SAAArV,GACA,GAAAyvB,EAAA3qC,eAAAkb,GAAA,CACA,QAAA/c,EAAA,EAAgBA,EAAAopC,GAAA5kC,SAAuBxE,EAAA,GAAA+c,GAAAqsB,GAAAppC,GAAA,UACvC,IAAAA,EAAA,EAAYA,EAAA8pC,GAAAtlC,SAAsBxE,EAAA,GAAA+c,GAAA+sB,GAAA9pC,GAAA,UAClC,IAAAA,EAAA,EAAYA,EAAAowF,EAAA5rF,SAAsBxE,EAAA,GAAA+c,GAAAqzE,EAAApwF,GAAA,OAElC,IAAAI,EAAAosC,EAAAzvB,GACA7b,EAAA,SACA,iBAAAd,GAA4Bc,EAAA,QAAad,EAAAyE,OAAAzE,KACzC,IAAAA,IAAA,IAAAA,GAAsCc,EAAA,UAAed,IAAA,SACrDA,EAAAyE,OAAAzE,GACAK,EAAAiC,KAAA8vB,GAAAhC,GAAAzT,GAAA3c,EAAA,CAAwCiwF,QAAAnvF,QAExC6qF,GAAAngE,EAAAmgE,GAAA35D,QAAA,SAAArV,GACA,GAAAgvE,EAAAlqF,eAAAkb,MACAyvB,MAAA3qC,eAAAkb,IAAA,CACA,IAAA3c,EAAA2rF,EAAAhvE,GACA7b,EAAA,SACA,iBAAAd,GAA4Bc,EAAA,QAAad,EAAAyE,OAAAzE,KACzC,IAAAA,IAAA,IAAAA,GAAsCc,EAAA,UAAed,IAAA,SACrDA,aAAAiL,MAA8BnK,EAAA,cAAmBd,IAAAsyB,eACjDtyB,EAAAyE,OAAAzE,GACAK,EAAAiC,KAAA8vB,GAAAhC,GAAAzT,GAAA3c,EAAA,CAAwCiwF,QAAAnvF,QAExC,IAAA2J,EAAA,WAAA0oB,GAAA9yB,EAAA,KAAAA,EAAAsE,KAAA,SAAA8F,EAAA,IAmxVAylF,CAAAt8C,EAAAxH,MAAAwH,EAAA+3C,YACAtrF,EAAAsE,KAAA,IAmBA,SAAAwrF,GAAA9uF,GAA6B,OAAA+wB,GAAA,mBAAuCg+D,UAAA/uF,EAAAw0C,KAAAw6C,cAAA,IAAAhzC,GAAAh8C,EAAAuhF,IAAA,CAAwDliF,EAAA,EAAAT,EAAA,MAiJ5H,SAAAqwF,GAAAl5D,EAAAwf,EAAAjd,EAAAzvB,EAAA8E,EAAA4kC,EAAAh3B,GACA,IAAAwa,GAAA1jB,MAAA0jB,EAAAhvB,GAAAsL,MAAA0jB,EAAAhkB,EAAA,SAEA,IAAAm9E,EAAA,GAEA,GADAn5D,EAAAhkB,IAAAm9E,EAAA,kBAAApgE,GAAAktB,GAAAjmB,EAAAhkB,EAAAwJ,KACAwa,EAAA+a,GAAA/a,EAAA+a,EAAAttC,MAAA,EAAA+xC,EAAAxyC,SAAAwyC,EAAA,CACA,IAAAnhB,EAAA+C,GAAApB,EAAA+a,EAAAttC,MAAA+xC,EAAAxyC,OAAA,IACAmsF,EAAA,yBAAA96D,EAAA/0B,GAAAkc,EAAAlc,EAAA,QAAA+0B,EAAA/0B,EAAAkc,EAAAlc,GAAA,UAAA+0B,EAAAx1B,GAAA2c,EAAA3c,EAAA,QAAAw1B,EAAAx1B,EAAA2c,EAAA3c,GAAA,KAQA,GALAm3B,EAAAv3B,GAAAu3B,EAAAv3B,EAAAsoC,SACAooD,EAAA,WAAApgE,GAAAiH,EAAAv3B,EAAAsoC,QACA/Q,EAAAv3B,EAAAq3C,UAAAq5C,EAAA,mBAAApgE,GAAAiH,EAAAv3B,EAAAq3C,WAGAvd,EAAA,WAEA,IADA,IAAAinD,EAAAjnD,EAAA,WACA62D,EAAA,EAAiBA,GAAA5P,EAAAx8E,SAAmBosF,EACpC5P,EAAA4P,GAAA7uF,EAAA1B,GAAA2c,EAAA3c,GAAA2gF,EAAA4P,GAAA7uF,EAAAjB,GAAAkc,EAAAlc,IACAkgF,EAAA4P,GAAAlqF,EAAArG,EAAA2gF,EAAA4P,GAAA7uF,EAAA1B,IAAAswF,EAAA,kBAAA3P,EAAA4P,GAAAlqF,EAAArG,EAAA2gF,EAAA4P,GAAA7uF,EAAA1B,GACA2gF,EAAA4P,GAAAlqF,EAAA5F,EAAAkgF,EAAA4P,GAAA7uF,EAAAjB,IAAA6vF,EAAA,gBAAA3P,EAAA4P,GAAAlqF,EAAA5F,EAAAkgF,EAAA4P,GAAA7uF,EAAAjB,IAIA,IAAAI,EAAA,GAAAY,EAAA,GACA,OAAA01B,EAAAt2B,GACA,iBACA,QAAAA,EAAA,SAAyBY,EAAA+C,OAAA2yB,EAAAhvB,GAAoB,MAC7C,QAAAtH,EAAA,UAA0BY,EAAA01B,EAAAhvB,EAAA,QAA0B,MACpD,QAAAtH,EAAA,QAAwBY,EAAAw7B,GAAA9F,EAAAhvB,GAAkB,MAC1C,QAAAtH,EAAA,WAA2BY,EAAA,IAAAuJ,KAAAmsB,EAAAhvB,GAAAkqB,cAAoC,MAAA8E,EAAAnI,IAAAmI,EAAAnI,EAAAmI,EAAAnI,GAAAlnB,EAAA6L,OAAA,KAAsD,MACrH,QAAA9S,EAAA,SAAyBY,IAAA01B,EAAAhvB,GAAA,IA98ZzB,IACArC,QAAAkqB,GAAA,SAAAtlB,GAAyC,OAAAmlB,GAAAnlB,KAAuB5E,QAAAsqB,GAAA,SAAA1uB,GAAoC,YAAAA,EAAA0C,WAAA,GAAA0H,SAAA,IAAA2F,cAAA,MAg9ZpG,IAAAsjC,EAAAknC,GAAAhyE,EAAA+jD,QAAA72B,EAAAltB,GACAqmF,EAAA,sBAAAv7C,GACAu7C,EAAA,YAAA3zE,EAAA3c,EAAA,EACA,IACAD,EAAA,kBAAAc,EAAA,MADA,MAAAs2B,EAAAhvB,EAAA1G,EAAA,IACA,UAIA,OAFA01B,EAAAn3B,GAAA,IAAAmE,OAAA,IAAApE,GAAAo3B,EAAAn3B,EA/CAkF,IAAA,SAAAlF,GAEA,IACAC,EAAAkyB,GAAA,UADA1B,GAAAzwB,EAAAa,GAAA,IACA,CAAkCkmC,MAAA,oCAClC,OAAA5U,GAAA,UAAAlyB,EAAA,CAAkCuwF,YAAAxwF,EAAAmjB,MAChCze,KAAA,KA4CFytB,GAAA,OAAApyB,EAAAuwF,GAEA,SAAAG,GAAAhzE,EAAAya,GACA,IAAA93B,EAAA,mBAAAqd,EAAA,OAMA,OALAya,IACAA,EAAA2kB,MAAA3kB,EAAA4kB,MAAA5kB,EAAA4kB,IAAAC,GAAA7kB,EAAA2kB,MACA3kB,EAAA4kB,MAAA18C,GAAA,oCAAA83B,EAAA4kB,IAAA,KACA5kB,EAAAwkB,SAAAt8C,GAAA,mBAEAA,EAAA,IAwCA,SAAAswF,GAAA3hF,EAAA9E,EAAA0pC,GACA,IAAAvzC,EAAA,GACAsB,EAAAiyC,EAAAta,WAAAtqB,GACA2qB,EAAAia,EAAAra,OAAA53B,GAEAb,EAAA64B,EApOA,SAAAA,EAAAzvB,EAAA8E,EAAA4kC,GACA,IAAAja,EAAA,SACA,MAAAia,GAAA,IAAaguC,UAAA,IAAcc,MAAA,SAG3B,IAFA,IAAApoB,EAAA1mB,EAAAguC,SAAAc,MACAl4E,EAAA,GACA5K,EAAA,EAAeA,EAAA06D,EAAAl2D,SAAkBxE,EAAA,CACjC,IAAAyB,EAAAi5D,EAAA16D,GACAyB,EAAAshF,OAAA3zE,IAIA3N,EAAAw0C,KAAA/mC,MAAA,aACAtE,EAAAlI,KAAA6tF,GAAA9uF,KAEA,OAAAmJ,EAAA7F,KAAA,IAsNAisF,CAAAj3D,EAAAzvB,EAAA8E,EAAA4kC,GAAA,GAUA,OATA9yC,EAAAsD,OAAA,GAAA/D,EAAAiC,KAAA,UAAAxB,EAAA,aAGAA,EAAA64B,EA9CA,SAAAA,EAAAzvB,EAAA8E,EAAA4kC,GACA,IAAAja,EAAA,iBACA,IAAAlC,EAAAqB,GAAAa,EAAA,SACAinD,EAAAjnD,EAAA,eAAA62D,EAAA,EACAnwF,EAAA,GACAs5B,EAAA,UAAAA,EAAA,SAAA3H,QAAA,SAAA3wB,EAAAzB,GACAi9C,GAAAx7C,GACA,IAAAuL,IAAAvL,EAAAgwC,MACA3vC,EAAA+5E,GAAA77E,EAAAyB,GACAsb,EAAA,CAAWk0E,WAAAjxF,EAAA,GACXgN,IAAA+P,EAAA,YAAA+gC,GAAAh8C,EAAA2vC,QACAhwC,EAAAs7C,SAAAhgC,EAAA,kBACAtc,EAAAiC,KAAA8vB,GAAA,cAAAzV,MAGA,IADA,IAAA+c,EAAA9yB,MAAAS,QAAAsyB,GACAjc,EAAA+Z,EAAA91B,EAAAjB,EAAuBgd,GAAA+Z,EAAAnxB,EAAA5F,IAAgBgd,EAAA,CAEvC,IADA,IAAAya,EAAA,CAAAu4D,GAAAhzE,GAAAic,EAAA,cAAAjc,KACA9E,EAAA6e,EAAA91B,EAAA1B,EAAwB2Y,GAAA6e,EAAAnxB,EAAArG,IAAgB2Y,EAAA,CACxC,IAAAk4E,GAAA,EACA,IAAAN,EAAA,EAAcA,GAAA5P,EAAAx8E,SAAmBosF,EACjC,KAAA5P,EAAA4P,GAAA7uF,EAAA1B,EAAA2Y,GACAgoE,EAAA4P,GAAA7uF,EAAAjB,EAAAgd,GACAkjE,EAAA4P,GAAAlqF,EAAArG,EAAA2Y,GACAgoE,EAAA4P,GAAAlqF,EAAA5F,EAAAgd,GAAA,CACAkjE,EAAA4P,GAAA7uF,EAAA1B,GAAA2Y,GAAAgoE,EAAA4P,GAAA7uF,EAAAjB,GAAAgd,IAAAozE,GAAA,GACA,MAEA,IAAAA,EAAA,CACA,IAAAl0E,EAAA,CAAelc,EAAAgd,EAAAzd,EAAA2Y,GACfg+B,EAAAjf,GAAA/a,GAAAwa,EAAAsC,GAAAC,EAAAjc,IAAA,IAAA9E,GAAA+gB,EAAAid,GACAze,EAAA71B,KAAAguF,GAAAl5D,EAAAwf,EAAAjd,EAAAzvB,EAAA8E,EAAA4kC,EAAAh3B,KAEAub,EAAA71B,KAAA,UACA61B,EAAA/zB,OAAA,GAAA/D,EAAAiC,KAAA61B,EAAAxzB,KAAA,KAEA,OAAAtE,EAAAsE,KAAA,IAWAosF,CAAAp3D,EAAAzvB,GAAA,IACA9F,OAAA,GAAA/D,EAAAiC,KAAA,UAAAxB,EAAA,YAGAT,EAAAiC,KA3NA,SAAAq3B,EAAAzvB,EAAA8E,EAAA4kC,GACA,IAAAja,EAAA,SACA,IAAAt5B,EAAA,GA0CA,GA1BAs5B,EAAA,cACAt5B,EAAAiC,KAAA,eACAq3B,EAAA,YAAAle,QAAApb,EAAAiC,KAAA8vB,GAAA,eAA8D4+D,WAAAr3D,EAAA,YAAAle,UAC9Dke,EAAA,YAAAsiD,QAAA57E,EAAAiC,KAAA8vB,GAAA,eAA8D4+D,WAAAr3D,EAAA,YAAAsiD,UAC9D57E,EAAAiC,KAAA8vB,GAAA,oBACA6+D,WAAAt3D,EAAA,YAAAqiD,QAAA,OACAkV,SAAAv3D,EAAA,YAAAkiD,MAAA,MACAsV,UAAAx3D,EAAA,YAAAmiD,OAAA,MACAsV,QAAAz3D,EAAA,YAAAoiD,KAAA,UAEA17E,EAAAiC,KAAA,iBAgBAsxC,KAAAguC,UAAAhuC,EAAAguC,SAAAroD,QAAAqa,EAAAguC,SAAAroD,OAAAvqB,GAEA,GAAA4kC,EAAAguC,SAAAroD,OAAAvqB,GAAAu4E,OAAAlnF,EAAAiC,KAAA8vB,GAAA,aAAAwhB,EAAAguC,SAAAroD,OAAAvqB,GAAAu4E,OAAA,yCACA,CAEA,QAAA3nF,EAAA,EAAiBA,EAAAoP,KAAS4kC,EAAAguC,SAAAroD,OAAA35B,IAAAg0C,EAAAguC,SAAAroD,OAAA35B,GAAA2nF,UAAA3nF,GAC1BA,GAAAoP,GAAA3O,EAAAiC,KAAA,eAsDA,UAhDAsxC,GAAA,IAAcguC,UAAA,IAAc9D,OAAA,YAAmBC,KAAA19E,EAAAiC,KAAA,yBA2B/Cq3B,EAAA,cACAt5B,EAAAiC,KAAA4vB,GAAA,2BACAyH,EAAA,YAAA03D,SAAAhxF,EAAAiC,KAAA4vB,GAAA,0BACAyH,EAAA,YAAA23D,WAAAjxF,EAAAiC,KAAA4vB,GAAA,4BACA,MAAAyH,EAAA,YAAA43D,mBAAA53D,EAAA,YAAA43D,kBACA,MAAA53D,EAAA,YAAA63D,qBAAA73D,EAAA,YAAA63D,qBAAAnxF,EAAAiC,KAAA4vB,GAAA,oCADA7xB,EAAAiC,KAAA4vB,GAAA,kCAEA,CACA,mCACA,kCACA,+BACA,oCACA,iCACA,6CACA,oCACA,iCACA,qBACA,6BACA,uCACAF,QAAA,SAAAhtB,GAAwB20B,EAAA,YAAA30B,EAAA,KAAA3E,EAAAiC,KAAA,IAAA0C,EAAA,YAGxB,GAAA3E,EAAA+D,OAAA,GACAguB,GAAA,mBAAA/xB,EAAAsE,KAAA,KAAmDqiC,MAAA7T,GAAAnuB,IAkHnDysF,CAAA93D,EAAAzvB,EAAA8E,EAAA4kC,IAEAvzC,EAAAsE,KAAA,IAEA,SAAA+sF,GAAA99C,EAAA1pC,GACAA,MAAA,IACA0pC,EAAA7rC,MAAA6rC,EAAA7rC,MAAA8L,aACA+/B,EAAA7rC,MACAC,EAAAD,GAAgBA,EAAA+L,WAAA8/B,EAAA7rC,KAEhBmC,EAAAiyE,OAAApwD,EAAA6nB,EAAA7rC,KAAkCmC,EAAAiyE,OAAAvoC,EAAA7rC,IAAA,UAClCmC,EAAAkyE,IAAAxoC,EAAA7rC,IACAmC,EAAA+jD,QAAA,GACAiuB,GAAAhyE,EAAA+jD,QAAA,GAAiC,CAAGkuB,OAAA,CAAQwV,QAAA,MAE5C,IAAAzxF,EAAA,GACAA,EAAAoC,KAAAwtF,GAAAl8C,EAAA1pC,IACAhK,EAAAoC,KAvRA,IAwRApC,EAAAoC,KAAA,IACApC,EAAAoC,KAAA,IACA,QAAA1C,EAAA,EAAeA,EAAAg0C,EAAAta,WAAAl1B,SAA0BxE,EACzCM,EAAAoC,KAAA8vB,GAAA,YAAAu+D,GAAA/wF,EAAAsK,EAAA0pC,GAAA,CAA6Dw8C,UAAAjgE,GAAAyjB,EAAAta,WAAA15B,OAG7D,OAFAM,EAAA,GAzRA,SAAA0zC,EAAA1pC,GAEA,IAAAy8B,EAAA,oEAMA,OALAz8B,EAAA+jD,QAAAj8B,QAAA,SAAAm7B,EAAAha,GACA,IAAAv0B,EAAA,GACAA,EAAAtc,KAAA8vB,GAAA,qBAAgDw/D,YAAAzhE,GAAApoB,EAAA6L,OAAAu5C,EAAAl0B,cAChD0N,EAAArkC,KAAA8vB,GAAA,QAAAxT,EAAAja,KAAA,KAAoDktF,QAAA,QAAA1+C,QAEpD/gB,GAAA,SAAAuU,EAAAhiC,KAAA,KAiRAmtF,CAAAl+C,EAAA1pC,GACAhK,EAAA,GA/QA,SAAA0zC,GACA,MAAAA,GAAA,IAAaguC,UAAA,IAAcc,MAAA,SAG3B,IAFA,IAAApoB,EAAA1mB,EAAAguC,SAAAc,MACAl4E,EAAA,GACA5K,EAAA,EAAeA,EAAA06D,EAAAl2D,SAAkBxE,EAAA,CACjC,IAAAyB,EAAAi5D,EAAA16D,GACA,MAAAyB,EAAAshF,QACAthF,EAAAw0C,KAAA/mC,MAAA,aACAtE,EAAAlI,KAAA6tF,GAAA9uF,KAEA,OAAA+wB,GAAA,QAAA5nB,EAAA7F,KAAA,KAqQAotF,CAAAn+C,GACAnlB,GAAA2D,GAAA,WAAAlyB,EAAAyE,KAAA,KACAqiC,MAAA7T,GAAAzlB,GACAukD,UAAA9+B,GAAA9yB,EACA6xD,UAAA/+B,GAAAnuB,EACAgtF,WAAA7+D,GAAAzlB,GACAukF,WAAA9+D,GAAAthB,GACAqgF,aAAA/+D,GAAAC,OAIA,SAAA++D,GAAAvmE,GACA,IAAAxjB,EAAA,GACA/H,EAAAurB,EAAAzN,QAOA,GALA9d,EAAAR,EAAA,GAEAuI,EAAAgqF,aAAA/xF,EAAA2Z,WAAA,gBACA5R,EAAAiqF,oBA/mYA,SAAAhyF,GAA+C,OAAAu9B,GAAAv9B,EAAA,GA+mY/CiyF,CAAAjyF,GAEAA,EAAA+D,OAAA/D,EAAAR,GAAA,SAAAuI,EAEA,IAAApI,EAAAK,EAAA2Z,WAAA,GACA,UAAAha,KAAA,GAAAoI,GACA/H,EAAAR,GAAA,EAAQuI,EAAAmqF,UAAAlyF,EAAA2Z,WAAA,gBAER3Z,EAAA+D,OAAA/D,EAAAR,GAAA,EAAAuI,EAEA,cADApI,EAAAK,EAAA2Z,WAAA,IACA5R,GACAA,EAAAoqF,uBAznYA,SAAAnyF,GAAkD,OAAAu9B,GAAAv9B,EAAA,GAynYlDoyF,CAAApyF,GAGA,IADAL,EAAAK,EAAA2Z,WAAA,KACAha,EAAA,GAAAoI,GACA/H,EAAAR,GAAA,OAAQuI,EAAAsqF,UAAAryF,EAAA2Z,WAAA,gBAWR,SAAA24E,GAAAj1E,EAAA7D,EAAAzV,EAAA8F,GACA,IAAArK,EAAAuE,EACAsD,EAAA,GACAxH,EAAA2Z,EAAAhV,MAAAgV,EAAAha,EAAAga,EAAAha,KACA,GAAAqK,KAAA1D,KAAA0D,EAAA1D,IAAAosF,OAAA,OAAAl1E,EAAArc,GACA,2GACA,QACA,OAAAnB,EAAAkE,OAAA,MACA8F,EAAA1D,IAAAosF,OAAA1yF,GAEAwH,EAAApF,KAAApC,GACA2Z,EAAAha,KAGA,IAFA,IAAAi3B,EAAA+7D,GAAAv/D,GAAAzZ,IAAAha,IACAge,EAAA,EACA,MAAAiZ,GAAA,aAAAA,EAAAz1B,EAAAwD,MAAA,MACAhF,EAAAyzB,GAAAzZ,IAAAha,EAAA,GACAge,EAAAhE,EAAAha,EAAA,EACA,eAAAi3B,EAAAz1B,EAAAwc,GAAA,EACA,eAAAiZ,EAAAz1B,EAAAwD,MAAA,QAAAgZ,GAAA,IACAnW,EAAApF,KAAAuX,EAAAhV,MAAAgZ,EAAAhE,EAAAha,EAAA,EAAAA,IACAga,EAAAha,GAAA,EAAAA,EACAi3B,EAAA+7D,GAAAv/D,GAAAzZ,IAAAha,IAEA,IAAAqjB,EAAAzb,EAAAC,GACAoS,GAAAoJ,EAAA,GACA,IAAA4vE,EAAA,EAAY5vE,EAAAkS,KAAA,GACZ,QAAAtnB,EAAA,EAAeA,EAAApG,EAAAtD,SAAiB0J,EAAOoV,EAAAkS,KAAA9yB,KAAAwwF,GAAiBA,GAAAprF,EAAAoG,GAAA1J,OACxD,OAAAsZ,EAAAtK,EAAA8P,IAAA9e,OAAA8F,GAGA,SAAA6oF,GAAArxF,EAAAwI,EAAAc,GACA,SAAAtJ,EAAAZ,GACAY,EAAAs3B,GAAA,CACA,IAAA8R,EAAA,EACA,IACAA,EAAAppC,EAAAutB,GAAAvtB,EAAAs3B,GAAAC,UAAA,EACA/uB,EAAA21C,SAAAn+C,EAAAutB,EAAAlnB,EAAA6L,OAAAk3B,IACE,MAAAxkC,GAAW,GAAA4D,EAAA6nB,IAAA,MAAAzrB,EACb,IAAA4D,IAAA,IAAAA,EAAA01C,SAAA,IACA,MAAAl+C,EAAAZ,EAAmBY,EAAAkL,EAAAlL,EAAAkL,GAAAswB,GAAAx7B,EAAA0G,GACnB,IAAA0iC,GAAA,WAAAA,EACA,MAAAppC,EAAAZ,GACA,EAAAY,EAAA0G,KAAA1G,EAAA0G,EAAA1G,EAAAkL,EAAA7E,EAAAiE,aAAAtK,EAAA0G,GACA1G,EAAAkL,EAAA7E,EAAAgG,aAAArM,EAAA0G,GAEA1G,EAAAkL,EAAA7E,EAAAiG,SAAAtM,EAAA0G,GAEA1G,EAAAkL,EAAA7E,EAAAqF,OAAA09B,EAAAppC,EAAA0G,EAAA,CAAoC4C,eAClC,MAAA1E,GAAW,GAAA4D,EAAA6nB,IAAA,MAAAzrB,EACb,GAAA4D,EAAAkwB,WAAA0Q,GAAA,KAAAppC,EAAAZ,GAAAiH,EAAA4K,QAAA5K,EAAA6L,OAAAk3B,IAAArmC,OAAAqmC,IAAA,CACA,IAAAg+C,EAAA/gF,EAAAkC,gBAAAvI,EAAA0G,GAAoC0gF,IAASpnF,EAAAZ,EAAA,IAAWY,EAAA0G,EAAA,IAAA6C,KAAA69E,EAAAn+E,EAAAm+E,EAAA9oF,EAAA,EAAA8oF,EAAA5oF,EAAA4oF,EAAAl+E,EAAAk+E,EAAAj+E,EAAAi+E,EAAAh+E,EAAAg+E,EAAAp+E,MAIxD,SAAAsoF,GAAAxlF,EAAA+kC,EAAAzxC,GACA,OAAUsH,EAAAoF,EAAA+kC,OAAAzxC,KAIV,SAAAmyF,GAAAp5E,EAAAa,GACA,IAAAk5B,EAAA,CAAY1pC,KAAA,IACZqvB,EAAA,GACA,MAAAn0B,GAAA,MAAAsV,EAAAgf,QAAAhf,EAAAgf,MAAAt0B,GACA,IAOA8tF,EAAAzkF,EAAA0kF,EAAAC,EAAAC,EAGAC,EACAC,EAgEA/nC,EA3EAhhD,EAAAkQ,EAAAgf,MAAA,MACA85D,EAAA,GACA/7D,EAAA,GACAg8D,EAAA,KACAhwC,EAAA,GACAiwC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAh5B,EAAA,GACAG,EAAA,GAGA84B,GAAA,EACAC,EAAA,GACAC,EAAA,GACAnS,EAAA,CAAkBroD,OAAA,GAAAktD,QAAA,CAAqBz7E,UAAA,GAAe8yE,MAAA,MAAc+P,EAAA,GACpEmG,EAAA,SAAA3nC,GACA,OAAAA,EAAA,EAAA5qB,GAAA4qB,GACAA,EAAA,IAAA0nC,EAAA1nC,EAAA,IACA5qB,GAAA4qB,IAWA4nC,EAAA,SAAA78D,EAAA88D,EAAAx5E,GACA,KAAAy5E,EAAA,KACAz5E,EAAA0/B,WAAAhjB,EAAA12B,GAAAga,EAAA0/B,YAAAy5C,GAAA,GACAA,GAAA,CAUA,GATAn5E,EAAA08B,YAAA88C,EAAAl7D,IAAAk7D,EAAAl7D,GAAA90B,MAbA,SAAAkzB,EAAA88D,EAAAx5E,GACA,IAIA5Z,EAJAszF,EAAAF,EAAAl7D,GAAA90B,KACAkwF,KAAA1nC,aAAAhyC,KAAA08B,aACA88C,EAAAvyF,EAAA,GACAuyF,EAAAvyF,EAAA+qD,YAAA0nC,EAAA1nC,aAEA5rD,EAAAwnD,GAAA0rC,EAAAI,EAAAC,aAA2CH,EAAAvyF,EAAAirD,QAAA,CAAmBjvB,IAAA78B,KAC9DA,EAAAwnD,GAAA0rC,EAAAI,EAAAE,aAA2CJ,EAAAvyF,EAAAgrD,QAAA,CAAmBhvB,IAAA78B,KAM9DyzF,CAAAn9D,EAAA88D,EAAAx5E,UACAw5E,EAAA3hD,YAAmB2hD,EAAAl7D,GACnBk6D,EAAA97D,EACAw8D,EAAAj8D,GAAAP,GACAK,KAAA91B,GAAA81B,EAAAnxB,IAAAmxB,EAAA,CAA8C91B,EAAA,CAAGjB,EAAA,EAAAT,EAAA,GAAQqG,EAAA,CAAI5F,EAAA,EAAAT,EAAA,KAC7Dm3B,EAAA12B,EAAA+2B,EAAA91B,EAAAjB,IAAA+2B,EAAA91B,EAAAjB,EAAA02B,EAAA12B,GACA02B,EAAAn3B,EAAAw3B,EAAA91B,EAAA1B,IAAAw3B,EAAA91B,EAAA1B,EAAAm3B,EAAAn3B,GACAm3B,EAAA12B,EAAA,EAAA+2B,EAAAnxB,EAAA5F,IAAA+2B,EAAAnxB,EAAA5F,EAAA02B,EAAA12B,EAAA,GACA02B,EAAAn3B,EAAA,EAAAw3B,EAAAnxB,EAAArG,IAAAw3B,EAAAnxB,EAAArG,EAAAm3B,EAAAn3B,EAAA,GACAya,EAAAwmE,aAAAgT,EAAA9gF,EACA,QAAAohF,EAAA,EAAmBA,EAAAz5B,EAAA32D,SAAqBowF,EACxC,KAAAz5B,EAAAy5B,GAAA,GAAA7yF,EAAA1B,EAAAm3B,EAAAn3B,GAAA86D,EAAAy5B,GAAA,GAAA7yF,EAAAjB,EAAA02B,EAAA12B,GACAq6D,EAAAy5B,GAAA,GAAAluF,EAAArG,EAAAm3B,EAAAn3B,GAAA86D,EAAAy5B,GAAA,GAAAluF,EAAA5F,EAAA02B,EAAA12B,GAAA,CACAwzF,EAAA/hD,EAAAxZ,GAAAoiC,EAAAy5B,GAAA,IACAz5B,EAAAy5B,GAAA,GAAA7yF,EAAA1B,GAAAm3B,EAAAn3B,GAAA86D,EAAAy5B,GAAA,GAAA7yF,EAAAjB,GAAA02B,EAAA12B,UAAAwzF,EAAA9gF,EACA8gF,EAAA9gF,IAAA8gF,EAAA9gF,EAAA,GAAAwmD,GAAAmB,EAAAy5B,GAAA,GAAA/8D,EAAAL,EAAAkiC,EAAApvD,IACA,MAIAwQ,EAAAgf,OACAlvB,EAAA4sB,EAAA12B,KAAA8J,EAAA4sB,EAAA12B,GAAA,IACA8J,EAAA4sB,EAAA12B,GAAA02B,EAAAn3B,GAAAi0F,GACI1pF,EAAAopF,GAAAM,IAGJhqF,EAAA,CACA1D,KAAA,EACAkvC,MAAA,EACA6K,OAAA,GACAqa,UACAG,SACA05B,QAAA,GACAC,SAAA,GACAn9D,KAAA,EACAglB,SAAA,EACAo4C,UAAA,EACAv9C,aAAA18B,OAAA08B,WACArlB,MAAArX,OAAAk6E,KAEAl6E,EAAAgsC,WAAAx8C,EAAAw8C,SAAAhsC,EAAAgsC,UAEA,IAAAg4B,EAAA,GACA2S,EAAA,GACAr1C,EAAA,GAAAD,EAAA,GAGAmiC,GAAA,EACA5kB,EAAA,GACAA,EAAAhgC,WAAApvB,EAAAq2C,OACA+Y,EAAAsB,QAAA1wD,EAAA0wD,QACAtB,EAAAyB,OAAA7wD,EAAA6wD,OACAzB,EAAAgB,MAAA,GACAhB,EAAAG,IAAA,GACA,IAIAo7B,EAJAC,EAAA,GACAX,EAAA,EACAY,EAAA,EAAAC,EAAA,GACAC,EAAA,GAIA/qF,EAAAqyC,SAAA,KACAx4C,EAAA,MAEA,IADA,IAAAmxF,GAAA,EACAr7E,EAAAha,EAAAga,EAAAzV,OAAA,IACA,IAAAzC,EAAAkY,EAAAha,EACAs1F,EAAAt7E,EAAAG,WAAA,GACA,OAAAm7E,GAAA,QAAAL,EAAA,MACA,IAAA1wF,EAAAyV,EAAAha,IAAAga,EAAAzV,OAAA,EAAAyV,EAAAG,WAAA,GACA0D,EAAAm1E,GAAAsC,GAGA,GAAAz3E,KAAAtK,EAAA,CACA,GAAAsH,EAAAg1E,YACA,gBAAAoF,GAAA,gBAAAp3E,EAAArc,EAAA,MAGA,GADAyzF,EAAAp3E,EAAArc,EACA,IAAAqc,EAAAhd,GAAA,IAAAgd,EAAAhd,EAAA,CACA,IAAAu3D,EAAAp+C,EAAAG,WAAA,GACA,GADgC5V,GAAA,GAChC8F,EAAA1D,KAAAyxD,IAAAk9B,KAAA,IAAAl9B,IAAA,EAAAA,GAAA,KAAAk9B,EAAA,UAAA3tF,MAAA,gBAAAywD,EAAA,KAAAk9B,GACA,IAAAz3E,EAAAhd,IAAkBmZ,EAAAha,GAAA,GAAcuE,GAAA,IAGhC,IAAAoJ,EACAA,EAAA,QAAAkQ,EAAArc,EAAAqc,EAAAtK,EAAAyG,EAAAzV,EAAA8F,GACAyoF,GAAAj1E,EAAA7D,EAAAzV,EAAA8F,GACA,IAAA42C,EAAApjC,EAAArc,EACA,MAAA8yF,GAAA,OAAArzC,EAAA,SAEA,OAAAA,GAEA,eACAlN,EAAA1pC,KAAAkrF,SAAAxT,EAAA6E,QAAAz7E,SAAAwC,EAAmD,MACnD,mBAAAomC,EAAA1pC,KAAAmrF,cAAA,EAAqD,MACrD,eAGA,GAFAnrF,EAAA1D,MAAAqT,EAAAha,EAAA,GACAqK,EAAA1D,IAAAgH,GACAkN,EAAAgsC,SAAA,UAAAl/C,MAAA,8BACA,SAAAgG,EAAAo3C,MAAA,UAAAp9C,MAAA,iCACA,IAAAgG,EAAAo3C,MAAA,UAAAp9C,MAAA,yBACA,MACA,kBAAA0C,EAAAwqF,SAAAlnF,EAA4C,MAC5C,wBACA,eAEA,OAAAA,GACA,WAAAA,EAAA,KAA+B,MAC/B,WAAAA,EAAA,IAA+B,MAC/B,WAAAA,EAAA,KAEAzJ,EAAAmG,EAAAqyC,SAAA/uC,GACA0nF,GAAA,EACA,MACA,cAAAhrF,EAAAuqF,QAAAjnF,EAAuC,MACvC,iBAAAtD,EAAAyqF,UAAAnnF,EAA4C,MAC5C,eACA,eACA,eACA,wBACA,iBACA,gBACA,gBACA,eACA,eACA,oBACA,qBACAomC,EAAA1pC,KAAA42C,GAAAtzC,EAAuB,MACvB,kBAAAtD,EAAAorF,YAAA9nF,EAA+C,MAC/C,qBACA,2BAAAomC,EAAA1pC,KAAAqrF,SAAA/nF,EAAwD,MACxD,aACAA,EAAAgoF,UAAAhrF,EAAA,mBACA,MACA,SACAspF,EAAAxxF,KAAAkL,GAAmB,MACnB,aACA,cACA,qBACA,kBAEA,cACA8rD,EAAAh3D,KAAA,CAAAkL,IACA8rD,IAAAl1D,OAAA,GAAAq1D,IAAA,GACA,MACA,iBACAH,IAAAl1D,OAAA,GAAA9B,KAAAkL,GACA,MACA,kBACA,UACAqnF,EAAA,CACAh/C,KAAAroC,EAAAqoC,KACA+sC,IAAAhpB,GAAApsD,EAAA4oC,KAAA3e,EAAA,KAAA6hC,EAAApvD,IAEAsD,EAAA0oC,KAAA,IAAA2+C,EAAAlS,MAAAn1E,EAAA0oC,KAAA,GACAojB,EAAAgB,MAAAh4D,KAAAuyF,GACAv7B,EAAA,KAAuBA,EAAA,MAAkBA,EAAA,GAAAG,IAAA,IACzCH,IAAAl1D,OAAA,GAAA9B,KAAAkL,GACA,yBAAAA,EAAAqoC,MAAAroC,EAAA0oC,KAAA,GACA1oC,EAAA4oC,MAAA5oC,EAAA4oC,KAAA,IAAA5oC,EAAA4oC,KAAA,oBAAA5oC,EAAA4oC,KAAA,WACA6+C,EAAAznF,EAAA0oC,KAAA,IAAwCU,IAAAje,GAAAnrB,EAAA4oC,KAAA,eACxC,MACA,kBAAAlsC,EAAAurF,YAAAjoF,EAA+C,MAC/C,kBACA,GAAA8rD,EAAAl1D,SAA+Bk1D,EAAA,MAAkBA,EAAA,GAAAG,IAAA,IACjDH,IAAAl1D,OAAA,GAAAq1D,IAAAH,IAAAl1D,OAAA,GAAAq1D,IAAA9xD,OAAA6F,GAAuF8rD,EAAAG,IAAAH,EAAAG,IAAA9xD,OAAA6F,GAAyC,MAChI,cAEA,GAAAtD,EAAAqtB,KAAA,QACA,MAAAs9D,MAAAvM,QAAA96E,EAAA,IACA,MAEA,cAAAhD,EAAA,YAAAgD,EAA0C,MAC1C,mBAAAA,GAAAtD,EAAA6nB,KAAA1L,QAAAC,MAAA,sBAAA9Y,GAA0F,MAC1F,wCAEA,kBACAgmF,EAAAhmF,EAAAyoB,KAAAzoB,EACAtD,EAAAq2C,OAAAj+C,KAAAkL,EAAArN,MACK,MACL,UACA,KAAAg0F,EAAA,MACA,GAAA18D,EAAAnxB,EAAA,CACA,GAAAmxB,EAAAnxB,EAAA5F,EAAA,GAAA+2B,EAAAnxB,EAAArG,EAAA,GAGA,GAFAw3B,EAAAnxB,EAAA5F,IAAmB+2B,EAAAnxB,EAAArG,IACnBuK,EAAA,QAAAmuB,GAAAlB,GACA/c,EAAA0/B,WAAA1/B,EAAA0/B,WAAA3iB,EAAAnxB,EAAA5F,EAAA,CACA,IAAAg1F,GAAAj+D,EAAAnxB,EAAA5F,EACA+2B,EAAAnxB,EAAA5F,EAAAga,EAAA0/B,UAAA,EACA5vC,EAAA,YAAAA,EAAA,QACAA,EAAA,QAAAmuB,GAAAlB,GACAA,EAAAnxB,EAAA5F,EAAAg1F,GAEAj+D,EAAAnxB,EAAA5F,IAAmB+2B,EAAAnxB,EAAArG,IAEnBy+E,EAAAt6E,OAAA,IAAAoG,EAAA,WAAAk0E,GACA2S,EAAAjtF,OAAA,IAAAoG,EAAA,YAAA6mF,GACAr1C,EAAA53C,OAAA,IAAAoG,EAAA,SAAAwxC,GACAD,EAAA33C,OAAA,IAAAoG,EAAA,SAAAuxC,GACA6lC,EAAAroD,OAAAj3B,KAAAurF,GAEA,KAAA6F,EAAAC,EAAAnpF,EAAyC+uB,EAAAm6D,GAAAlpF,EACzCA,EAAAkQ,EAAAgf,MAAA,MACK,MACL,UAeA,GAdA,IAAAxvB,EAAAqtB,OAAArtB,EAAAqtB,KAAA,CACA+G,EAAA,EACAgtC,IAAA,EACAqqB,KAAA,GACMR,IAAA,CACNS,IAAA,EACAC,IAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAtzF,EAAA,EACA2S,EAAA,GACM7H,EAAAkmC,UAAA,GACN,GAAAxpC,EAAAqtB,MAAA,GAAA/pB,EAAAkmC,SAAA,IAAAlmC,EAAAqE,KAAA3H,EAAAqtB,KAAA,GACA48D,IAAA,MAKA,GAJAN,GAAA,EACArpF,EAAAkQ,EAAAgf,MAAA,MAEAxvB,EAAAqtB,KAAA,IAAA29D,IAA0CA,GAAA,EAAsBnxF,EAAAmG,EAAAqyC,SAAA7hC,EAAA6hC,UAAA,OAChEryC,EAAAqtB,KAAA,GACA,KAAAm8D,MAAA,UACAj8D,EAAA,CAAe91B,EAAA,CAAGjB,EAAA,EAAAT,EAAA,GAAQqG,EAAA,CAAI5F,EAAA,EAAAT,EAAA,IAE9B,IAAAg2F,GAAA,CAAqBhgE,IAAApc,EAAAha,EAAAuE,EAAAjE,KAAAuzF,GACrBF,EAAAyC,GAAAhgE,KAAAggE,GACA/rF,EAAAq2C,OAAAj+C,KAAAoxF,QAEAA,GAAAF,EAAA7xF,IAAA,CAAwCxB,KAAA,KAAQA,KAChD,IAAAqN,EAAAqE,KAAArH,EAAA,kBACA,IAAAgD,EAAAqE,KAAArH,EAAA,kBACAk0E,EAAA,GACA2S,EAAA,GACAnnF,EAAA6wD,SAAA,GACA/e,EAAA,GAAkBD,EAAA,GAElBmiC,GAAA,EACA2P,EAAA,CAAgBtG,QAAAiM,EAAA7xF,IAAA,CAAuBoyC,GAAA,IAAKA,GAAA5zC,KAAAuzF,GACvC,MAEL,2CACA,SAAAlpF,EAAA,WAAAkQ,EAAAgf,OAAAlvB,EAAAgD,EAAA9M,IAAA,IAAA8M,EAAAvN,GAAAuK,EAAAmtB,GAAA,CAA8F13B,EAAAuN,EAAAvN,EAAAS,EAAA8M,EAAA9M,SAAiB8M,EAAAvN,EAC/GqzF,EAAA,CAAkB/gD,KAAA/kC,EAAA+kC,KAAAvZ,GAAA86D,EAAAtmF,EAAA+kC,OAAA,GAAqCnqC,EAAAoF,MAAA1M,EAAA,KACvDi0F,EAAA,IAAAzB,EAAArkE,EAAA+lE,EAAA1B,EAAA/gD,MAAA,OACAwgD,GAAAO,EAAA54E,EAAAk5B,EAAA1pC,KAAAkrF,UACAnB,EAAA,CAAch0F,EAAAuN,EAAAvN,EAAAS,EAAA8M,EAAA9M,GAAiB4yF,EAAA54E,GAC1B,MACL,cACA44E,EAAA,CAAkB/gD,KAAA/kC,EAAA+kC,KAAAvZ,GAAA86D,EAAAtmF,EAAA+kC,MAAAnqC,EAAAoF,MAAA1M,EAAA0M,EAAA1M,GAClBi0F,EAAA,IAAAzB,EAAArkE,EAAA+lE,EAAA1B,EAAA/gD,MAAA,OACAwgD,GAAAO,EAAA54E,EAAAk5B,EAAA1pC,KAAAkrF,UACAnB,EAAA,CAAch0F,EAAAuN,EAAAvN,EAAAS,EAAA8M,EAAA9M,GAAiB4yF,EAAA54E,GAC1B,MACL,SACA44E,EAAA,CAAkB/gD,KAAA/kC,EAAA+kC,KAAAvZ,GAAA86D,EAAAtmF,EAAA+kC,MAAAnqC,EAAAoF,EAAA0oF,MAAAp1F,EAAA,KAClBi0F,EAAA,IAAAzB,EAAArkE,EAAA+lE,EAAA1B,EAAA/gD,MAAA,OACAwgD,GAAAO,EAAA54E,EAAAk5B,EAAA1pC,KAAAkrF,UACAnB,EAAA,CAAch0F,EAAAuN,EAAAvN,EAAAS,EAAA8M,EAAA9M,GAAiB4yF,EAAA54E,GAC1B,MACL,YACA,QAAA5M,GAAAN,EAAAvN,EAAuB6N,IAAAN,EAAAoL,IAAY9K,GAAA,CACnC,IAAAykC,GAAA/kC,EAAA2oF,MAAAroF,GAAAN,EAAAvN,GAAA,GACAqzF,EAAA,CAAkB/gD,QAAAvZ,GAAA86D,EAAAvhD,IAAAnqC,EAAAoF,EAAA2oF,MAAAroF,GAAAN,EAAAvN,GAAA,GAAAa,EAAA,KAClBi0F,EAAA,IAAAzB,EAAArkE,EAAA+lE,EAAA1B,EAAA/gD,MAAA,OACAwgD,GAAAO,EAAA54E,EAAAk5B,EAAA1pC,KAAAkrF,UACAnB,EAAA,CAAeh0F,EAAA6N,GAAApN,EAAA8M,EAAA9M,GAAa4yF,EAAA54E,GAEvB,MACL,cACA,aAAAlN,MAAA,CAA8BimF,EAAAjmF,EAAoB,MAGlD,IAFA8lF,EAAAN,GAAAxlF,QAAA4pB,KAAAmb,KAAA/kC,EAAAG,KACAqrB,GAAA86D,EAAAR,EAAA/gD,MACA73B,EAAAwmE,YAAA,CACA,IAAA9lC,GAAA5tC,EAAAgvC,QACA,GAAApB,OAAA,IAAAA,GAAA,iBAAAA,GAAA,UACA,IAAAg7C,GAAAh7C,GAAA,YAAAi7C,GAAAj7C,GAAA,YACAk7C,GAAA3+D,GAAA,CAA8Bj3B,EAAA01F,GAAAn2F,EAAAo2F,KAC9Bz7B,EAAA07B,IAAAhD,EAAAlgF,EAAA,GAAAwmD,GAAApsD,EAAAgvC,QAAA/kB,EAAAjqB,EAAA4pB,KAAAkiC,EAAApvD,GACAopF,EAAAnhD,IAAAz3B,EAAAgf,OAAAlvB,EAAA4rF,KAAA,IAAAC,IAAA7rF,EAAA8rF,MAAA,IAA+EnkD,OACxEmhD,EAAAlgF,EAAA,GAAAwmD,GAAApsD,EAAAgvC,QAAA/kB,EAAAjqB,EAAA4pB,KAAAkiC,EAAApvD,GAEP6qF,EAAA,IAAAzB,EAAArkE,EAAA+lE,EAAA1B,EAAA/gD,MAAA,OACAwgD,GAAAO,EAAA54E,EAAAk5B,EAAA1pC,KAAAkrF,UACAnB,EAAAzmF,EAAA4pB,KAAAk8D,EAAA54E,GACA+4E,EAAAjmF,EACK,MACL,aACA,IAAAimF,EAWM,UAAAjsF,MAAA,iCAVNisF,EAAAjmF,OACA8lF,EAAAN,GAAAxlF,EAAAimF,EAAAr8D,KAAAmb,KAAA,MACAvZ,GAAA86D,EAAAR,EAAA/gD,MACA73B,EAAAwmE,cACAoS,EAAAlgF,EAAA,GAAAwmD,GAAA65B,EAAAj3C,QAAA/kB,EAAAg8D,EAAAr8D,KAAAkiC,EAAApvD,IAEA6qF,EAAA,IAAAzB,EAAArkE,EAAA+lE,EAAA1B,EAAA/gD,MAAA,OACAwgD,GAAAO,EAAA54E,EAAAk5B,EAAA1pC,KAAAkrF,UACAnB,EAAAR,EAAAr8D,KAAAk8D,EAAA54E,GACA+4E,EAAA,KAEK,MACL,YACA14B,EAAAz4D,KAAAkL,GACA,IAAA+oF,GAAA5+D,GAAAnqB,EAAA,GAAA7L,GAEA,GADA8M,EAAAiM,EAAAgf,OAAAlvB,EAAAgD,EAAA,GAAA7L,EAAAjB,IAAA,IAAA8M,EAAA,GAAA7L,EAAA1B,GAAAuK,EAAA+rF,IACA77E,EAAAwmE,aAAAzyE,EAAA,CACA,IAAAglF,EAAA,MACA,IAAA8C,KAAA9nF,EAAA,MACAA,EAAA2E,EAAA,GAAAwmD,GAAApsD,EAAA,GAAAiqB,EAAAjqB,EAAA,GAAA8rD,EAAApvD,GACAuE,EAAA0jC,EAAAxZ,GAAAnrB,EAAA,IAEK,MACL,cACA,IAAAqmF,EAAA,MACA,IAAAn5E,EAAAwmE,YAAA,MACA,GAAA0S,EAAA,CAEA,IAAAH,EAAA,MACA74B,EAAAjjC,GAAA87D,EAAAr8D,OAAA5pB,EAAA,KACAiB,EAAAiM,EAAAgf,OAAAlvB,EAAAipF,EAAAr8D,KAAA12B,IAAA,IAAA+yF,EAAAr8D,KAAAn3B,GAAAuK,EAAAmtB,GAAA87D,EAAAr8D,SACA,IAAahkB,EAAA,GAAAwmD,GAAApsD,EAAA,GAAAiqB,EAAAy7D,EAAA55B,EAAApvD,GAER,MACL,gBACAopF,EAAAN,GAAAvvC,EAAAj2C,EAAAgpF,MAAA11F,EAAA0M,EAAA+kC,KAAA,MACAvZ,GAAA86D,EAAAR,EAAA/gD,MACAwiD,EAAA,IAAAzB,EAAArkE,EAAA+lE,EAAA1B,EAAA/gD,MAAA,OACAwgD,GAAAO,EAAA54E,EAAAk5B,EAAA1pC,KAAAkrF,UACAnB,EAAA,CAAch0F,EAAAuN,EAAAvN,EAAAS,EAAA8M,EAAA9M,GAAiB4yF,EAAA54E,GAC/B,MACA,YAAAA,EAAAyf,aACAm5D,EAAA,CAAkB/gD,KAAA/kC,EAAA+kC,KAAAvZ,GAAA86D,EAAAtmF,EAAA+kC,MAAAzxC,EAAA,KAClBi0F,EAAA,IAAAzB,EAAArkE,EAAA+lE,EAAA1B,EAAA/gD,MAAA,OACAwgD,GAAAO,EAAA54E,EAAAk5B,EAAA1pC,KAAAkrF,UACAnB,EAAA,CAAch0F,EAAAuN,EAAAvN,EAAAS,EAAA8M,EAAA9M,GAAiB4yF,EAAA54E,IAC1B,MACL,kBAAAA,EAAAyf,WACA,QAAAs8D,GAAAjpF,EAAAvN,EAAwBw2F,IAAAjpF,EAAAoL,IAAa69E,GAAA,CACrC,IAAAC,GAAAlpF,EAAA+kC,KAAAkkD,GAAAjpF,EAAAvN,GACAqzF,EAAA,CAAkB/gD,KAAAmkD,GAAA19D,GAAA86D,EAAA4C,IAAA51F,EAAA,KAClBi0F,EAAA,IAAAzB,EAAArkE,EAAA+lE,EAAA1B,EAAA/gD,MAAA,OACAwgD,GAAAO,EAAA54E,EAAAk5B,EAAA1pC,KAAAkrF,UACAnB,EAAA,CAAeh0F,EAAAw2F,GAAA/1F,EAAA8M,EAAA9M,GAAc4yF,EAAA54E,GAExB,MACL,cACA,4BACA44E,EAAAN,GAAAxlF,QAAA+kC,KAAA,MACAvZ,GAAA86D,EAAAR,EAAA/gD,MACAwiD,EAAA,IAAAzB,EAAArkE,EAAA+lE,EAAA1B,EAAA/gD,MAAA,OACAwgD,GAAAO,EAAA54E,EAAAk5B,EAAA1pC,KAAAkrF,UACAnB,EAAA,CAAch0F,EAAAuN,EAAAvN,EAAAS,EAAA8M,EAAA9M,GAAiB4yF,EAAA54E,GAC/B,MAEA,iBACA,IAAAy5E,IAAA18D,EAAAjqB,GACK,MACL,UACAi2C,EAAAj2C,EACK,MACL,aACA,MAAAtD,EAAAqtB,KAAA,CACAy9D,EAAAD,KAAAvnF,EAAA,GACA,QAAAmpF,GAAA,EAAwBA,GAAA5B,EAAA,KAAwBhtF,EAAA6L,OAAA+iF,KAAAnpF,EAAA,KAAAmpF,IAChDA,IAAA,KAAA5uF,EAAA4L,KAAAnG,EAAA,GAAAunF,EAAA,UAEAhtF,EAAA4L,KAAAnG,EAAA,GAAAA,EAAA,IACK,MACL,kBACAwnF,EAAAD,KAAAvnF,EACA,QAAAopF,GAAA,EAAuBA,GAAA7B,EAAA,KAAwBhtF,EAAA6L,OAAAgjF,KAAAppF,IAAAopF,IAC/CA,IAAA,KAAA7uF,EAAA4L,KAAAnG,EAAAunF,EAAA,KACK,MAEL,iBAAArW,IAAA/2E,OAAA6F,GAAmD,MAEnD,UAAA6jF,EAAA7jF,EAAAqpF,IAAA,IAAA3sF,EAAA4sF,QAAAtpF,EAAyD,MACzD,UAAAtD,EAAA4sF,QAAAC,IAAAvpF,EAAuC,MACvC,aAAAtD,EAAA4sF,QAAAE,OAAAxpF,EAA6C,MAE7C,YACA,IAAA6lF,EAAA7lF,EAAA,GAAA7L,EAAAjB,EAA2B2yF,GAAA7lF,EAAA,GAAAlH,EAAA5F,IAAoB2yF,EAC/C,IAAAD,EAAA5lF,EAAA,GAAA7L,EAAA1B,EAA4BmzF,GAAA5lF,EAAA,GAAAlH,EAAArG,IAAoBmzF,GAChD3kF,EAAAiM,EAAAgf,OAAAlvB,EAAA6oF,IAAA,IAAAD,GAAA5oF,EAAAmtB,GAAA,CAAqE13B,EAAAmzF,EAAA1yF,EAAA2yF,QACrE5kF,EAAA5O,EAAA2N,EAAA,IAEK,MACL,mBACA,IAAA6lF,EAAA7lF,EAAA,GAAA7L,EAAAjB,EAA2B2yF,GAAA7lF,EAAA,GAAAlH,EAAA5F,IAAoB2yF,EAC/C,IAAAD,EAAA5lF,EAAA,GAAA7L,EAAA1B,EAA4BmzF,GAAA5lF,EAAA,GAAAlH,EAAArG,IAAoBmzF,GAChD3kF,EAAAiM,EAAAgf,OAAAlvB,EAAA6oF,IAAA,IAAAD,GAAA5oF,EAAAmtB,GAAA,CAAqE13B,EAAAmzF,EAAA1yF,EAAA2yF,OACrE5kF,EAAA5O,IAAA4O,EAAA5O,EAAAq3C,QAAA1pC,EAAA,IAEK,MAGL,WACA,GAAAtD,EAAAqtB,MAAA,GAAArtB,EAAAqtB,MAAA,QACA9oB,EAAAiM,EAAAgf,OAAAlvB,EAAAgD,EAAA,GAAA9M,IAAA,IAAA8M,EAAA,GAAAvN,GAAAuK,EAAAmtB,GAAAnqB,EAAA,KACA,IAAAypF,GAAA5F,EAAA7jF,EAAA,IACA,IAAAiB,EAAA,MACAA,EAAAxO,IAAAwO,EAAAxO,EAAA,IACAkzF,EAAA,CAAa/vE,EAAA5V,EAAA,GAAA1M,EAAAm2F,GAAAF,IAAAj2F,GACb2N,EAAAxO,EAAAqC,KAAA6wF,GACK,MAEL,eAAAz1E,EAAArc,GACA,uBACA,YAAAyyF,EAAAtmF,EAAA+kC,MAAA/kC,EAAA0pF,IA36NAllE,QAAA,SAAAmlE,GACAA,EAAA,KA06NuD,MAEvD,kBAAuC,MACvC,uBAAA3pF,EAAA,GAAgD,MAEhD,cACA,IAAAtD,EAAAktC,WAAA,MACA,KAAA5pC,EAAAlH,GAAAkH,EAAA7L,GACAq6C,EAAAxuC,EAAAlH,KAAA,CAA0B+qC,MAAA7jC,EAAAZ,EAAA,KAC1BsxE,IAAoBA,GAAA,EAAgBz0B,GAAAj8C,EAAAZ,EAAA,MACpCiwC,GAAAb,EAAAxuC,EAAAlH,EAAA,IAEK,MACL,UACA,IAAAo6E,GAAA,GACA,MAAAlzE,EAAAyzE,QAA4BllC,EAAAvuC,EAAA9M,GAAAggF,GAAyBA,GAAAO,MAAAzzE,EAAAyzE,OACrDzzE,EAAAmvC,SAAqBZ,EAAAvuC,EAAA9M,GAAAggF,GAAyBA,GAAA/jC,QAAA,GAC9CnvC,EAAAsvC,MACAf,EAAAvuC,EAAA9M,GAAAggF,GACAA,GAAA5jC,IAAAtvC,EAAAsvC,IAA2B4jC,GAAA3jC,IAAAC,GAAAxvC,EAAAsvC,MAEtB,MAEL,iBACA,kBACA,gBACA,mBACAtyC,EAAA,aAAAkxE,GAAAlxE,EAAA,gBACAA,EAAA,YAAAs2C,EAAAj8C,MAAA,MAAAmN,eAAAxE,EACA,MAEA,YACAhD,EAAA,aAAAkxE,GAAAlxE,EAAA,gBACAA,EAAA,YAAAiR,OAAAjO,EAAAiO,OACAjR,EAAA,YAAAyxE,OAAAzuE,EAAAyuE,OACA,MAEA,cAEAzuE,EAAAuwE,MAAA6D,EAAA9D,MAAA,GAAAC,KAAA,GACA,MAEA,aACA,aACA,cACA,cACA,UACA,UACA,eACA,aACA,cACA,aACA,WACA,WACA,aACA,YACA,eACA,WACA,YACA,WACA,WACA,WACA,eACA,gBACA,iBACA,oCACA,mDACA,cAAAwV,EAAA/lF,EAAkC,MAClC,eACA,mBACA,oCACA,WACA,YACA,YACA,qBACA,cAAAumF,EAAAvmF,EAAkC,MAClC,YAAAg+C,EAAAh+C,EAA+B,MAE/B,sBACA,iBAGA,gBAGA,YACA,kBACA,iBACA,wBAGA,iBACA,WACA,cACA,aACA,cACA,eACA,WACA,eACA,eACA,aACA,aACA,YACA,YAGA,cAGA,WAGA,gBAGA,kBACA,gBACA,gBAEA,UACA,UAEA,UAGA,eAGA,uBAKA,iBAGA,aAEK,MACL,eACAkmF,EACA7F,EAAAxO,SAAA7xE,GAAAqgF,EAAA1tF,KADAyhF,EAAA6E,QAAApH,SAAA7xE,GAAA,eAEK,MACL,kBAIA,WACA,mBAEA,0BAGA,0EAGA,0BAGA,yCAGA,YACA,mBACA,iBAEA,gBACA,gBAGA,uBACA,6CAGA,iBACA,kBACA,0DACA,gCAEA,qDACA,wDACA,iBACA,eAAAkQ,EAAArc,GAEA,UACA,sBACA,gCACA,uBACA,2CACA,eACA,6GACA,kCACA,2FACA,sCACA,yDACA,kDACA,4CACA,qBACA,0CACA,+BACA,yCACA,8BACA,yCACA,wCACA,8BACA,oBACA,sCAGA,qBACA,WAGA,iBACA,UACA,iBAGA,gBACA,iBACA,qBACA,eACA,sBAGA,YACA,aACA,qBAGA,+CACA,aAGA,uBACA,sCACA,mBACA,qBACA,WACA,eAGA,6BACA,uEAEA,oCAGA,6CACA,0DAEA,yDAGA,yCAGA,yCAEA,eAAAqc,EAAArc,GAEA,8GAGA,+DACA,gDACA,0DAGA,yDACA,6DACA,iBACA,+DACA,8BACA,aACA,oBACA,kCACA,iBACA,uBACA,WAAAqZ,EAAAqX,IAAA,4BAAArU,EAAArc,WAEGwY,EAAAha,GAAAuE,EAcH,OAZAwvC,EAAAta,WAAA9N,EAAAgoE,GAAA3zE,KAAA,SAAAuD,EAAAF,GAAmD,OAAA6J,OAAA3J,GAAA2J,OAAA7J,KAAgC/d,IAAA,SAAAH,G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","file":"embedsheet.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","/*! xlsx.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported XLSX */\n/*global global, exports, module, require:false, process:false, Buffer:false, ArrayBuffer:false */\nvar XLSX = {};\nfunction make_xlsx_lib(XLSX){\nXLSX.version = '0.14.2';\nvar current_codepage = 1200, current_ansi = 1252;\n/*global cptable:true, window */\nif(typeof module !== \"undefined\" && typeof require !== 'undefined') {\n\tif(typeof cptable === 'undefined') {\n\t\tif(typeof global !== 'undefined') global.cptable = require('./dist/cpexcel.js');\n\t\telse if(typeof window !== 'undefined') window.cptable = require('./dist/cpexcel.js');\n\t}\n}\n\nvar VALID_ANSI = [ 874, 932, 936, 949, 950 ];\nfor(var i = 0; i <= 8; ++i) VALID_ANSI.push(1250 + i);\n/* ECMA-376 Part I 18.4.1 charset to codepage mapping */\nvar CS2CP = ({\n0:    1252, /* ANSI */\n1:   65001, /* DEFAULT */\n2:   65001, /* SYMBOL */\n77:  10000, /* MAC */\n128:   932, /* SHIFTJIS */\n129:   949, /* HANGUL */\n130:  1361, /* JOHAB */\n134:   936, /* GB2312 */\n136:   950, /* CHINESEBIG5 */\n161:  1253, /* GREEK */\n162:  1254, /* TURKISH */\n163:  1258, /* VIETNAMESE */\n177:  1255, /* HEBREW */\n178:  1256, /* ARABIC */\n186:  1257, /* BALTIC */\n204:  1251, /* RUSSIAN */\n222:   874, /* THAI */\n238:  1250, /* EASTEUROPE */\n255:  1252, /* OEM */\n69:   6969  /* MISC */\n});\n\nvar set_ansi = function(cp) { if(VALID_ANSI.indexOf(cp) == -1) return; current_ansi = CS2CP[0] = cp; };\nfunction reset_ansi() { set_ansi(1252); }\n\nvar set_cp = function(cp) { current_codepage = cp; set_ansi(cp); };\nfunction reset_cp() { set_cp(1200); reset_ansi(); }\n\nfunction char_codes(data) { var o = []; for(var i = 0, len = data.length; i < len; ++i) o[i] = data.charCodeAt(i); return o; }\n\nfunction utf16leread(data) {\n\tvar o = [];\n\tfor(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i) + (data.charCodeAt(2*i+1)<<8));\n\treturn o.join(\"\");\n}\nfunction utf16beread(data) {\n\tvar o = [];\n\tfor(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i+1) + (data.charCodeAt(2*i)<<8));\n\treturn o.join(\"\");\n}\n\nvar debom = function(data) {\n\tvar c1 = data.charCodeAt(0), c2 = data.charCodeAt(1);\n\tif(c1 == 0xFF && c2 == 0xFE) return utf16leread(data.slice(2));\n\tif(c1 == 0xFE && c2 == 0xFF) return utf16beread(data.slice(2));\n\tif(c1 == 0xFEFF) return data.slice(1);\n\treturn data;\n};\n\nvar _getchar = function _gc1(x) { return String.fromCharCode(x); };\nif(typeof cptable !== 'undefined') {\n\tset_cp = function(cp) { current_codepage = cp; };\n\tdebom = function(data) {\n\t\tif(data.charCodeAt(0) === 0xFF && data.charCodeAt(1) === 0xFE) { return cptable.utils.decode(1200, char_codes(data.slice(2))); }\n\t\treturn data;\n\t};\n\t_getchar = function _gc2(x) {\n\t\tif(current_codepage === 1200) return String.fromCharCode(x);\n\t\treturn cptable.utils.decode(current_codepage, [x&255,x>>8])[0];\n\t};\n}\nvar DENSE = null;\nvar DIF_XL = true;\nvar Base64 = (function make_b64(){\n\tvar map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\treturn {\n\t\tencode: function(input) {\n\t\t\tvar o = \"\";\n\t\t\tvar c1=0, c2=0, c3=0, e1=0, e2=0, e3=0, e4=0;\n\t\t\tfor(var i = 0; i < input.length; ) {\n\t\t\t\tc1 = input.charCodeAt(i++);\n\t\t\t\te1 = (c1 >> 2);\n\n\t\t\t\tc2 = input.charCodeAt(i++);\n\t\t\t\te2 = ((c1 & 3) << 4) | (c2 >> 4);\n\n\t\t\t\tc3 = input.charCodeAt(i++);\n\t\t\t\te3 = ((c2 & 15) << 2) | (c3 >> 6);\n\t\t\t\te4 = (c3 & 63);\n\t\t\t\tif (isNaN(c2)) { e3 = e4 = 64; }\n\t\t\t\telse if (isNaN(c3)) { e4 = 64; }\n\t\t\t\to += map.charAt(e1) + map.charAt(e2) + map.charAt(e3) + map.charAt(e4);\n\t\t\t}\n\t\t\treturn o;\n\t\t},\n\t\tdecode: function b64_decode(input) {\n\t\t\tvar o = \"\";\n\t\t\tvar c1=0, c2=0, c3=0, e1=0, e2=0, e3=0, e4=0;\n\t\t\tinput = input.replace(/[^\\w\\+\\/\\=]/g, \"\");\n\t\t\tfor(var i = 0; i < input.length;) {\n\t\t\t\te1 = map.indexOf(input.charAt(i++));\n\t\t\t\te2 = map.indexOf(input.charAt(i++));\n\t\t\t\tc1 = (e1 << 2) | (e2 >> 4);\n\t\t\t\to += String.fromCharCode(c1);\n\n\t\t\t\te3 = map.indexOf(input.charAt(i++));\n\t\t\t\tc2 = ((e2 & 15) << 4) | (e3 >> 2);\n\t\t\t\tif (e3 !== 64) { o += String.fromCharCode(c2); }\n\n\t\t\t\te4 = map.indexOf(input.charAt(i++));\n\t\t\t\tc3 = ((e3 & 3) << 6) | e4;\n\t\t\t\tif (e4 !== 64) { o += String.fromCharCode(c3); }\n\t\t\t}\n\t\t\treturn o;\n\t\t}\n\t};\n})();\nvar has_buf = (typeof Buffer !== 'undefined' && typeof process !== 'undefined' && typeof process.versions !== 'undefined' && !!process.versions.node);\n\nvar Buffer_from = function(){};\n\nif(typeof Buffer !== 'undefined') {\n\tvar nbfs = !Buffer.from;\n\tif(!nbfs) try { Buffer.from(\"foo\", \"utf8\"); } catch(e) { nbfs = true; }\n\tBuffer_from = nbfs ? function(buf, enc) { return (enc) ? new Buffer(buf, enc) : new Buffer(buf); } : Buffer.from.bind(Buffer);\n\t// $FlowIgnore\n\tif(!Buffer.alloc) Buffer.alloc = function(n) { return new Buffer(n); };\n\t// $FlowIgnore\n\tif(!Buffer.allocUnsafe) Buffer.allocUnsafe = function(n) { return new Buffer(n); };\n}\n\nfunction new_raw_buf(len) {\n\t/* jshint -W056 */\n\treturn has_buf ? Buffer.alloc(len) : new Array(len);\n\t/* jshint +W056 */\n}\n\nfunction new_unsafe_buf(len) {\n\t/* jshint -W056 */\n\treturn has_buf ? Buffer.allocUnsafe(len) : new Array(len);\n\t/* jshint +W056 */\n}\n\nvar s2a = function s2a(s) {\n\t// $FlowIgnore\n\tif(has_buf) return Buffer_from(s, \"binary\");\n\treturn s.split(\"\").map(function(x){ return x.charCodeAt(0) & 0xff; });\n};\n\nfunction s2ab(s) {\n\tif(typeof ArrayBuffer === 'undefined') return s2a(s);\n\tvar buf = new ArrayBuffer(s.length), view = new Uint8Array(buf);\n\tfor (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n\treturn buf;\n}\n\nfunction a2s(data) {\n\tif(Array.isArray(data)) return data.map(_chr).join(\"\");\n\tvar o = []; for(var i = 0; i < data.length; ++i) o[i] = _chr(data[i]); return o.join(\"\");\n}\n\nfunction a2u(data) {\n\tif(typeof Uint8Array === 'undefined') throw new Error(\"Unsupported\");\n\treturn new Uint8Array(data);\n}\n\nfunction ab2a(data) {\n\tif(typeof ArrayBuffer == 'undefined') throw new Error(\"Unsupported\");\n\tif(data instanceof ArrayBuffer) return ab2a(new Uint8Array(data));\nvar o = new Array(data.length);\n\tfor(var i = 0; i < data.length; ++i) o[i] = data[i];\n\treturn o;\n}\n\nvar bconcat = function(bufs) { return [].concat.apply([], bufs); };\n\nvar chr0 = /\\u0000/g, chr1 = /[\\u0001-\\u0006]/g;\n/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/*jshint -W041 */\nvar SSF = ({});\nvar make_ssf = function make_ssf(SSF){\nSSF.version = '0.10.2';\nfunction _strrev(x) { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\nfunction fill(c,l) { var o = \"\"; while(o.length < l) o+=c; return o; }\nfunction pad0(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad_(v,d){var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\nfunction rpad_(v,d){var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\nfunction pad0r1(v,d){var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad0r2(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nvar p2_32 = Math.pow(2,32);\nfunction pad0r(v,d){if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\nfunction isgeneral(s, i) { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\nvar days = [\n\t['Sun', 'Sunday'],\n\t['Mon', 'Monday'],\n\t['Tue', 'Tuesday'],\n\t['Wed', 'Wednesday'],\n\t['Thu', 'Thursday'],\n\t['Fri', 'Friday'],\n\t['Sat', 'Saturday']\n];\nvar months = [\n\t['J', 'Jan', 'January'],\n\t['F', 'Feb', 'February'],\n\t['M', 'Mar', 'March'],\n\t['A', 'Apr', 'April'],\n\t['M', 'May', 'May'],\n\t['J', 'Jun', 'June'],\n\t['J', 'Jul', 'July'],\n\t['A', 'Aug', 'August'],\n\t['S', 'Sep', 'September'],\n\t['O', 'Oct', 'October'],\n\t['N', 'Nov', 'November'],\n\t['D', 'Dec', 'December']\n];\nfunction init_table(t) {\n\tt[0]=  'General';\n\tt[1]=  '0';\n\tt[2]=  '0.00';\n\tt[3]=  '#,##0';\n\tt[4]=  '#,##0.00';\n\tt[9]=  '0%';\n\tt[10]= '0.00%';\n\tt[11]= '0.00E+00';\n\tt[12]= '# ?/?';\n\tt[13]= '# ??/??';\n\tt[14]= 'm/d/yy';\n\tt[15]= 'd-mmm-yy';\n\tt[16]= 'd-mmm';\n\tt[17]= 'mmm-yy';\n\tt[18]= 'h:mm AM/PM';\n\tt[19]= 'h:mm:ss AM/PM';\n\tt[20]= 'h:mm';\n\tt[21]= 'h:mm:ss';\n\tt[22]= 'm/d/yy h:mm';\n\tt[37]= '#,##0 ;(#,##0)';\n\tt[38]= '#,##0 ;[Red](#,##0)';\n\tt[39]= '#,##0.00;(#,##0.00)';\n\tt[40]= '#,##0.00;[Red](#,##0.00)';\n\tt[45]= 'mm:ss';\n\tt[46]= '[h]:mm:ss';\n\tt[47]= 'mmss.0';\n\tt[48]= '##0.0E+0';\n\tt[49]= '@';\n\tt[56]= '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n\tt[65535]= 'General';\n}\n\nvar table_fmt = {};\ninit_table(table_fmt);\nfunction frac(x, D, mixed) {\n\tvar sgn = x < 0 ? -1 : 1;\n\tvar B = x * sgn;\n\tvar P_2 = 0, P_1 = 1, P = 0;\n\tvar Q_2 = 1, Q_1 = 0, Q = 0;\n\tvar A = Math.floor(B);\n\twhile(Q_1 < D) {\n\t\tA = Math.floor(B);\n\t\tP = A * P_1 + P_2;\n\t\tQ = A * Q_1 + Q_2;\n\t\tif((B - A) < 0.00000005) break;\n\t\tB = 1 / (B - A);\n\t\tP_2 = P_1; P_1 = P;\n\t\tQ_2 = Q_1; Q_1 = Q;\n\t}\n\tif(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n\tif(!mixed) return [0, sgn * P, Q];\n\tvar q = Math.floor(sgn * P/Q);\n\treturn [q, sgn*P - q*Q, Q];\n}\nfunction parse_date_code(v,opts,b2) {\n\tif(v > 2958465 || v < 0) return null;\n\tvar date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\n\tvar dout=[];\n\tvar out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\n\tif(Math.abs(out.u) < 1e-6) out.u = 0;\n\tif(opts && opts.date1904) date += 1462;\n\tif(out.u > 0.9999) {\n\t\tout.u = 0;\n\t\tif(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\n\t}\n\tif(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\n\telse if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\n\telse {\n\t\tif(date > 60) --date;\n\t\t/* 1 = Jan 1 1900 in Gregorian */\n\t\tvar d = new Date(1900, 0, 1);\n\t\td.setDate(d.getDate() + date - 1);\n\t\tdout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\n\t\tdow = d.getDay();\n\t\tif(date < 60) dow = (dow + 6) % 7;\n\t\tif(b2) dow = fix_hijri(d, dout);\n\t}\n\tout.y = dout[0]; out.m = dout[1]; out.d = dout[2];\n\tout.S = time % 60; time = Math.floor(time / 60);\n\tout.M = time % 60; time = Math.floor(time / 60);\n\tout.H = time;\n\tout.q = dow;\n\treturn out;\n}\nSSF.parse_date_code = parse_date_code;\nvar basedate = new Date(1899, 11, 31, 0, 0, 0);\nvar dnthresh = basedate.getTime();\nvar base1904 = new Date(1900, 2, 1, 0, 0, 0);\nfunction datenum_local(v, date1904) {\n\tvar epoch = v.getTime();\n\tif(date1904) epoch -= 1461*24*60*60*1000;\n\telse if(v >= base1904) epoch += 24*60*60*1000;\n\treturn (epoch - (dnthresh + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n}\nfunction general_fmt_int(v) { return v.toString(10); }\nSSF._general_int = general_fmt_int;\nvar general_fmt_num = (function make_general_fmt_num() {\nvar gnr1 = /\\.(\\d*[1-9])0+$/, gnr2 = /\\.0*$/, gnr4 = /\\.(\\d*[1-9])0+/, gnr5 = /\\.0*[Ee]/, gnr6 = /(E[+-])(\\d)$/;\nfunction gfn2(v) {\n\tvar w = (v<0?12:11);\n\tvar o = gfn5(v.toFixed(12)); if(o.length <= w) return o;\n\to = v.toPrecision(10); if(o.length <= w) return o;\n\treturn v.toExponential(5);\n}\nfunction gfn3(v) {\n\tvar o = v.toFixed(11).replace(gnr1,\".$1\");\n\tif(o.length > (v<0?12:11)) o = v.toPrecision(6);\n\treturn o;\n}\nfunction gfn4(o) {\n\tfor(var i = 0; i != o.length; ++i) if((o.charCodeAt(i) | 0x20) === 101) return o.replace(gnr4,\".$1\").replace(gnr5,\"E\").replace(\"e\",\"E\").replace(gnr6,\"$10$2\");\n\treturn o;\n}\nfunction gfn5(o) {\n\treturn o.indexOf(\".\") > -1 ? o.replace(gnr2,\"\").replace(gnr1,\".$1\") : o;\n}\nreturn function general_fmt_num(v) {\n\tvar V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\n\tif(V >= -4 && V <= -1) o = v.toPrecision(10+V);\n\telse if(Math.abs(V) <= 9) o = gfn2(v);\n\telse if(V === 10) o = v.toFixed(10).substr(0,12);\n\telse o = gfn3(v);\n\treturn gfn5(gfn4(o));\n};})();\nSSF._general_num = general_fmt_num;\nfunction general_fmt(v, opts) {\n\tswitch(typeof v) {\n\t\tcase 'string': return v;\n\t\tcase 'boolean': return v ? \"TRUE\" : \"FALSE\";\n\t\tcase 'number': return (v|0) === v ? general_fmt_int(v) : general_fmt_num(v);\n\t\tcase 'undefined': return \"\";\n\t\tcase 'object':\n\t\t\tif(v == null) return \"\";\n\t\t\tif(v instanceof Date) return format(14, datenum_local(v, opts && opts.date1904), opts);\n\t}\n\tthrow new Error(\"unsupported value in General format: \" + v);\n}\nSSF._general = general_fmt;\nfunction fix_hijri() { return 0; }\n/*jshint -W086 */\nfunction write_date(type, fmt, val, ss0) {\n\tvar o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\n\tswitch(type) {\n\t\tcase 98: /* 'b' buddhist year */\n\t\t\ty = val.y + 543;\n\t\t\t/* falls through */\n\t\tcase 121: /* 'y' year */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = y % 100; outl = 2; break;\n\t\t\tdefault: out = y % 10000; outl = 4; break;\n\t\t} break;\n\t\tcase 109: /* 'm' month */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.m; outl = fmt.length; break;\n\t\t\tcase 3: return months[val.m-1][1];\n\t\t\tcase 5: return months[val.m-1][0];\n\t\t\tdefault: return months[val.m-1][2];\n\t\t} break;\n\t\tcase 100: /* 'd' day */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.d; outl = fmt.length; break;\n\t\t\tcase 3: return days[val.q][0];\n\t\t\tdefault: return days[val.q][1];\n\t\t} break;\n\t\tcase 104: /* 'h' 12-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 72: /* 'H' 24-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.H; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 77: /* 'M' minutes */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.M; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad minute format: ' + fmt;\n\t\t} break;\n\t\tcase 115: /* 's' seconds */\n\t\t\tif(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n\t\t\tif(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\nif(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n\t\t\telse tt = ss0 === 1 ? 10 : 1;\n\t\t\tss = Math.round((tt)*(val.S + val.u));\n\t\t\tif(ss >= 60*tt) ss = 0;\n\t\t\tif(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\n\t\t\to = pad0(ss,2 + ss0);\n\t\t\tif(fmt === 'ss') return o.substr(0,2);\n\t\t\treturn \".\" + o.substr(2,fmt.length-1);\n\t\tcase 90: /* 'Z' absolute time */\n\t\tswitch(fmt) {\n\t\t\tcase '[h]': case '[hh]': out = val.D*24+val.H; break;\n\t\t\tcase '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\n\t\t\tcase '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+Math.round(val.S+val.u); break;\n\t\t\tdefault: throw 'bad abstime format: ' + fmt;\n\t\t} outl = fmt.length === 3 ? 1 : 2; break;\n\t\tcase 101: /* 'e' era */\n\t\t\tout = y; outl = 1;\n\t}\n\tif(outl > 0) return pad0(out, outl); else return \"\";\n}\n/*jshint +W086 */\nfunction commaify(s) {\n\tvar w = 3;\n\tif(s.length <= w) return s;\n\tvar j = (s.length % w), o = s.substr(0,j);\n\tfor(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\n\treturn o;\n}\nvar write_num = (function make_write_num(){\nvar pct1 = /%/g;\nfunction write_num_pct(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_cm(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_exp(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(o.indexOf(\"e\") === -1) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\twhile(o.substr(0,2) === \"0.\") {\n\t\t\t\to = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\n\t\t\t\to = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\n\t\t\t}\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r, aval, sign) {\n\tvar den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\n\tvar myn = (rr - base*den), myd = den;\n\treturn sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\n}\nfunction write_num_f2(r, aval, sign) {\n\treturn sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\).*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str) {\n\tvar o = \"\", cc;\n\tfor(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\n\t\tcase 35: break;\n\t\tcase 63: o+= \" \"; break;\n\t\tcase 48: o+= \"0\"; break;\n\t\tdefault: o+= String.fromCharCode(cc);\n\t}\n\treturn o;\n}\nfunction rnd(val, d) { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\nfunction dec(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 0;\n\t}\n\treturn Math.round((val-Math.floor(val))*Math.pow(10,d));\n}\nfunction carry(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nfunction flr(val) { if(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0)); return \"\"+Math.floor(val); }\nfunction write_num_flt(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_flt('n', ffmt, val);\n\t\treturn '(' + write_num_flt('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = pad0r(val,0); if(o === \"0\") o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\to = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_flt(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = pad0r(val, 0);\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\tri = dec(val, r[1].length);\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\n\t\tcase \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\n\t\tcase \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\n\t\tdefault:\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_pct2(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_exp2(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(!o.match(/[Ee]/)) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nfunction write_num_int(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_int('n', ffmt, val);\n\t\treturn '(' + write_num_int('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = (\"\"+val); if(val === 0) o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\no = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\n\t\to = o.replace(/\\.(\\d*)$/,function($$, $1) {\nreturn \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_int(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = \"\" + val;\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\n\t\tdefault:\n\t\t\tif(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nreturn function write_num(type, fmt, val) {\n\treturn (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n};})();\nfunction split_fmt(fmt) {\n\tvar out = [];\n\tvar in_str = false/*, cc*/;\n\tfor(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\n\t\tcase 34: /* '\"' */\n\t\t\tin_str = !in_str; break;\n\t\tcase 95: case 42: case 92: /* '_' '*' '\\\\' */\n\t\t\t++i; break;\n\t\tcase 59: /* ';' */\n\t\t\tout[out.length] = fmt.substr(j,i-j);\n\t\t\tj = i+1;\n\t}\n\tout[out.length] = fmt.substr(j);\n\tif(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n\treturn out;\n}\nSSF._split = split_fmt;\nvar abstime = /\\[[HhMmSs]*\\]/;\nfunction fmt_is_date(fmt) {\n\tvar i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': if(isgeneral(fmt, i)) i+= 6; i++; break;\n\t\t\tcase '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) ++i; ++i; break;\n\t\t\tcase '\\\\': i+=2; break;\n\t\t\tcase '_': i+=2; break;\n\t\t\tcase '@': ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\n\t\t\tcase 'A': case 'a':\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n\t\t\t\t++i; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.match(abstime)) return true;\n\t\t\t\tbreak;\n\t\t\tcase '.':\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\twhile(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\n\t\t\t\tbreak;\n\t\t\tcase '?': while(fmt.charAt(++i) === c){/* empty */} break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\n\t\t\tcase '(': case ')': ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\twhile(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\n\t\t\tcase ' ': ++i; break;\n\t\t\tdefault: ++i; break;\n\t\t}\n\t}\n\treturn false;\n}\nSSF.is_date = fmt_is_date;\nfunction eval_fmt(fmt, v, opts, flen) {\n\tvar out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\n\tvar hr='H';\n\t/* Tokenize */\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': /* General */\n\t\t\t\tif(!isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\n\t\t\t\tout[out.length] = {t:'G', v:'General'}; i+=7; break;\n\t\t\tcase '\"': /* Literal text */\n\t\t\t\tfor(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n\t\t\t\tout[out.length] = {t:'t', v:o}; ++i; break;\n\t\t\tcase '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n\t\t\t\tout[out.length] = {t:t, v:w}; ++i; break;\n\t\t\tcase '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\n\t\t\tcase '@': /* Text Placeholder */\n\t\t\t\tout[out.length] = {t:'T', v:v}; ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\tc = c.toLowerCase();\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\n\t\t\t\tif(v < 0) return \"\";\n\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\to = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\n\t\t\t\tif(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n\t\t\t\tif(c === 'h') c = hr;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase 'A': case 'a':\n\t\t\t\tvar q={t:c, v:c};\n\t\t\t\tif(dt==null) dt=parse_date_code(v, opts);\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? \"P\" : \"A\"; q.t = 'T'; hr='h';i+=3;}\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse { q.t = \"t\"; ++i; }\n\t\t\t\tif(dt==null && q.t === 'T') return \"\";\n\t\t\t\tout[out.length] = q; lst = c; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n\t\t\t\tif(o.match(abstime)) {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'Z', v:o.toLowerCase()};\n\t\t\t\t\tlst = o.charAt(1);\n\t\t\t\t} else if(o.indexOf(\"$\") > -1) {\n\t\t\t\t\to = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\n\t\t\t\t\tif(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t/* Numbers */\n\t\t\tcase '.':\n\t\t\t\tif(dt != null) {\n\t\t\t\t\to = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\n\t\t\t\t\tout[out.length] = {t:'s', v:o}; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\to = c; while((++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && i < fmt.length - 2 && \"0#\".indexOf(fmt.charAt(i+2))>-1)) o += c;\n\t\t\t\tout[out.length] = {t:'n', v:o}; break;\n\t\t\tcase '?':\n\t\t\t\to = c; while(fmt.charAt(++i) === c) o+=c;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\n\t\t\tcase '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\to = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\n\t\t\t\tout[out.length] = {t:'D', v:o}; break;\n\t\t\tcase ' ': out[out.length] = {t:c, v:c}; ++i; break;\n\t\t\tdefault:\n\t\t\t\tif(\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n\t\t\t\tout[out.length] = {t:'t', v:c}; ++i; break;\n\t\t}\n\t}\n\tvar bt = 0, ss0 = 0, ssm;\n\tfor(i=out.length-1, lst='t'; i >= 0; --i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\n\t\t\tcase 's':\n\t\t\t\tif((ssm=out[i].v.match(/\\.0+$/))) ss0=Math.max(ss0,ssm[0].length-1);\n\t\t\t\tif(bt < 3) bt = 3;\n\t\t\t/* falls through */\n\t\t\tcase 'd': case 'y': case 'M': case 'e': lst=out[i].t; break;\n\t\t\tcase 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\n\t\t\tcase 'X': /*if(out[i].v === \"B2\");*/\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\tif(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n\t\t\t\tif(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n\t\t\t\tif(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n\t\t}\n\t}\n\tswitch(bt) {\n\t\tcase 0: break;\n\t\tcase 1:\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tbreak;\n\t\tcase 2:\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tbreak;\n\t}\n\t/* replace fields */\n\tvar nstr = \"\", jj;\n\tfor(i=0; i < out.length; ++i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 't': case 'T': case ' ': case 'D': break;\n\t\t\tcase 'X': out[i].v = \"\"; out[i].t = \";\"; break;\n\t\t\tcase 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\nout[i].v = write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n\t\t\t\tout[i].t = 't'; break;\n\t\t\tcase 'n': case '(': case '?':\n\t\t\t\tjj = i+1;\n\t\t\t\twhile(out[jj] != null && (\n\t\t\t\t\t(c=out[jj].t) === \"?\" || c === \"D\" ||\n\t\t\t\t\t((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\n\t\t\t\t\t(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n\t\t\t\t\t(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\n\t\t\t\t)) {\n\t\t\t\t\tout[i].v += out[jj].v;\n\t\t\t\t\tout[jj] = {v:\"\", t:\";\"}; ++jj;\n\t\t\t\t}\n\t\t\t\tnstr += out[i].v;\n\t\t\t\ti = jj-1; break;\n\t\t\tcase 'G': out[i].t = 't'; out[i].v = general_fmt(v,opts); break;\n\t\t}\n\t}\n\tvar vv = \"\", myv, ostr;\n\tif(nstr.length > 0) {\n\t\tif(nstr.charCodeAt(0) == 40) /* '(' */ {\n\t\t\tmyv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\n\t\t\tostr = write_num('(', nstr, myv);\n\t\t} else {\n\t\t\tmyv = (v<0 && flen > 1 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t\tif(myv < 0 && out[0] && out[0].t == 't') {\n\t\t\t\tostr = ostr.substr(1);\n\t\t\t\tout[0].v = \"-\" + out[0].v;\n\t\t\t}\n\t\t}\n\t\tjj=ostr.length-1;\n\t\tvar decpt = out.length;\n\t\tfor(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\n\t\tvar lasti=out.length;\n\t\tif(decpt === out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tfor(i=out.length-1; i>= 0;--i) {\n\t\t\t\tif(out[i] == null || 'n?('.indexOf(out[i].t) === -1) continue;\n\t\t\t\tif(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\n\t\t\t\telse if(jj < 0) out[i].v = \"\";\n\t\t\t\telse { out[i].v = ostr.substr(0, jj+1); jj = -1; }\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t}\n\t\telse if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tjj = ostr.indexOf(\".\")-1;\n\t\t\tfor(i=decpt; i>= 0; --i) {\n\t\t\t\tif(out[i] == null || 'n?('.indexOf(out[i].t) === -1) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\n\t\t\t\tvv = out[i].v.substr(j+1);\n\t\t\t\tfor(; j>=0; --j) {\n\t\t\t\t\tif(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t\tjj = ostr.indexOf(\".\")+1;\n\t\t\tfor(i=decpt; i<out.length; ++i) {\n\t\t\t\tif(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\n\t\t\t\tvv = out[i].v.substr(0,j);\n\t\t\t\tfor(; j<out[i].v.length; ++j) {\n\t\t\t\t\tif(jj<ostr.length) vv += ostr.charAt(jj++);\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<out.length; ++i) if(out[i] != null && 'n(?'.indexOf(out[i].t)>-1) {\n\t\tmyv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\n\t\tout[i].v = write_num(out[i].t, out[i].v, myv);\n\t\tout[i].t = 't';\n\t}\n\tvar retval = \"\";\n\tfor(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\n\treturn retval;\n}\nSSF._eval = eval_fmt;\nvar cfregex = /\\[[=<>]/;\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n\tif(rr == null) return false;\n\tvar thresh = parseFloat(rr[2]);\n\tswitch(rr[1]) {\n\t\tcase \"=\":  if(v == thresh) return true; break;\n\t\tcase \">\":  if(v >  thresh) return true; break;\n\t\tcase \"<\":  if(v <  thresh) return true; break;\n\t\tcase \"<>\": if(v != thresh) return true; break;\n\t\tcase \">=\": if(v >= thresh) return true; break;\n\t\tcase \"<=\": if(v <= thresh) return true; break;\n\t}\n\treturn false;\n}\nfunction choose_fmt(f, v) {\n\tvar fmt = split_fmt(f);\n\tvar l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\n\tif(l<4 && lat>-1) --l;\n\tif(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n\tif(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\n\tswitch(fmt.length) {\n\t\tcase 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\n\t\tcase 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\n\t\tcase 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\n\t\tcase 4: break;\n\t}\n\tvar ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n\tif(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n\tif(fmt[0].match(cfregex) != null || fmt[1].match(cfregex) != null) {\n\t\tvar m1 = fmt[0].match(cfregex2);\n\t\tvar m2 = fmt[1].match(cfregex2);\n\t\treturn chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n\t}\n\treturn [l, ff];\n}\nfunction format(fmt,v,o) {\n\tif(o == null) o = {};\n\tvar sfmt = \"\";\n\tswitch(typeof fmt) {\n\t\tcase \"string\":\n\t\t\tif(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = fmt;\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tif(fmt == 14 && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = (o.table != null ? (o.table) : table_fmt)[fmt];\n\t\t\tbreak;\n\t}\n\tif(isgeneral(sfmt,0)) return general_fmt(v, o);\n\tif(v instanceof Date) v = datenum_local(v, o.date1904);\n\tvar f = choose_fmt(sfmt, v);\n\tif(isgeneral(f[1])) return general_fmt(v, o);\n\tif(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\n\telse if(v === \"\" || v == null) return \"\";\n\treturn eval_fmt(f[1], v, o, f[0]);\n}\nfunction load_entry(fmt, idx) {\n\tif(typeof idx != 'number') {\n\t\tidx = +idx || -1;\nfor(var i = 0; i < 0x0188; ++i) {\nif(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\n\t\t\tif(table_fmt[i] == fmt) { idx = i; break; }\n\t\t}\nif(idx < 0) idx = 0x187;\n\t}\ntable_fmt[idx] = fmt;\n\treturn idx;\n}\nSSF.load = load_entry;\nSSF._table = table_fmt;\nSSF.get_table = function get_table() { return table_fmt; };\nSSF.load_table = function load_table(tbl) {\n\tfor(var i=0; i!=0x0188; ++i)\n\t\tif(tbl[i] !== undefined) load_entry(tbl[i], i);\n};\nSSF.init_table = init_table;\nSSF.format = format;\n};\nmake_ssf(SSF);\n/* map from xlml named formats to SSF TODO: localize */\nvar XLMLFormatMap/*{[string]:string}*/ = ({\n\t\"General Number\": \"General\",\n\t\"General Date\": SSF._table[22],\n\t\"Long Date\": \"dddd, mmmm dd, yyyy\",\n\t\"Medium Date\": SSF._table[15],\n\t\"Short Date\": SSF._table[14],\n\t\"Long Time\": SSF._table[19],\n\t\"Medium Time\": SSF._table[18],\n\t\"Short Time\": SSF._table[20],\n\t\"Currency\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\"Fixed\": SSF._table[2],\n\t\"Standard\": SSF._table[4],\n\t\"Percent\": SSF._table[10],\n\t\"Scientific\": SSF._table[11],\n\t\"Yes/No\": '\"Yes\";\"Yes\";\"No\";@',\n\t\"True/False\": '\"True\";\"True\";\"False\";@',\n\t\"On/Off\": '\"Yes\";\"Yes\";\"No\";@'\n});\n\nvar SSFImplicit/*{[number]:string}*/ = ({\n\t\"5\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t\"6\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t\"7\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t\"8\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\"23\": 'General', \"24\": 'General', \"25\": 'General', \"26\": 'General',\n\t\"27\": 'm/d/yy', \"28\": 'm/d/yy', \"29\": 'm/d/yy', \"30\": 'm/d/yy', \"31\": 'm/d/yy',\n\t\"32\": 'h:mm:ss', \"33\": 'h:mm:ss', \"34\": 'h:mm:ss', \"35\": 'h:mm:ss',\n\t\"36\": 'm/d/yy',\n\t\"41\": '_(* #,##0_);_(* \\(#,##0\\);_(* \"-\"_);_(@_)',\n\t\"42\": '_(\"$\"* #,##0_);_(\"$\"* \\(#,##0\\);_(\"$\"* \"-\"_);_(@_)',\n\t\"43\": '_(* #,##0.00_);_(* \\(#,##0.00\\);_(* \"-\"??_);_(@_)',\n\t\"44\": '_(\"$\"* #,##0.00_);_(\"$\"* \\(#,##0.00\\);_(\"$\"* \"-\"??_);_(@_)',\n\t\"50\": 'm/d/yy', \"51\": 'm/d/yy', \"52\": 'm/d/yy', \"53\": 'm/d/yy', \"54\": 'm/d/yy',\n\t\"55\": 'm/d/yy', \"56\": 'm/d/yy', \"57\": 'm/d/yy', \"58\": 'm/d/yy',\n\t\"59\": '0',\n\t\"60\": '0.00',\n\t\"61\": '#,##0',\n\t\"62\": '#,##0.00',\n\t\"63\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t\"64\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t\"65\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t\"66\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\"67\": '0%',\n\t\"68\": '0.00%',\n\t\"69\": '# ?/?',\n\t\"70\": '# ??/??',\n\t\"71\": 'm/d/yy',\n\t\"72\": 'm/d/yy',\n\t\"73\": 'd-mmm-yy',\n\t\"74\": 'd-mmm',\n\t\"75\": 'mmm-yy',\n\t\"76\": 'h:mm',\n\t\"77\": 'h:mm:ss',\n\t\"78\": 'm/d/yy h:mm',\n\t\"79\": 'mm:ss',\n\t\"80\": '[h]:mm:ss',\n\t\"81\": 'mmss.0'\n});\n\n/* dateNF parse TODO: move to SSF */\nvar dateNFregex = /[dD]+|[mM]+|[yYeE]+|[Hh]+|[Ss]+/g;\nfunction dateNF_regex(dateNF) {\n\tvar fmt = typeof dateNF == \"number\" ? SSF._table[dateNF] : dateNF;\n\tfmt = fmt.replace(dateNFregex, \"(\\\\d+)\");\n\treturn new RegExp(\"^\" + fmt + \"$\");\n}\nfunction dateNF_fix(str, dateNF, match) {\n\tvar Y = -1, m = -1, d = -1, H = -1, M = -1, S = -1;\n\t(dateNF.match(dateNFregex)||[]).forEach(function(n, i) {\n\t\tvar v = parseInt(match[i+1], 10);\n\t\tswitch(n.toLowerCase().charAt(0)) {\n\t\t\tcase 'y': Y = v; break; case 'd': d = v; break;\n\t\t\tcase 'h': H = v; break; case 's': S = v; break;\n\t\t\tcase 'm': if(H >= 0) M = v; else m = v; break;\n\t\t}\n\t});\n\tif(S >= 0 && M == -1 && m >= 0) { M = m; m = -1; }\n\tvar datestr = ((\"\" + (Y>=0?Y: new Date().getFullYear())).slice(-4) + \"-\" + (\"00\" + (m>=1?m:1)).slice(-2) + \"-\" + (\"00\" + (d>=1?d:1)).slice(-2));\n\tif(datestr.length == 7) datestr = \"0\" + datestr;\n\tif(datestr.length == 8) datestr = \"20\" + datestr;\n\tvar timestr = ((\"00\" + (H>=0?H:0)).slice(-2) + \":\" + (\"00\" + (M>=0?M:0)).slice(-2) + \":\" + (\"00\" + (S>=0?S:0)).slice(-2));\n\tif(H == -1 && M == -1 && S == -1) return datestr;\n\tif(Y == -1 && m == -1 && d == -1) return timestr;\n\treturn datestr + \"T\" + timestr;\n}\n\nvar DO_NOT_EXPORT_CFB = true;\n/* cfb.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint eqnull:true */\n/*exported CFB */\n/*global module, require:false, process:false, Buffer:false, Uint8Array:false, Uint16Array:false */\n\n/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tfactory(CRC32 = {});\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.0';\n/* see perf/crc32table.js */\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T = signed_crc_table();\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1, L = bstr.length - 1;\n\tfor(var i = 0; i < L;) {\n\t\tC = (C>>>8) ^ T[(C^bstr.charCodeAt(i++))&0xFF];\n\t\tC = (C>>>8) ^ T[(C^bstr.charCodeAt(i++))&0xFF];\n\t}\n\tif(i === L) C = (C>>>8) ^ T[(C ^ bstr.charCodeAt(i))&0xFF];\n\treturn C ^ -1;\n}\n\nfunction crc32_buf(buf, seed) {\n\tif(buf.length > 10000) return crc32_buf_8(buf, seed);\n\tvar C = seed ^ -1, L = buf.length - 3;\n\tfor(var i = 0; i < L;) {\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t}\n\twhile(i < L+3) C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\treturn C ^ -1;\n}\n\nfunction crc32_buf_8(buf, seed) {\n\tvar C = seed ^ -1, L = buf.length - 7;\n\tfor(var i = 0; i < L;) {\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t}\n\twhile(i < L+7) C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\treturn C ^ -1;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L=str.length, c, d; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T[(C ^ c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn C ^ -1;\n}\nCRC32.table = T;\nCRC32.bstr = crc32_bstr;\nCRC32.buf = crc32_buf;\nCRC32.str = crc32_str;\n}));\n/* [MS-CFB] v20171201 */\nvar CFB = (function _CFB(){\nvar exports = {};\nexports.version = '1.1.0';\n/* [MS-CFB] 2.6.4 */\nfunction namecmp(l, r) {\n\tvar L = l.split(\"/\"), R = r.split(\"/\");\n\tfor(var i = 0, c = 0, Z = Math.min(L.length, R.length); i < Z; ++i) {\n\t\tif((c = L[i].length - R[i].length)) return c;\n\t\tif(L[i] != R[i]) return L[i] < R[i] ? -1 : 1;\n\t}\n\treturn L.length - R.length;\n}\nfunction dirname(p) {\n\tif(p.charAt(p.length - 1) == \"/\") return (p.slice(0,-1).indexOf(\"/\") === -1) ? p : dirname(p.slice(0, -1));\n\tvar c = p.lastIndexOf(\"/\");\n\treturn (c === -1) ? p : p.slice(0, c+1);\n}\n\nfunction filename(p) {\n\tif(p.charAt(p.length - 1) == \"/\") return filename(p.slice(0, -1));\n\tvar c = p.lastIndexOf(\"/\");\n\treturn (c === -1) ? p : p.slice(c+1);\n}\n/* -------------------------------------------------------------------------- */\n/* DOS Date format:\n   high|YYYYYYYm.mmmddddd.HHHHHMMM.MMMSSSSS|low\n   add 1980 to stored year\n   stored second should be doubled\n*/\n\n/* write JS date to buf as a DOS date */\nfunction write_dos_date(buf, date) {\n\tif(typeof date === \"string\") date = new Date(date);\n\tvar hms = date.getHours();\n\thms = hms << 6 | date.getMinutes();\n\thms = hms << 5 | (date.getSeconds()>>>1);\n\tbuf.write_shift(2, hms);\n\tvar ymd = (date.getFullYear() - 1980);\n\tymd = ymd << 4 | (date.getMonth()+1);\n\tymd = ymd << 5 | date.getDate();\n\tbuf.write_shift(2, ymd);\n}\n\n/* read four bytes from buf and interpret as a DOS date */\nfunction parse_dos_date(buf) {\n\tvar hms = buf.read_shift(2) & 0xFFFF;\n\tvar ymd = buf.read_shift(2) & 0xFFFF;\n\tvar val = new Date();\n\tvar d = ymd & 0x1F; ymd >>>= 5;\n\tvar m = ymd & 0x0F; ymd >>>= 4;\n\tval.setMilliseconds(0);\n\tval.setFullYear(ymd + 1980);\n\tval.setMonth(m-1);\n\tval.setDate(d);\n\tvar S = hms & 0x1F; hms >>>= 5;\n\tvar M = hms & 0x3F; hms >>>= 6;\n\tval.setHours(hms);\n\tval.setMinutes(M);\n\tval.setSeconds(S<<1);\n\treturn val;\n}\nfunction parse_extra_field(blob) {\n\tprep_blob(blob, 0);\n\tvar o = {};\n\tvar flags = 0;\n\twhile(blob.l <= blob.length - 4) {\n\t\tvar type = blob.read_shift(2);\n\t\tvar sz = blob.read_shift(2), tgt = blob.l + sz;\n\t\tvar p = {};\n\t\tswitch(type) {\n\t\t\t/* UNIX-style Timestamps */\n\t\t\tcase 0x5455: {\n\t\t\t\tflags = blob.read_shift(1);\n\t\t\t\tif(flags & 1) p.mtime = blob.read_shift(4);\n\t\t\t\t/* for some reason, CD flag corresponds to LFH */\n\t\t\t\tif(sz > 5) {\n\t\t\t\t\tif(flags & 2) p.atime = blob.read_shift(4);\n\t\t\t\t\tif(flags & 4) p.ctime = blob.read_shift(4);\n\t\t\t\t}\n\t\t\t\tif(p.mtime) p.mt = new Date(p.mtime*1000);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tblob.l = tgt;\n\t\to[type] = p;\n\t}\n\treturn o;\n}\nvar fs;\nfunction get_fs() { return fs || (fs = require('fs')); }\nfunction parse(file, options) {\nif(file[0] == 0x50 && file[1] == 0x4b) return parse_zip(file, options);\nif(file.length < 512) throw new Error(\"CFB file size \" + file.length + \" < 512\");\nvar mver = 3;\nvar ssz = 512;\nvar nmfs = 0; // number of mini FAT sectors\nvar difat_sec_cnt = 0;\nvar dir_start = 0;\nvar minifat_start = 0;\nvar difat_start = 0;\n\nvar fat_addrs = []; // locations of FAT sectors\n\n/* [MS-CFB] 2.2 Compound File Header */\nvar blob = file.slice(0,512);\nprep_blob(blob, 0);\n\n/* major version */\nvar mv = check_get_mver(blob);\nmver = mv[0];\nswitch(mver) {\n\tcase 3: ssz = 512; break; case 4: ssz = 4096; break;\n\tcase 0: if(mv[1] == 0) return parse_zip(file, options);\n\t/* falls through */\n\tdefault: throw new Error(\"Major Version: Expected 3 or 4 saw \" + mver);\n}\n\n/* reprocess header */\nif(ssz !== 512) { blob = file.slice(0,ssz); prep_blob(blob, 28 /* blob.l */); }\n/* Save header for final object */\nvar header = file.slice(0,ssz);\n\ncheck_shifts(blob, mver);\n\n// Number of Directory Sectors\nvar dir_cnt = blob.read_shift(4, 'i');\nif(mver === 3 && dir_cnt !== 0) throw new Error('# Directory Sectors: Expected 0 saw ' + dir_cnt);\n\n// Number of FAT Sectors\nblob.l += 4;\n\n// First Directory Sector Location\ndir_start = blob.read_shift(4, 'i');\n\n// Transaction Signature\nblob.l += 4;\n\n// Mini Stream Cutoff Size\nblob.chk('00100000', 'Mini Stream Cutoff Size: ');\n\n// First Mini FAT Sector Location\nminifat_start = blob.read_shift(4, 'i');\n\n// Number of Mini FAT Sectors\nnmfs = blob.read_shift(4, 'i');\n\n// First DIFAT sector location\ndifat_start = blob.read_shift(4, 'i');\n\n// Number of DIFAT Sectors\ndifat_sec_cnt = blob.read_shift(4, 'i');\n\n// Grab FAT Sector Locations\nfor(var q = -1, j = 0; j < 109; ++j) { /* 109 = (512 - blob.l)>>>2; */\n\tq = blob.read_shift(4, 'i');\n\tif(q<0) break;\n\tfat_addrs[j] = q;\n}\n\n/** Break the file up into sectors */\nvar sectors = sectorify(file, ssz);\n\nsleuth_fat(difat_start, difat_sec_cnt, sectors, ssz, fat_addrs);\n\n/** Chains */\nvar sector_list = make_sector_list(sectors, dir_start, fat_addrs, ssz);\n\nsector_list[dir_start].name = \"!Directory\";\nif(nmfs > 0 && minifat_start !== ENDOFCHAIN) sector_list[minifat_start].name = \"!MiniFAT\";\nsector_list[fat_addrs[0]].name = \"!FAT\";\nsector_list.fat_addrs = fat_addrs;\nsector_list.ssz = ssz;\n\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\nvar files = {}, Paths = [], FileIndex = [], FullPaths = [];\nread_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, minifat_start);\n\nbuild_full_paths(FileIndex, FullPaths, Paths);\nPaths.shift();\n\nvar o = {\n\tFileIndex: FileIndex,\n\tFullPaths: FullPaths\n};\n\n// $FlowIgnore\nif(options && options.raw) o.raw = {header: header, sectors: sectors};\nreturn o;\n} // parse\n\n/* [MS-CFB] 2.2 Compound File Header -- read up to major version */\nfunction check_get_mver(blob) {\n\tif(blob[blob.l] == 0x50 && blob[blob.l + 1] == 0x4b) return [0, 0];\n\t// header signature 8\n\tblob.chk(HEADER_SIGNATURE, 'Header Signature: ');\n\n\t// clsid 16\n\tblob.chk(HEADER_CLSID, 'CLSID: ');\n\n\t// minor version 2\n\tvar mver = blob.read_shift(2, 'u');\n\n\treturn [blob.read_shift(2,'u'), mver];\n}\nfunction check_shifts(blob, mver) {\n\tvar shift = 0x09;\n\n\t// Byte Order\n\t//blob.chk('feff', 'Byte Order: '); // note: some writers put 0xffff\n\tblob.l += 2;\n\n\t// Sector Shift\n\tswitch((shift = blob.read_shift(2))) {\n\t\tcase 0x09: if(mver != 3) throw new Error('Sector Shift: Expected 9 saw ' + shift); break;\n\t\tcase 0x0c: if(mver != 4) throw new Error('Sector Shift: Expected 12 saw ' + shift); break;\n\t\tdefault: throw new Error('Sector Shift: Expected 9 or 12 saw ' + shift);\n\t}\n\n\t// Mini Sector Shift\n\tblob.chk('0600', 'Mini Sector Shift: ');\n\n\t// Reserved\n\tblob.chk('000000000000', 'Reserved: ');\n}\n\n/** Break the file up into sectors */\nfunction sectorify(file, ssz) {\n\tvar nsectors = Math.ceil(file.length/ssz)-1;\n\tvar sectors = [];\n\tfor(var i=1; i < nsectors; ++i) sectors[i-1] = file.slice(i*ssz,(i+1)*ssz);\n\tsectors[nsectors-1] = file.slice(nsectors*ssz);\n\treturn sectors;\n}\n\n/* [MS-CFB] 2.6.4 Red-Black Tree */\nfunction build_full_paths(FI, FP, Paths) {\n\tvar i = 0, L = 0, R = 0, C = 0, j = 0, pl = Paths.length;\n\tvar dad = [], q = [];\n\n\tfor(; i < pl; ++i) { dad[i]=q[i]=i; FP[i]=Paths[i]; }\n\n\tfor(; j < q.length; ++j) {\n\t\ti = q[j];\n\t\tL = FI[i].L; R = FI[i].R; C = FI[i].C;\n\t\tif(dad[i] === i) {\n\t\t\tif(L !== -1 /*NOSTREAM*/ && dad[L] !== L) dad[i] = dad[L];\n\t\t\tif(R !== -1 && dad[R] !== R) dad[i] = dad[R];\n\t\t}\n\t\tif(C !== -1 /*NOSTREAM*/) dad[C] = i;\n\t\tif(L !== -1) { dad[L] = dad[i]; if(q.lastIndexOf(L) < j) q.push(L); }\n\t\tif(R !== -1) { dad[R] = dad[i]; if(q.lastIndexOf(R) < j) q.push(R); }\n\t}\n\tfor(i=1; i < pl; ++i) if(dad[i] === i) {\n\t\tif(R !== -1 /*NOSTREAM*/ && dad[R] !== R) dad[i] = dad[R];\n\t\telse if(L !== -1 && dad[L] !== L) dad[i] = dad[L];\n\t}\n\n\tfor(i=1; i < pl; ++i) {\n\t\tif(FI[i].type === 0 /* unknown */) continue;\n\t\tj = dad[i];\n\t\tif(j === 0) FP[i] = FP[0] + \"/\" + FP[i];\n\t\telse while(j !== 0 && j !== dad[j]) {\n\t\t\tFP[i] = FP[j] + \"/\" + FP[i];\n\t\t\tj = dad[j];\n\t\t}\n\t\tdad[i] = 0;\n\t}\n\n\tFP[0] += \"/\";\n\tfor(i=1; i < pl; ++i) {\n\t\tif(FI[i].type !== 2 /* stream */) FP[i] += \"/\";\n\t}\n}\n\nfunction get_mfat_entry(entry, payload, mini) {\n\tvar start = entry.start, size = entry.size;\n\t//return (payload.slice(start*MSSZ, start*MSSZ + size));\n\tvar o = [];\n\tvar idx = start;\n\twhile(mini && size > 0 && idx >= 0) {\n\t\to.push(payload.slice(idx * MSSZ, idx * MSSZ + MSSZ));\n\t\tsize -= MSSZ;\n\t\tidx = __readInt32LE(mini, idx * 4);\n\t}\n\tif(o.length === 0) return (new_buf(0));\n\treturn (bconcat(o).slice(0, entry.size));\n}\n\n/** Chase down the rest of the DIFAT chain to build a comprehensive list\n    DIFAT chains by storing the next sector number as the last 32 bits */\nfunction sleuth_fat(idx, cnt, sectors, ssz, fat_addrs) {\n\tvar q = ENDOFCHAIN;\n\tif(idx === ENDOFCHAIN) {\n\t\tif(cnt !== 0) throw new Error(\"DIFAT chain shorter than expected\");\n\t} else if(idx !== -1 /*FREESECT*/) {\n\t\tvar sector = sectors[idx], m = (ssz>>>2)-1;\n\t\tif(!sector) return;\n\t\tfor(var i = 0; i < m; ++i) {\n\t\t\tif((q = __readInt32LE(sector,i*4)) === ENDOFCHAIN) break;\n\t\t\tfat_addrs.push(q);\n\t\t}\n\t\tsleuth_fat(__readInt32LE(sector,ssz-4),cnt - 1, sectors, ssz, fat_addrs);\n\t}\n}\n\n/** Follow the linked list of sectors for a given starting point */\nfunction get_sector_list(sectors, start, fat_addrs, ssz, chkd) {\n\tvar buf = [], buf_chain = [];\n\tif(!chkd) chkd = [];\n\tvar modulus = ssz - 1, j = 0, jj = 0;\n\tfor(j=start; j>=0;) {\n\t\tchkd[j] = true;\n\t\tbuf[buf.length] = j;\n\t\tbuf_chain.push(sectors[j]);\n\t\tvar addr = fat_addrs[Math.floor(j*4/ssz)];\n\t\tjj = ((j*4) & modulus);\n\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n\t\tif(!sectors[addr]) break;\n\t\tj = __readInt32LE(sectors[addr], jj);\n\t}\n\treturn {nodes: buf, data:__toBuffer([buf_chain])};\n}\n\n/** Chase down the sector linked lists */\nfunction make_sector_list(sectors, dir_start, fat_addrs, ssz) {\n\tvar sl = sectors.length, sector_list = ([]);\n\tvar chkd = [], buf = [], buf_chain = [];\n\tvar modulus = ssz - 1, i=0, j=0, k=0, jj=0;\n\tfor(i=0; i < sl; ++i) {\n\t\tbuf = ([]);\n\t\tk = (i + dir_start); if(k >= sl) k-=sl;\n\t\tif(chkd[k]) continue;\n\t\tbuf_chain = [];\n\t\tfor(j=k; j>=0;) {\n\t\t\tchkd[j] = true;\n\t\t\tbuf[buf.length] = j;\n\t\t\tbuf_chain.push(sectors[j]);\n\t\t\tvar addr = fat_addrs[Math.floor(j*4/ssz)];\n\t\t\tjj = ((j*4) & modulus);\n\t\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n\t\t\tif(!sectors[addr]) break;\n\t\t\tj = __readInt32LE(sectors[addr], jj);\n\t\t}\n\t\tsector_list[k] = ({nodes: buf, data:__toBuffer([buf_chain])});\n\t}\n\treturn sector_list;\n}\n\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\nfunction read_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, mini) {\n\tvar minifat_store = 0, pl = (Paths.length?2:0);\n\tvar sector = sector_list[dir_start].data;\n\tvar i = 0, namelen = 0, name;\n\tfor(; i < sector.length; i+= 128) {\n\t\tvar blob = sector.slice(i, i+128);\n\t\tprep_blob(blob, 64);\n\t\tnamelen = blob.read_shift(2);\n\t\tname = __utf16le(blob,0,namelen-pl);\n\t\tPaths.push(name);\n\t\tvar o = ({\n\t\t\tname:  name,\n\t\t\ttype:  blob.read_shift(1),\n\t\t\tcolor: blob.read_shift(1),\n\t\t\tL:     blob.read_shift(4, 'i'),\n\t\t\tR:     blob.read_shift(4, 'i'),\n\t\t\tC:     blob.read_shift(4, 'i'),\n\t\t\tclsid: blob.read_shift(16),\n\t\t\tstate: blob.read_shift(4, 'i'),\n\t\t\tstart: 0,\n\t\t\tsize: 0\n\t\t});\n\t\tvar ctime = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n\t\tif(ctime !== 0) o.ct = read_date(blob, blob.l-8);\n\t\tvar mtime = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n\t\tif(mtime !== 0) o.mt = read_date(blob, blob.l-8);\n\t\to.start = blob.read_shift(4, 'i');\n\t\to.size = blob.read_shift(4, 'i');\n\t\tif(o.size < 0 && o.start < 0) { o.size = o.type = 0; o.start = ENDOFCHAIN; o.name = \"\"; }\n\t\tif(o.type === 5) { /* root */\n\t\t\tminifat_store = o.start;\n\t\t\tif(nmfs > 0 && minifat_store !== ENDOFCHAIN) sector_list[minifat_store].name = \"!StreamData\";\n\t\t\t/*minifat_size = o.size;*/\n\t\t} else if(o.size >= 4096 /* MSCSZ */) {\n\t\t\to.storage = 'fat';\n\t\t\tif(sector_list[o.start] === undefined) sector_list[o.start] = get_sector_list(sectors, o.start, sector_list.fat_addrs, sector_list.ssz);\n\t\t\tsector_list[o.start].name = o.name;\n\t\t\to.content = (sector_list[o.start].data.slice(0,o.size));\n\t\t} else {\n\t\t\to.storage = 'minifat';\n\t\t\tif(o.size < 0) o.size = 0;\n\t\t\telse if(minifat_store !== ENDOFCHAIN && o.start !== ENDOFCHAIN && sector_list[minifat_store]) {\n\t\t\t\to.content = get_mfat_entry(o, sector_list[minifat_store].data, (sector_list[mini]||{}).data);\n\t\t\t}\n\t\t}\n\t\tif(o.content) prep_blob(o.content, 0);\n\t\tfiles[name] = o;\n\t\tFileIndex.push(o);\n\t}\n}\n\nfunction read_date(blob, offset) {\n\treturn new Date(( ( (__readUInt32LE(blob,offset+4)/1e7)*Math.pow(2,32)+__readUInt32LE(blob,offset)/1e7 ) - 11644473600)*1000);\n}\n\nfunction read_file(filename, options) {\n\tget_fs();\n\treturn parse(fs.readFileSync(filename), options);\n}\n\nfunction read(blob, options) {\n\tswitch(options && options.type || \"base64\") {\n\t\tcase \"file\": return read_file(blob, options);\n\t\tcase \"base64\": return parse(s2a(Base64.decode(blob)), options);\n\t\tcase \"binary\": return parse(s2a(blob), options);\n\t}\n\treturn parse(blob, options);\n}\n\nfunction init_cfb(cfb, opts) {\n\tvar o = opts || {}, root = o.root || \"Root Entry\";\n\tif(!cfb.FullPaths) cfb.FullPaths = [];\n\tif(!cfb.FileIndex) cfb.FileIndex = [];\n\tif(cfb.FullPaths.length !== cfb.FileIndex.length) throw new Error(\"inconsistent CFB structure\");\n\tif(cfb.FullPaths.length === 0) {\n\t\tcfb.FullPaths[0] = root + \"/\";\n\t\tcfb.FileIndex[0] = ({ name: root, type: 5 });\n\t}\n\tif(o.CLSID) cfb.FileIndex[0].clsid = o.CLSID;\n\tseed_cfb(cfb);\n}\nfunction seed_cfb(cfb) {\n\tvar nm = \"\\u0001Sh33tJ5\";\n\tif(CFB.find(cfb, \"/\" + nm)) return;\n\tvar p = new_buf(4); p[0] = 55; p[1] = p[3] = 50; p[2] = 54;\n\tcfb.FileIndex.push(({ name: nm, type: 2, content:p, size:4, L:69, R:69, C:69 }));\n\tcfb.FullPaths.push(cfb.FullPaths[0] + nm);\n\trebuild_cfb(cfb);\n}\nfunction rebuild_cfb(cfb, f) {\n\tinit_cfb(cfb);\n\tvar gc = false, s = false;\n\tfor(var i = cfb.FullPaths.length - 1; i >= 0; --i) {\n\t\tvar _file = cfb.FileIndex[i];\n\t\tswitch(_file.type) {\n\t\t\tcase 0:\n\t\t\t\tif(s) gc = true;\n\t\t\t\telse { cfb.FileIndex.pop(); cfb.FullPaths.pop(); }\n\t\t\t\tbreak;\n\t\t\tcase 1: case 2: case 5:\n\t\t\t\ts = true;\n\t\t\t\tif(isNaN(_file.R * _file.L * _file.C)) gc = true;\n\t\t\t\tif(_file.R > -1 && _file.L > -1 && _file.R == _file.L) gc = true;\n\t\t\t\tbreak;\n\t\t\tdefault: gc = true; break;\n\t\t}\n\t}\n\tif(!gc && !f) return;\n\n\tvar now = new Date(1987, 1, 19), j = 0;\n\tvar data = [];\n\tfor(i = 0; i < cfb.FullPaths.length; ++i) {\n\t\tif(cfb.FileIndex[i].type === 0) continue;\n\t\tdata.push([cfb.FullPaths[i], cfb.FileIndex[i]]);\n\t}\n\tfor(i = 0; i < data.length; ++i) {\n\t\tvar dad = dirname(data[i][0]);\n\t\ts = false;\n\t\tfor(j = 0; j < data.length; ++j) if(data[j][0] === dad) s = true;\n\t\tif(!s) data.push([dad, ({\n\t\t\tname: filename(dad).replace(\"/\",\"\"),\n\t\t\ttype: 1,\n\t\t\tclsid: HEADER_CLSID,\n\t\t\tct: now, mt: now,\n\t\t\tcontent: null\n\t\t})]);\n\t}\n\n\tdata.sort(function(x,y) { return namecmp(x[0], y[0]); });\n\tcfb.FullPaths = []; cfb.FileIndex = [];\n\tfor(i = 0; i < data.length; ++i) { cfb.FullPaths[i] = data[i][0]; cfb.FileIndex[i] = data[i][1]; }\n\tfor(i = 0; i < data.length; ++i) {\n\t\tvar elt = cfb.FileIndex[i];\n\t\tvar nm = cfb.FullPaths[i];\n\n\t\telt.name =  filename(nm).replace(\"/\",\"\");\n\t\telt.L = elt.R = elt.C = -(elt.color = 1);\n\t\telt.size = elt.content ? elt.content.length : 0;\n\t\telt.start = 0;\n\t\telt.clsid = (elt.clsid || HEADER_CLSID);\n\t\tif(i === 0) {\n\t\t\telt.C = data.length > 1 ? 1 : -1;\n\t\t\telt.size = 0;\n\t\t\telt.type = 5;\n\t\t} else if(nm.slice(-1) == \"/\") {\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==nm) break;\n\t\t\telt.C = j >= data.length ? -1 : j;\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==dirname(nm)) break;\n\t\t\telt.R = j >= data.length ? -1 : j;\n\t\t\telt.type = 1;\n\t\t} else {\n\t\t\tif(dirname(cfb.FullPaths[i+1]||\"\") == dirname(nm)) elt.R = i + 1;\n\t\t\telt.type = 2;\n\t\t}\n\t}\n\n}\n\nfunction _write(cfb, options) {\n\tvar _opts = options || {};\n\trebuild_cfb(cfb);\n\tif(_opts.fileType == 'zip') return write_zip(cfb, _opts);\n\tvar L = (function(cfb){\n\t\tvar mini_size = 0, fat_size = 0;\n\t\tfor(var i = 0; i < cfb.FileIndex.length; ++i) {\n\t\t\tvar file = cfb.FileIndex[i];\n\t\t\tif(!file.content) continue;\nvar flen = file.content.length;\n\t\t\tif(flen > 0){\n\t\t\t\tif(flen < 0x1000) mini_size += (flen + 0x3F) >> 6;\n\t\t\t\telse fat_size += (flen + 0x01FF) >> 9;\n\t\t\t}\n\t\t}\n\t\tvar dir_cnt = (cfb.FullPaths.length +3) >> 2;\n\t\tvar mini_cnt = (mini_size + 7) >> 3;\n\t\tvar mfat_cnt = (mini_size + 0x7F) >> 7;\n\t\tvar fat_base = mini_cnt + fat_size + dir_cnt + mfat_cnt;\n\t\tvar fat_cnt = (fat_base + 0x7F) >> 7;\n\t\tvar difat_cnt = fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n\t\twhile(((fat_base + fat_cnt + difat_cnt + 0x7F) >> 7) > fat_cnt) difat_cnt = ++fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n\t\tvar L =  [1, difat_cnt, fat_cnt, mfat_cnt, dir_cnt, fat_size, mini_size, 0];\n\t\tcfb.FileIndex[0].size = mini_size << 6;\n\t\tL[7] = (cfb.FileIndex[0].start=L[0]+L[1]+L[2]+L[3]+L[4]+L[5])+((L[6]+7) >> 3);\n\t\treturn L;\n\t})(cfb);\n\tvar o = new_buf(L[7] << 9);\n\tvar i = 0, T = 0;\n\t{\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(1, HEADER_SIG[i]);\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(2, 0);\n\t\to.write_shift(2, 0x003E);\n\t\to.write_shift(2, 0x0003);\n\t\to.write_shift(2, 0xFFFE);\n\t\to.write_shift(2, 0x0009);\n\t\to.write_shift(2, 0x0006);\n\t\tfor(i = 0; i < 3; ++i) o.write_shift(2, 0);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, L[2]);\n\t\to.write_shift(4, L[0] + L[1] + L[2] + L[3] - 1);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, 1<<12);\n\t\to.write_shift(4, L[3] ? L[0] + L[1] + L[2] - 1: ENDOFCHAIN);\n\t\to.write_shift(4, L[3]);\n\t\to.write_shift(-4, L[1] ? L[0] - 1: ENDOFCHAIN);\n\t\to.write_shift(4, L[1]);\n\t\tfor(i = 0; i < 109; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n\t}\n\tif(L[1]) {\n\t\tfor(T = 0; T < L[1]; ++T) {\n\t\t\tfor(; i < 236 + T * 127; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n\t\t\to.write_shift(-4, T === L[1] - 1 ? ENDOFCHAIN : T + 1);\n\t\t}\n\t}\n\tvar chainit = function(w) {\n\t\tfor(T += w; i<T-1; ++i) o.write_shift(-4, i+1);\n\t\tif(w) { ++i; o.write_shift(-4, ENDOFCHAIN); }\n\t};\n\tT = i = 0;\n\tfor(T+=L[1]; i<T; ++i) o.write_shift(-4, consts.DIFSECT);\n\tfor(T+=L[2]; i<T; ++i) o.write_shift(-4, consts.FATSECT);\n\tchainit(L[3]);\n\tchainit(L[4]);\n\tvar j = 0, flen = 0;\n\tvar file = cfb.FileIndex[0];\n\tfor(; j < cfb.FileIndex.length; ++j) {\n\t\tfile = cfb.FileIndex[j];\n\t\tif(!file.content) continue;\nflen = file.content.length;\n\t\tif(flen < 0x1000) continue;\n\t\tfile.start = T;\n\t\tchainit((flen + 0x01FF) >> 9);\n\t}\n\tchainit((L[6] + 7) >> 3);\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\tT = i = 0;\n\tfor(j = 0; j < cfb.FileIndex.length; ++j) {\n\t\tfile = cfb.FileIndex[j];\n\t\tif(!file.content) continue;\nflen = file.content.length;\n\t\tif(!flen || flen >= 0x1000) continue;\n\t\tfile.start = T;\n\t\tchainit((flen + 0x3F) >> 6);\n\t}\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\tfor(i = 0; i < L[4]<<2; ++i) {\n\t\tvar nm = cfb.FullPaths[i];\n\t\tif(!nm || nm.length === 0) {\n\t\t\tfor(j = 0; j < 17; ++j) o.write_shift(4, 0);\n\t\t\tfor(j = 0; j < 3; ++j) o.write_shift(4, -1);\n\t\t\tfor(j = 0; j < 12; ++j) o.write_shift(4, 0);\n\t\t\tcontinue;\n\t\t}\n\t\tfile = cfb.FileIndex[i];\n\t\tif(i === 0) file.start = file.size ? file.start - 1 : ENDOFCHAIN;\n\t\tvar _nm = (i === 0 && _opts.root) || file.name;\n\t\tflen = 2*(_nm.length+1);\n\t\to.write_shift(64, _nm, \"utf16le\");\n\t\to.write_shift(2, flen);\n\t\to.write_shift(1, file.type);\n\t\to.write_shift(1, file.color);\n\t\to.write_shift(-4, file.L);\n\t\to.write_shift(-4, file.R);\n\t\to.write_shift(-4, file.C);\n\t\tif(!file.clsid) for(j = 0; j < 4; ++j) o.write_shift(4, 0);\n\t\telse o.write_shift(16, file.clsid, \"hex\");\n\t\to.write_shift(4, file.state || 0);\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\n\t\to.write_shift(4, file.start);\n\t\to.write_shift(4, file.size); o.write_shift(4, 0);\n\t}\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\n\t\tfile = cfb.FileIndex[i];\nif(file.size >= 0x1000) {\n\t\t\to.l = (file.start+1) << 9;\n\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\t\t\tfor(; j & 0x1FF; ++j) o.write_shift(1, 0);\n\t\t}\n\t}\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\n\t\tfile = cfb.FileIndex[i];\nif(file.size > 0 && file.size < 0x1000) {\n\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\t\t\tfor(; j & 0x3F; ++j) o.write_shift(1, 0);\n\t\t}\n\t}\n\twhile(o.l < o.length) o.write_shift(1, 0);\n\treturn o;\n}\n/* [MS-CFB] 2.6.4 (Unicode 3.0.1 case conversion) */\nfunction find(cfb, path) {\n\tvar UCFullPaths = cfb.FullPaths.map(function(x) { return x.toUpperCase(); });\n\tvar UCPaths = UCFullPaths.map(function(x) { var y = x.split(\"/\"); return y[y.length - (x.slice(-1) == \"/\" ? 2 : 1)]; });\n\tvar k = false;\n\tif(path.charCodeAt(0) === 47 /* \"/\" */) { k = true; path = UCFullPaths[0].slice(0, -1) + path; }\n\telse k = path.indexOf(\"/\") !== -1;\n\tvar UCPath = path.toUpperCase();\n\tvar w = k === true ? UCFullPaths.indexOf(UCPath) : UCPaths.indexOf(UCPath);\n\tif(w !== -1) return cfb.FileIndex[w];\n\n\tvar m = !UCPath.match(chr1);\n\tUCPath = UCPath.replace(chr0,'');\n\tif(m) UCPath = UCPath.replace(chr1,'!');\n\tfor(w = 0; w < UCFullPaths.length; ++w) {\n\t\tif((m ? UCFullPaths[w].replace(chr1,'!') : UCFullPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n\t\tif((m ? UCPaths[w].replace(chr1,'!') : UCPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n\t}\n\treturn null;\n}\n/** CFB Constants */\nvar MSSZ = 64; /* Mini Sector Size = 1<<6 */\n//var MSCSZ = 4096; /* Mini Stream Cutoff Size */\n/* 2.1 Compound File Sector Numbers and Types */\nvar ENDOFCHAIN = -2;\n/* 2.2 Compound File Header */\nvar HEADER_SIGNATURE = 'd0cf11e0a1b11ae1';\nvar HEADER_SIG = [0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1];\nvar HEADER_CLSID = '00000000000000000000000000000000';\nvar consts = {\n\t/* 2.1 Compund File Sector Numbers and Types */\n\tMAXREGSECT: -6,\n\tDIFSECT: -4,\n\tFATSECT: -3,\n\tENDOFCHAIN: ENDOFCHAIN,\n\tFREESECT: -1,\n\t/* 2.2 Compound File Header */\n\tHEADER_SIGNATURE: HEADER_SIGNATURE,\n\tHEADER_MINOR_VERSION: '3e00',\n\tMAXREGSID: -6,\n\tNOSTREAM: -1,\n\tHEADER_CLSID: HEADER_CLSID,\n\t/* 2.6.1 Compound File Directory Entry */\n\tEntryTypes: ['unknown','storage','stream','lockbytes','property','root']\n};\n\nfunction write_file(cfb, filename, options) {\n\tget_fs();\n\tvar o = _write(cfb, options);\nfs.writeFileSync(filename, o);\n}\n\nfunction a2s(o) {\n\tvar out = new Array(o.length);\n\tfor(var i = 0; i < o.length; ++i) out[i] = String.fromCharCode(o[i]);\n\treturn out.join(\"\");\n}\n\nfunction write(cfb, options) {\n\tvar o = _write(cfb, options);\n\tswitch(options && options.type) {\n\t\tcase \"file\": get_fs(); fs.writeFileSync(options.filename, (o)); return o;\n\t\tcase \"binary\": return a2s(o);\n\t\tcase \"base64\": return Base64.encode(a2s(o));\n\t}\n\treturn o;\n}\n/* node < 8.1 zlib does not expose bytesRead, so default to pure JS */\nvar _zlib;\nfunction use_zlib(zlib) { try {\n\tvar InflateRaw = zlib.InflateRaw;\n\tvar InflRaw = new InflateRaw();\n\tInflRaw._processChunk(new Uint8Array([3, 0]), InflRaw._finishFlushFlag);\n\tif(InflRaw.bytesRead) _zlib = zlib;\n\telse throw new Error(\"zlib does not expose bytesRead\");\n} catch(e) {console.error(\"cannot use native zlib: \" + (e.message || e)); } }\n\nfunction _inflateRawSync(payload, usz) {\n\tif(!_zlib) return _inflate(payload, usz);\n\tvar InflateRaw = _zlib.InflateRaw;\n\tvar InflRaw = new InflateRaw();\n\tvar out = InflRaw._processChunk(payload.slice(payload.l), InflRaw._finishFlushFlag);\n\tpayload.l += InflRaw.bytesRead;\n\treturn out;\n}\n\nfunction _deflateRawSync(payload) {\n\treturn _zlib ? _zlib.deflateRawSync(payload) : _deflate(payload);\n}\nvar CLEN_ORDER = [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n/*  LEN_ID = [ 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285 ]; */\nvar LEN_LN = [   3,   4,   5,   6,   7,   8,   9,  10,  11,  13 , 15,  17,  19,  23,  27,  31,  35,  43,  51,  59,  67,  83,  99, 115, 131, 163, 195, 227, 258 ];\n\n/*  DST_ID = [  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13,  14,  15,  16,  17,  18,  19,   20,   21,   22,   23,   24,   25,   26,    27,    28,    29 ]; */\nvar DST_LN = [  1,  2,  3,  4,  5,  7,  9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577 ];\n\nfunction bit_swap_8(n) { var t = (((((n<<1)|(n<<11)) & 0x22110) | (((n<<5)|(n<<15)) & 0x88440))); return ((t>>16) | (t>>8) |t)&0xFF; }\n\nvar use_typed_arrays = typeof Uint8Array !== 'undefined';\n\nvar bitswap8 = use_typed_arrays ? new Uint8Array(1<<8) : [];\nfor(var q = 0; q < (1<<8); ++q) bitswap8[q] = bit_swap_8(q);\n\nfunction bit_swap_n(n, b) {\n\tvar rev = bitswap8[n & 0xFF];\n\tif(b <= 8) return rev >>> (8-b);\n\trev = (rev << 8) | bitswap8[(n>>8)&0xFF];\n\tif(b <= 16) return rev >>> (16-b);\n\trev = (rev << 8) | bitswap8[(n>>16)&0xFF];\n\treturn rev >>> (24-b);\n}\n\n/* helpers for unaligned bit reads */\nfunction read_bits_2(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 6 ? 0 : buf[h+1]<<8))>>>w)& 0x03; }\nfunction read_bits_3(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 5 ? 0 : buf[h+1]<<8))>>>w)& 0x07; }\nfunction read_bits_4(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 4 ? 0 : buf[h+1]<<8))>>>w)& 0x0F; }\nfunction read_bits_5(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 3 ? 0 : buf[h+1]<<8))>>>w)& 0x1F; }\nfunction read_bits_7(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 1 ? 0 : buf[h+1]<<8))>>>w)& 0x7F; }\n\n/* works up to n = 3 * 8 + 1 = 25 */\nfunction read_bits_n(buf, bl, n) {\n\tvar w = (bl&7), h = (bl>>>3), f = ((1<<n)-1);\n\tvar v = buf[h] >>> w;\n\tif(n < 8 - w) return v & f;\n\tv |= buf[h+1]<<(8-w);\n\tif(n < 16 - w) return v & f;\n\tv |= buf[h+2]<<(16-w);\n\tif(n < 24 - w) return v & f;\n\tv |= buf[h+3]<<(24-w);\n\treturn v & f;\n}\n\n/* until ArrayBuffer#realloc is a thing, fake a realloc */\nfunction realloc(b, sz) {\n\tvar L = b.length, M = 2*L > sz ? 2*L : sz + 5, i = 0;\n\tif(L >= sz) return b;\n\tif(has_buf) {\n\t\tvar o = new_unsafe_buf(M);\n\t\t// $FlowIgnore\n\t\tif(b.copy) b.copy(o);\n\t\telse for(; i < b.length; ++i) o[i] = b[i];\n\t\treturn o;\n\t} else if(use_typed_arrays) {\n\t\tvar a = new Uint8Array(M);\n\t\tif(a.set) a.set(b);\n\t\telse for(; i < b.length; ++i) a[i] = b[i];\n\t\treturn a;\n\t}\n\tb.length = M;\n\treturn b;\n}\n\n/* zero-filled arrays for older browsers */\nfunction zero_fill_array(n) {\n\tvar o = new Array(n);\n\tfor(var i = 0; i < n; ++i) o[i] = 0;\n\treturn o;\n}var _deflate = (function() {\nvar _deflateRaw = (function() {\n\treturn function deflateRaw(data, out) {\n\t\tvar boff = 0;\n\t\twhile(boff < data.length) {\n\t\t\tvar L = Math.min(0xFFFF, data.length - boff);\n\t\t\tvar h = boff + L == data.length;\n\t\t\t/* TODO: this is only type 0 stored */\n\t\t\tout.write_shift(1, +h);\n\t\t\tout.write_shift(2, L);\n\t\t\tout.write_shift(2, (~L) & 0xFFFF);\n\t\t\twhile(L-- > 0) out[out.l++] = data[boff++];\n\t\t}\n\t\treturn out.l;\n\t};\n})();\n\nreturn function(data) {\n\tvar buf = new_buf(50+Math.floor(data.length*1.1));\n\tvar off = _deflateRaw(data, buf);\n\treturn buf.slice(0, off);\n};\n})();\n/* modified inflate function also moves original read head */\n\n/* build tree (used for literals and lengths) */\nfunction build_tree(clens, cmap, MAX) {\n\tvar maxlen = 1, w = 0, i = 0, j = 0, ccode = 0, L = clens.length;\n\n\tvar bl_count  = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);\n\tfor(i = 0; i < 32; ++i) bl_count[i] = 0;\n\n\tfor(i = L; i < MAX; ++i) clens[i] = 0;\n\tL = clens.length;\n\n\tvar ctree = use_typed_arrays ? new Uint16Array(L) : zero_fill_array(L); // []\n\n\t/* build code tree */\n\tfor(i = 0; i < L; ++i) {\n\t\tbl_count[(w = clens[i])]++;\n\t\tif(maxlen < w) maxlen = w;\n\t\tctree[i] = 0;\n\t}\n\tbl_count[0] = 0;\n\tfor(i = 1; i <= maxlen; ++i) bl_count[i+16] = (ccode = (ccode + bl_count[i-1])<<1);\n\tfor(i = 0; i < L; ++i) {\n\t\tccode = clens[i];\n\t\tif(ccode != 0) ctree[i] = bl_count[ccode+16]++;\n\t}\n\n\t/* cmap[maxlen + 4 bits] = (off&15) + (lit<<4) reverse mapping */\n\tvar cleni = 0;\n\tfor(i = 0; i < L; ++i) {\n\t\tcleni = clens[i];\n\t\tif(cleni != 0) {\n\t\t\tccode = bit_swap_n(ctree[i], maxlen)>>(maxlen-cleni);\n\t\t\tfor(j = (1<<(maxlen + 4 - cleni)) - 1; j>=0; --j)\n\t\t\t\tcmap[ccode|(j<<cleni)] = (cleni&15) | (i<<4);\n\t\t}\n\t}\n\treturn maxlen;\n}\n\nvar fix_lmap = use_typed_arrays ? new Uint16Array(512) : zero_fill_array(512);\nvar fix_dmap = use_typed_arrays ? new Uint16Array(32)  : zero_fill_array(32);\nif(!use_typed_arrays) {\n\tfor(var i = 0; i < 512; ++i) fix_lmap[i] = 0;\n\tfor(i = 0; i < 32; ++i) fix_dmap[i] = 0;\n}\n(function() {\n\tvar dlens = [];\n\tvar i = 0;\n\tfor(;i<32; i++) dlens.push(5);\n\tbuild_tree(dlens, fix_dmap, 32);\n\n\tvar clens = [];\n\ti = 0;\n\tfor(; i<=143; i++) clens.push(8);\n\tfor(; i<=255; i++) clens.push(9);\n\tfor(; i<=279; i++) clens.push(7);\n\tfor(; i<=287; i++) clens.push(8);\n\tbuild_tree(clens, fix_lmap, 288);\n})();\n\nvar dyn_lmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\nvar dyn_dmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\nvar dyn_cmap = use_typed_arrays ? new Uint16Array(128)   : zero_fill_array(128);\nvar dyn_len_1 = 1, dyn_len_2 = 1;\n\n/* 5.5.3 Expanding Huffman Codes */\nfunction dyn(data, boff) {\n\t/* nomenclature from RFC1951 refers to bit values; these are offset by the implicit constant */\n\tvar _HLIT = read_bits_5(data, boff) + 257; boff += 5;\n\tvar _HDIST = read_bits_5(data, boff) + 1; boff += 5;\n\tvar _HCLEN = read_bits_4(data, boff) + 4; boff += 4;\n\tvar w = 0;\n\n\t/* grab and store code lengths */\n\tvar clens = use_typed_arrays ? new Uint8Array(19) : zero_fill_array(19);\n\tvar ctree = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\n\tvar maxlen = 1;\n\tvar bl_count =  use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n\tvar next_code = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n\tvar L = clens.length; /* 19 */\n\tfor(var i = 0; i < _HCLEN; ++i) {\n\t\tclens[CLEN_ORDER[i]] = w = read_bits_3(data, boff);\n\t\tif(maxlen < w) maxlen = w;\n\t\tbl_count[w]++;\n\t\tboff += 3;\n\t}\n\n\t/* build code tree */\n\tvar ccode = 0;\n\tbl_count[0] = 0;\n\tfor(i = 1; i <= maxlen; ++i) next_code[i] = ccode = (ccode + bl_count[i-1])<<1;\n\tfor(i = 0; i < L; ++i) if((ccode = clens[i]) != 0) ctree[i] = next_code[ccode]++;\n\t/* cmap[7 bits from stream] = (off&7) + (lit<<3) */\n\tvar cleni = 0;\n\tfor(i = 0; i < L; ++i) {\n\t\tcleni = clens[i];\n\t\tif(cleni != 0) {\n\t\t\tccode = bitswap8[ctree[i]]>>(8-cleni);\n\t\t\tfor(var j = (1<<(7-cleni))-1; j>=0; --j) dyn_cmap[ccode|(j<<cleni)] = (cleni&7) | (i<<3);\n\t\t}\n\t}\n\n\t/* read literal and dist codes at once */\n\tvar hcodes = [];\n\tmaxlen = 1;\n\tfor(; hcodes.length < _HLIT + _HDIST;) {\n\t\tccode = dyn_cmap[read_bits_7(data, boff)];\n\t\tboff += ccode & 7;\n\t\tswitch((ccode >>>= 3)) {\n\t\t\tcase 16:\n\t\t\t\tw = 3 + read_bits_2(data, boff); boff += 2;\n\t\t\t\tccode = hcodes[hcodes.length - 1];\n\t\t\t\twhile(w-- > 0) hcodes.push(ccode);\n\t\t\t\tbreak;\n\t\t\tcase 17:\n\t\t\t\tw = 3 + read_bits_3(data, boff); boff += 3;\n\t\t\t\twhile(w-- > 0) hcodes.push(0);\n\t\t\t\tbreak;\n\t\t\tcase 18:\n\t\t\t\tw = 11 + read_bits_7(data, boff); boff += 7;\n\t\t\t\twhile(w -- > 0) hcodes.push(0);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\thcodes.push(ccode);\n\t\t\t\tif(maxlen < ccode) maxlen = ccode;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/* build literal / length trees */\n\tvar h1 = hcodes.slice(0, _HLIT), h2 = hcodes.slice(_HLIT);\n\tfor(i = _HLIT; i < 286; ++i) h1[i] = 0;\n\tfor(i = _HDIST; i < 30; ++i) h2[i] = 0;\n\tdyn_len_1 = build_tree(h1, dyn_lmap, 286);\n\tdyn_len_2 = build_tree(h2, dyn_dmap, 30);\n\treturn boff;\n}\n\n/* return [ data, bytesRead ] */\nfunction inflate(data, usz) {\n\t/* shortcircuit for empty buffer [0x03, 0x00] */\n\tif(data[0] == 3 && !(data[1] & 0x3)) { return [new_raw_buf(usz), 2]; }\n\n\t/* bit offset */\n\tvar boff = 0;\n\n\t/* header includes final bit and type bits */\n\tvar header = 0;\n\n\tvar outbuf = new_unsafe_buf(usz ? usz : (1<<18));\n\tvar woff = 0;\n\tvar OL = outbuf.length>>>0;\n\tvar max_len_1 = 0, max_len_2 = 0;\n\n\twhile((header&1) == 0) {\n\t\theader = read_bits_3(data, boff); boff += 3;\n\t\tif((header >>> 1) == 0) {\n\t\t\t/* Stored block */\n\t\t\tif(boff & 7) boff += 8 - (boff&7);\n\t\t\t/* 2 bytes sz, 2 bytes bit inverse */\n\t\t\tvar sz = data[boff>>>3] | data[(boff>>>3)+1]<<8;\n\t\t\tboff += 32;\n\t\t\t/* push sz bytes */\n\t\t\tif(!usz && OL < woff + sz) { outbuf = realloc(outbuf, woff + sz); OL = outbuf.length; }\n\t\t\tif(typeof data.copy === 'function') {\n\t\t\t\t// $FlowIgnore\n\t\t\t\tdata.copy(outbuf, woff, boff>>>3, (boff>>>3)+sz);\n\t\t\t\twoff += sz; boff += 8*sz;\n\t\t\t} else while(sz-- > 0) { outbuf[woff++] = data[boff>>>3]; boff += 8; }\n\t\t\tcontinue;\n\t\t} else if((header >>> 1) == 1) {\n\t\t\t/* Fixed Huffman */\n\t\t\tmax_len_1 = 9; max_len_2 = 5;\n\t\t} else {\n\t\t\t/* Dynamic Huffman */\n\t\t\tboff = dyn(data, boff);\n\t\t\tmax_len_1 = dyn_len_1; max_len_2 = dyn_len_2;\n\t\t}\n\t\tif(!usz && (OL < woff + 32767)) { outbuf = realloc(outbuf, woff + 32767); OL = outbuf.length; }\n\t\tfor(;;) { // while(true) is apparently out of vogue in modern JS circles\n\t\t\t/* ingest code and move read head */\n\t\t\tvar bits = read_bits_n(data, boff, max_len_1);\n\t\t\tvar code = (header>>>1) == 1 ? fix_lmap[bits] : dyn_lmap[bits];\n\t\t\tboff += code & 15; code >>>= 4;\n\t\t\t/* 0-255 are literals, 256 is end of block token, 257+ are copy tokens */\n\t\t\tif(((code>>>8)&0xFF) === 0) outbuf[woff++] = code;\n\t\t\telse if(code == 256) break;\n\t\t\telse {\n\t\t\t\tcode -= 257;\n\t\t\t\tvar len_eb = (code < 8) ? 0 : ((code-4)>>2); if(len_eb > 5) len_eb = 0;\n\t\t\t\tvar tgt = woff + LEN_LN[code];\n\t\t\t\t/* length extra bits */\n\t\t\t\tif(len_eb > 0) {\n\t\t\t\t\ttgt += read_bits_n(data, boff, len_eb);\n\t\t\t\t\tboff += len_eb;\n\t\t\t\t}\n\n\t\t\t\t/* dist code */\n\t\t\t\tbits = read_bits_n(data, boff, max_len_2);\n\t\t\t\tcode = (header>>>1) == 1 ? fix_dmap[bits] : dyn_dmap[bits];\n\t\t\t\tboff += code & 15; code >>>= 4;\n\t\t\t\tvar dst_eb = (code < 4 ? 0 : (code-2)>>1);\n\t\t\t\tvar dst = DST_LN[code];\n\t\t\t\t/* dist extra bits */\n\t\t\t\tif(dst_eb > 0) {\n\t\t\t\t\tdst += read_bits_n(data, boff, dst_eb);\n\t\t\t\t\tboff += dst_eb;\n\t\t\t\t}\n\n\t\t\t\t/* in the common case, manual byte copy is faster than TA set / Buffer copy */\n\t\t\t\tif(!usz && OL < tgt) { outbuf = realloc(outbuf, tgt); OL = outbuf.length; }\n\t\t\t\twhile(woff < tgt) { outbuf[woff] = outbuf[woff - dst]; ++woff; }\n\t\t\t}\n\t\t}\n\t}\n\treturn [usz ? outbuf : outbuf.slice(0, woff), (boff+7)>>>3];\n}\n\nfunction _inflate(payload, usz) {\n\tvar data = payload.slice(payload.l||0);\n\tvar out = inflate(data, usz);\n\tpayload.l += out[1];\n\treturn out[0];\n}\n\nfunction warn_or_throw(wrn, msg) {\n\tif(wrn) { if(typeof console !== 'undefined') console.error(msg); }\n\telse throw new Error(msg);\n}\n\nfunction parse_zip(file, options) {\n\tvar blob = file;\n\tprep_blob(blob, 0);\n\n\tvar FileIndex = [], FullPaths = [];\n\tvar o = {\n\t\tFileIndex: FileIndex,\n\t\tFullPaths: FullPaths\n\t};\n\tinit_cfb(o, { root: options.root });\n\n\t/* find end of central directory, start just after signature */\n\tvar i = blob.length - 4;\n\twhile((blob[i] != 0x50 || blob[i+1] != 0x4b || blob[i+2] != 0x05 || blob[i+3] != 0x06) && i >= 0) --i;\n\tblob.l = i + 4;\n\n\t/* parse end of central directory */\n\tblob.l += 4;\n\tvar fcnt = blob.read_shift(2);\n\tblob.l += 6;\n\tvar start_cd = blob.read_shift(4);\n\n\t/* parse central directory */\n\tblob.l = start_cd;\n\n\tfor(i = 0; i < fcnt; ++i) {\n\t\t/* trust local file header instead of CD entry */\n\t\tblob.l += 20;\n\t\tvar csz = blob.read_shift(4);\n\t\tvar usz = blob.read_shift(4);\n\t\tvar namelen = blob.read_shift(2);\n\t\tvar efsz = blob.read_shift(2);\n\t\tvar fcsz = blob.read_shift(2);\n\t\tblob.l += 8;\n\t\tvar offset = blob.read_shift(4);\n\t\tvar EF = parse_extra_field(blob.slice(blob.l+namelen, blob.l+namelen+efsz));\n\t\tblob.l += namelen + efsz + fcsz;\n\n\t\tvar L = blob.l;\n\t\tblob.l = offset + 4;\n\t\tparse_local_file(blob, csz, usz, o, EF);\n\t\tblob.l = L;\n\t}\n\n\treturn o;\n}\n\n\n/* head starts just after local file header signature */\nfunction parse_local_file(blob, csz, usz, o, EF) {\n\t/* [local file header] */\n\tblob.l += 2;\n\tvar flags = blob.read_shift(2);\n\tvar meth = blob.read_shift(2);\n\tvar date = parse_dos_date(blob);\n\n\tif(flags & 0x2041) throw new Error(\"Unsupported ZIP encryption\");\n\tvar crc32 = blob.read_shift(4);\n\tvar _csz = blob.read_shift(4);\n\tvar _usz = blob.read_shift(4);\n\n\tvar namelen = blob.read_shift(2);\n\tvar efsz = blob.read_shift(2);\n\n\t// TODO: flags & (1<<11) // UTF8\n\tvar name = \"\"; for(var i = 0; i < namelen; ++i) name += String.fromCharCode(blob[blob.l++]);\n\tif(efsz) {\n\t\tvar ef = parse_extra_field(blob.slice(blob.l, blob.l + efsz));\n\t\tif((ef[0x5455]||{}).mt) date = ef[0x5455].mt;\n\t\tif(((EF||{})[0x5455]||{}).mt) date = EF[0x5455].mt;\n\t}\n\tblob.l += efsz;\n\n\t/* [encryption header] */\n\n\t/* [file data] */\n\tvar data = blob.slice(blob.l, blob.l + _csz);\n\tswitch(meth) {\n\t\tcase 8: data = _inflateRawSync(blob, _usz); break;\n\t\tcase 0: break;\n\t\tdefault: throw new Error(\"Unsupported ZIP Compression method \" + meth);\n\t}\n\n\t/* [data descriptor] */\n\tvar wrn = false;\n\tif(flags & 8) {\n\t\tcrc32 = blob.read_shift(4);\n\t\tif(crc32 == 0x08074b50) { crc32 = blob.read_shift(4); wrn = true; }\n\t\t_csz = blob.read_shift(4);\n\t\t_usz = blob.read_shift(4);\n\t}\n\n\tif(_csz != csz) warn_or_throw(wrn, \"Bad compressed size: \" + csz + \" != \" + _csz);\n\tif(_usz != usz) warn_or_throw(wrn, \"Bad uncompressed size: \" + usz + \" != \" + _usz);\n\tvar _crc32 = CRC32.buf(data, 0);\n\tif(crc32 != _crc32) warn_or_throw(wrn, \"Bad CRC32 checksum: \" + crc32 + \" != \" + _crc32);\n\tcfb_add(o, name, data, {unsafe: true, mt: date});\n}\nfunction write_zip(cfb, options) {\n\tvar _opts = options || {};\n\tvar out = [], cdirs = [];\n\tvar o = new_buf(1);\n\tvar method = (_opts.compression ? 8 : 0), flags = 0;\n\tvar desc = false;\n\tif(desc) flags |= 8;\n\tvar i = 0, j = 0;\n\n\tvar start_cd = 0, fcnt = 0;\n\tvar root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];\n\tvar crcs = [];\n\tvar sz_cd = 0;\n\n\tfor(i = 1; i < cfb.FullPaths.length; ++i) {\n\t\tfp = cfb.FullPaths[i].slice(root.length); fi = cfb.FileIndex[i];\n\t\tif(!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\t\tvar start = start_cd;\n\n\t\t/* TODO: CP437 filename */\n\t\tvar namebuf = new_buf(fp.length);\n\t\tfor(j = 0; j < fp.length; ++j) namebuf.write_shift(1, fp.charCodeAt(j) & 0x7F);\n\t\tnamebuf = namebuf.slice(0, namebuf.l);\n\t\tcrcs[fcnt] = CRC32.buf(fi.content, 0);\n\n\t\tvar outbuf = fi.content;\n\t\tif(method == 8) outbuf = _deflateRawSync(outbuf);\n\n\t\t/* local file header */\n\t\to = new_buf(30);\n\t\to.write_shift(4, 0x04034b50);\n\t\to.write_shift(2, 20);\n\t\to.write_shift(2, flags);\n\t\to.write_shift(2, method);\n\t\t/* TODO: last mod file time/date */\n\t\tif(fi.mt) write_dos_date(o, fi.mt);\n\t\telse o.write_shift(4, 0);\n\t\to.write_shift(-4, (flags & 8) ? 0 : crcs[fcnt]);\n\t\to.write_shift(4,  (flags & 8) ? 0 : outbuf.length);\n\t\to.write_shift(4,  (flags & 8) ? 0 : fi.content.length);\n\t\to.write_shift(2, namebuf.length);\n\t\to.write_shift(2, 0);\n\n\t\tstart_cd += o.length;\n\t\tout.push(o);\n\t\tstart_cd += namebuf.length;\n\t\tout.push(namebuf);\n\n\t\t/* TODO: encryption header ? */\n\t\tstart_cd += outbuf.length;\n\t\tout.push(outbuf);\n\n\t\t/* data descriptor */\n\t\tif(flags & 8) {\n\t\t\to = new_buf(12);\n\t\t\to.write_shift(-4, crcs[fcnt]);\n\t\t\to.write_shift(4, outbuf.length);\n\t\t\to.write_shift(4, fi.content.length);\n\t\t\tstart_cd += o.l;\n\t\t\tout.push(o);\n\t\t}\n\n\t\t/* central directory */\n\t\to = new_buf(46);\n\t\to.write_shift(4, 0x02014b50);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 20);\n\t\to.write_shift(2, flags);\n\t\to.write_shift(2, method);\n\t\to.write_shift(4, 0); /* TODO: last mod file time/date */\n\t\to.write_shift(-4, crcs[fcnt]);\n\n\t\to.write_shift(4, outbuf.length);\n\t\to.write_shift(4, fi.content.length);\n\t\to.write_shift(2, namebuf.length);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, start);\n\n\t\tsz_cd += o.l;\n\t\tcdirs.push(o);\n\t\tsz_cd += namebuf.length;\n\t\tcdirs.push(namebuf);\n\t\t++fcnt;\n\t}\n\n\t/* end of central directory */\n\to = new_buf(22);\n\to.write_shift(4, 0x06054b50);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, fcnt);\n\to.write_shift(2, fcnt);\n\to.write_shift(4, sz_cd);\n\to.write_shift(4, start_cd);\n\to.write_shift(2, 0);\n\n\treturn bconcat(([bconcat((out)), bconcat(cdirs), o]));\n}\nfunction cfb_new(opts) {\n\tvar o = ({});\n\tinit_cfb(o, opts);\n\treturn o;\n}\n\nfunction cfb_add(cfb, name, content, opts) {\n\tvar unsafe = opts && opts.unsafe;\n\tif(!unsafe) init_cfb(cfb);\n\tvar file = !unsafe && CFB.find(cfb, name);\n\tif(!file) {\n\t\tvar fpath = cfb.FullPaths[0];\n\t\tif(name.slice(0, fpath.length) == fpath) fpath = name;\n\t\telse {\n\t\t\tif(fpath.slice(-1) != \"/\") fpath += \"/\";\n\t\t\tfpath = (fpath + name).replace(\"//\",\"/\");\n\t\t}\n\t\tfile = ({name: filename(name), type: 2});\n\t\tcfb.FileIndex.push(file);\n\t\tcfb.FullPaths.push(fpath);\n\t\tif(!unsafe) CFB.utils.cfb_gc(cfb);\n\t}\nfile.content = (content);\n\tfile.size = content ? content.length : 0;\n\tif(opts) {\n\t\tif(opts.CLSID) file.clsid = opts.CLSID;\n\t\tif(opts.mt) file.mt = opts.mt;\n\t\tif(opts.ct) file.ct = opts.ct;\n\t}\n\treturn file;\n}\n\nfunction cfb_del(cfb, name) {\n\tinit_cfb(cfb);\n\tvar file = CFB.find(cfb, name);\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n\t\tcfb.FileIndex.splice(j, 1);\n\t\tcfb.FullPaths.splice(j, 1);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction cfb_mov(cfb, old_name, new_name) {\n\tinit_cfb(cfb);\n\tvar file = CFB.find(cfb, old_name);\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n\t\tcfb.FileIndex[j].name = filename(new_name);\n\t\tcfb.FullPaths[j] = new_name;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction cfb_gc(cfb) { rebuild_cfb(cfb, true); }\n\nexports.find = find;\nexports.read = read;\nexports.parse = parse;\nexports.write = write;\nexports.writeFile = write_file;\nexports.utils = {\n\tcfb_new: cfb_new,\n\tcfb_add: cfb_add,\n\tcfb_del: cfb_del,\n\tcfb_mov: cfb_mov,\n\tcfb_gc: cfb_gc,\n\tReadShift: ReadShift,\n\tCheckField: CheckField,\n\tprep_blob: prep_blob,\n\tbconcat: bconcat,\n\tuse_zlib: use_zlib,\n\t_deflateRaw: _deflate,\n\t_inflateRaw: _inflate,\n\tconsts: consts\n};\n\nreturn exports;\n})();\n\nif(typeof require !== 'undefined' && typeof module !== 'undefined' && typeof DO_NOT_EXPORT_CFB === 'undefined') { module.exports = CFB; }\nvar _fs;\nif(typeof require !== 'undefined') try { _fs = require('fs'); } catch(e) {}\n\n/* normalize data for blob ctor */\nfunction blobify(data) {\n\tif(typeof data === \"string\") return s2ab(data);\n\tif(Array.isArray(data)) return a2u(data);\n\treturn data;\n}\n/* write or download file */\nfunction write_dl(fname, payload, enc) {\n\t/*global IE_SaveFile, Blob, navigator, saveAs, URL, document, File, chrome */\n\tif(typeof _fs !== 'undefined' && _fs.writeFileSync) return enc ? _fs.writeFileSync(fname, payload, enc) : _fs.writeFileSync(fname, payload);\n\tvar data = (enc == \"utf8\") ? utf8write(payload) : payload;\nif(typeof IE_SaveFile !== 'undefined') return IE_SaveFile(data, fname);\n\tif(typeof Blob !== 'undefined') {\n\t\tvar blob = new Blob([blobify(data)], {type:\"application/octet-stream\"});\nif(typeof navigator !== 'undefined' && navigator.msSaveBlob) return navigator.msSaveBlob(blob, fname);\nif(typeof saveAs !== 'undefined') return saveAs(blob, fname);\n\t\tif(typeof URL !== 'undefined' && typeof document !== 'undefined' && document.createElement && URL.createObjectURL) {\n\t\t\tvar url = URL.createObjectURL(blob);\nif(typeof chrome === 'object' && typeof (chrome.downloads||{}).download == \"function\") {\n\t\t\t\tif(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);\n\t\t\t\treturn chrome.downloads.download({ url: url, filename: fname, saveAs: true});\n\t\t\t}\n\t\t\tvar a = document.createElement(\"a\");\n\t\t\tif(a.download != null) {\na.download = fname; a.href = url; document.body.appendChild(a); a.click();\ndocument.body.removeChild(a);\n\t\t\t\tif(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);\n\t\t\t\treturn url;\n\t\t\t}\n\t\t}\n\t}\n\t// $FlowIgnore\n\tif(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript\n\t\t// $FlowIgnore\n\t\tvar out = File(fname); out.open(\"w\"); out.encoding = \"binary\";\n\t\tif(Array.isArray(payload)) payload = a2s(payload);\n\t\tout.write(payload); out.close(); return payload;\n\t} catch(e) { if(!e.message || !e.message.match(/onstruct/)) throw e; }\n\tthrow new Error(\"cannot save file \" + fname);\n}\n\n/* read binary data from file */\nfunction read_binary(path) {\n\tif(typeof _fs !== 'undefined') return _fs.readFileSync(path);\n\t// $FlowIgnore\n\tif(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript\n\t\t// $FlowIgnore\n\t\tvar infile = File(path); infile.open(\"r\"); infile.encoding = \"binary\";\n\t\tvar data = infile.read(); infile.close();\n\t\treturn data;\n\t} catch(e) { if(!e.message || !e.message.match(/onstruct/)) throw e; }\n\tthrow new Error(\"Cannot access file \" + path);\n}\nfunction keys(o) {\n\tvar ks = Object.keys(o), o2 = [];\n\tfor(var i = 0; i < ks.length; ++i) if(o.hasOwnProperty(ks[i])) o2.push(ks[i]);\n\treturn o2;\n}\n\nfunction evert_key(obj, key) {\n\tvar o = ([]), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) if(o[obj[K[i]][key]] == null) o[obj[K[i]][key]] = K[i];\n\treturn o;\n}\n\nfunction evert(obj) {\n\tvar o = ([]), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = K[i];\n\treturn o;\n}\n\nfunction evert_num(obj) {\n\tvar o = ([]), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = parseInt(K[i],10);\n\treturn o;\n}\n\nfunction evert_arr(obj) {\n\tvar o = ([]), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) {\n\t\tif(o[obj[K[i]]] == null) o[obj[K[i]]] = [];\n\t\to[obj[K[i]]].push(K[i]);\n\t}\n\treturn o;\n}\n\nvar basedate = new Date(1899, 11, 30, 0, 0, 0); // 2209161600000\nvar dnthresh = basedate.getTime() + (new Date().getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000;\nfunction datenum(v, date1904) {\n\tvar epoch = v.getTime();\n\tif(date1904) epoch -= 1462*24*60*60*1000;\n\treturn (epoch - dnthresh) / (24 * 60 * 60 * 1000);\n}\nfunction numdate(v) {\n\tvar out = new Date();\n\tout.setTime(v * 24 * 60 * 60 * 1000 + dnthresh);\n\treturn out;\n}\n\n/* ISO 8601 Duration */\nfunction parse_isodur(s) {\n\tvar sec = 0, mt = 0, time = false;\n\tvar m = s.match(/P([0-9\\.]+Y)?([0-9\\.]+M)?([0-9\\.]+D)?T([0-9\\.]+H)?([0-9\\.]+M)?([0-9\\.]+S)?/);\n\tif(!m) throw new Error(\"|\" + s + \"| is not an ISO8601 Duration\");\n\tfor(var i = 1; i != m.length; ++i) {\n\t\tif(!m[i]) continue;\n\t\tmt = 1;\n\t\tif(i > 3) time = true;\n\t\tswitch(m[i].slice(m[i].length-1)) {\n\t\t\tcase 'Y':\n\t\t\t\tthrow new Error(\"Unsupported ISO Duration Field: \" + m[i].slice(m[i].length-1));\n\t\t\tcase 'D': mt *= 24;\n\t\t\t\t/* falls through */\n\t\t\tcase 'H': mt *= 60;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M':\n\t\t\t\tif(!time) throw new Error(\"Unsupported ISO Duration Field: M\");\n\t\t\t\telse mt *= 60;\n\t\t\t\t/* falls through */\n\t\t\tcase 'S': break;\n\t\t}\n\t\tsec += mt * parseInt(m[i], 10);\n\t}\n\treturn sec;\n}\n\nvar good_pd_date = new Date('2017-02-19T19:06:09.000Z');\nif(isNaN(good_pd_date.getFullYear())) good_pd_date = new Date('2/19/17');\nvar good_pd = good_pd_date.getFullYear() == 2017;\n/* parses a date as a local date */\nfunction parseDate(str, fixdate) {\n\tvar d = new Date(str);\n\tif(good_pd) {\nif(fixdate > 0) d.setTime(d.getTime() + d.getTimezoneOffset() * 60 * 1000);\n\t\telse if(fixdate < 0) d.setTime(d.getTime() - d.getTimezoneOffset() * 60 * 1000);\n\t\treturn d;\n\t}\n\tif(str instanceof Date) return str;\n\tif(good_pd_date.getFullYear() == 1917 && !isNaN(d.getFullYear())) {\n\t\tvar s = d.getFullYear();\n\t\tif(str.indexOf(\"\" + s) > -1) return d;\n\t\td.setFullYear(d.getFullYear() + 100); return d;\n\t}\n\tvar n = str.match(/\\d+/g)||[\"2017\",\"2\",\"19\",\"0\",\"0\",\"0\"];\n\tvar out = new Date(+n[0], +n[1] - 1, +n[2], (+n[3]||0), (+n[4]||0), (+n[5]||0));\n\tif(str.indexOf(\"Z\") > -1) out = new Date(out.getTime() - out.getTimezoneOffset() * 60 * 1000);\n\treturn out;\n}\n\nfunction cc2str(arr) {\n\tvar o = \"\";\n\tfor(var i = 0; i != arr.length; ++i) o += String.fromCharCode(arr[i]);\n\treturn o;\n}\n\nfunction dup(o) {\n\tif(typeof JSON != 'undefined' && !Array.isArray(o)) return JSON.parse(JSON.stringify(o));\n\tif(typeof o != 'object' || o == null) return o;\n\tif(o instanceof Date) return new Date(o.getTime());\n\tvar out = {};\n\tfor(var k in o) if(o.hasOwnProperty(k)) out[k] = dup(o[k]);\n\treturn out;\n}\n\nfunction fill(c,l) { var o = \"\"; while(o.length < l) o+=c; return o; }\n\n/* TODO: stress test */\nfunction fuzzynum(s) {\n\tvar v = Number(s);\n\tif(!isNaN(v)) return v;\n\tvar wt = 1;\n\tvar ss = s.replace(/([\\d]),([\\d])/g,\"$1$2\").replace(/[$]/g,\"\").replace(/[%]/g, function() { wt *= 100; return \"\";});\n\tif(!isNaN(v = Number(ss))) return v / wt;\n\tss = ss.replace(/[(](.*)[)]/,function($$, $1) { wt = -wt; return $1;});\n\tif(!isNaN(v = Number(ss))) return v / wt;\n\treturn v;\n}\nfunction fuzzydate(s) {\n\tvar o = new Date(s), n = new Date(NaN);\n\tvar y = o.getYear(), m = o.getMonth(), d = o.getDate();\n\tif(isNaN(d)) return n;\n\tif(y < 0 || y > 8099) return n;\n\tif((m > 0 || d > 1) && y != 101) return o;\n\tif(s.toLowerCase().match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/)) return o;\n\tif(s.match(/[^-0-9:,\\/\\\\]/)) return n;\n\treturn o;\n}\n\nvar safe_split_regex = \"abacaba\".split(/(:?b)/i).length == 5;\nfunction split_regex(str, re, def) {\n\tif(safe_split_regex || typeof re == \"string\") return str.split(re);\n\tvar p = str.split(re), o = [p[0]];\n\tfor(var i = 1; i < p.length; ++i) { o.push(def); o.push(p[i]); }\n\treturn o;\n}\nfunction getdatastr(data) {\n\tif(!data) return null;\n\tif(data.data) return debom(data.data);\n\tif(data.asNodeBuffer && has_buf) return debom(data.asNodeBuffer().toString('binary'));\n\tif(data.asBinary) return debom(data.asBinary());\n\tif(data._data && data._data.getContent) return debom(cc2str(Array.prototype.slice.call(data._data.getContent(),0)));\n\treturn null;\n}\n\nfunction getdatabin(data) {\n\tif(!data) return null;\n\tif(data.data) return char_codes(data.data);\n\tif(data.asNodeBuffer && has_buf) return data.asNodeBuffer();\n\tif(data._data && data._data.getContent) {\n\t\tvar o = data._data.getContent();\n\t\tif(typeof o == \"string\") return char_codes(o);\n\t\treturn Array.prototype.slice.call(o);\n\t}\n\treturn null;\n}\n\nfunction getdata(data) { return (data && data.name.slice(-4) === \".bin\") ? getdatabin(data) : getdatastr(data); }\n\n/* Part 2 Section 10.1.2 \"Mapping Content Types\" Names are case-insensitive */\n/* OASIS does not comment on filename case sensitivity */\nfunction safegetzipfile(zip, file) {\n\tvar k = keys(zip.files);\n\tvar f = file.toLowerCase(), g = f.replace(/\\//g,'\\\\');\n\tfor(var i=0; i<k.length; ++i) {\n\t\tvar n = k[i].toLowerCase();\n\t\tif(f == n || g == n) return zip.files[k[i]];\n\t}\n\treturn null;\n}\n\nfunction getzipfile(zip, file) {\n\tvar o = safegetzipfile(zip, file);\n\tif(o == null) throw new Error(\"Cannot find file \" + file + \" in zip\");\n\treturn o;\n}\n\nfunction getzipdata(zip, file, safe) {\n\tif(!safe) return getdata(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipdata(zip, file); } catch(e) { return null; }\n}\n\nfunction getzipstr(zip, file, safe) {\n\tif(!safe) return getdatastr(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipstr(zip, file); } catch(e) { return null; }\n}\n\nfunction zipentries(zip) {\n\tvar k = keys(zip.files), o = [];\n\tfor(var i = 0; i < k.length; ++i) if(k[i].slice(-1) != '/') o.push(k[i]);\n\treturn o.sort();\n}\n\nvar jszip;\n/*global JSZipSync:true */\nif(typeof JSZipSync !== 'undefined') jszip = JSZipSync;\nif(typeof exports !== 'undefined') {\n\tif(typeof module !== 'undefined' && module.exports) {\n\t\tif(typeof jszip === 'undefined') jszip = require('./jszip.js');\n\t}\n}\n\nfunction resolve_path(path, base) {\n\tvar result = base.split('/');\n\tif(base.slice(-1) != \"/\") result.pop(); // folder path\n\tvar target = path.split('/');\n\twhile (target.length !== 0) {\n\t\tvar step = target.shift();\n\t\tif (step === '..') result.pop();\n\t\telse if (step !== '.') result.push(step);\n\t}\n\treturn result.join('/');\n}\nvar XML_HEADER = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\r\\n';\nvar attregexg=/([^\"\\s?>\\/]+)\\s*=\\s*((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:')|([^'\">\\s]+))/g;\nvar tagregex=/<[\\/\\?]?[a-zA-Z0-9:]+(?:\\s+[^\"\\s?>\\/]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^'\">\\s=]+))*\\s?[\\/\\?]?>/g;\nif(!(XML_HEADER.match(tagregex))) tagregex = /<[^>]*>/g;\nvar nsregex=/<\\w*:/, nsregex2 = /<(\\/?)\\w+:/;\nfunction parsexmltag(tag, skip_root) {\n\tvar z = ({});\n\tvar eq = 0, c = 0;\n\tfor(; eq !== tag.length; ++eq) if((c = tag.charCodeAt(eq)) === 32 || c === 10 || c === 13) break;\n\tif(!skip_root) z[0] = tag.slice(0, eq);\n\tif(eq === tag.length) return z;\n\tvar m = tag.match(attregexg), j=0, v=\"\", i=0, q=\"\", cc=\"\", quot = 1;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\tcc = m[i];\n\t\tfor(c=0; c != cc.length; ++c) if(cc.charCodeAt(c) === 61) break;\n\t\tq = cc.slice(0,c).trim();\n\t\twhile(cc.charCodeAt(c+1) == 32) ++c;\n\t\tquot = ((eq=cc.charCodeAt(c+1)) == 34 || eq == 39) ? 1 : 0;\n\t\tv = cc.slice(c+1+quot, cc.length-quot);\n\t\tfor(j=0;j!=q.length;++j) if(q.charCodeAt(j) === 58) break;\n\t\tif(j===q.length) {\n\t\t\tif(q.indexOf(\"_\") > 0) q = q.slice(0, q.indexOf(\"_\")); // from ods\n\t\t\tz[q] = v;\n\t\t\tz[q.toLowerCase()] = v;\n\t\t}\n\t\telse {\n\t\t\tvar k = (j===5 && q.slice(0,5)===\"xmlns\"?\"xmlns\":\"\")+q.slice(j+1);\n\t\t\tif(z[k] && q.slice(j-3,j) == \"ext\") continue; // from ods\n\t\t\tz[k] = v;\n\t\t\tz[k.toLowerCase()] = v;\n\t\t}\n\t}\n\treturn z;\n}\nfunction strip_ns(x) { return x.replace(nsregex2, \"<$1\"); }\n\nvar encodings = {\n\t'&quot;': '\"',\n\t'&apos;': \"'\",\n\t'&gt;': '>',\n\t'&lt;': '<',\n\t'&amp;': '&'\n};\nvar rencoding = evert(encodings);\n//var rencstr = \"&<>'\\\"\".split(\"\");\n\n// TODO: CP remap (need to read file version to determine OS)\nvar unescapexml = (function() {\n\t/* 22.4.2.4 bstr (Basic String) */\n\tvar encregex = /&(?:quot|apos|gt|lt|amp|#x?([\\da-fA-F]+));/g, coderegex = /_x([\\da-fA-F]{4})_/g;\n\treturn function unescapexml(text) {\n\t\tvar s = text + '', i = s.indexOf(\"<![CDATA[\");\n\t\tif(i == -1) return s.replace(encregex, function($$, $1) { return encodings[$$]||String.fromCharCode(parseInt($1,$$.indexOf(\"x\")>-1?16:10))||$$; }).replace(coderegex,function(m,c) {return String.fromCharCode(parseInt(c,16));});\n\t\tvar j = s.indexOf(\"]]>\");\n\t\treturn unescapexml(s.slice(0, i)) + s.slice(i+9,j) + unescapexml(s.slice(j+3));\n\t};\n})();\n\nvar decregex=/[&<>'\"]/g, charegex = /[\\u0000-\\u0008\\u000b-\\u001f]/g;\nfunction escapexml(text){\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(charegex,function(s) { return \"_x\" + (\"000\"+s.charCodeAt(0).toString(16)).slice(-4) + \"_\";});\n}\nfunction escapexmltag(text){ return escapexml(text).replace(/ /g,\"_x0020_\"); }\n\nvar htmlcharegex = /[\\u0000-\\u001f]/g;\nfunction escapehtml(text){\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(/\\n/g, \"<br/>\").replace(htmlcharegex,function(s) { return \"&#x\" + (\"000\"+s.charCodeAt(0).toString(16)).slice(-4) + \";\"; });\n}\n\nfunction escapexlml(text){\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(htmlcharegex,function(s) { return \"&#x\" + (s.charCodeAt(0).toString(16)).toUpperCase() + \";\"; });\n}\n\n/* TODO: handle codepages */\nvar xlml_fixstr = (function() {\n\tvar entregex = /&#(\\d+);/g;\n\tfunction entrepl($$,$1) { return String.fromCharCode(parseInt($1,10)); }\n\treturn function xlml_fixstr(str) { return str.replace(entregex,entrepl); };\n})();\nvar xlml_unfixstr = (function() {\n\treturn function xlml_unfixstr(str) { return str.replace(/(\\r\\n|[\\r\\n])/g,\"\\&#10;\"); };\n})();\n\nfunction parsexmlbool(value) {\n\tswitch(value) {\n\t\tcase 1: case true: case '1': case 'true': case 'TRUE': return true;\n\t\t/* case '0': case 'false': case 'FALSE':*/\n\t\tdefault: return false;\n\t}\n}\n\nvar utf8read = function utf8reada(orig) {\n\tvar out = \"\", i = 0, c = 0, d = 0, e = 0, f = 0, w = 0;\n\twhile (i < orig.length) {\n\t\tc = orig.charCodeAt(i++);\n\t\tif (c < 128) { out += String.fromCharCode(c); continue; }\n\t\td = orig.charCodeAt(i++);\n\t\tif (c>191 && c<224) { f = ((c & 31) << 6); f |= (d & 63); out += String.fromCharCode(f); continue; }\n\t\te = orig.charCodeAt(i++);\n\t\tif (c < 240) { out += String.fromCharCode(((c & 15) << 12) | ((d & 63) << 6) | (e & 63)); continue; }\n\t\tf = orig.charCodeAt(i++);\n\t\tw = (((c & 7) << 18) | ((d & 63) << 12) | ((e & 63) << 6) | (f & 63))-65536;\n\t\tout += String.fromCharCode(0xD800 + ((w>>>10)&1023));\n\t\tout += String.fromCharCode(0xDC00 + (w&1023));\n\t}\n\treturn out;\n};\n\nvar utf8write = function(orig) {\n\tvar out = [], i = 0, c = 0, d = 0;\n\twhile(i < orig.length) {\n\t\tc = orig.charCodeAt(i++);\n\t\tswitch(true) {\n\t\t\tcase c < 128: out.push(String.fromCharCode(c)); break;\n\t\t\tcase c < 2048:\n\t\t\t\tout.push(String.fromCharCode(192 + (c >> 6)));\n\t\t\t\tout.push(String.fromCharCode(128 + (c & 63)));\n\t\t\t\tbreak;\n\t\t\tcase c >= 55296 && c < 57344:\n\t\t\t\tc -= 55296; d = orig.charCodeAt(i++) - 56320 + (c<<10);\n\t\t\t\tout.push(String.fromCharCode(240 + ((d >>18) & 7)));\n\t\t\t\tout.push(String.fromCharCode(144 + ((d >>12) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + ((d >> 6) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + (d & 63)));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tout.push(String.fromCharCode(224 + (c >> 12)));\n\t\t\t\tout.push(String.fromCharCode(128 + ((c >> 6) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + (c & 63)));\n\t\t}\n\t}\n\treturn out.join(\"\");\n};\n\nif(has_buf) {\n\tvar utf8readb = function utf8readb(data) {\n\t\tvar out = Buffer.alloc(2*data.length), w, i, j = 1, k = 0, ww=0, c;\n\t\tfor(i = 0; i < data.length; i+=j) {\n\t\t\tj = 1;\n\t\t\tif((c=data.charCodeAt(i)) < 128) w = c;\n\t\t\telse if(c < 224) { w = (c&31)*64+(data.charCodeAt(i+1)&63); j=2; }\n\t\t\telse if(c < 240) { w=(c&15)*4096+(data.charCodeAt(i+1)&63)*64+(data.charCodeAt(i+2)&63); j=3; }\n\t\t\telse { j = 4;\n\t\t\t\tw = (c & 7)*262144+(data.charCodeAt(i+1)&63)*4096+(data.charCodeAt(i+2)&63)*64+(data.charCodeAt(i+3)&63);\n\t\t\t\tw -= 65536; ww = 0xD800 + ((w>>>10)&1023); w = 0xDC00 + (w&1023);\n\t\t\t}\n\t\t\tif(ww !== 0) { out[k++] = ww&255; out[k++] = ww>>>8; ww = 0; }\n\t\t\tout[k++] = w%256; out[k++] = w>>>8;\n\t\t}\n\t\treturn out.slice(0,k).toString('ucs2');\n\t};\n\tvar corpus = \"foo bar baz\\u00e2\\u0098\\u0083\\u00f0\\u009f\\u008d\\u00a3\";\n\tif(utf8read(corpus) == utf8readb(corpus)) utf8read = utf8readb;\n\t// $FlowIgnore\n\tvar utf8readc = function utf8readc(data) { return Buffer_from(data, 'binary').toString('utf8'); };\n\tif(utf8read(corpus) == utf8readc(corpus)) utf8read = utf8readc;\n\n\t// $FlowIgnore\n\tutf8write = function(data) { return Buffer_from(data, 'utf8').toString(\"binary\"); };\n}\n\n// matches <foo>...</foo> extracts content\nvar matchtag = (function() {\n\tvar mtcache = ({});\n\treturn function matchtag(f,g) {\n\t\tvar t = f+\"|\"+(g||\"\");\n\t\tif(mtcache[t]) return mtcache[t];\n\t\treturn (mtcache[t] = new RegExp('<(?:\\\\w+:)?'+f+'(?: xml:space=\"preserve\")?(?:[^>]*)>([\\\\s\\\\S]*?)</(?:\\\\w+:)?'+f+'>',((g||\"\"))));\n\t};\n})();\n\nvar htmldecode = (function() {\n\tvar entities = [\n\t\t['nbsp', ' '], ['middot', '·'],\n\t\t['quot', '\"'], ['apos', \"'\"], ['gt',   '>'], ['lt',   '<'], ['amp',  '&']\n\t].map(function(x) { return [new RegExp('&' + x[0] + ';', \"g\"), x[1]]; });\n\treturn function htmldecode(str) {\n\t\tvar o = str.replace(/^[\\t\\n\\r ]+/, \"\").replace(/[\\t\\n\\r ]+$/,\"\").replace(/[\\t\\n\\r ]+/g, \" \").replace(/<\\s*[bB][rR]\\s*\\/?>/g,\"\\n\").replace(/<[^>]*>/g,\"\");\n\t\tfor(var i = 0; i < entities.length; ++i) o = o.replace(entities[i][0], entities[i][1]);\n\t\treturn o;\n\t};\n})();\n\nvar vtregex = (function(){ var vt_cache = {};\n\treturn function vt_regex(bt) {\n\t\tif(vt_cache[bt] !== undefined) return vt_cache[bt];\n\t\treturn (vt_cache[bt] = new RegExp(\"<(?:vt:)?\" + bt + \">([\\\\s\\\\S]*?)</(?:vt:)?\" + bt + \">\", 'g') );\n};})();\nvar vtvregex = /<\\/?(?:vt:)?variant>/g, vtmregex = /<(?:vt:)([^>]*)>([\\s\\S]*)</;\nfunction parseVector(data, opts) {\n\tvar h = parsexmltag(data);\n\n\tvar matches = data.match(vtregex(h.baseType))||[];\n\tvar res = [];\n\tif(matches.length != h.size) {\n\t\tif(opts.WTF) throw new Error(\"unexpected vector length \" + matches.length + \" != \" + h.size);\n\t\treturn res;\n\t}\n\tmatches.forEach(function(x) {\n\t\tvar v = x.replace(vtvregex,\"\").match(vtmregex);\n\t\tif(v) res.push({v:utf8read(v[2]), t:v[1]});\n\t});\n\treturn res;\n}\n\nvar wtregex = /(^\\s|\\s$|\\n)/;\nfunction writetag(f,g) { return '<' + f + (g.match(wtregex)?' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f + '>'; }\n\nfunction wxt_helper(h) { return keys(h).map(function(k) { return \" \" + k + '=\"' + h[k] + '\"';}).join(\"\"); }\nfunction writextag(f,g,h) { return '<' + f + ((h != null) ? wxt_helper(h) : \"\") + ((g != null) ? (g.match(wtregex)?' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f : \"/\") + '>';}\n\nfunction write_w3cdtf(d, t) { try { return d.toISOString().replace(/\\.\\d*/,\"\"); } catch(e) { if(t) throw e; } return \"\"; }\n\nfunction write_vt(s) {\n\tswitch(typeof s) {\n\t\tcase 'string': return writextag('vt:lpwstr', s);\n\t\tcase 'number': return writextag((s|0)==s?'vt:i4':'vt:r8', String(s));\n\t\tcase 'boolean': return writextag('vt:bool',s?'true':'false');\n\t}\n\tif(s instanceof Date) return writextag('vt:filetime', write_w3cdtf(s));\n\tthrow new Error(\"Unable to serialize \" + s);\n}\n\nvar XMLNS = ({\n\t'dc': 'http://purl.org/dc/elements/1.1/',\n\t'dcterms': 'http://purl.org/dc/terms/',\n\t'dcmitype': 'http://purl.org/dc/dcmitype/',\n\t'mx': 'http://schemas.microsoft.com/office/mac/excel/2008/main',\n\t'r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n\t'sjs': 'http://schemas.openxmlformats.org/package/2006/sheetjs/core-properties',\n\t'vt': 'http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes',\n\t'xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n\t'xsd': 'http://www.w3.org/2001/XMLSchema'\n});\n\nXMLNS.main = [\n\t'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n\t'http://purl.oclc.org/ooxml/spreadsheetml/main',\n\t'http://schemas.microsoft.com/office/excel/2006/main',\n\t'http://schemas.microsoft.com/office/excel/2006/2'\n];\n\nvar XLMLNS = ({\n\t'o':    'urn:schemas-microsoft-com:office:office',\n\t'x':    'urn:schemas-microsoft-com:office:excel',\n\t'ss':   'urn:schemas-microsoft-com:office:spreadsheet',\n\t'dt':   'uuid:C2F41010-65B3-11d1-A29F-00AA00C14882',\n\t'mv':   'http://macVmlSchemaUri',\n\t'v':    'urn:schemas-microsoft-com:vml',\n\t'html': 'http://www.w3.org/TR/REC-html40'\n});\nfunction read_double_le(b, idx) {\n\tvar s = 1 - 2 * (b[idx + 7] >>> 7);\n\tvar e = ((b[idx + 7] & 0x7f) << 4) + ((b[idx + 6] >>> 4) & 0x0f);\n\tvar m = (b[idx+6]&0x0f);\n\tfor(var i = 5; i >= 0; --i) m = m * 256 + b[idx + i];\n\tif(e == 0x7ff) return m == 0 ? (s * Infinity) : NaN;\n\tif(e == 0) e = -1022;\n\telse { e -= 1023; m += Math.pow(2,52); }\n\treturn s * Math.pow(2, e - 52) * m;\n}\n\nfunction write_double_le(b, v, idx) {\n\tvar bs = ((((v < 0) || (1/v == -Infinity)) ? 1 : 0) << 7), e = 0, m = 0;\n\tvar av = bs ? (-v) : v;\n\tif(!isFinite(av)) { e = 0x7ff; m = isNaN(v) ? 0x6969 : 0; }\n\telse if(av == 0) e = m = 0;\n\telse {\n\t\te = Math.floor(Math.log(av) / Math.LN2);\n\t\tm = av * Math.pow(2, 52 - e);\n\t\tif((e <= -1023) && (!isFinite(m) || (m < Math.pow(2,52)))) { e = -1022; }\n\t\telse { m -= Math.pow(2,52); e+=1023; }\n\t}\n\tfor(var i = 0; i <= 5; ++i, m/=256) b[idx + i] = m & 0xff;\n\tb[idx + 6] = ((e & 0x0f) << 4) | (m & 0xf);\n\tb[idx + 7] = (e >> 4) | bs;\n}\n\nvar __toBuffer = function(bufs) { var x=[],w=10240; for(var i=0;i<bufs[0].length;++i) if(bufs[0][i]) for(var j=0,L=bufs[0][i].length;j<L;j+=w) x.push.apply(x, bufs[0][i].slice(j,j+w)); return x; };\nvar ___toBuffer = __toBuffer;\nvar __utf16le = function(b,s,e) { var ss=[]; for(var i=s; i<e; i+=2) ss.push(String.fromCharCode(__readUInt16LE(b,i))); return ss.join(\"\").replace(chr0,''); };\nvar ___utf16le = __utf16le;\nvar __hexlify = function(b,s,l) { var ss=[]; for(var i=s; i<s+l; ++i) ss.push((\"0\" + b[i].toString(16)).slice(-2)); return ss.join(\"\"); };\nvar ___hexlify = __hexlify;\nvar __utf8 = function(b,s,e) { var ss=[]; for(var i=s; i<e; i++) ss.push(String.fromCharCode(__readUInt8(b,i))); return ss.join(\"\"); };\nvar ___utf8 = __utf8;\nvar __lpstr = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar ___lpstr = __lpstr;\nvar __cpstr = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar ___cpstr = __cpstr;\nvar __lpwstr = function(b,i) { var len = 2*__readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar ___lpwstr = __lpwstr;\nvar __lpp4, ___lpp4;\n__lpp4 = ___lpp4 = function lpp4_(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? __utf16le(b, i+4,i+4+len) : \"\";};\nvar __8lpp4 = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len) : \"\";};\nvar ___8lpp4 = __8lpp4;\nvar __double, ___double;\n__double = ___double = function(b, idx) { return read_double_le(b, idx);};\nvar is_buf = function is_buf_a(a) { return Array.isArray(a); };\n\nif(has_buf) {\n\t__utf16le = function(b,s,e) { if(!Buffer.isBuffer(b)) return ___utf16le(b,s,e); return b.toString('utf16le',s,e).replace(chr0,'')/*.replace(chr1,'!')*/; };\n\t__hexlify = function(b,s,l) { return Buffer.isBuffer(b) ? b.toString('hex',s,s+l) : ___hexlify(b,s,l); };\n\t__lpstr = function lpstr_b(b, i) { if(!Buffer.isBuffer(b)) return ___lpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : \"\";};\n\t__cpstr = function cpstr_b(b, i) { if(!Buffer.isBuffer(b)) return ___cpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : \"\";};\n\t__lpwstr = function lpwstr_b(b, i) { if(!Buffer.isBuffer(b)) return ___lpwstr(b, i); var len = 2*b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len-1);};\n\t__lpp4 = function lpp4_b(b, i) { if(!Buffer.isBuffer(b)) return ___lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len);};\n\t__8lpp4 = function lpp4_8b(b, i) { if(!Buffer.isBuffer(b)) return ___8lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf8',i+4,i+4+len);};\n\t__utf8 = function utf8_b(b, s, e) { return (Buffer.isBuffer(b)) ? b.toString('utf8',s,e) : ___utf8(b,s,e); };\n\t__toBuffer = function(bufs) { return (bufs[0].length > 0 && Buffer.isBuffer(bufs[0][0])) ? Buffer.concat(bufs[0]) : ___toBuffer(bufs);};\n\tbconcat = function(bufs) { return Buffer.isBuffer(bufs[0]) ? Buffer.concat(bufs) : [].concat.apply([], bufs); };\n\t__double = function double_(b, i) { if(Buffer.isBuffer(b)) return b.readDoubleLE(i); return ___double(b,i); };\n\tis_buf = function is_buf_b(a) { return Buffer.isBuffer(a) || Array.isArray(a); };\n}\n\n/* from js-xls */\nif(typeof cptable !== 'undefined') {\n\t__utf16le = function(b,s,e) { return cptable.utils.decode(1200, b.slice(s,e)).replace(chr0, ''); };\n\t__utf8 = function(b,s,e) { return cptable.utils.decode(65001, b.slice(s,e)); };\n\t__lpstr = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(current_ansi, b.slice(i+4, i+4+len-1)) : \"\";};\n\t__cpstr = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(current_codepage, b.slice(i+4, i+4+len-1)) : \"\";};\n\t__lpwstr = function(b,i) { var len = 2*__readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(1200, b.slice(i+4,i+4+len-1)) : \"\";};\n\t__lpp4 = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(1200, b.slice(i+4,i+4+len)) : \"\";};\n\t__8lpp4 = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(65001, b.slice(i+4,i+4+len)) : \"\";};\n}\n\nvar __readUInt8 = function(b, idx) { return b[idx]; };\nvar __readUInt16LE = function(b, idx) { return (b[idx+1]*(1<<8))+b[idx]; };\nvar __readInt16LE = function(b, idx) { var u = (b[idx+1]*(1<<8))+b[idx]; return (u < 0x8000) ? u : ((0xffff - u + 1) * -1); };\nvar __readUInt32LE = function(b, idx) { return b[idx+3]*(1<<24)+(b[idx+2]<<16)+(b[idx+1]<<8)+b[idx]; };\nvar __readInt32LE = function(b, idx) { return (b[idx+3]<<24)|(b[idx+2]<<16)|(b[idx+1]<<8)|b[idx]; };\nvar __readInt32BE = function(b, idx) { return (b[idx]<<24)|(b[idx+1]<<16)|(b[idx+2]<<8)|b[idx+3]; };\n\nfunction ReadShift(size, t) {\n\tvar o=\"\", oI, oR, oo=[], w, vv, i, loc;\n\tswitch(t) {\n\t\tcase 'dbcs':\n\t\t\tloc = this.l;\n\t\t\tif(has_buf && Buffer.isBuffer(this)) o = this.slice(this.l, this.l+2*size).toString(\"utf16le\");\n\t\t\telse for(i = 0; i < size; ++i) { o+=String.fromCharCode(__readUInt16LE(this, loc)); loc+=2; }\n\t\t\tsize *= 2;\n\t\t\tbreak;\n\n\t\tcase 'utf8': o = __utf8(this, this.l, this.l + size); break;\n\t\tcase 'utf16le': size *= 2; o = __utf16le(this, this.l, this.l + size); break;\n\n\t\tcase 'wstr':\n\t\t\tif(typeof cptable !== 'undefined') o = cptable.utils.decode(current_codepage, this.slice(this.l, this.l+2*size));\n\t\t\telse return ReadShift.call(this, size, 'dbcs');\n\t\t\tsize = 2 * size; break;\n\n\t\t/* [MS-OLEDS] 2.1.4 LengthPrefixedAnsiString */\n\t\tcase 'lpstr-ansi': o = __lpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;\n\t\tcase 'lpstr-cp': o = __cpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;\n\t\t/* [MS-OLEDS] 2.1.5 LengthPrefixedUnicodeString */\n\t\tcase 'lpwstr': o = __lpwstr(this, this.l); size = 4 + 2 * __readUInt32LE(this, this.l); break;\n\t\t/* [MS-OFFCRYPTO] 2.1.2 Length-Prefixed Padded Unicode String (UNICODE-LP-P4) */\n\t\tcase 'lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __lpp4(this, this.l); if(size & 0x02) size += 2; break;\n\t\t/* [MS-OFFCRYPTO] 2.1.3 Length-Prefixed UTF-8 String (UTF-8-LP-P4) */\n\t\tcase '8lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __8lpp4(this, this.l); if(size & 0x03) size += 4 - (size & 0x03); break;\n\n\t\tcase 'cstr': size = 0; o = \"\";\n\t\t\twhile((w=__readUInt8(this, this.l + size++))!==0) oo.push(_getchar(w));\n\t\t\to = oo.join(\"\"); break;\n\t\tcase '_wstr': size = 0; o = \"\";\n\t\t\twhile((w=__readUInt16LE(this,this.l +size))!==0){oo.push(_getchar(w));size+=2;}\n\t\t\tsize+=2; o = oo.join(\"\"); break;\n\n\t\t/* sbcs and dbcs support continue records in the SST way TODO codepages */\n\t\tcase 'dbcs-cont': o = \"\"; loc = this.l;\n\t\t\tfor(i = 0; i < size; ++i) {\n\t\t\t\tif(this.lens && this.lens.indexOf(loc) !== -1) {\n\t\t\t\t\tw = __readUInt8(this, loc);\n\t\t\t\t\tthis.l = loc + 1;\n\t\t\t\t\tvv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');\n\t\t\t\t\treturn oo.join(\"\") + vv;\n\t\t\t\t}\n\t\t\t\too.push(_getchar(__readUInt16LE(this, loc)));\n\t\t\t\tloc+=2;\n\t\t\t} o = oo.join(\"\"); size *= 2; break;\n\n\t\tcase 'cpstr':\n\t\t\tif(typeof cptable !== 'undefined') {\n\t\t\t\to = cptable.utils.decode(current_codepage, this.slice(this.l, this.l + size));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t/* falls through */\n\t\tcase 'sbcs-cont': o = \"\"; loc = this.l;\n\t\t\tfor(i = 0; i != size; ++i) {\n\t\t\t\tif(this.lens && this.lens.indexOf(loc) !== -1) {\n\t\t\t\t\tw = __readUInt8(this, loc);\n\t\t\t\t\tthis.l = loc + 1;\n\t\t\t\t\tvv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');\n\t\t\t\t\treturn oo.join(\"\") + vv;\n\t\t\t\t}\n\t\t\t\too.push(_getchar(__readUInt8(this, loc)));\n\t\t\t\tloc+=1;\n\t\t\t} o = oo.join(\"\"); break;\n\n\t\tdefault:\n\tswitch(size) {\n\t\tcase 1: oI = __readUInt8(this, this.l); this.l++; return oI;\n\t\tcase 2: oI = (t === 'i' ? __readInt16LE : __readUInt16LE)(this, this.l); this.l += 2; return oI;\n\t\tcase 4: case -4:\n\t\t\tif(t === 'i' || ((this[this.l+3] & 0x80)===0)) { oI = ((size > 0) ? __readInt32LE : __readInt32BE)(this, this.l); this.l += 4; return oI; }\n\t\t\telse { oR = __readUInt32LE(this, this.l); this.l += 4; } return oR;\n\t\tcase 8: case -8:\n\t\t\tif(t === 'f') {\n\t\t\t\tif(size == 8) oR = __double(this, this.l);\n\t\t\t\telse oR = __double([this[this.l+7],this[this.l+6],this[this.l+5],this[this.l+4],this[this.l+3],this[this.l+2],this[this.l+1],this[this.l+0]], 0);\n\t\t\t\tthis.l += 8; return oR;\n\t\t\t} else size = 8;\n\t\t/* falls through */\n\t\tcase 16: o = __hexlify(this, this.l, size); break;\n\t}}\n\tthis.l+=size; return o;\n}\n\nvar __writeUInt32LE = function(b, val, idx) { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); b[idx+2] = ((val >>> 16) & 0xFF); b[idx+3] = ((val >>> 24) & 0xFF); };\nvar __writeInt32LE  = function(b, val, idx) { b[idx] = (val & 0xFF); b[idx+1] = ((val >> 8) & 0xFF); b[idx+2] = ((val >> 16) & 0xFF); b[idx+3] = ((val >> 24) & 0xFF); };\nvar __writeUInt16LE = function(b, val, idx) { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); };\n\nfunction WriteShift(t, val, f) {\n\tvar size = 0, i = 0;\n\tif(f === 'dbcs') {\nfor(i = 0; i != val.length; ++i) __writeUInt16LE(this, val.charCodeAt(i), this.l + 2 * i);\n\t\tsize = 2 * val.length;\n\t} else if(f === 'sbcs') {\n\t\t/* TODO: codepage */\nval = val.replace(/[^\\x00-\\x7F]/g, \"_\");\nfor(i = 0; i != val.length; ++i) this[this.l + i] = (val.charCodeAt(i) & 0xFF);\n\t\tsize = val.length;\n\t} else if(f === 'hex') {\n\t\tfor(; i < t; ++i) {\nthis[this.l++] = (parseInt(val.slice(2*i, 2*i+2), 16)||0);\n\t\t} return this;\n\t} else if(f === 'utf16le') {\nvar end = Math.min(this.l + t, this.length);\n\t\t\tfor(i = 0; i < Math.min(val.length, t); ++i) {\n\t\t\t\tvar cc = val.charCodeAt(i);\n\t\t\t\tthis[this.l++] = (cc & 0xff);\n\t\t\t\tthis[this.l++] = (cc >> 8);\n\t\t\t}\n\t\t\twhile(this.l < end) this[this.l++] = 0;\n\t\t\treturn this;\n\t} else  switch(t) {\n\t\tcase  1: size = 1; this[this.l] = val&0xFF; break;\n\t\tcase  2: size = 2; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; break;\n\t\tcase  3: size = 3; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; val >>>= 8; this[this.l+2] = val&0xFF; break;\n\t\tcase  4: size = 4; __writeUInt32LE(this, val, this.l); break;\n\t\tcase  8: size = 8; if(f === 'f') { write_double_le(this, val, this.l); break; }\n\t\t/* falls through */\n\t\tcase 16: break;\n\t\tcase -4: size = 4; __writeInt32LE(this, val, this.l); break;\n\t}\n\tthis.l += size; return this;\n}\n\nfunction CheckField(hexstr, fld) {\n\tvar m = __hexlify(this,this.l,hexstr.length>>1);\n\tif(m !== hexstr) throw new Error(fld + 'Expected ' + hexstr + ' saw ' + m);\n\tthis.l += hexstr.length>>1;\n}\n\nfunction prep_blob(blob, pos) {\n\tblob.l = pos;\n\tblob.read_shift = ReadShift;\n\tblob.chk = CheckField;\n\tblob.write_shift = WriteShift;\n}\n\nfunction parsenoop(blob, length) { blob.l += length; }\n\nfunction new_buf(sz) {\n\tvar o = new_raw_buf(sz);\n\tprep_blob(o, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.1.4 Record */\nfunction recordhopper(data, cb, opts) {\n\tif(!data) return;\n\tvar tmpbyte, cntbyte, length;\n\tprep_blob(data, data.l || 0);\n\tvar L = data.length, RT = 0, tgt = 0;\n\twhile(data.l < L) {\n\t\tRT = data.read_shift(1);\n\t\tif(RT & 0x80) RT = (RT & 0x7F) + ((data.read_shift(1) & 0x7F)<<7);\n\t\tvar R = XLSBRecordEnum[RT] || XLSBRecordEnum[0xFFFF];\n\t\ttmpbyte = data.read_shift(1);\n\t\tlength = tmpbyte & 0x7F;\n\t\tfor(cntbyte = 1; cntbyte <4 && (tmpbyte & 0x80); ++cntbyte) length += ((tmpbyte = data.read_shift(1)) & 0x7F)<<(7*cntbyte);\n\t\ttgt = data.l + length;\n\t\tvar d = (R.f||parsenoop)(data, length, opts);\n\t\tdata.l = tgt;\n\t\tif(cb(d, R.n, RT)) return;\n\t}\n}\n\n/* control buffer usage for fixed-length buffers */\nfunction buf_array() {\n\tvar bufs = [], blksz = has_buf ? 256 : 2048;\n\tvar newblk = function ba_newblk(sz) {\n\t\tvar o = (new_buf(sz));\n\t\tprep_blob(o, 0);\n\t\treturn o;\n\t};\n\n\tvar curbuf = newblk(blksz);\n\n\tvar endbuf = function ba_endbuf() {\n\t\tif(!curbuf) return;\n\t\tif(curbuf.length > curbuf.l) { curbuf = curbuf.slice(0, curbuf.l); curbuf.l = curbuf.length; }\n\t\tif(curbuf.length > 0) bufs.push(curbuf);\n\t\tcurbuf = null;\n\t};\n\n\tvar next = function ba_next(sz) {\n\t\tif(curbuf && (sz < (curbuf.length - curbuf.l))) return curbuf;\n\t\tendbuf();\n\t\treturn (curbuf = newblk(Math.max(sz+1, blksz)));\n\t};\n\n\tvar end = function ba_end() {\n\t\tendbuf();\n\t\treturn __toBuffer([bufs]);\n\t};\n\n\tvar push = function ba_push(buf) { endbuf(); curbuf = buf; if(curbuf.l == null) curbuf.l = curbuf.length; next(blksz); };\n\n\treturn ({ next:next, push:push, end:end, _bufs:bufs });\n}\n\nfunction write_record(ba, type, payload, length) {\n\tvar t = +XLSBRE[type], l;\n\tif(isNaN(t)) return; // TODO: throw something here?\n\tif(!length) length = XLSBRecordEnum[t].p || (payload||[]).length || 0;\n\tl = 1 + (t >= 0x80 ? 1 : 0) + 1/* + length*/;\n\tif(length >= 0x80) ++l; if(length >= 0x4000) ++l; if(length >= 0x200000) ++l;\n\tvar o = ba.next(l);\n\tif(t <= 0x7F) o.write_shift(1, t);\n\telse {\n\t\to.write_shift(1, (t & 0x7F) + 0x80);\n\t\to.write_shift(1, (t >> 7));\n\t}\n\tfor(var i = 0; i != 4; ++i) {\n\t\tif(length >= 0x80) { o.write_shift(1, (length & 0x7F)+0x80); length >>= 7; }\n\t\telse { o.write_shift(1, length); break; }\n\t}\n\tif(length > 0 && is_buf(payload)) ba.push(payload);\n}\n/* XLS ranges enforced */\nfunction shift_cell_xls(cell, tgt, opts) {\n\tvar out = dup(cell);\n\tif(tgt.s) {\n\t\tif(out.cRel) out.c += tgt.s.c;\n\t\tif(out.rRel) out.r += tgt.s.r;\n\t} else {\n\t\tif(out.cRel) out.c += tgt.c;\n\t\tif(out.rRel) out.r += tgt.r;\n\t}\n\tif(!opts || opts.biff < 12) {\n\t\twhile(out.c >= 0x100) out.c -= 0x100;\n\t\twhile(out.r >= 0x10000) out.r -= 0x10000;\n\t}\n\treturn out;\n}\n\nfunction shift_range_xls(cell, range, opts) {\n\tvar out = dup(cell);\n\tout.s = shift_cell_xls(out.s, range.s, opts);\n\tout.e = shift_cell_xls(out.e, range.s, opts);\n\treturn out;\n}\n\nfunction encode_cell_xls(c, biff) {\n\tif(c.cRel && c.c < 0) { c = dup(c); c.c += (biff > 8) ? 0x4000 : 0x100; }\n\tif(c.rRel && c.r < 0) { c = dup(c); c.r += (biff > 8) ? 0x100000 : ((biff > 5) ? 0x10000 : 0x4000); }\n\tvar s = encode_cell(c);\n\tif(c.cRel === 0) s = fix_col(s);\n\tif(c.rRel === 0) s = fix_row(s);\n\treturn s;\n}\n\nfunction encode_range_xls(r, opts) {\n\tif(r.s.r == 0 && !r.s.rRel) {\n\t\tif(r.e.r == (opts.biff >= 12 ? 0xFFFFF : (opts.biff >= 8 ? 0x10000 : 0x4000)) && !r.e.rRel) {\n\t\t\treturn (r.s.cRel ? \"\" : \"$\") + encode_col(r.s.c) + \":\" + (r.e.cRel ? \"\" : \"$\") + encode_col(r.e.c);\n\t\t}\n\t}\n\tif(r.s.c == 0 && !r.s.cRel) {\n\t\tif(r.e.c == (opts.biff >= 12 ? 0xFFFF : 0xFF) && !r.e.cRel) {\n\t\t\treturn (r.s.rRel ? \"\" : \"$\") + encode_row(r.s.r) + \":\" + (r.e.rRel ? \"\" : \"$\") + encode_row(r.e.r);\n\t\t}\n\t}\n\treturn encode_cell_xls(r.s, opts.biff) + \":\" + encode_cell_xls(r.e, opts.biff);\n}\nvar OFFCRYPTO = {};\n\nvar make_offcrypto = function(O, _crypto) {\n\tvar crypto;\n\tif(typeof _crypto !== 'undefined') crypto = _crypto;\n\telse if(typeof require !== 'undefined') {\n\t\ttry { crypto = require('crypto'); }\n\t\tcatch(e) { crypto = null; }\n\t}\n\n\tO.rc4 = function(key, data) {\n\t\tvar S = new Array(256);\n\t\tvar c = 0, i = 0, j = 0, t = 0;\n\t\tfor(i = 0; i != 256; ++i) S[i] = i;\n\t\tfor(i = 0; i != 256; ++i) {\n\t\t\tj = (j + S[i] + (key[i%key.length]).charCodeAt(0))&255;\n\t\t\tt = S[i]; S[i] = S[j]; S[j] = t;\n\t\t}\n\t\t// $FlowIgnore\n\t\ti = j = 0; var out = Buffer(data.length);\n\t\tfor(c = 0; c != data.length; ++c) {\n\t\t\ti = (i + 1)&255;\n\t\t\tj = (j + S[i])%256;\n\t\t\tt = S[i]; S[i] = S[j]; S[j] = t;\n\t\t\tout[c] = (data[c] ^ S[(S[i]+S[j])&255]);\n\t\t}\n\t\treturn out;\n\t};\n\n\tO.md5 = function(hex) {\n\t\tif(!crypto) throw new Error(\"Unsupported crypto\");\n\t\treturn crypto.createHash('md5').update(hex).digest('hex');\n\t};\n};\n/*global crypto:true */\nmake_offcrypto(OFFCRYPTO, typeof crypto !== \"undefined\" ? crypto : undefined);\n\nfunction decode_row(rowstr) { return parseInt(unfix_row(rowstr),10) - 1; }\nfunction encode_row(row) { return \"\" + (row + 1); }\nfunction fix_row(cstr) { return cstr.replace(/([A-Z]|^)(\\d+)$/,\"$1$$$2\"); }\nfunction unfix_row(cstr) { return cstr.replace(/\\$(\\d+)$/,\"$1\"); }\n\nfunction decode_col(colstr) { var c = unfix_col(colstr), d = 0, i = 0; for(; i !== c.length; ++i) d = 26*d + c.charCodeAt(i) - 64; return d - 1; }\nfunction encode_col(col) { var s=\"\"; for(++col; col; col=Math.floor((col-1)/26)) s = String.fromCharCode(((col-1)%26) + 65) + s; return s; }\nfunction fix_col(cstr) { return cstr.replace(/^([A-Z])/,\"$$$1\"); }\nfunction unfix_col(cstr) { return cstr.replace(/^\\$([A-Z])/,\"$1\"); }\n\nfunction split_cell(cstr) { return cstr.replace(/(\\$?[A-Z]*)(\\$?\\d*)/,\"$1,$2\").split(\",\"); }\nfunction decode_cell(cstr) { var splt = split_cell(cstr); return { c:decode_col(splt[0]), r:decode_row(splt[1]) }; }\nfunction encode_cell(cell) { return encode_col(cell.c) + encode_row(cell.r); }\nfunction decode_range(range) { var x =range.split(\":\").map(decode_cell); return {s:x[0],e:x[x.length-1]}; }\nfunction encode_range(cs,ce) {\n\tif(typeof ce === 'undefined' || typeof ce === 'number') {\nreturn encode_range(cs.s, cs.e);\n\t}\nif(typeof cs !== 'string') cs = encode_cell((cs));\n\tif(typeof ce !== 'string') ce = encode_cell((ce));\nreturn cs == ce ? cs : cs + \":\" + ce;\n}\n\nfunction safe_decode_range(range) {\n\tvar o = {s:{c:0,r:0},e:{c:0,r:0}};\n\tvar idx = 0, i = 0, cc = 0;\n\tvar len = range.length;\n\tfor(idx = 0; i < len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\tidx = 26*idx + cc;\n\t}\n\to.s.c = --idx;\n\n\tfor(idx = 0; i < len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;\n\t\tidx = 10*idx + cc;\n\t}\n\to.s.r = --idx;\n\n\tif(i === len || range.charCodeAt(++i) === 58) { o.e.c=o.s.c; o.e.r=o.s.r; return o; }\n\n\tfor(idx = 0; i != len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\tidx = 26*idx + cc;\n\t}\n\to.e.c = --idx;\n\n\tfor(idx = 0; i != len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;\n\t\tidx = 10*idx + cc;\n\t}\n\to.e.r = --idx;\n\treturn o;\n}\n\nfunction safe_format_cell(cell, v) {\n\tvar q = (cell.t == 'd' && v instanceof Date);\n\tif(cell.z != null) try { return (cell.w = SSF.format(cell.z, q ? datenum(v) : v)); } catch(e) { }\n\ttry { return (cell.w = SSF.format((cell.XF||{}).numFmtId||(q ? 14 : 0),  q ? datenum(v) : v)); } catch(e) { return ''+v; }\n}\n\nfunction format_cell(cell, v, o) {\n\tif(cell == null || cell.t == null || cell.t == 'z') return \"\";\n\tif(cell.w !== undefined) return cell.w;\n\tif(cell.t == 'd' && !cell.z && o && o.dateNF) cell.z = o.dateNF;\n\tif(v == undefined) return safe_format_cell(cell, cell.v);\n\treturn safe_format_cell(cell, v);\n}\n\nfunction sheet_to_workbook(sheet, opts) {\n\tvar n = opts && opts.sheet ? opts.sheet : \"Sheet1\";\n\tvar sheets = {}; sheets[n] = sheet;\n\treturn { SheetNames: [n], Sheets: sheets };\n}\n\nfunction sheet_add_aoa(_ws, data, opts) {\n\tvar o = opts || {};\n\tvar dense = _ws ? Array.isArray(_ws) : o.dense;\n\tif(DENSE != null && dense == null) dense = DENSE;\n\tvar ws = _ws || (dense ? ([]) : ({}));\n\tvar _R = 0, _C = 0;\n\tif(ws && o.origin != null) {\n\t\tif(typeof o.origin == 'number') _R = o.origin;\n\t\telse {\n\t\t\tvar _origin = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n\t\t\t_R = _origin.r; _C = _origin.c;\n\t\t}\n\t}\n\tvar range = ({s: {c:10000000, r:10000000}, e: {c:0, r:0}});\n\tif(ws['!ref']) {\n\t\tvar _range = safe_decode_range(ws['!ref']);\n\t\trange.s.c = _range.s.c;\n\t\trange.s.r = _range.s.r;\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\n\t\tif(_R == -1) range.e.r = _R = _range.e.r + 1;\n\t}\n\tfor(var R = 0; R != data.length; ++R) {\n\t\tif(!data[R]) continue;\n\t\tif(!Array.isArray(data[R])) throw new Error(\"aoa_to_sheet expects an array of arrays\");\n\t\tfor(var C = 0; C != data[R].length; ++C) {\n\t\t\tif(typeof data[R][C] === 'undefined') continue;\n\t\t\tvar cell = ({v: data[R][C] });\n\t\t\tvar __R = _R + R, __C = _C + C;\n\t\t\tif(range.s.r > __R) range.s.r = __R;\n\t\t\tif(range.s.c > __C) range.s.c = __C;\n\t\t\tif(range.e.r < __R) range.e.r = __R;\n\t\t\tif(range.e.c < __C) range.e.c = __C;\n\t\t\tif(data[R][C] && typeof data[R][C] === 'object' && !Array.isArray(data[R][C]) && !(data[R][C] instanceof Date)) cell = data[R][C];\n\t\t\telse {\n\t\t\t\tif(Array.isArray(cell.v)) { cell.f = data[R][C][1]; cell.v = cell.v[0]; }\n\t\t\t\tif(cell.v === null) { if(cell.f) cell.t = 'n'; else if(!o.sheetStubs) continue; else cell.t = 'z'; }\n\t\t\t\telse if(typeof cell.v === 'number') cell.t = 'n';\n\t\t\t\telse if(typeof cell.v === 'boolean') cell.t = 'b';\n\t\t\t\telse if(cell.v instanceof Date) {\n\t\t\t\t\tcell.z = o.dateNF || SSF._table[14];\n\t\t\t\t\tif(o.cellDates) { cell.t = 'd'; cell.w = SSF.format(cell.z, datenum(cell.v)); }\n\t\t\t\t\telse { cell.t = 'n'; cell.v = datenum(cell.v); cell.w = SSF.format(cell.z, cell.v); }\n\t\t\t\t}\n\t\t\t\telse cell.t = 's';\n\t\t\t}\n\t\t\tif(dense) {\n\t\t\t\tif(!ws[__R]) ws[__R] = [];\n\t\t\t\tws[__R][__C] = cell;\n\t\t\t} else {\n\t\t\t\tvar cell_ref = encode_cell(({c:__C,r:__R}));\n\t\t\t\tws[cell_ref] = cell;\n\t\t\t}\n\t\t}\n\t}\n\tif(range.s.c < 10000000) ws['!ref'] = encode_range(range);\n\treturn ws;\n}\nfunction aoa_to_sheet(data, opts) { return sheet_add_aoa(null, data, opts); }\n\nfunction write_UInt32LE(x, o) {\n\tif(!o) o = new_buf(4);\n\to.write_shift(4, x);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.168 */\nfunction parse_XLWideString(data) {\n\tvar cchCharacters = data.read_shift(4);\n\treturn cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLWideString(data, o) {\n\tvar _null = false; if(o == null) { _null = true; o = new_buf(4+2*data.length); }\n\to.write_shift(4, data.length);\n\tif(data.length > 0) o.write_shift(0, data, 'dbcs');\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.143 */\nfunction parse_StrRun(data) {\n\treturn { ich: data.read_shift(2), ifnt: data.read_shift(2) };\n}\nfunction write_StrRun(run, o) {\n\tif(!o) o = new_buf(4);\n\to.write_shift(2, run.ich || 0);\n\to.write_shift(2, run.ifnt || 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.121 */\nfunction parse_RichStr(data, length) {\n\tvar start = data.l;\n\tvar flags = data.read_shift(1);\n\tvar str = parse_XLWideString(data);\n\tvar rgsStrRun = [];\n\tvar z = ({ t: str, h: str });\n\tif((flags & 1) !== 0) { /* fRichStr */\n\t\t/* TODO: formatted string */\n\t\tvar dwSizeStrRun = data.read_shift(4);\n\t\tfor(var i = 0; i != dwSizeStrRun; ++i) rgsStrRun.push(parse_StrRun(data));\n\t\tz.r = rgsStrRun;\n\t}\n\telse z.r = [{ich:0, ifnt:0}];\n\t//if((flags & 2) !== 0) { /* fExtStr */\n\t//\t/* TODO: phonetic string */\n\t//}\n\tdata.l = start + length;\n\treturn z;\n}\nfunction write_RichStr(str, o) {\n\t/* TODO: formatted string */\n\tvar _null = false; if(o == null) { _null = true; o = new_buf(15+4*str.t.length); }\n\to.write_shift(1,0);\n\twrite_XLWideString(str.t, o);\n\treturn _null ? o.slice(0, o.l) : o;\n}\n/* [MS-XLSB] 2.4.328 BrtCommentText (RichStr w/1 run) */\nvar parse_BrtCommentText = parse_RichStr;\nfunction write_BrtCommentText(str, o) {\n\t/* TODO: formatted string */\n\tvar _null = false; if(o == null) { _null = true; o = new_buf(23+4*str.t.length); }\n\to.write_shift(1,1);\n\twrite_XLWideString(str.t, o);\n\to.write_shift(4,1);\n\twrite_StrRun({ich:0,ifnt:0}, o);\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.9 */\nfunction parse_XLSBCell(data) {\n\tvar col = data.read_shift(4);\n\tvar iStyleRef = data.read_shift(2);\n\tiStyleRef += data.read_shift(1) <<16;\n\tdata.l++; //var fPhShow = data.read_shift(1);\n\treturn { c:col, iStyleRef: iStyleRef };\n}\nfunction write_XLSBCell(cell, o) {\n\tif(o == null) o = new_buf(8);\n\to.write_shift(-4, cell.c);\n\to.write_shift(3, cell.iStyleRef || cell.s);\n\to.write_shift(1, 0); /* fPhShow */\n\treturn o;\n}\n\n\n/* [MS-XLSB] 2.5.21 */\nvar parse_XLSBCodeName = parse_XLWideString;\nvar write_XLSBCodeName = write_XLWideString;\n\n/* [MS-XLSB] 2.5.166 */\nfunction parse_XLNullableWideString(data) {\n\tvar cchCharacters = data.read_shift(4);\n\treturn cchCharacters === 0 || cchCharacters === 0xFFFFFFFF ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLNullableWideString(data, o) {\n\tvar _null = false; if(o == null) { _null = true; o = new_buf(127); }\n\to.write_shift(4, data.length > 0 ? data.length : 0xFFFFFFFF);\n\tif(data.length > 0) o.write_shift(0, data, 'dbcs');\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.165 */\nvar parse_XLNameWideString = parse_XLWideString;\n//var write_XLNameWideString = write_XLWideString;\n\n/* [MS-XLSB] 2.5.114 */\nvar parse_RelID = parse_XLNullableWideString;\nvar write_RelID = write_XLNullableWideString;\n\n\n/* [MS-XLS] 2.5.217 ; [MS-XLSB] 2.5.122 */\nfunction parse_RkNumber(data) {\n\tvar b = data.slice(data.l, data.l+4);\n\tvar fX100 = (b[0] & 1), fInt = (b[0] & 2);\n\tdata.l+=4;\n\tb[0] &= 0xFC; // b[0] &= ~3;\n\tvar RK = fInt === 0 ? __double([0,0,0,0,b[0],b[1],b[2],b[3]],0) : __readInt32LE(b,0)>>2;\n\treturn fX100 ? (RK/100) : RK;\n}\nfunction write_RkNumber(data, o) {\n\tif(o == null) o = new_buf(4);\n\tvar fX100 = 0, fInt = 0, d100 = data * 100;\n\tif((data == (data | 0)) && (data >= -(1<<29)) && (data < (1 << 29))) { fInt = 1; }\n\telse if((d100 == (d100 | 0)) && (d100 >= -(1<<29)) && (d100 < (1 << 29))) { fInt = 1; fX100 = 1; }\n\tif(fInt) o.write_shift(-4, ((fX100 ? d100 : data) << 2) + (fX100 + 2));\n\telse throw new Error(\"unsupported RkNumber \" + data); // TODO\n}\n\n\n/* [MS-XLSB] 2.5.117 RfX */\nfunction parse_RfX(data ) {\n\tvar cell = ({s: {}, e: {}});\n\tcell.s.r = data.read_shift(4);\n\tcell.e.r = data.read_shift(4);\n\tcell.s.c = data.read_shift(4);\n\tcell.e.c = data.read_shift(4);\n\treturn cell;\n}\nfunction write_RfX(r, o) {\n\tif(!o) o = new_buf(16);\n\to.write_shift(4, r.s.r);\n\to.write_shift(4, r.e.r);\n\to.write_shift(4, r.s.c);\n\to.write_shift(4, r.e.c);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.153 UncheckedRfX */\nvar parse_UncheckedRfX = parse_RfX;\nvar write_UncheckedRfX = write_RfX;\n\n/* [MS-XLS] 2.5.342 ; [MS-XLSB] 2.5.171 */\n/* TODO: error checking, NaN and Infinity values are not valid Xnum */\nfunction parse_Xnum(data) { return data.read_shift(8, 'f'); }\nfunction write_Xnum(data, o) { return (o || new_buf(8)).write_shift(8, data, 'f'); }\n\n/* [MS-XLSB] 2.5.97.2 */\nvar BErr = {\n0x00: \"#NULL!\",\n0x07: \"#DIV/0!\",\n0x0F: \"#VALUE!\",\n0x17: \"#REF!\",\n0x1D: \"#NAME?\",\n0x24: \"#NUM!\",\n0x2A: \"#N/A\",\n0x2B: \"#GETTING_DATA\",\n0xFF: \"#WTF?\"\n};\nvar RBErr = evert_num(BErr);\n\n/* [MS-XLSB] 2.4.324 BrtColor */\nfunction parse_BrtColor(data) {\n\tvar out = {};\n\tvar d = data.read_shift(1);\n\n\t//var fValidRGB = d & 1;\n\tvar xColorType = d >>> 1;\n\n\tvar index = data.read_shift(1);\n\tvar nTS = data.read_shift(2, 'i');\n\tvar bR = data.read_shift(1);\n\tvar bG = data.read_shift(1);\n\tvar bB = data.read_shift(1);\n\tdata.l++; //var bAlpha = data.read_shift(1);\n\n\tswitch(xColorType) {\n\t\tcase 0: out.auto = 1; break;\n\t\tcase 1:\n\t\t\tout.index = index;\n\t\t\tvar icv = XLSIcv[index];\n\t\t\t/* automatic pseudo index 81 */\n\t\t\tif(icv) out.rgb = rgb2Hex(icv);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t/* if(!fValidRGB) throw new Error(\"invalid\"); */\n\t\t\tout.rgb = rgb2Hex([bR, bG, bB]);\n\t\t\tbreak;\n\t\tcase 3: out.theme = index; break;\n\t}\n\tif(nTS != 0) out.tint = nTS > 0 ? nTS / 32767 : nTS / 32768;\n\n\treturn out;\n}\nfunction write_BrtColor(color, o) {\n\tif(!o) o = new_buf(8);\n\tif(!color||color.auto) { o.write_shift(4, 0); o.write_shift(4, 0); return o; }\n\tif(color.index) {\n\t\to.write_shift(1, 0x02);\n\t\to.write_shift(1, color.index);\n\t} else if(color.theme) {\n\t\to.write_shift(1, 0x06);\n\t\to.write_shift(1, color.theme);\n\t} else {\n\t\to.write_shift(1, 0x05);\n\t\to.write_shift(1, 0);\n\t}\n\tvar nTS = color.tint || 0;\n\tif(nTS > 0) nTS *= 32767;\n\telse if(nTS < 0) nTS *= 32768;\n\to.write_shift(2, nTS);\n\tif(!color.rgb) {\n\t\to.write_shift(2, 0);\n\t\to.write_shift(1, 0);\n\t\to.write_shift(1, 0);\n\t} else {\n\t\tvar rgb = (color.rgb || 'FFFFFF');\n\t\to.write_shift(1, parseInt(rgb.slice(0,2),16));\n\t\to.write_shift(1, parseInt(rgb.slice(2,4),16));\n\t\to.write_shift(1, parseInt(rgb.slice(4,6),16));\n\t\to.write_shift(1, 0xFF);\n\t}\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.52 */\nfunction parse_FontFlags(data) {\n\tvar d = data.read_shift(1);\n\tdata.l++;\n\tvar out = {\n\t\t/* fBold: d & 0x01 */\n\t\tfItalic: d & 0x02,\n\t\t/* fUnderline: d & 0x04 */\n\t\tfStrikeout: d & 0x08,\n\t\tfOutline: d & 0x10,\n\t\tfShadow: d & 0x20,\n\t\tfCondense: d & 0x40,\n\t\tfExtend: d & 0x80\n\t};\n\treturn out;\n}\nfunction write_FontFlags(font, o) {\n\tif(!o) o = new_buf(2);\n\tvar grbit =\n\t\t(font.italic   ? 0x02 : 0) |\n\t\t(font.strike   ? 0x08 : 0) |\n\t\t(font.outline  ? 0x10 : 0) |\n\t\t(font.shadow   ? 0x20 : 0) |\n\t\t(font.condense ? 0x40 : 0) |\n\t\t(font.extend   ? 0x80 : 0);\n\to.write_shift(1, grbit);\n\to.write_shift(1, 0);\n\treturn o;\n}\n\n/* [MS-OLEDS] 2.3.1 and 2.3.2 */\nfunction parse_ClipboardFormatOrString(o, w) {\n\t// $FlowIgnore\n\tvar ClipFmt = {2:\"BITMAP\",3:\"METAFILEPICT\",8:\"DIB\",14:\"ENHMETAFILE\"};\n\tvar m = o.read_shift(4);\n\tswitch(m) {\n\t\tcase 0x00000000: return \"\";\n\t\tcase 0xffffffff: case 0xfffffffe: return ClipFmt[o.read_shift(4)]||\"\";\n\t}\n\tif(m > 0x190) throw new Error(\"Unsupported Clipboard: \" + m.toString(16));\n\to.l -= 4;\n\treturn o.read_shift(0, w == 1 ? \"lpstr\" : \"lpwstr\");\n}\nfunction parse_ClipboardFormatOrAnsiString(o) { return parse_ClipboardFormatOrString(o, 1); }\nfunction parse_ClipboardFormatOrUnicodeString(o) { return parse_ClipboardFormatOrString(o, 2); }\n\n/* [MS-OLEPS] 2.2 PropertyType */\n//var VT_EMPTY    = 0x0000;\n//var VT_NULL     = 0x0001;\nvar VT_I2       = 0x0002;\nvar VT_I4       = 0x0003;\n//var VT_R4       = 0x0004;\n//var VT_R8       = 0x0005;\n//var VT_CY       = 0x0006;\n//var VT_DATE     = 0x0007;\n//var VT_BSTR     = 0x0008;\n//var VT_ERROR    = 0x000A;\nvar VT_BOOL     = 0x000B;\nvar VT_VARIANT  = 0x000C;\n//var VT_DECIMAL  = 0x000E;\n//var VT_I1       = 0x0010;\n//var VT_UI1      = 0x0011;\n//var VT_UI2      = 0x0012;\nvar VT_UI4      = 0x0013;\n//var VT_I8       = 0x0014;\n//var VT_UI8      = 0x0015;\n//var VT_INT      = 0x0016;\n//var VT_UINT     = 0x0017;\nvar VT_LPSTR    = 0x001E;\n//var VT_LPWSTR   = 0x001F;\nvar VT_FILETIME = 0x0040;\nvar VT_BLOB     = 0x0041;\n//var VT_STREAM   = 0x0042;\n//var VT_STORAGE  = 0x0043;\n//var VT_STREAMED_Object  = 0x0044;\n//var VT_STORED_Object    = 0x0045;\n//var VT_BLOB_Object      = 0x0046;\nvar VT_CF       = 0x0047;\n//var VT_CLSID    = 0x0048;\n//var VT_VERSIONED_STREAM = 0x0049;\nvar VT_VECTOR   = 0x1000;\n//var VT_ARRAY    = 0x2000;\n\nvar VT_STRING   = 0x0050; // 2.3.3.1.11 VtString\nvar VT_USTR     = 0x0051; // 2.3.3.1.12 VtUnalignedString\nvar VT_CUSTOM   = [VT_STRING, VT_USTR];\n\n/* [MS-OSHARED] 2.3.3.2.2.1 Document Summary Information PIDDSI */\nvar DocSummaryPIDDSI = {\n0x01: { n: 'CodePage', t: VT_I2 },\n0x02: { n: 'Category', t: VT_STRING },\n0x03: { n: 'PresentationFormat', t: VT_STRING },\n0x04: { n: 'ByteCount', t: VT_I4 },\n0x05: { n: 'LineCount', t: VT_I4 },\n0x06: { n: 'ParagraphCount', t: VT_I4 },\n0x07: { n: 'SlideCount', t: VT_I4 },\n0x08: { n: 'NoteCount', t: VT_I4 },\n0x09: { n: 'HiddenCount', t: VT_I4 },\n0x0a: { n: 'MultimediaClipCount', t: VT_I4 },\n0x0b: { n: 'ScaleCrop', t: VT_BOOL },\n0x0c: { n: 'HeadingPairs', t: VT_VECTOR | VT_VARIANT },\n0x0d: { n: 'TitlesOfParts', t: VT_VECTOR | VT_LPSTR },\n0x0e: { n: 'Manager', t: VT_STRING },\n0x0f: { n: 'Company', t: VT_STRING },\n0x10: { n: 'LinksUpToDate', t: VT_BOOL },\n0x11: { n: 'CharacterCount', t: VT_I4 },\n0x13: { n: 'SharedDoc', t: VT_BOOL },\n0x16: { n: 'HyperlinksChanged', t: VT_BOOL },\n0x17: { n: 'AppVersion', t: VT_I4, p: 'version' },\n0x18: { n: 'DigSig', t: VT_BLOB },\n0x1A: { n: 'ContentType', t: VT_STRING },\n0x1B: { n: 'ContentStatus', t: VT_STRING },\n0x1C: { n: 'Language', t: VT_STRING },\n0x1D: { n: 'Version', t: VT_STRING },\n0xFF: {}\n};\n\n/* [MS-OSHARED] 2.3.3.2.1.1 Summary Information Property Set PIDSI */\nvar SummaryPIDSI = {\n0x01: { n: 'CodePage', t: VT_I2 },\n0x02: { n: 'Title', t: VT_STRING },\n0x03: { n: 'Subject', t: VT_STRING },\n0x04: { n: 'Author', t: VT_STRING },\n0x05: { n: 'Keywords', t: VT_STRING },\n0x06: { n: 'Comments', t: VT_STRING },\n0x07: { n: 'Template', t: VT_STRING },\n0x08: { n: 'LastAuthor', t: VT_STRING },\n0x09: { n: 'RevNumber', t: VT_STRING },\n0x0A: { n: 'EditTime', t: VT_FILETIME },\n0x0B: { n: 'LastPrinted', t: VT_FILETIME },\n0x0C: { n: 'CreatedDate', t: VT_FILETIME },\n0x0D: { n: 'ModifiedDate', t: VT_FILETIME },\n0x0E: { n: 'PageCount', t: VT_I4 },\n0x0F: { n: 'WordCount', t: VT_I4 },\n0x10: { n: 'CharCount', t: VT_I4 },\n0x11: { n: 'Thumbnail', t: VT_CF },\n0x12: { n: 'Application', t: VT_STRING },\n0x13: { n: 'DocSecurity', t: VT_I4 },\n0xFF: {}\n};\n\n/* [MS-OLEPS] 2.18 */\nvar SpecialProperties = {\n0x80000000: { n: 'Locale', t: VT_UI4 },\n0x80000003: { n: 'Behavior', t: VT_UI4 },\n0x72627262: {}\n};\n\n(function() {\n\tfor(var y in SpecialProperties) if(SpecialProperties.hasOwnProperty(y))\n\tDocSummaryPIDDSI[y] = SummaryPIDSI[y] = SpecialProperties[y];\n})();\n\nvar DocSummaryRE = evert_key(DocSummaryPIDDSI, \"n\");\nvar SummaryRE = evert_key(SummaryPIDSI, \"n\");\n\n/* [MS-XLS] 2.4.63 Country/Region codes */\nvar CountryEnum = {\n0x0001: \"US\", // United States\n0x0002: \"CA\", // Canada\n0x0003: \"\", // Latin America (except Brazil)\n0x0007: \"RU\", // Russia\n0x0014: \"EG\", // Egypt\n0x001E: \"GR\", // Greece\n0x001F: \"NL\", // Netherlands\n0x0020: \"BE\", // Belgium\n0x0021: \"FR\", // France\n0x0022: \"ES\", // Spain\n0x0024: \"HU\", // Hungary\n0x0027: \"IT\", // Italy\n0x0029: \"CH\", // Switzerland\n0x002B: \"AT\", // Austria\n0x002C: \"GB\", // United Kingdom\n0x002D: \"DK\", // Denmark\n0x002E: \"SE\", // Sweden\n0x002F: \"NO\", // Norway\n0x0030: \"PL\", // Poland\n0x0031: \"DE\", // Germany\n0x0034: \"MX\", // Mexico\n0x0037: \"BR\", // Brazil\n0x003d: \"AU\", // Australia\n0x0040: \"NZ\", // New Zealand\n0x0042: \"TH\", // Thailand\n0x0051: \"JP\", // Japan\n0x0052: \"KR\", // Korea\n0x0054: \"VN\", // Viet Nam\n0x0056: \"CN\", // China\n0x005A: \"TR\", // Turkey\n0x0069: \"JS\", // Ramastan\n0x00D5: \"DZ\", // Algeria\n0x00D8: \"MA\", // Morocco\n0x00DA: \"LY\", // Libya\n0x015F: \"PT\", // Portugal\n0x0162: \"IS\", // Iceland\n0x0166: \"FI\", // Finland\n0x01A4: \"CZ\", // Czech Republic\n0x0376: \"TW\", // Taiwan\n0x03C1: \"LB\", // Lebanon\n0x03C2: \"JO\", // Jordan\n0x03C3: \"SY\", // Syria\n0x03C4: \"IQ\", // Iraq\n0x03C5: \"KW\", // Kuwait\n0x03C6: \"SA\", // Saudi Arabia\n0x03CB: \"AE\", // United Arab Emirates\n0x03CC: \"IL\", // Israel\n0x03CE: \"QA\", // Qatar\n0x03D5: \"IR\", // Iran\n0xFFFF: \"US\"  // United States\n};\n\n/* [MS-XLS] 2.5.127 */\nvar XLSFillPattern = [\n\tnull,\n\t'solid',\n\t'mediumGray',\n\t'darkGray',\n\t'lightGray',\n\t'darkHorizontal',\n\t'darkVertical',\n\t'darkDown',\n\t'darkUp',\n\t'darkGrid',\n\t'darkTrellis',\n\t'lightHorizontal',\n\t'lightVertical',\n\t'lightDown',\n\t'lightUp',\n\t'lightGrid',\n\t'lightTrellis',\n\t'gray125',\n\t'gray0625'\n];\n\nfunction rgbify(arr) { return arr.map(function(x) { return [(x>>16)&255,(x>>8)&255,x&255]; }); }\n\n/* [MS-XLS] 2.5.161 */\n/* [MS-XLSB] 2.5.75 Icv */\nvar XLSIcv = rgbify([\n\t/* Color Constants */\n\t0x000000,\n\t0xFFFFFF,\n\t0xFF0000,\n\t0x00FF00,\n\t0x0000FF,\n\t0xFFFF00,\n\t0xFF00FF,\n\t0x00FFFF,\n\n\t/* Overridable Defaults */\n\t0x000000,\n\t0xFFFFFF,\n\t0xFF0000,\n\t0x00FF00,\n\t0x0000FF,\n\t0xFFFF00,\n\t0xFF00FF,\n\t0x00FFFF,\n\n\t0x800000,\n\t0x008000,\n\t0x000080,\n\t0x808000,\n\t0x800080,\n\t0x008080,\n\t0xC0C0C0,\n\t0x808080,\n\t0x9999FF,\n\t0x993366,\n\t0xFFFFCC,\n\t0xCCFFFF,\n\t0x660066,\n\t0xFF8080,\n\t0x0066CC,\n\t0xCCCCFF,\n\n\t0x000080,\n\t0xFF00FF,\n\t0xFFFF00,\n\t0x00FFFF,\n\t0x800080,\n\t0x800000,\n\t0x008080,\n\t0x0000FF,\n\t0x00CCFF,\n\t0xCCFFFF,\n\t0xCCFFCC,\n\t0xFFFF99,\n\t0x99CCFF,\n\t0xFF99CC,\n\t0xCC99FF,\n\t0xFFCC99,\n\n\t0x3366FF,\n\t0x33CCCC,\n\t0x99CC00,\n\t0xFFCC00,\n\t0xFF9900,\n\t0xFF6600,\n\t0x666699,\n\t0x969696,\n\t0x003366,\n\t0x339966,\n\t0x003300,\n\t0x333300,\n\t0x993300,\n\t0x993366,\n\t0x333399,\n\t0x333333,\n\n\t/* Other entries to appease BIFF8/12 */\n\t0xFFFFFF, /* 0x40 icvForeground ?? */\n\t0x000000, /* 0x41 icvBackground ?? */\n\t0x000000, /* 0x42 icvFrame ?? */\n\t0x000000, /* 0x43 icv3D ?? */\n\t0x000000, /* 0x44 icv3DText ?? */\n\t0x000000, /* 0x45 icv3DHilite ?? */\n\t0x000000, /* 0x46 icv3DShadow ?? */\n\t0x000000, /* 0x47 icvHilite ?? */\n\t0x000000, /* 0x48 icvCtlText ?? */\n\t0x000000, /* 0x49 icvCtlScrl ?? */\n\t0x000000, /* 0x4A icvCtlInv ?? */\n\t0x000000, /* 0x4B icvCtlBody ?? */\n\t0x000000, /* 0x4C icvCtlFrame ?? */\n\t0x000000, /* 0x4D icvCtlFore ?? */\n\t0x000000, /* 0x4E icvCtlBack ?? */\n\t0x000000, /* 0x4F icvCtlNeutral */\n\t0x000000, /* 0x50 icvInfoBk ?? */\n\t0x000000 /* 0x51 icvInfoText ?? */\n]);\n\n/* Parts enumerated in OPC spec, MS-XLSB and MS-XLSX */\n/* 12.3 Part Summary <SpreadsheetML> */\n/* 14.2 Part Summary <DrawingML> */\n/* [MS-XLSX] 2.1 Part Enumerations ; [MS-XLSB] 2.1.7 Part Enumeration */\nvar ct2type/*{[string]:string}*/ = ({\n\t/* Workbook */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\": \"workbooks\",\n\n\t/* Worksheet */\n\t\"application/vnd.ms-excel.binIndexWs\": \"TODO\", /* Binary Index */\n\n\t/* Macrosheet */\n\t\"application/vnd.ms-excel.intlmacrosheet\": \"TODO\",\n\t\"application/vnd.ms-excel.binIndexMs\": \"TODO\", /* Binary Index */\n\n\t/* File Properties */\n\t\"application/vnd.openxmlformats-package.core-properties+xml\": \"coreprops\",\n\t\"application/vnd.openxmlformats-officedocument.custom-properties+xml\": \"custprops\",\n\t\"application/vnd.openxmlformats-officedocument.extended-properties+xml\": \"extprops\",\n\n\t/* Custom Data Properties */\n\t\"application/vnd.openxmlformats-officedocument.customXmlProperties+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty\": \"TODO\",\n\n\t/* PivotTable */\n\t\"application/vnd.ms-excel.pivotTable\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml\": \"TODO\",\n\n\t/* Chart Colors */\n\t\"application/vnd.ms-office.chartcolorstyle+xml\": \"TODO\",\n\n\t/* Chart Style */\n\t\"application/vnd.ms-office.chartstyle+xml\": \"TODO\",\n\n\t/* Calculation Chain */\n\t\"application/vnd.ms-excel.calcChain\": \"calcchains\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml\": \"calcchains\",\n\n\t/* Printer Settings */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings\": \"TODO\",\n\n\t/* ActiveX */\n\t\"application/vnd.ms-office.activeX\": \"TODO\",\n\t\"application/vnd.ms-office.activeX+xml\": \"TODO\",\n\n\t/* Custom Toolbars */\n\t\"application/vnd.ms-excel.attachedToolbars\": \"TODO\",\n\n\t/* External Data Connections */\n\t\"application/vnd.ms-excel.connections\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\": \"TODO\",\n\n\t/* External Links */\n\t\"application/vnd.ms-excel.externalLink\": \"links\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml\": \"links\",\n\n\t/* Metadata */\n\t\"application/vnd.ms-excel.sheetMetadata\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\": \"TODO\",\n\n\t/* PivotCache */\n\t\"application/vnd.ms-excel.pivotCacheDefinition\": \"TODO\",\n\t\"application/vnd.ms-excel.pivotCacheRecords\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml\": \"TODO\",\n\n\t/* Query Table */\n\t\"application/vnd.ms-excel.queryTable\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml\": \"TODO\",\n\n\t/* Shared Workbook */\n\t\"application/vnd.ms-excel.userNames\": \"TODO\",\n\t\"application/vnd.ms-excel.revisionHeaders\": \"TODO\",\n\t\"application/vnd.ms-excel.revisionLog\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml\": \"TODO\",\n\n\t/* Single Cell Table */\n\t\"application/vnd.ms-excel.tableSingleCells\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml\": \"TODO\",\n\n\t/* Slicer */\n\t\"application/vnd.ms-excel.slicer\": \"TODO\",\n\t\"application/vnd.ms-excel.slicerCache\": \"TODO\",\n\t\"application/vnd.ms-excel.slicer+xml\": \"TODO\",\n\t\"application/vnd.ms-excel.slicerCache+xml\": \"TODO\",\n\n\t/* Sort Map */\n\t\"application/vnd.ms-excel.wsSortMap\": \"TODO\",\n\n\t/* Table */\n\t\"application/vnd.ms-excel.table\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\": \"TODO\",\n\n\t/* Themes */\n\t\"application/vnd.openxmlformats-officedocument.theme+xml\": \"themes\",\n\n\t/* Theme Override */\n\t\"application/vnd.openxmlformats-officedocument.themeOverride+xml\": \"TODO\",\n\n\t/* Timeline */\n\t\"application/vnd.ms-excel.Timeline+xml\": \"TODO\", /* verify */\n\t\"application/vnd.ms-excel.TimelineCache+xml\": \"TODO\", /* verify */\n\n\t/* VBA */\n\t\"application/vnd.ms-office.vbaProject\": \"vba\",\n\t\"application/vnd.ms-office.vbaProjectSignature\": \"vba\",\n\n\t/* Volatile Dependencies */\n\t\"application/vnd.ms-office.volatileDependencies\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml\": \"TODO\",\n\n\t/* Control Properties */\n\t\"application/vnd.ms-excel.controlproperties+xml\": \"TODO\",\n\n\t/* Data Model */\n\t\"application/vnd.openxmlformats-officedocument.model+data\": \"TODO\",\n\n\t/* Survey */\n\t\"application/vnd.ms-excel.Survey+xml\": \"TODO\",\n\n\t/* Drawing */\n\t\"application/vnd.openxmlformats-officedocument.drawing+xml\": \"drawings\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml\": \"TODO\",\n\n\t/* VML */\n\t\"application/vnd.openxmlformats-officedocument.vmlDrawing\": \"TODO\",\n\n\t\"application/vnd.openxmlformats-package.relationships+xml\": \"rels\",\n\t\"application/vnd.openxmlformats-officedocument.oleObject\": \"TODO\",\n\n\t/* Image */\n\t\"image/png\": \"TODO\",\n\n\t\"sheet\": \"js\"\n});\n\nvar CT_LIST = (function(){\n\tvar o = {\n\t\tworkbooks: {\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\",\n\t\t\txlsm: \"application/vnd.ms-excel.sheet.macroEnabled.main+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.sheet.binary.macroEnabled.main\",\n\t\t\txlam: \"application/vnd.ms-excel.addin.macroEnabled.main+xml\",\n\t\t\txltx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\"\n\t\t},\n\t\tstrs: { /* Shared Strings */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.sharedStrings\"\n\t\t},\n\t\tcomments: { /* Comments */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.comments\"\n\t\t},\n\t\tsheets: { /* Worksheet */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.worksheet\"\n\t\t},\n\t\tcharts: { /* Chartsheet */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.chartsheet\"\n\t\t},\n\t\tdialogs: { /* Dialogsheet */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.dialogsheet\"\n\t\t},\n\t\tmacros: { /* Macrosheet (Excel 4.0 Macros) */\n\t\t\txlsx: \"application/vnd.ms-excel.macrosheet+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.macrosheet\"\n\t\t},\n\t\tstyles: { /* Styles */\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\",\n\t\t\txlsb: \"application/vnd.ms-excel.styles\"\n\t\t}\n\t};\n\tkeys(o).forEach(function(k) { [\"xlsm\", \"xlam\"].forEach(function(v) { if(!o[k][v]) o[k][v] = o[k].xlsx; }); });\n\tkeys(o).forEach(function(k){ keys(o[k]).forEach(function(v) { ct2type[o[k][v]] = k; }); });\n\treturn o;\n})();\n\nvar type2ct/*{[string]:Array<string>}*/ = evert_arr(ct2type);\n\nXMLNS.CT = 'http://schemas.openxmlformats.org/package/2006/content-types';\n\nfunction new_ct() {\n\treturn ({\n\t\tworkbooks:[], sheets:[], charts:[], dialogs:[], macros:[],\n\t\trels:[], strs:[], comments:[], links:[],\n\t\tcoreprops:[], extprops:[], custprops:[], themes:[], styles:[],\n\t\tcalcchains:[], vba: [], drawings: [],\n\t\tTODO:[], xmlns: \"\" });\n}\n\nfunction parse_ct(data) {\n\tvar ct = new_ct();\n\tif(!data || !data.match) return ct;\n\tvar ctext = {};\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0].replace(nsregex,\"<\")) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<Types': ct.xmlns = y['xmlns' + (y[0].match(/<(\\w+):/)||[\"\",\"\"])[1] ]; break;\n\t\t\tcase '<Default': ctext[y.Extension] = y.ContentType; break;\n\t\t\tcase '<Override':\n\t\t\t\tif(ct[ct2type[y.ContentType]] !== undefined) ct[ct2type[y.ContentType]].push(y.PartName);\n\t\t\t\tbreak;\n\t\t}\n\t});\n\tif(ct.xmlns !== XMLNS.CT) throw new Error(\"Unknown Namespace: \" + ct.xmlns);\n\tct.calcchain = ct.calcchains.length > 0 ? ct.calcchains[0] : \"\";\n\tct.sst = ct.strs.length > 0 ? ct.strs[0] : \"\";\n\tct.style = ct.styles.length > 0 ? ct.styles[0] : \"\";\n\tct.defaults = ctext;\n\tdelete ct.calcchains;\n\treturn ct;\n}\n\nvar CTYPE_XML_ROOT = writextag('Types', null, {\n\t'xmlns': XMLNS.CT,\n\t'xmlns:xsd': XMLNS.xsd,\n\t'xmlns:xsi': XMLNS.xsi\n});\n\nvar CTYPE_DEFAULTS = [\n\t['xml', 'application/xml'],\n\t['bin', 'application/vnd.ms-excel.sheet.binary.macroEnabled.main'],\n\t['vml', 'application/vnd.openxmlformats-officedocument.vmlDrawing'],\n\t/* from test files */\n\t['bmp', 'image/bmp'],\n\t['png', 'image/png'],\n\t['gif', 'image/gif'],\n\t['emf', 'image/x-emf'],\n\t['wmf', 'image/x-wmf'],\n\t['jpg', 'image/jpeg'], ['jpeg', 'image/jpeg'],\n\t['tif', 'image/tiff'], ['tiff', 'image/tiff'],\n\t['pdf', 'application/pdf'],\n\t['rels', type2ct.rels[0]]\n].map(function(x) {\n\treturn writextag('Default', null, {'Extension':x[0], 'ContentType': x[1]});\n});\n\nfunction write_ct(ct, opts) {\n\tvar o = [], v;\n\to[o.length] = (XML_HEADER);\n\to[o.length] = (CTYPE_XML_ROOT);\n\to = o.concat(CTYPE_DEFAULTS);\n\tvar f1 = function(w) {\n\t\tif(ct[w] && ct[w].length > 0) {\n\t\t\tv = ct[w][0];\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': CT_LIST[w][opts.bookType || 'xlsx']\n\t\t\t}));\n\t\t}\n\t};\n\tvar f2 = function(w) {\n\t\t(ct[w]||[]).forEach(function(v) {\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': CT_LIST[w][opts.bookType || 'xlsx']\n\t\t\t}));\n\t\t});\n\t};\n\tvar f3 = function(t) {\n\t\t(ct[t]||[]).forEach(function(v) {\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': type2ct[t][0]\n\t\t\t}));\n\t\t});\n\t};\n\tf1('workbooks');\n\tf2('sheets');\n\tf2('charts');\n\tf3('themes');\n\t['strs', 'styles'].forEach(f1);\n\t['coreprops', 'extprops', 'custprops'].forEach(f3);\n\tf3('vba');\n\tf3('comments');\n\tf3('drawings');\n\tif(o.length>2){ o[o.length] = ('</Types>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 9.3 Relationships */\nvar RELS = ({\n\tWB: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n\tSHEET: \"http://sheetjs.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n\tHLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\n\tVML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing\",\n\tVBA: \"http://schemas.microsoft.com/office/2006/relationships/vbaProject\"\n});\n\n/* 9.3.3 Representing Relationships */\nfunction get_rels_path(file) {\n\tvar n = file.lastIndexOf(\"/\");\n\treturn file.slice(0,n+1) + '_rels/' + file.slice(n+1) + \".rels\";\n}\n\nfunction parse_rels(data, currentFilePath) {\n\tif (!data) return data;\n\tif (currentFilePath.charAt(0) !== '/') {\n\t\tcurrentFilePath = '/'+currentFilePath;\n\t}\n\tvar rels = {};\n\tvar hash = {};\n\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\t/* 9.3.2.2 OPC_Relationships */\n\t\tif (y[0] === '<Relationship') {\n\t\t\tvar rel = {}; rel.Type = y.Type; rel.Target = y.Target; rel.Id = y.Id; rel.TargetMode = y.TargetMode;\n\t\t\tvar canonictarget = y.TargetMode === 'External' ? y.Target : resolve_path(y.Target, currentFilePath);\n\t\t\trels[canonictarget] = rel;\n\t\t\thash[y.Id] = rel;\n\t\t}\n\t});\n\trels[\"!id\"] = hash;\n\treturn rels;\n}\n\nXMLNS.RELS = 'http://schemas.openxmlformats.org/package/2006/relationships';\n\nvar RELS_ROOT = writextag('Relationships', null, {\n\t//'xmlns:ns0': XMLNS.RELS,\n\t'xmlns': XMLNS.RELS\n});\n\n/* TODO */\nfunction write_rels(rels) {\n\tvar o = [XML_HEADER, RELS_ROOT];\n\tkeys(rels['!id']).forEach(function(rid) {\n\t\to[o.length] = (writextag('Relationship', null, rels['!id'][rid]));\n\t});\n\tif(o.length>2){ o[o.length] = ('</Relationships>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\nfunction add_rels(rels, rId, f, type, relobj) {\n\tif(!relobj) relobj = {};\n\tif(!rels['!id']) rels['!id'] = {};\n\tif(rId < 0) for(rId = 1; rels['!id']['rId' + rId]; ++rId){/* empty */}\n\trelobj.Id = 'rId' + rId;\n\trelobj.Type = type;\n\trelobj.Target = f;\n\tif(relobj.Type == RELS.HLINK) relobj.TargetMode = \"External\";\n\tif(rels['!id'][relobj.Id]) throw new Error(\"Cannot rewrite rId \" + rId);\n\trels['!id'][relobj.Id] = relobj;\n\trels[('/' + relobj.Target).replace(\"//\",\"/\")] = relobj;\n\treturn rId;\n}\n/* Open Document Format for Office Applications (OpenDocument) Version 1.2 */\n/* Part 3 Section 4 Manifest File */\nvar CT_ODS = \"application/vnd.oasis.opendocument.spreadsheet\";\nfunction parse_manifest(d, opts) {\n\tvar str = xlml_normalize(d);\n\tvar Rn;\n\tvar FEtag;\n\twhile((Rn = xlmlregex.exec(str))) switch(Rn[3]) {\n\t\tcase 'manifest': break; // 4.2 <manifest:manifest>\n\t\tcase 'file-entry': // 4.3 <manifest:file-entry>\n\t\t\tFEtag = parsexmltag(Rn[0], false);\n\t\t\tif(FEtag.path == '/' && FEtag.type !== CT_ODS) throw new Error(\"This OpenDocument is not a spreadsheet\");\n\t\t\tbreak;\n\t\tcase 'encryption-data': // 4.4 <manifest:encryption-data>\n\t\tcase 'algorithm': // 4.5 <manifest:algorithm>\n\t\tcase 'start-key-generation': // 4.6 <manifest:start-key-generation>\n\t\tcase 'key-derivation': // 4.7 <manifest:key-derivation>\n\t\t\tthrow new Error(\"Unsupported ODS Encryption\");\n\t\tdefault: if(opts && opts.WTF) throw Rn;\n\t}\n}\n\nfunction write_manifest(manifest) {\n\tvar o = [XML_HEADER];\n\to.push('<manifest:manifest xmlns:manifest=\"urn:oasis:names:tc:opendocument:xmlns:manifest:1.0\" manifest:version=\"1.2\">\\n');\n\to.push('  <manifest:file-entry manifest:full-path=\"/\" manifest:version=\"1.2\" manifest:media-type=\"application/vnd.oasis.opendocument.spreadsheet\"/>\\n');\n\tfor(var i = 0; i < manifest.length; ++i) o.push('  <manifest:file-entry manifest:full-path=\"' + manifest[i][0] + '\" manifest:media-type=\"' + manifest[i][1] + '\"/>\\n');\n\to.push('</manifest:manifest>');\n\treturn o.join(\"\");\n}\n\n/* Part 3 Section 6 Metadata Manifest File */\nfunction write_rdf_type(file, res, tag) {\n\treturn [\n\t\t'  <rdf:Description rdf:about=\"' + file + '\">\\n',\n\t\t'    <rdf:type rdf:resource=\"http://docs.oasis-open.org/ns/office/1.2/meta/' + (tag || \"odf\") + '#' + res + '\"/>\\n',\n\t\t'  </rdf:Description>\\n'\n\t].join(\"\");\n}\nfunction write_rdf_has(base, file) {\n\treturn [\n\t\t'  <rdf:Description rdf:about=\"' + base + '\">\\n',\n\t\t'    <ns0:hasPart xmlns:ns0=\"http://docs.oasis-open.org/ns/office/1.2/meta/pkg#\" rdf:resource=\"' + file + '\"/>\\n',\n\t\t'  </rdf:Description>\\n'\n\t].join(\"\");\n}\nfunction write_rdf(rdf) {\n\tvar o = [XML_HEADER];\n\to.push('<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\\n');\n\tfor(var i = 0; i != rdf.length; ++i) {\n\t\to.push(write_rdf_type(rdf[i][0], rdf[i][1]));\n\t\to.push(write_rdf_has(\"\",rdf[i][0]));\n\t}\n\to.push(write_rdf_type(\"\",\"Document\", \"pkg\"));\n\to.push('</rdf:RDF>');\n\treturn o.join(\"\");\n}\n/* TODO: pull properties */\nvar write_meta_ods = (function() {\n\tvar payload = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><office:document-meta xmlns:office=\"urn:oasis:names:tc:opendocument:xmlns:office:1.0\" xmlns:meta=\"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" office:version=\"1.2\"><office:meta><meta:generator>Sheet' + 'JS ' + XLSX.version + '</meta:generator></office:meta></office:document-meta>';\n\treturn function wmo() {\n\t\treturn payload;\n\t};\n})();\n\n/* ECMA-376 Part II 11.1 Core Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar CORE_PROPS = [\n\t[\"cp:category\", \"Category\"],\n\t[\"cp:contentStatus\", \"ContentStatus\"],\n\t[\"cp:keywords\", \"Keywords\"],\n\t[\"cp:lastModifiedBy\", \"LastAuthor\"],\n\t[\"cp:lastPrinted\", \"LastPrinted\"],\n\t[\"cp:revision\", \"RevNumber\"],\n\t[\"cp:version\", \"Version\"],\n\t[\"dc:creator\", \"Author\"],\n\t[\"dc:description\", \"Comments\"],\n\t[\"dc:identifier\", \"Identifier\"],\n\t[\"dc:language\", \"Language\"],\n\t[\"dc:subject\", \"Subject\"],\n\t[\"dc:title\", \"Title\"],\n\t[\"dcterms:created\", \"CreatedDate\", 'date'],\n\t[\"dcterms:modified\", \"ModifiedDate\", 'date']\n];\n\nXMLNS.CORE_PROPS = \"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\";\nRELS.CORE_PROPS  = 'http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties';\n\nvar CORE_PROPS_REGEX = (function() {\n\tvar r = new Array(CORE_PROPS.length);\n\tfor(var i = 0; i < CORE_PROPS.length; ++i) {\n\t\tvar f = CORE_PROPS[i];\n\t\tvar g = \"(?:\"+ f[0].slice(0,f[0].indexOf(\":\")) +\":)\"+ f[0].slice(f[0].indexOf(\":\")+1);\n\t\tr[i] = new RegExp(\"<\" + g + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + g + \">\");\n\t}\n\treturn r;\n})();\n\nfunction parse_core_props(data) {\n\tvar p = {};\n\tdata = utf8read(data);\n\n\tfor(var i = 0; i < CORE_PROPS.length; ++i) {\n\t\tvar f = CORE_PROPS[i], cur = data.match(CORE_PROPS_REGEX[i]);\n\t\tif(cur != null && cur.length > 0) p[f[1]] = cur[1];\n\t\tif(f[2] === 'date' && p[f[1]]) p[f[1]] = parseDate(p[f[1]]);\n\t}\n\n\treturn p;\n}\n\nvar CORE_PROPS_XML_ROOT = writextag('cp:coreProperties', null, {\n\t//'xmlns': XMLNS.CORE_PROPS,\n\t'xmlns:cp': XMLNS.CORE_PROPS,\n\t'xmlns:dc': XMLNS.dc,\n\t'xmlns:dcterms': XMLNS.dcterms,\n\t'xmlns:dcmitype': XMLNS.dcmitype,\n\t'xmlns:xsi': XMLNS.xsi\n});\n\nfunction cp_doit(f, g, h, o, p) {\n\tif(p[f] != null || g == null || g === \"\") return;\n\tp[f] = g;\n\to[o.length] = (h ? writextag(f,g,h) : writetag(f,g));\n}\n\nfunction write_core_props(cp, _opts) {\n\tvar opts = _opts || {};\n\tvar o = [XML_HEADER, CORE_PROPS_XML_ROOT], p = {};\n\tif(!cp && !opts.Props) return o.join(\"\");\n\n\tif(cp) {\n\t\tif(cp.CreatedDate != null) cp_doit(\"dcterms:created\", typeof cp.CreatedDate === \"string\" ? cp.CreatedDate : write_w3cdtf(cp.CreatedDate, opts.WTF), {\"xsi:type\":\"dcterms:W3CDTF\"}, o, p);\n\t\tif(cp.ModifiedDate != null) cp_doit(\"dcterms:modified\", typeof cp.ModifiedDate === \"string\" ? cp.ModifiedDate : write_w3cdtf(cp.ModifiedDate, opts.WTF), {\"xsi:type\":\"dcterms:W3CDTF\"}, o, p);\n\t}\n\n\tfor(var i = 0; i != CORE_PROPS.length; ++i) {\n\t\tvar f = CORE_PROPS[i];\n\t\tvar v = opts.Props && opts.Props[f[1]] != null ? opts.Props[f[1]] : cp ? cp[f[1]] : null;\n\t\tif(v === true) v = \"1\";\n\t\telse if(v === false) v = \"0\";\n\t\telse if(typeof v == \"number\") v = String(v);\n\t\tif(v != null) cp_doit(f[0], v, null, o, p);\n\t}\n\tif(o.length>2){ o[o.length] = ('</cp:coreProperties>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 15.2.12.3 Extended File Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar EXT_PROPS = [\n\t[\"Application\", \"Application\", \"string\"],\n\t[\"AppVersion\", \"AppVersion\", \"string\"],\n\t[\"Company\", \"Company\", \"string\"],\n\t[\"DocSecurity\", \"DocSecurity\", \"string\"],\n\t[\"Manager\", \"Manager\", \"string\"],\n\t[\"HyperlinksChanged\", \"HyperlinksChanged\", \"bool\"],\n\t[\"SharedDoc\", \"SharedDoc\", \"bool\"],\n\t[\"LinksUpToDate\", \"LinksUpToDate\", \"bool\"],\n\t[\"ScaleCrop\", \"ScaleCrop\", \"bool\"],\n\t[\"HeadingPairs\", \"HeadingPairs\", \"raw\"],\n\t[\"TitlesOfParts\", \"TitlesOfParts\", \"raw\"]\n];\n\nXMLNS.EXT_PROPS = \"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\";\nRELS.EXT_PROPS  = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties';\n\nvar PseudoPropsPairs = [\n\t\"Worksheets\",  \"SheetNames\",\n\t\"NamedRanges\", \"DefinedNames\",\n\t\"Chartsheets\", \"ChartNames\"\n];\nfunction load_props_pairs(HP, TOP, props, opts) {\n\tvar v = [];\n\tif(typeof HP == \"string\") v = parseVector(HP, opts);\n\telse for(var j = 0; j < HP.length; ++j) v = v.concat(HP[j].map(function(hp) { return {v:hp}; }));\n\tvar parts = (typeof TOP == \"string\") ? parseVector(TOP, opts).map(function (x) { return x.v; }) : TOP;\n\tvar idx = 0, len = 0;\n\tif(parts.length > 0) for(var i = 0; i !== v.length; i += 2) {\n\t\tlen = +(v[i+1].v);\n\t\tswitch(v[i].v) {\n\t\t\tcase \"Worksheets\":\n\t\t\tcase \"工作表\":\n\t\t\tcase \"Листы\":\n\t\t\tcase \"أوراق العمل\":\n\t\t\tcase \"ワークシート\":\n\t\t\tcase \"גליונות עבודה\":\n\t\t\tcase \"Arbeitsblätter\":\n\t\t\tcase \"Çalışma Sayfaları\":\n\t\t\tcase \"Feuilles de calcul\":\n\t\t\tcase \"Fogli di lavoro\":\n\t\t\tcase \"Folhas de cálculo\":\n\t\t\tcase \"Planilhas\":\n\t\t\tcase \"Regneark\":\n\t\t\tcase \"Werkbladen\":\n\t\t\t\tprops.Worksheets = len;\n\t\t\t\tprops.SheetNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\n\t\t\tcase \"Named Ranges\":\n\t\t\tcase \"名前付き一覧\":\n\t\t\tcase \"Benannte Bereiche\":\n\t\t\tcase \"Navngivne områder\":\n\t\t\t\tprops.NamedRanges = len;\n\t\t\t\tprops.DefinedNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\n\t\t\tcase \"Charts\":\n\t\t\tcase \"Diagramme\":\n\t\t\t\tprops.Chartsheets = len;\n\t\t\t\tprops.ChartNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\t\t}\n\t\tidx += len;\n\t}\n}\n\nfunction parse_ext_props(data, p, opts) {\n\tvar q = {}; if(!p) p = {};\n\tdata = utf8read(data);\n\n\tEXT_PROPS.forEach(function(f) {\n\t\tswitch(f[2]) {\n\t\t\tcase \"string\": p[f[1]] = (data.match(matchtag(f[0]))||[])[1]; break;\n\t\t\tcase \"bool\": p[f[1]] = (data.match(matchtag(f[0]))||[])[1] === \"true\"; break;\n\t\t\tcase \"raw\":\n\t\t\t\tvar cur = data.match(new RegExp(\"<\" + f[0] + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + f[0] + \">\"));\n\t\t\t\tif(cur && cur.length > 0) q[f[1]] = cur[1];\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tif(q.HeadingPairs && q.TitlesOfParts) load_props_pairs(q.HeadingPairs, q.TitlesOfParts, p, opts);\n\n\treturn p;\n}\n\nvar EXT_PROPS_XML_ROOT = writextag('Properties', null, {\n\t'xmlns': XMLNS.EXT_PROPS,\n\t'xmlns:vt': XMLNS.vt\n});\n\nfunction write_ext_props(cp) {\n\tvar o = [], W = writextag;\n\tif(!cp) cp = {};\n\tcp.Application = \"SheetJS\";\n\to[o.length] = (XML_HEADER);\n\to[o.length] = (EXT_PROPS_XML_ROOT);\n\n\tEXT_PROPS.forEach(function(f) {\n\t\tif(cp[f[1]] === undefined) return;\n\t\tvar v;\n\t\tswitch(f[2]) {\n\t\t\tcase 'string': v = String(cp[f[1]]); break;\n\t\t\tcase 'bool': v = cp[f[1]] ? 'true' : 'false'; break;\n\t\t}\n\t\tif(v !== undefined) o[o.length] = (W(f[0], v));\n\t});\n\n\t/* TODO: HeadingPairs, TitlesOfParts */\n\to[o.length] = (W('HeadingPairs', W('vt:vector', W('vt:variant', '<vt:lpstr>Worksheets</vt:lpstr>')+W('vt:variant', W('vt:i4', String(cp.Worksheets))), {size:2, baseType:\"variant\"})));\n\to[o.length] = (W('TitlesOfParts', W('vt:vector', cp.SheetNames.map(function(s) { return \"<vt:lpstr>\" + escapexml(s) + \"</vt:lpstr>\"; }).join(\"\"), {size: cp.Worksheets, baseType:\"lpstr\"})));\n\tif(o.length>2){ o[o.length] = ('</Properties>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 15.2.12.2 Custom File Properties Part */\nXMLNS.CUST_PROPS = \"http://schemas.openxmlformats.org/officeDocument/2006/custom-properties\";\nRELS.CUST_PROPS  = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties';\n\nvar custregex = /<[^>]+>[^<]*/g;\nfunction parse_cust_props(data, opts) {\n\tvar p = {}, name = \"\";\n\tvar m = data.match(custregex);\n\tif(m) for(var i = 0; i != m.length; ++i) {\n\t\tvar x = m[i], y = parsexmltag(x);\n\t\tswitch(y[0]) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<Properties': break;\n\t\t\tcase '<property': name = y.name; break;\n\t\t\tcase '</property>': name = null; break;\n\t\t\tdefault: if (x.indexOf('<vt:') === 0) {\n\t\t\t\tvar toks = x.split('>');\n\t\t\t\tvar type = toks[0].slice(4), text = toks[1];\n\t\t\t\t/* 22.4.2.32 (CT_Variant). Omit the binary types from 22.4 (Variant Types) */\n\t\t\t\tswitch(type) {\n\t\t\t\t\tcase 'lpstr': case 'bstr': case 'lpwstr':\n\t\t\t\t\t\tp[name] = unescapexml(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'bool':\n\t\t\t\t\t\tp[name] = parsexmlbool(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'i1': case 'i2': case 'i4': case 'i8': case 'int': case 'uint':\n\t\t\t\t\t\tp[name] = parseInt(text, 10);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r4': case 'r8': case 'decimal':\n\t\t\t\t\t\tp[name] = parseFloat(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'filetime': case 'date':\n\t\t\t\t\t\tp[name] = parseDate(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'cy': case 'error':\n\t\t\t\t\t\tp[name] = unescapexml(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif(type.slice(-1) == '/') break;\n\t\t\t\t\t\tif(opts.WTF && typeof console !== 'undefined') console.warn('Unexpected', x, type, toks);\n\t\t\t\t}\n\t\t\t} else if(x.slice(0,2) === \"</\") {/* empty */\n\t\t\t} else if(opts.WTF) throw new Error(x);\n\t\t}\n\t}\n\treturn p;\n}\n\nvar CUST_PROPS_XML_ROOT = writextag('Properties', null, {\n\t'xmlns': XMLNS.CUST_PROPS,\n\t'xmlns:vt': XMLNS.vt\n});\n\nfunction write_cust_props(cp) {\n\tvar o = [XML_HEADER, CUST_PROPS_XML_ROOT];\n\tif(!cp) return o.join(\"\");\n\tvar pid = 1;\n\tkeys(cp).forEach(function custprop(k) { ++pid;\n\t\to[o.length] = (writextag('property', write_vt(cp[k]), {\n\t\t\t'fmtid': '{D5CDD505-2E9C-101B-9397-08002B2CF9AE}',\n\t\t\t'pid': pid,\n\t\t\t'name': k\n\t\t}));\n\t});\n\tif(o.length>2){ o[o.length] = '</Properties>'; o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* Common Name -> XLML Name */\nvar XLMLDocPropsMap = {\n\tTitle: 'Title',\n\tSubject: 'Subject',\n\tAuthor: 'Author',\n\tKeywords: 'Keywords',\n\tComments: 'Description',\n\tLastAuthor: 'LastAuthor',\n\tRevNumber: 'Revision',\n\tApplication: 'AppName',\n\t/* TotalTime: 'TotalTime', */\n\tLastPrinted: 'LastPrinted',\n\tCreatedDate: 'Created',\n\tModifiedDate: 'LastSaved',\n\t/* Pages */\n\t/* Words */\n\t/* Characters */\n\tCategory: 'Category',\n\t/* PresentationFormat */\n\tManager: 'Manager',\n\tCompany: 'Company',\n\t/* Guid */\n\t/* HyperlinkBase */\n\t/* Bytes */\n\t/* Lines */\n\t/* Paragraphs */\n\t/* CharactersWithSpaces */\n\tAppVersion: 'Version',\n\n\tContentStatus: 'ContentStatus', /* NOTE: missing from schema */\n\tIdentifier: 'Identifier', /* NOTE: missing from schema */\n\tLanguage: 'Language' /* NOTE: missing from schema */\n};\nvar evert_XLMLDPM = evert(XLMLDocPropsMap);\n\nfunction xlml_set_prop(Props, tag, val) {\n\ttag = evert_XLMLDPM[tag] || tag;\n\tProps[tag] = val;\n}\n\nfunction xlml_write_docprops(Props, opts) {\n\tvar o = [];\n\tkeys(XLMLDocPropsMap).map(function(m) {\n\t\tfor(var i = 0; i < CORE_PROPS.length; ++i) if(CORE_PROPS[i][1] == m) return CORE_PROPS[i];\n\t\tfor(i = 0; i < EXT_PROPS.length; ++i) if(EXT_PROPS[i][1] == m) return EXT_PROPS[i];\n\t\tthrow m;\n\t}).forEach(function(p) {\n\t\tif(Props[p[1]] == null) return;\n\t\tvar m = opts && opts.Props && opts.Props[p[1]] != null ? opts.Props[p[1]] : Props[p[1]];\n\t\tswitch(p[2]) {\n\t\t\tcase 'date': m = new Date(m).toISOString().replace(/\\.\\d*Z/,\"Z\"); break;\n\t\t}\n\t\tif(typeof m == 'number') m = String(m);\n\t\telse if(m === true || m === false) { m = m ? \"1\" : \"0\"; }\n\t\telse if(m instanceof Date) m = new Date(m).toISOString().replace(/\\.\\d*Z/,\"\");\n\t\to.push(writetag(XLMLDocPropsMap[p[1]] || p[1], m));\n\t});\n\treturn writextag('DocumentProperties', o.join(\"\"), {xmlns:XLMLNS.o });\n}\nfunction xlml_write_custprops(Props, Custprops) {\n\tvar BLACKLIST = [\"Worksheets\",\"SheetNames\"];\n\tvar T = 'CustomDocumentProperties';\n\tvar o = [];\n\tif(Props) keys(Props).forEach(function(k) {\nif(!Props.hasOwnProperty(k)) return;\n\t\tfor(var i = 0; i < CORE_PROPS.length; ++i) if(k == CORE_PROPS[i][1]) return;\n\t\tfor(i = 0; i < EXT_PROPS.length; ++i) if(k == EXT_PROPS[i][1]) return;\n\t\tfor(i = 0; i < BLACKLIST.length; ++i) if(k == BLACKLIST[i]) return;\n\n\t\tvar m = Props[k];\n\t\tvar t = \"string\";\n\t\tif(typeof m == 'number') { t = \"float\"; m = String(m); }\n\t\telse if(m === true || m === false) { t = \"boolean\"; m = m ? \"1\" : \"0\"; }\n\t\telse m = String(m);\n\t\to.push(writextag(escapexmltag(k), m, {\"dt:dt\":t}));\n\t});\n\tif(Custprops) keys(Custprops).forEach(function(k) {\nif(!Custprops.hasOwnProperty(k)) return;\n\t\tif(Props && Props.hasOwnProperty(k)) return;\n\t\tvar m = Custprops[k];\n\t\tvar t = \"string\";\n\t\tif(typeof m == 'number') { t = \"float\"; m = String(m); }\n\t\telse if(m === true || m === false) { t = \"boolean\"; m = m ? \"1\" : \"0\"; }\n\t\telse if(m instanceof Date) { t = \"dateTime.tz\"; m = m.toISOString(); }\n\t\telse m = String(m);\n\t\to.push(writextag(escapexmltag(k), m, {\"dt:dt\":t}));\n\t});\n\treturn '<' + T + ' xmlns=\"' + XLMLNS.o + '\">' + o.join(\"\") + '</' + T + '>';\n}\n/* [MS-DTYP] 2.3.3 FILETIME */\n/* [MS-OLEDS] 2.1.3 FILETIME (Packet Version) */\n/* [MS-OLEPS] 2.8 FILETIME (Packet Version) */\nfunction parse_FILETIME(blob) {\n\tvar dwLowDateTime = blob.read_shift(4), dwHighDateTime = blob.read_shift(4);\n\treturn new Date(((dwHighDateTime/1e7*Math.pow(2,32) + dwLowDateTime/1e7) - 11644473600)*1000).toISOString().replace(/\\.000/,\"\");\n}\nfunction write_FILETIME(time) {\n\tvar date = (typeof time == \"string\") ? new Date(Date.parse(time)) : time;\n\tvar t = date.getTime() / 1000 + 11644473600;\n\tvar l = t % Math.pow(2,32), h = (t - l) / Math.pow(2,32);\n\tl *= 1e7; h *= 1e7;\n\tvar w = (l / Math.pow(2,32)) | 0;\n\tif(w > 0) { l = l % Math.pow(2,32); h += w; }\n\tvar o = new_buf(8); o.write_shift(4, l); o.write_shift(4, h); return o;\n}\n\n/* [MS-OSHARED] 2.3.3.1.4 Lpstr */\nfunction parse_lpstr(blob, type, pad) {\n\tvar start = blob.l;\n\tvar str = blob.read_shift(0, 'lpstr-cp');\n\tif(pad) while((blob.l - start) & 3) ++blob.l;\n\treturn str;\n}\n\n/* [MS-OSHARED] 2.3.3.1.6 Lpwstr */\nfunction parse_lpwstr(blob, type, pad) {\n\tvar str = blob.read_shift(0, 'lpwstr');\n\tif(pad) blob.l += (4 - ((str.length+1) & 3)) & 3;\n\treturn str;\n}\n\n\n/* [MS-OSHARED] 2.3.3.1.11 VtString */\n/* [MS-OSHARED] 2.3.3.1.12 VtUnalignedString */\nfunction parse_VtStringBase(blob, stringType, pad) {\n\tif(stringType === 0x1F /*VT_LPWSTR*/) return parse_lpwstr(blob);\n\treturn parse_lpstr(blob, stringType, pad);\n}\n\nfunction parse_VtString(blob, t, pad) { return parse_VtStringBase(blob, t, pad === false ? 0: 4); }\nfunction parse_VtUnalignedString(blob, t) { if(!t) throw new Error(\"VtUnalignedString must have positive length\"); return parse_VtStringBase(blob, t, 0); }\n\n/* [MS-OSHARED] 2.3.3.1.9 VtVecUnalignedLpstrValue */\nfunction parse_VtVecUnalignedLpstrValue(blob) {\n\tvar length = blob.read_shift(4);\n\tvar ret = [];\n\tfor(var i = 0; i != length; ++i) ret[i] = blob.read_shift(0, 'lpstr-cp').replace(chr0,'');\n\treturn ret;\n}\n\n/* [MS-OSHARED] 2.3.3.1.10 VtVecUnalignedLpstr */\nfunction parse_VtVecUnalignedLpstr(blob) {\n\treturn parse_VtVecUnalignedLpstrValue(blob);\n}\n\n/* [MS-OSHARED] 2.3.3.1.13 VtHeadingPair */\nfunction parse_VtHeadingPair(blob) {\n\tvar headingString = parse_TypedPropertyValue(blob, VT_USTR);\n\tvar headerParts = parse_TypedPropertyValue(blob, VT_I4);\n\treturn [headingString, headerParts];\n}\n\n/* [MS-OSHARED] 2.3.3.1.14 VtVecHeadingPairValue */\nfunction parse_VtVecHeadingPairValue(blob) {\n\tvar cElements = blob.read_shift(4);\n\tvar out = [];\n\tfor(var i = 0; i != cElements / 2; ++i) out.push(parse_VtHeadingPair(blob));\n\treturn out;\n}\n\n/* [MS-OSHARED] 2.3.3.1.15 VtVecHeadingPair */\nfunction parse_VtVecHeadingPair(blob) {\n\t// NOTE: When invoked, wType & padding were already consumed\n\treturn parse_VtVecHeadingPairValue(blob);\n}\n\n/* [MS-OLEPS] 2.18.1 Dictionary (uses 2.17, 2.16) */\nfunction parse_dictionary(blob,CodePage) {\n\tvar cnt = blob.read_shift(4);\n\tvar dict = ({});\n\tfor(var j = 0; j != cnt; ++j) {\n\t\tvar pid = blob.read_shift(4);\n\t\tvar len = blob.read_shift(4);\n\t\tdict[pid] = blob.read_shift(len, (CodePage === 0x4B0 ?'utf16le':'utf8')).replace(chr0,'').replace(chr1,'!');\n\t\tif(CodePage === 0x4B0 && (len % 2)) blob.l += 2;\n\t}\n\tif(blob.l & 3) blob.l = (blob.l>>2+1)<<2;\n\treturn dict;\n}\n\n/* [MS-OLEPS] 2.9 BLOB */\nfunction parse_BLOB(blob) {\n\tvar size = blob.read_shift(4);\n\tvar bytes = blob.slice(blob.l,blob.l+size);\n\tblob.l += size;\n\tif((size & 3) > 0) blob.l += (4 - (size & 3)) & 3;\n\treturn bytes;\n}\n\n/* [MS-OLEPS] 2.11 ClipboardData */\nfunction parse_ClipboardData(blob) {\n\t// TODO\n\tvar o = {};\n\to.Size = blob.read_shift(4);\n\t//o.Format = blob.read_shift(4);\n\tblob.l += o.Size + 3 - (o.Size - 1) % 4;\n\treturn o;\n}\n\n/* [MS-OLEPS] 2.15 TypedPropertyValue */\nfunction parse_TypedPropertyValue(blob, type, _opts) {\n\tvar t = blob.read_shift(2), ret, opts = _opts||{};\n\tblob.l += 2;\n\tif(type !== VT_VARIANT)\n\tif(t !== type && VT_CUSTOM.indexOf(type)===-1) throw new Error('Expected type ' + type + ' saw ' + t);\n\tswitch(type === VT_VARIANT ? t : type) {\n\t\tcase 0x02 /*VT_I2*/: ret = blob.read_shift(2, 'i'); if(!opts.raw) blob.l += 2; return ret;\n\t\tcase 0x03 /*VT_I4*/: ret = blob.read_shift(4, 'i'); return ret;\n\t\tcase 0x0B /*VT_BOOL*/: return blob.read_shift(4) !== 0x0;\n\t\tcase 0x13 /*VT_UI4*/: ret = blob.read_shift(4); return ret;\n\t\tcase 0x1E /*VT_LPSTR*/: return parse_lpstr(blob, t, 4).replace(chr0,'');\n\t\tcase 0x1F /*VT_LPWSTR*/: return parse_lpwstr(blob);\n\t\tcase 0x40 /*VT_FILETIME*/: return parse_FILETIME(blob);\n\t\tcase 0x41 /*VT_BLOB*/: return parse_BLOB(blob);\n\t\tcase 0x47 /*VT_CF*/: return parse_ClipboardData(blob);\n\t\tcase 0x50 /*VT_STRING*/: return parse_VtString(blob, t, !opts.raw).replace(chr0,'');\n\t\tcase 0x51 /*VT_USTR*/: return parse_VtUnalignedString(blob, t/*, 4*/).replace(chr0,'');\n\t\tcase 0x100C /*VT_VECTOR|VT_VARIANT*/: return parse_VtVecHeadingPair(blob);\n\t\tcase 0x101E /*VT_LPSTR*/: return parse_VtVecUnalignedLpstr(blob);\n\t\tdefault: throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + t);\n\t}\n}\nfunction write_TypedPropertyValue(type, value) {\n\tvar o = new_buf(4), p = new_buf(4);\n\to.write_shift(4, type == 0x50 ? 0x1F : type);\n\tswitch(type) {\n\t\tcase 0x03 /*VT_I4*/: p.write_shift(-4, value); break;\n\t\tcase 0x05 /*VT_I4*/: p = new_buf(8); p.write_shift(8, value, 'f'); break;\n\t\tcase 0x0B /*VT_BOOL*/: p.write_shift(4, value ? 0x01 : 0x00); break;\n\t\tcase 0x40 /*VT_FILETIME*/:  p = write_FILETIME(value); break;\n\t\tcase 0x1F /*VT_LPWSTR*/:\n\t\tcase 0x50 /*VT_STRING*/:\np = new_buf(4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n\t\t\tp.write_shift(4, value.length + 1);\n\t\t\tp.write_shift(0, value, \"dbcs\");\n\t\t\twhile(p.l != p.length) p.write_shift(1, 0);\n\t\t\tbreak;\n\t\tdefault: throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + value);\n\t}\n\treturn bconcat([o, p]);\n}\n\n/* [MS-OLEPS] 2.20 PropertySet */\nfunction parse_PropertySet(blob, PIDSI) {\n\tvar start_addr = blob.l;\n\tvar size = blob.read_shift(4);\n\tvar NumProps = blob.read_shift(4);\n\tvar Props = [], i = 0;\n\tvar CodePage = 0;\n\tvar Dictionary = -1, DictObj = ({});\n\tfor(i = 0; i != NumProps; ++i) {\n\t\tvar PropID = blob.read_shift(4);\n\t\tvar Offset = blob.read_shift(4);\n\t\tProps[i] = [PropID, Offset + start_addr];\n\t}\n\tProps.sort(function(x,y) { return x[1] - y[1]; });\n\tvar PropH = {};\n\tfor(i = 0; i != NumProps; ++i) {\n\t\tif(blob.l !== Props[i][1]) {\n\t\t\tvar fail = true;\n\t\t\tif(i>0 && PIDSI) switch(PIDSI[Props[i-1][0]].t) {\n\t\t\t\tcase 0x02 /*VT_I2*/: if(blob.l+2 === Props[i][1]) { blob.l+=2; fail = false; } break;\n\t\t\t\tcase 0x50 /*VT_STRING*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;\n\t\t\t\tcase 0x100C /*VT_VECTOR|VT_VARIANT*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;\n\t\t\t}\n\t\t\tif((!PIDSI||i==0) && blob.l <= Props[i][1]) { fail=false; blob.l = Props[i][1]; }\n\t\t\tif(fail) throw new Error(\"Read Error: Expected address \" + Props[i][1] + ' at ' + blob.l + ' :' + i);\n\t\t}\n\t\tif(PIDSI) {\n\t\t\tvar piddsi = PIDSI[Props[i][0]];\n\t\t\tPropH[piddsi.n] = parse_TypedPropertyValue(blob, piddsi.t, {raw:true});\n\t\t\tif(piddsi.p === 'version') PropH[piddsi.n] = String(PropH[piddsi.n] >> 16) + \".\" + (\"0000\" + String(PropH[piddsi.n] & 0xFFFF)).slice(-4);\n\t\t\tif(piddsi.n == \"CodePage\") switch(PropH[piddsi.n]) {\n\t\t\t\tcase 0: PropH[piddsi.n] = 1252;\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 874:\n\t\t\t\tcase 932:\n\t\t\t\tcase 936:\n\t\t\t\tcase 949:\n\t\t\t\tcase 950:\n\t\t\t\tcase 1250:\n\t\t\t\tcase 1251:\n\t\t\t\tcase 1253:\n\t\t\t\tcase 1254:\n\t\t\t\tcase 1255:\n\t\t\t\tcase 1256:\n\t\t\t\tcase 1257:\n\t\t\t\tcase 1258:\n\t\t\t\tcase 10000:\n\t\t\t\tcase 1200:\n\t\t\t\tcase 1201:\n\t\t\t\tcase 1252:\n\t\t\t\tcase 65000: case -536:\n\t\t\t\tcase 65001: case -535:\n\t\t\t\t\tset_cp(CodePage = (PropH[piddsi.n]>>>0) & 0xFFFF); break;\n\t\t\t\tdefault: throw new Error(\"Unsupported CodePage: \" + PropH[piddsi.n]);\n\t\t\t}\n\t\t} else {\n\t\t\tif(Props[i][0] === 0x1) {\n\t\t\t\tCodePage = PropH.CodePage = (parse_TypedPropertyValue(blob, VT_I2));\n\t\t\t\tset_cp(CodePage);\n\t\t\t\tif(Dictionary !== -1) {\n\t\t\t\t\tvar oldpos = blob.l;\n\t\t\t\t\tblob.l = Props[Dictionary][1];\n\t\t\t\t\tDictObj = parse_dictionary(blob,CodePage);\n\t\t\t\t\tblob.l = oldpos;\n\t\t\t\t}\n\t\t\t} else if(Props[i][0] === 0) {\n\t\t\t\tif(CodePage === 0) { Dictionary = i; blob.l = Props[i+1][1]; continue; }\n\t\t\t\tDictObj = parse_dictionary(blob,CodePage);\n\t\t\t} else {\n\t\t\t\tvar name = DictObj[Props[i][0]];\n\t\t\t\tvar val;\n\t\t\t\t/* [MS-OSHARED] 2.3.3.2.3.1.2 + PROPVARIANT */\n\t\t\t\tswitch(blob[blob.l]) {\n\t\t\t\t\tcase 0x41 /*VT_BLOB*/: blob.l += 4; val = parse_BLOB(blob); break;\n\t\t\t\t\tcase 0x1E /*VT_LPSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]).replace(/\\u0000+$/,\"\"); break;\n\t\t\t\t\tcase 0x1F /*VT_LPWSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]).replace(/\\u0000+$/,\"\"); break;\n\t\t\t\t\tcase 0x03 /*VT_I4*/: blob.l += 4; val = blob.read_shift(4, 'i'); break;\n\t\t\t\t\tcase 0x13 /*VT_UI4*/: blob.l += 4; val = blob.read_shift(4); break;\n\t\t\t\t\tcase 0x05 /*VT_R8*/: blob.l += 4; val = blob.read_shift(8, 'f'); break;\n\t\t\t\t\tcase 0x0B /*VT_BOOL*/: blob.l += 4; val = parsebool(blob, 4); break;\n\t\t\t\t\tcase 0x40 /*VT_FILETIME*/: blob.l += 4; val = parseDate(parse_FILETIME(blob)); break;\n\t\t\t\t\tdefault: throw new Error(\"unparsed value: \" + blob[blob.l]);\n\t\t\t\t}\n\t\t\t\tPropH[name] = val;\n\t\t\t}\n\t\t}\n\t}\n\tblob.l = start_addr + size; /* step ahead to skip padding */\n\treturn PropH;\n}\nvar XLSPSSkip = [ \"CodePage\", \"Thumbnail\", \"_PID_LINKBASE\", \"_PID_HLINKS\", \"SystemIdentifier\", \"FMTID\" ].concat(PseudoPropsPairs);\nfunction guess_property_type(val) {\n\tswitch(typeof val) {\n\t\tcase \"boolean\": return 0x0B;\n\t\tcase \"number\": return ((val|0)==val) ? 0x03 : 0x05;\n\t\tcase \"string\": return 0x1F;\n\t\tcase \"object\": if(val instanceof Date) return 0x40; break;\n\t}\n\treturn -1;\n}\nfunction write_PropertySet(entries, RE, PIDSI) {\n\tvar hdr = new_buf(8), piao = [], prop = [];\n\tvar sz = 8, i = 0;\n\n\tvar pr = new_buf(8), pio = new_buf(8);\n\tpr.write_shift(4, 0x0002);\n\tpr.write_shift(4, 0x04B0);\n\tpio.write_shift(4, 0x0001);\n\tprop.push(pr); piao.push(pio);\n\tsz += 8 + pr.length;\n\n\tif(!RE) {\n\t\tpio = new_buf(8);\n\t\tpio.write_shift(4, 0);\n\t\tpiao.unshift(pio);\n\n\t\tvar bufs = [new_buf(4)];\n\t\tbufs[0].write_shift(4, entries.length);\n\t\tfor(i = 0; i < entries.length; ++i) {\n\t\t\tvar value = entries[i][0];\n\t\t\tpr = new_buf(4 + 4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n\t\t\tpr.write_shift(4, i+2);\n\t\t\tpr.write_shift(4, value.length + 1);\n\t\t\tpr.write_shift(0, value, \"dbcs\");\n\t\t\twhile(pr.l != pr.length) pr.write_shift(1, 0);\n\t\t\tbufs.push(pr);\n\t\t}\n\t\tpr = bconcat(bufs);\n\t\tprop.unshift(pr);\n\t\tsz += 8 + pr.length;\n\t}\n\n\tfor(i = 0; i < entries.length; ++i) {\n\t\tif(RE && !RE[entries[i][0]]) continue;\n\t\tif(XLSPSSkip.indexOf(entries[i][0]) > -1) continue;\n\t\tif(entries[i][1] == null) continue;\n\n\t\tvar val = entries[i][1], idx = 0;\n\t\tif(RE) {\n\t\t\tidx = +RE[entries[i][0]];\n\t\t\tvar pinfo = (PIDSI)[idx];\n\t\t\tif(pinfo.p == \"version\" && typeof val == \"string\") {\nvar arr = val.split(\".\");\n\t\t\t\tval = ((+arr[0])<<16) + ((+arr[1])||0);\n\t\t\t}\n\t\t\tpr = write_TypedPropertyValue(pinfo.t, val);\n\t\t} else {\n\t\t\tvar T = guess_property_type(val);\n\t\t\tif(T == -1) { T = 0x1F; val = String(val); }\n\t\t\tpr = write_TypedPropertyValue(T, val);\n\t\t}\n\t\tprop.push(pr);\n\n\t\tpio = new_buf(8);\n\t\tpio.write_shift(4, !RE ? 2+i : idx);\n\t\tpiao.push(pio);\n\n\t\tsz += 8 + pr.length;\n\t}\n\n\tvar w = 8 * (prop.length + 1);\n\tfor(i = 0; i < prop.length; ++i) { piao[i].write_shift(4, w); w += prop[i].length; }\n\thdr.write_shift(4, sz);\n\thdr.write_shift(4, prop.length);\n\treturn bconcat([hdr].concat(piao).concat(prop));\n}\n\n/* [MS-OLEPS] 2.21 PropertySetStream */\nfunction parse_PropertySetStream(file, PIDSI, clsid) {\n\tvar blob = file.content;\n\tif(!blob) return ({});\n\tprep_blob(blob, 0);\n\n\tvar NumSets, FMTID0, FMTID1, Offset0, Offset1 = 0;\n\tblob.chk('feff', 'Byte Order: ');\n\n\t/*var vers = */blob.read_shift(2); // TODO: check version\n\tvar SystemIdentifier = blob.read_shift(4);\n\tvar CLSID = blob.read_shift(16);\n\tif(CLSID !== CFB.utils.consts.HEADER_CLSID && CLSID !== clsid) throw new Error(\"Bad PropertySet CLSID \" + CLSID);\n\tNumSets = blob.read_shift(4);\n\tif(NumSets !== 1 && NumSets !== 2) throw new Error(\"Unrecognized #Sets: \" + NumSets);\n\tFMTID0 = blob.read_shift(16); Offset0 = blob.read_shift(4);\n\n\tif(NumSets === 1 && Offset0 !== blob.l) throw new Error(\"Length mismatch: \" + Offset0 + \" !== \" + blob.l);\n\telse if(NumSets === 2) { FMTID1 = blob.read_shift(16); Offset1 = blob.read_shift(4); }\n\tvar PSet0 = parse_PropertySet(blob, PIDSI);\n\n\tvar rval = ({ SystemIdentifier: SystemIdentifier });\n\tfor(var y in PSet0) rval[y] = PSet0[y];\n\t//rval.blob = blob;\n\trval.FMTID = FMTID0;\n\t//rval.PSet0 = PSet0;\n\tif(NumSets === 1) return rval;\n\tif(Offset1 - blob.l == 2) blob.l += 2;\n\tif(blob.l !== Offset1) throw new Error(\"Length mismatch 2: \" + blob.l + \" !== \" + Offset1);\n\tvar PSet1;\n\ttry { PSet1 = parse_PropertySet(blob, null); } catch(e) {/* empty */}\n\tfor(y in PSet1) rval[y] = PSet1[y];\n\trval.FMTID = [FMTID0, FMTID1]; // TODO: verify FMTID0/1\n\treturn rval;\n}\nfunction write_PropertySetStream(entries, clsid, RE, PIDSI, entries2, clsid2) {\n\tvar hdr = new_buf(entries2 ? 68 : 48);\n\tvar bufs = [hdr];\n\thdr.write_shift(2, 0xFFFE);\n\thdr.write_shift(2, 0x0000); /* TODO: type 1 props */\n\thdr.write_shift(4, 0x32363237);\n\thdr.write_shift(16, CFB.utils.consts.HEADER_CLSID, \"hex\");\n\thdr.write_shift(4, (entries2 ? 2 : 1));\n\thdr.write_shift(16, clsid, \"hex\");\n\thdr.write_shift(4, (entries2 ? 68 : 48));\n\tvar ps0 = write_PropertySet(entries, RE, PIDSI);\n\tbufs.push(ps0);\n\n\tif(entries2) {\n\t\tvar ps1 = write_PropertySet(entries2, null, null);\n\t\thdr.write_shift(16, clsid2, \"hex\");\n\t\thdr.write_shift(4, 68 + ps0.length);\n\t\tbufs.push(ps1);\n\t}\n\treturn bconcat(bufs);\n}\n\nfunction parsenoop2(blob, length) { blob.read_shift(length); return null; }\nfunction writezeroes(n, o) { if(!o) o=new_buf(n); for(var j=0; j<n; ++j) o.write_shift(1, 0); return o; }\n\nfunction parslurp(blob, length, cb) {\n\tvar arr = [], target = blob.l + length;\n\twhile(blob.l < target) arr.push(cb(blob, target - blob.l));\n\tif(target !== blob.l) throw new Error(\"Slurp error\");\n\treturn arr;\n}\n\nfunction parsebool(blob, length) { return blob.read_shift(length) === 0x1; }\nfunction writebool(v, o) { if(!o) o=new_buf(2); o.write_shift(2, +!!v); return o; }\n\nfunction parseuint16(blob) { return blob.read_shift(2, 'u'); }\nfunction writeuint16(v, o) { if(!o) o=new_buf(2); o.write_shift(2, v); return o; }\nfunction parseuint16a(blob, length) { return parslurp(blob,length,parseuint16);}\n\n/* --- 2.5 Structures --- */\n\n/* [MS-XLS] 2.5.10 Bes (boolean or error) */\nfunction parse_Bes(blob) {\n\tvar v = blob.read_shift(1), t = blob.read_shift(1);\n\treturn t === 0x01 ? v : v === 0x01;\n}\nfunction write_Bes(v, t, o) {\n\tif(!o) o = new_buf(2);\n\to.write_shift(1, +v);\n\to.write_shift(1, ((t == 'e') ? 1 : 0));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.240 ShortXLUnicodeString */\nfunction parse_ShortXLUnicodeString(blob, length, opts) {\n\tvar cch = blob.read_shift(opts && opts.biff >= 12 ? 2 : 1);\n\tvar encoding = 'sbcs-cont';\n\tvar cp = current_codepage;\n\tif(opts && opts.biff >= 8) current_codepage = 1200;\n\tif(!opts || opts.biff == 8 ) {\n\t\tvar fHighByte = blob.read_shift(1);\n\t\tif(fHighByte) { encoding = 'dbcs-cont'; }\n\t} else if(opts.biff == 12) {\n\t\tencoding = 'wstr';\n\t}\n\tif(opts.biff >= 2 && opts.biff <= 5) encoding = 'cpstr';\n\tvar o = cch ? blob.read_shift(cch, encoding) : \"\";\n\tcurrent_codepage = cp;\n\treturn o;\n}\n\n/* 2.5.293 XLUnicodeRichExtendedString */\nfunction parse_XLUnicodeRichExtendedString(blob) {\n\tvar cp = current_codepage;\n\tcurrent_codepage = 1200;\n\tvar cch = blob.read_shift(2), flags = blob.read_shift(1);\n\tvar /*fHighByte = flags & 0x1,*/ fExtSt = flags & 0x4, fRichSt = flags & 0x8;\n\tvar width = 1 + (flags & 0x1); // 0x0 -> utf8, 0x1 -> dbcs\n\tvar cRun = 0, cbExtRst;\n\tvar z = {};\n\tif(fRichSt) cRun = blob.read_shift(2);\n\tif(fExtSt) cbExtRst = blob.read_shift(4);\n\tvar encoding = width == 2 ? 'dbcs-cont' : 'sbcs-cont';\n\tvar msg = cch === 0 ? \"\" : blob.read_shift(cch, encoding);\n\tif(fRichSt) blob.l += 4 * cRun; //TODO: parse this\n\tif(fExtSt) blob.l += cbExtRst; //TODO: parse this\n\tz.t = msg;\n\tif(!fRichSt) { z.raw = \"<t>\" + z.t + \"</t>\"; z.r = z.t; }\n\tcurrent_codepage = cp;\n\treturn z;\n}\n\n/* 2.5.296 XLUnicodeStringNoCch */\nfunction parse_XLUnicodeStringNoCch(blob, cch, opts) {\n\tvar retval;\n\tif(opts) {\n\t\tif(opts.biff >= 2 && opts.biff <= 5) return blob.read_shift(cch, 'cpstr');\n\t\tif(opts.biff >= 12) return blob.read_shift(cch, 'dbcs-cont');\n\t}\n\tvar fHighByte = blob.read_shift(1);\n\tif(fHighByte===0) { retval = blob.read_shift(cch, 'sbcs-cont'); }\n\telse { retval = blob.read_shift(cch, 'dbcs-cont'); }\n\treturn retval;\n}\n\n/* 2.5.294 XLUnicodeString */\nfunction parse_XLUnicodeString(blob, length, opts) {\n\tvar cch = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn parse_XLUnicodeStringNoCch(blob, cch, opts);\n}\n/* BIFF5 override */\nfunction parse_XLUnicodeString2(blob, length, opts) {\n\tif(opts.biff > 5) return parse_XLUnicodeString(blob, length, opts);\n\tvar cch = blob.read_shift(1);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn blob.read_shift(cch, (opts.biff <= 4 || !blob.lens ) ? 'cpstr' : 'sbcs-cont');\n}\n/* TODO: BIFF5 and lower, codepage awareness */\nfunction write_XLUnicodeString(str, opts, o) {\n\tif(!o) o = new_buf(3 + 2 * str.length);\n\to.write_shift(2, str.length);\n\to.write_shift(1, 1);\n\to.write_shift(31, str, 'utf16le');\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.61 ControlInfo */\nfunction parse_ControlInfo(blob) {\n\tvar flags = blob.read_shift(1);\n\tblob.l++;\n\tvar accel = blob.read_shift(2);\n\tblob.l += 2;\n\treturn [flags, accel];\n}\n\n/* [MS-OSHARED] 2.3.7.6 URLMoniker TODO: flags */\nfunction parse_URLMoniker(blob) {\n\tvar len = blob.read_shift(4), start = blob.l;\n\tvar extra = false;\n\tif(len > 24) {\n\t\t/* look ahead */\n\t\tblob.l += len - 24;\n\t\tif(blob.read_shift(16) === \"795881f43b1d7f48af2c825dc4852763\") extra = true;\n\t\tblob.l = start;\n\t}\n\tvar url = blob.read_shift((extra?len-24:len)>>1, 'utf16le').replace(chr0,\"\");\n\tif(extra) blob.l += 24;\n\treturn url;\n}\n\n/* [MS-OSHARED] 2.3.7.8 FileMoniker TODO: all fields */\nfunction parse_FileMoniker(blob) {\n\tblob.l += 2; //var cAnti = blob.read_shift(2);\n\tvar ansiPath = blob.read_shift(0, 'lpstr-ansi');\n\tblob.l += 2; //var endServer = blob.read_shift(2);\n\tif(blob.read_shift(2) != 0xDEAD) throw new Error(\"Bad FileMoniker\");\n\tvar sz = blob.read_shift(4);\n\tif(sz === 0) return ansiPath.replace(/\\\\/g,\"/\");\n\tvar bytes = blob.read_shift(4);\n\tif(blob.read_shift(2) != 3) throw new Error(\"Bad FileMoniker\");\n\tvar unicodePath = blob.read_shift(bytes>>1, 'utf16le').replace(chr0,\"\");\n\treturn unicodePath;\n}\n\n/* [MS-OSHARED] 2.3.7.2 HyperlinkMoniker TODO: all the monikers */\nfunction parse_HyperlinkMoniker(blob, length) {\n\tvar clsid = blob.read_shift(16); length -= 16;\n\tswitch(clsid) {\n\t\tcase \"e0c9ea79f9bace118c8200aa004ba90b\": return parse_URLMoniker(blob, length);\n\t\tcase \"0303000000000000c000000000000046\": return parse_FileMoniker(blob, length);\n\t\tdefault: throw new Error(\"Unsupported Moniker \" + clsid);\n\t}\n}\n\n/* [MS-OSHARED] 2.3.7.9 HyperlinkString */\nfunction parse_HyperlinkString(blob) {\n\tvar len = blob.read_shift(4);\n\tvar o = len > 0 ? blob.read_shift(len, 'utf16le').replace(chr0, \"\") : \"\";\n\treturn o;\n}\n\n/* [MS-OSHARED] 2.3.7.1 Hyperlink Object */\nfunction parse_Hyperlink(blob, length) {\n\tvar end = blob.l + length;\n\tvar sVer = blob.read_shift(4);\n\tif(sVer !== 2) throw new Error(\"Unrecognized streamVersion: \" + sVer);\n\tvar flags = blob.read_shift(2);\n\tblob.l += 2;\n\tvar displayName, targetFrameName, moniker, oleMoniker, Loc=\"\", guid, fileTime;\n\tif(flags & 0x0010) displayName = parse_HyperlinkString(blob, end - blob.l);\n\tif(flags & 0x0080) targetFrameName = parse_HyperlinkString(blob, end - blob.l);\n\tif((flags & 0x0101) === 0x0101) moniker = parse_HyperlinkString(blob, end - blob.l);\n\tif((flags & 0x0101) === 0x0001) oleMoniker = parse_HyperlinkMoniker(blob, end - blob.l);\n\tif(flags & 0x0008) Loc = parse_HyperlinkString(blob, end - blob.l);\n\tif(flags & 0x0020) guid = blob.read_shift(16);\n\tif(flags & 0x0040) fileTime = parse_FILETIME(blob/*, 8*/);\n\tblob.l = end;\n\tvar target = targetFrameName||moniker||oleMoniker||\"\";\n\tif(target && Loc) target+=\"#\"+Loc;\n\tif(!target) target = \"#\" + Loc;\n\tvar out = ({Target:target});\n\tif(guid) out.guid = guid;\n\tif(fileTime) out.time = fileTime;\n\tif(displayName) out.Tooltip = displayName;\n\treturn out;\n}\nfunction write_Hyperlink(hl) {\n\tvar out = new_buf(512), i = 0;\n\tvar Target = hl.Target;\n\tvar F = Target.indexOf(\"#\") > -1 ? 0x1f : 0x17;\n\tswitch(Target.charAt(0)) { case \"#\": F=0x1c; break; case \".\": F&=~2; break; }\n\tout.write_shift(4,2); out.write_shift(4, F);\n\tvar data = [8,6815827,6619237,4849780,83]; for(i = 0; i < data.length; ++i) out.write_shift(4, data[i]);\n\tif(F == 0x1C) {\n\t\tTarget = Target.slice(1);\n\t\tout.write_shift(4, Target.length + 1);\n\t\tfor(i = 0; i < Target.length; ++i) out.write_shift(2, Target.charCodeAt(i));\n\t\tout.write_shift(2, 0);\n\t} else if(F & 0x02) {\n\t\tdata = \"e0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n\t\tfor(i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n\t\tout.write_shift(4, 2*(Target.length + 1));\n\t\tfor(i = 0; i < Target.length; ++i) out.write_shift(2, Target.charCodeAt(i));\n\t\tout.write_shift(2, 0);\n\t} else {\n\t\tdata = \"03 03 00 00 00 00 00 00 c0 00 00 00 00 00 00 46\".split(\" \");\n\t\tfor(i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n\t\tvar P = 0;\n\t\twhile(Target.slice(P*3,P*3+3)==\"../\"||Target.slice(P*3,P*3+3)==\"..\\\\\") ++P;\n\t\tout.write_shift(2, P);\n\t\tout.write_shift(4, Target.length + 1);\n\t\tfor(i = 0; i < Target.length; ++i) out.write_shift(1, Target.charCodeAt(i) & 0xFF);\n\t\tout.write_shift(1, 0);\n\t\tout.write_shift(2, 0xFFFF);\n\t\tout.write_shift(2, 0xDEAD);\n\t\tfor(i = 0; i < 6; ++i) out.write_shift(4, 0);\n\t}\n\treturn out.slice(0, out.l);\n}\n\n/* 2.5.178 LongRGBA */\nfunction parse_LongRGBA(blob) { var r = blob.read_shift(1), g = blob.read_shift(1), b = blob.read_shift(1), a = blob.read_shift(1); return [r,g,b,a]; }\n\n/* 2.5.177 LongRGB */\nfunction parse_LongRGB(blob, length) { var x = parse_LongRGBA(blob, length); x[3] = 0; return x; }\n\n\n/* [MS-XLS] 2.5.19 */\nfunction parse_XLSCell(blob) {\n\tvar rw = blob.read_shift(2); // 0-indexed\n\tvar col = blob.read_shift(2);\n\tvar ixfe = blob.read_shift(2);\n\treturn ({r:rw, c:col, ixfe:ixfe});\n}\nfunction write_XLSCell(R, C, ixfe, o) {\n\tif(!o) o = new_buf(6);\n\to.write_shift(2, R);\n\to.write_shift(2, C);\n\to.write_shift(2, ixfe||0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.134 */\nfunction parse_frtHeader(blob) {\n\tvar rt = blob.read_shift(2);\n\tvar flags = blob.read_shift(2); // TODO: parse these flags\n\tblob.l += 8;\n\treturn {type: rt, flags: flags};\n}\n\n\n\nfunction parse_OptXLUnicodeString(blob, length, opts) { return length === 0 ? \"\" : parse_XLUnicodeString2(blob, length, opts); }\n\n/* [MS-XLS] 2.5.344 */\nfunction parse_XTI(blob, length, opts) {\n\tvar w = opts.biff > 8 ? 4 : 2;\n\tvar iSupBook = blob.read_shift(w), itabFirst = blob.read_shift(w,'i'), itabLast = blob.read_shift(w,'i');\n\treturn [iSupBook, itabFirst, itabLast];\n}\n\n/* [MS-XLS] 2.5.218 */\nfunction parse_RkRec(blob) {\n\tvar ixfe = blob.read_shift(2);\n\tvar RK = parse_RkNumber(blob);\n\treturn [ixfe, RK];\n}\n\n/* [MS-XLS] 2.5.1 */\nfunction parse_AddinUdf(blob, length, opts) {\n\tblob.l += 4; length -= 4;\n\tvar l = blob.l + length;\n\tvar udfName = parse_ShortXLUnicodeString(blob, length, opts);\n\tvar cb = blob.read_shift(2);\n\tl -= blob.l;\n\tif(cb !== l) throw new Error(\"Malformed AddinUdf: padding = \" + l + \" != \" + cb);\n\tblob.l += cb;\n\treturn udfName;\n}\n\n/* [MS-XLS] 2.5.209 TODO: Check sizes */\nfunction parse_Ref8U(blob) {\n\tvar rwFirst = blob.read_shift(2);\n\tvar rwLast = blob.read_shift(2);\n\tvar colFirst = blob.read_shift(2);\n\tvar colLast = blob.read_shift(2);\n\treturn {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};\n}\nfunction write_Ref8U(r, o) {\n\tif(!o) o = new_buf(8);\n\to.write_shift(2, r.s.r);\n\to.write_shift(2, r.e.r);\n\to.write_shift(2, r.s.c);\n\to.write_shift(2, r.e.c);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.211 */\nfunction parse_RefU(blob) {\n\tvar rwFirst = blob.read_shift(2);\n\tvar rwLast = blob.read_shift(2);\n\tvar colFirst = blob.read_shift(1);\n\tvar colLast = blob.read_shift(1);\n\treturn {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};\n}\n\n/* [MS-XLS] 2.5.207 */\nvar parse_Ref = parse_RefU;\n\n/* [MS-XLS] 2.5.143 */\nfunction parse_FtCmo(blob) {\n\tblob.l += 4;\n\tvar ot = blob.read_shift(2);\n\tvar id = blob.read_shift(2);\n\tvar flags = blob.read_shift(2);\n\tblob.l+=12;\n\treturn [id, ot, flags];\n}\n\n/* [MS-XLS] 2.5.149 */\nfunction parse_FtNts(blob) {\n\tvar out = {};\n\tblob.l += 4;\n\tblob.l += 16; // GUID TODO\n\tout.fSharedNote = blob.read_shift(2);\n\tblob.l += 4;\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.142 */\nfunction parse_FtCf(blob) {\n\tvar out = {};\n\tblob.l += 4;\n\tblob.cf = blob.read_shift(2);\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.140 - 2.5.154 and friends */\nfunction parse_FtSkip(blob) { blob.l += 2; blob.l += blob.read_shift(2); }\nvar FtTab = {\n0x00: parse_FtSkip,      /* FtEnd */\n0x04: parse_FtSkip,      /* FtMacro */\n0x05: parse_FtSkip,      /* FtButton */\n0x06: parse_FtSkip,      /* FtGmo */\n0x07: parse_FtCf,        /* FtCf */\n0x08: parse_FtSkip,      /* FtPioGrbit */\n0x09: parse_FtSkip,      /* FtPictFmla */\n0x0A: parse_FtSkip,      /* FtCbls */\n0x0B: parse_FtSkip,      /* FtRbo */\n0x0C: parse_FtSkip,      /* FtSbs */\n0x0D: parse_FtNts,       /* FtNts */\n0x0E: parse_FtSkip,      /* FtSbsFmla */\n0x0F: parse_FtSkip,      /* FtGboData */\n0x10: parse_FtSkip,      /* FtEdoData */\n0x11: parse_FtSkip,      /* FtRboData */\n0x12: parse_FtSkip,      /* FtCblsData */\n0x13: parse_FtSkip,      /* FtLbsData */\n0x14: parse_FtSkip,      /* FtCblsFmla */\n0x15: parse_FtCmo\n};\nfunction parse_FtArray(blob, length) {\n\tvar tgt = blob.l + length;\n\tvar fts = [];\n\twhile(blob.l < tgt) {\n\t\tvar ft = blob.read_shift(2);\n\t\tblob.l-=2;\n\t\ttry {\n\t\t\tfts.push(FtTab[ft](blob, tgt - blob.l));\n\t\t} catch(e) { blob.l = tgt; return fts; }\n\t}\n\tif(blob.l != tgt) blob.l = tgt; //throw new Error(\"bad Object Ft-sequence\");\n\treturn fts;\n}\n\n/* --- 2.4 Records --- */\n\n/* [MS-XLS] 2.4.21 */\nfunction parse_BOF(blob, length) {\n\tvar o = {BIFFVer:0, dt:0};\n\to.BIFFVer = blob.read_shift(2); length -= 2;\n\tif(length >= 2) { o.dt = blob.read_shift(2); blob.l -= 2; }\n\tswitch(o.BIFFVer) {\n\t\tcase 0x0600: /* BIFF8 */\n\t\tcase 0x0500: /* BIFF5 */\n\t\tcase 0x0400: /* BIFF4 */\n\t\tcase 0x0300: /* BIFF3 */\n\t\tcase 0x0200: /* BIFF2 */\n\t\tcase 0x0002: case 0x0007: /* BIFF2 */\n\t\t\tbreak;\n\t\tdefault: if(length > 6) throw new Error(\"Unexpected BIFF Ver \" + o.BIFFVer);\n\t}\n\n\tblob.read_shift(length);\n\treturn o;\n}\nfunction write_BOF(wb, t, o) {\n\tvar h = 0x0600, w = 16;\n\tswitch(o.bookType) {\n\t\tcase 'biff8': break;\n\t\tcase 'biff5': h = 0x0500; w = 8; break;\n\t\tcase 'biff4': h = 0x0004; w = 6; break;\n\t\tcase 'biff3': h = 0x0003; w = 6; break;\n\t\tcase 'biff2': h = 0x0002; w = 4; break;\n\t\tcase 'xla': break;\n\t\tdefault: throw new Error(\"unsupported BIFF version\");\n\t}\n\tvar out = new_buf(w);\n\tout.write_shift(2, h);\n\tout.write_shift(2, t);\n\tif(w > 4) out.write_shift(2, 0x7262);\n\tif(w > 6) out.write_shift(2, 0x07CD);\n\tif(w > 8) {\n\t\tout.write_shift(2, 0xC009);\n\t\tout.write_shift(2, 0x0001);\n\t\tout.write_shift(2, 0x0706);\n\t\tout.write_shift(2, 0x0000);\n\t}\n\treturn out;\n}\n\n\n/* [MS-XLS] 2.4.146 */\nfunction parse_InterfaceHdr(blob, length) {\n\tif(length === 0) return 0x04b0;\n\tif((blob.read_shift(2))!==0x04b0){/* empty */}\n\treturn 0x04b0;\n}\n\n\n/* [MS-XLS] 2.4.349 */\nfunction parse_WriteAccess(blob, length, opts) {\n\tif(opts.enc) { blob.l += length; return \"\"; }\n\tvar l = blob.l;\n\t// TODO: make sure XLUnicodeString doesnt overrun\n\tvar UserName = parse_XLUnicodeString2(blob, 0, opts);\n\tblob.read_shift(length + l - blob.l);\n\treturn UserName;\n}\nfunction write_WriteAccess(s, opts) {\n\tvar b8 = !opts || opts.biff == 8;\n\tvar o = new_buf(b8 ? 112 : 54);\n\to.write_shift(opts.biff == 8 ? 2 : 1, 7);\n\tif(b8) o.write_shift(1, 0);\n\to.write_shift(4, 0x33336853);\n\to.write_shift(4, (0x00534A74 | (b8 ? 0 : 0x20000000)));\n\twhile(o.l < o.length) o.write_shift(1, (b8 ? 0 : 32));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.351 */\nfunction parse_WsBool(blob, length, opts) {\n\tvar flags = opts && opts.biff == 8 || length == 2 ? blob.read_shift(2) : (blob.l += length, 0);\n\treturn { fDialog: flags & 0x10 };\n}\n\n/* [MS-XLS] 2.4.28 */\nfunction parse_BoundSheet8(blob, length, opts) {\n\tvar pos = blob.read_shift(4);\n\tvar hidden = blob.read_shift(1) & 0x03;\n\tvar dt = blob.read_shift(1);\n\tswitch(dt) {\n\t\tcase 0: dt = 'Worksheet'; break;\n\t\tcase 1: dt = 'Macrosheet'; break;\n\t\tcase 2: dt = 'Chartsheet'; break;\n\t\tcase 6: dt = 'VBAModule'; break;\n\t}\n\tvar name = parse_ShortXLUnicodeString(blob, 0, opts);\n\tif(name.length === 0) name = \"Sheet1\";\n\treturn { pos:pos, hs:hidden, dt:dt, name:name };\n}\nfunction write_BoundSheet8(data, opts) {\n\tvar w = (!opts || opts.biff >= 8 ? 2 : 1);\n\tvar o = new_buf(8 + w * data.name.length);\n\to.write_shift(4, data.pos);\n\to.write_shift(1, data.hs || 0);\n\to.write_shift(1, data.dt);\n\to.write_shift(1, data.name.length);\n\tif(opts.biff >= 8) o.write_shift(1, 1);\n\to.write_shift(w * data.name.length, data.name, opts.biff < 8 ? 'sbcs' : 'utf16le');\n\tvar out = o.slice(0, o.l);\n\tout.l = o.l; return out;\n}\n\n/* [MS-XLS] 2.4.265 TODO */\nfunction parse_SST(blob, length) {\n\tvar end = blob.l + length;\n\tvar cnt = blob.read_shift(4);\n\tvar ucnt = blob.read_shift(4);\n\tvar strs = ([]);\n\tfor(var i = 0; i != ucnt && blob.l < end; ++i) {\n\t\tstrs.push(parse_XLUnicodeRichExtendedString(blob));\n\t}\n\tstrs.Count = cnt; strs.Unique = ucnt;\n\treturn strs;\n}\n\n/* [MS-XLS] 2.4.107 */\nfunction parse_ExtSST(blob, length) {\n\tvar extsst = {};\n\textsst.dsst = blob.read_shift(2);\n\tblob.l += length-2;\n\treturn extsst;\n}\n\n\n/* [MS-XLS] 2.4.221 TODO: check BIFF2-4 */\nfunction parse_Row(blob) {\n\tvar z = ({});\n\tz.r = blob.read_shift(2);\n\tz.c = blob.read_shift(2);\n\tz.cnt = blob.read_shift(2) - z.c;\n\tvar miyRw = blob.read_shift(2);\n\tblob.l += 4; // reserved(2), unused(2)\n\tvar flags = blob.read_shift(1); // various flags\n\tblob.l += 3; // reserved(8), ixfe(12), flags(4)\n\tif(flags & 0x07) z.level = flags & 0x07;\n\t// collapsed: flags & 0x10\n\tif(flags & 0x20) z.hidden = true;\n\tif(flags & 0x40) z.hpt = miyRw / 20;\n\treturn z;\n}\n\n\n/* [MS-XLS] 2.4.125 */\nfunction parse_ForceFullCalculation(blob) {\n\tvar header = parse_frtHeader(blob);\n\tif(header.type != 0x08A3) throw new Error(\"Invalid Future Record \" + header.type);\n\tvar fullcalc = blob.read_shift(4);\n\treturn fullcalc !== 0x0;\n}\n\n\n\n\n\n/* [MS-XLS] 2.4.215 rt */\nfunction parse_RecalcId(blob) {\n\tblob.read_shift(2);\n\treturn blob.read_shift(4);\n}\n\n/* [MS-XLS] 2.4.87 */\nfunction parse_DefaultRowHeight(blob, length, opts) {\n\tvar f = 0;\n\tif(!(opts && opts.biff == 2)) {\n\t\tf = blob.read_shift(2);\n\t}\n\tvar miyRw = blob.read_shift(2);\n\tif((opts && opts.biff == 2)) {\n\t\tf = 1 - (miyRw >> 15); miyRw &= 0x7fff;\n\t}\n\tvar fl = {Unsynced:f&1,DyZero:(f&2)>>1,ExAsc:(f&4)>>2,ExDsc:(f&8)>>3};\n\treturn [fl, miyRw];\n}\n\n/* [MS-XLS] 2.4.345 TODO */\nfunction parse_Window1(blob) {\n\tvar xWn = blob.read_shift(2), yWn = blob.read_shift(2), dxWn = blob.read_shift(2), dyWn = blob.read_shift(2);\n\tvar flags = blob.read_shift(2), iTabCur = blob.read_shift(2), iTabFirst = blob.read_shift(2);\n\tvar ctabSel = blob.read_shift(2), wTabRatio = blob.read_shift(2);\n\treturn { Pos: [xWn, yWn], Dim: [dxWn, dyWn], Flags: flags, CurTab: iTabCur,\n\t\tFirstTab: iTabFirst, Selected: ctabSel, TabRatio: wTabRatio };\n}\nfunction write_Window1() {\n\tvar o = new_buf(18);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0x7260);\n\to.write_shift(2, 0x44c0);\n\to.write_shift(2, 0x38);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 1);\n\to.write_shift(2, 0x01f4);\n\treturn o;\n}\n/* [MS-XLS] 2.4.346 TODO */\nfunction parse_Window2(blob, length, opts) {\n\tif(opts && opts.biff >= 2 && opts.biff < 8) return {};\n\tvar f = blob.read_shift(2);\n\treturn { RTL: f & 0x40 };\n}\nfunction write_Window2(view) {\n\tvar o = new_buf(18), f = 0x6b6;\n\tif(view && view.RTL) f |= 0x40;\n\to.write_shift(2, f);\n\to.write_shift(4, 0);\n\to.write_shift(4, 64);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.122 TODO */\nfunction parse_Font(blob, length, opts) {\n\tvar o = {\n\t\tdyHeight: blob.read_shift(2),\n\t\tfl: blob.read_shift(2)\n\t};\n\tswitch((opts && opts.biff) || 8) {\n\t\tcase 2: break;\n\t\tcase 3: case 4: blob.l += 2; break;\n\t\tdefault: blob.l += 10; break;\n\t}\n\to.name = parse_ShortXLUnicodeString(blob, 0, opts);\n\treturn o;\n}\nfunction write_Font(data, opts) {\n\tvar name = data.name || \"Arial\";\n\tvar b5 = (opts && (opts.biff == 5)), w = (b5 ? (15 + name.length) : (16 + 2 * name.length));\n\tvar o = new_buf(w);\n\to.write_shift(2, (data.sz || 12) * 20);\n\to.write_shift(4, 0);\n\to.write_shift(2, 400);\n\to.write_shift(4, 0);\n\to.write_shift(2, 0);\n\to.write_shift(1, name.length);\n\tif(!b5) o.write_shift(1, 1);\n\to.write_shift((b5 ? 1 : 2) * name.length, name, (b5 ? \"sbcs\" : \"utf16le\"));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.149 */\nfunction parse_LabelSst(blob) {\n\tvar cell = parse_XLSCell(blob);\n\tcell.isst = blob.read_shift(4);\n\treturn cell;\n}\n\n/* [MS-XLS] 2.4.148 */\nfunction parse_Label(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar cell = parse_XLSCell(blob, 6);\n\tif(opts.biff == 2) blob.l++;\n\tvar str = parse_XLUnicodeString(blob, target - blob.l, opts);\n\tcell.val = str;\n\treturn cell;\n}\nfunction write_Label(R, C, v, os, opts) {\n\tvar b8 = !opts || opts.biff == 8;\n\tvar o = new_buf(6 + 2 + (+b8) + (1 + b8) * v.length);\n\twrite_XLSCell(R, C, os, o);\n\to.write_shift(2, v.length);\n\tif(b8) o.write_shift(1, 1);\n\to.write_shift((1 + b8) * v.length, v, b8 ? 'utf16le' : 'sbcs');\n\treturn o;\n}\n\n\n/* [MS-XLS] 2.4.126 Number Formats */\nfunction parse_Format(blob, length, opts) {\n\tvar numFmtId = blob.read_shift(2);\n\tvar fmtstr = parse_XLUnicodeString2(blob, 0, opts);\n\treturn [numFmtId, fmtstr];\n}\nfunction write_Format(i, f, opts, o) {\n\tvar b5 = (opts && (opts.biff == 5));\n\tif(!o) o = new_buf(b5 ? (3 + f.length) : (5 + 2 * f.length));\n\to.write_shift(2, i);\n\to.write_shift((b5 ? 1 : 2), f.length);\n\tif(!b5) o.write_shift(1, 1);\n\to.write_shift((b5 ? 1 : 2) * f.length, f, (b5 ? 'sbcs' : 'utf16le'));\n\tvar out = (o.length > o.l) ? o.slice(0, o.l) : o;\n\tif(out.l == null) out.l = out.length;\n\treturn out;\n}\nvar parse_BIFF2Format = parse_XLUnicodeString2;\n\n/* [MS-XLS] 2.4.90 */\nfunction parse_Dimensions(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar w = opts.biff == 8 || !opts.biff ? 4 : 2;\n\tvar r = blob.read_shift(w), R = blob.read_shift(w);\n\tvar c = blob.read_shift(2), C = blob.read_shift(2);\n\tblob.l = end;\n\treturn {s: {r:r, c:c}, e: {r:R, c:C}};\n}\nfunction write_Dimensions(range, opts) {\n\tvar w = opts.biff == 8 || !opts.biff ? 4 : 2;\n\tvar o = new_buf(2*w + 6);\n\to.write_shift(w, range.s.r);\n\to.write_shift(w, range.e.r + 1);\n\to.write_shift(2, range.s.c);\n\to.write_shift(2, range.e.c + 1);\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.220 */\nfunction parse_RK(blob) {\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar rkrec = parse_RkRec(blob);\n\treturn {r:rw, c:col, ixfe:rkrec[0], rknum:rkrec[1]};\n}\n\n/* [MS-XLS] 2.4.175 */\nfunction parse_MulRk(blob, length) {\n\tvar target = blob.l + length - 2;\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar rkrecs = [];\n\twhile(blob.l < target) rkrecs.push(parse_RkRec(blob));\n\tif(blob.l !== target) throw new Error(\"MulRK read error\");\n\tvar lastcol = blob.read_shift(2);\n\tif(rkrecs.length != lastcol - col + 1) throw new Error(\"MulRK length mismatch\");\n\treturn {r:rw, c:col, C:lastcol, rkrec:rkrecs};\n}\n/* [MS-XLS] 2.4.174 */\nfunction parse_MulBlank(blob, length) {\n\tvar target = blob.l + length - 2;\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar ixfes = [];\n\twhile(blob.l < target) ixfes.push(blob.read_shift(2));\n\tif(blob.l !== target) throw new Error(\"MulBlank read error\");\n\tvar lastcol = blob.read_shift(2);\n\tif(ixfes.length != lastcol - col + 1) throw new Error(\"MulBlank length mismatch\");\n\treturn {r:rw, c:col, C:lastcol, ixfe:ixfes};\n}\n\n/* [MS-XLS] 2.5.20 2.5.249 TODO: interpret values here */\nfunction parse_CellStyleXF(blob, length, style, opts) {\n\tvar o = {};\n\tvar a = blob.read_shift(4), b = blob.read_shift(4);\n\tvar c = blob.read_shift(4), d = blob.read_shift(2);\n\to.patternType = XLSFillPattern[c >> 26];\n\n\tif(!opts.cellStyles) return o;\n\to.alc = a & 0x07;\n\to.fWrap = (a >> 3) & 0x01;\n\to.alcV = (a >> 4) & 0x07;\n\to.fJustLast = (a >> 7) & 0x01;\n\to.trot = (a >> 8) & 0xFF;\n\to.cIndent = (a >> 16) & 0x0F;\n\to.fShrinkToFit = (a >> 20) & 0x01;\n\to.iReadOrder = (a >> 22) & 0x02;\n\to.fAtrNum = (a >> 26) & 0x01;\n\to.fAtrFnt = (a >> 27) & 0x01;\n\to.fAtrAlc = (a >> 28) & 0x01;\n\to.fAtrBdr = (a >> 29) & 0x01;\n\to.fAtrPat = (a >> 30) & 0x01;\n\to.fAtrProt = (a >> 31) & 0x01;\n\n\to.dgLeft = b & 0x0F;\n\to.dgRight = (b >> 4) & 0x0F;\n\to.dgTop = (b >> 8) & 0x0F;\n\to.dgBottom = (b >> 12) & 0x0F;\n\to.icvLeft = (b >> 16) & 0x7F;\n\to.icvRight = (b >> 23) & 0x7F;\n\to.grbitDiag = (b >> 30) & 0x03;\n\n\to.icvTop = c & 0x7F;\n\to.icvBottom = (c >> 7) & 0x7F;\n\to.icvDiag = (c >> 14) & 0x7F;\n\to.dgDiag = (c >> 21) & 0x0F;\n\n\to.icvFore = d & 0x7F;\n\to.icvBack = (d >> 7) & 0x7F;\n\to.fsxButton = (d >> 14) & 0x01;\n\treturn o;\n}\n//function parse_CellXF(blob, length, opts) {return parse_CellStyleXF(blob,length,0, opts);}\n//function parse_StyleXF(blob, length, opts) {return parse_CellStyleXF(blob,length,1, opts);}\n\n/* [MS-XLS] 2.4.353 TODO: actually do this right */\nfunction parse_XF(blob, length, opts) {\n\tvar o = {};\n\to.ifnt = blob.read_shift(2); o.numFmtId = blob.read_shift(2); o.flags = blob.read_shift(2);\n\to.fStyle = (o.flags >> 2) & 0x01;\n\tlength -= 6;\n\to.data = parse_CellStyleXF(blob, length, o.fStyle, opts);\n\treturn o;\n}\nfunction write_XF(data, ixfeP, opts, o) {\n\tvar b5 = (opts && (opts.biff == 5));\n\tif(!o) o = new_buf(b5 ? 16 : 20);\n\to.write_shift(2, 0);\n\tif(data.style) {\n\t\to.write_shift(2, (data.numFmtId||0));\n\t\to.write_shift(2, 0xFFF4);\n\t} else {\n\t\to.write_shift(2, (data.numFmtId||0));\n\t\to.write_shift(2, (ixfeP<<4));\n\t}\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\tif(!b5) o.write_shift(4, 0);\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.134 */\nfunction parse_Guts(blob) {\n\tblob.l += 4;\n\tvar out = [blob.read_shift(2), blob.read_shift(2)];\n\tif(out[0] !== 0) out[0]--;\n\tif(out[1] !== 0) out[1]--;\n\tif(out[0] > 7 || out[1] > 7) throw new Error(\"Bad Gutters: \" + out.join(\"|\"));\n\treturn out;\n}\nfunction write_Guts(guts) {\n\tvar o = new_buf(8);\n\to.write_shift(4, 0);\n\to.write_shift(2, guts[0] ? guts[0] + 1 : 0);\n\to.write_shift(2, guts[1] ? guts[1] + 1 : 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.24 */\nfunction parse_BoolErr(blob, length, opts) {\n\tvar cell = parse_XLSCell(blob, 6);\n\tif(opts.biff == 2) ++blob.l;\n\tvar val = parse_Bes(blob, 2);\n\tcell.val = val;\n\tcell.t = (val === true || val === false) ? 'b' : 'e';\n\treturn cell;\n}\nfunction write_BoolErr(R, C, v, os, opts, t) {\n\tvar o = new_buf(8);\n\twrite_XLSCell(R, C, os, o);\n\twrite_Bes(v, t, o);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.180 Number */\nfunction parse_Number(blob) {\n\tvar cell = parse_XLSCell(blob, 6);\n\tvar xnum = parse_Xnum(blob, 8);\n\tcell.val = xnum;\n\treturn cell;\n}\nfunction write_Number(R, C, v, os) {\n\tvar o = new_buf(14);\n\twrite_XLSCell(R, C, os, o);\n\twrite_Xnum(v, o);\n\treturn o;\n}\n\nvar parse_XLHeaderFooter = parse_OptXLUnicodeString; // TODO: parse 2.4.136\n\n/* [MS-XLS] 2.4.271 */\nfunction parse_SupBook(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar ctab = blob.read_shift(2);\n\tvar cch = blob.read_shift(2);\n\topts.sbcch = cch;\n\tif(cch == 0x0401 || cch == 0x3A01) return [cch, ctab];\n\tif(cch < 0x01 || cch >0xff) throw new Error(\"Unexpected SupBook type: \"+cch);\n\tvar virtPath = parse_XLUnicodeStringNoCch(blob, cch);\n\t/* TODO: 2.5.277 Virtual Path */\n\tvar rgst = [];\n\twhile(end > blob.l) rgst.push(parse_XLUnicodeString(blob));\n\treturn [cch, ctab, virtPath, rgst];\n}\n\n/* [MS-XLS] 2.4.105 TODO */\nfunction parse_ExternName(blob, length, opts) {\n\tvar flags = blob.read_shift(2);\n\tvar body;\n\tvar o = ({\n\t\tfBuiltIn: flags & 0x01,\n\t\tfWantAdvise: (flags >>> 1) & 0x01,\n\t\tfWantPict: (flags >>> 2) & 0x01,\n\t\tfOle: (flags >>> 3) & 0x01,\n\t\tfOleLink: (flags >>> 4) & 0x01,\n\t\tcf: (flags >>> 5) & 0x3FF,\n\t\tfIcon: flags >>> 15 & 0x01\n\t});\n\tif(opts.sbcch === 0x3A01) body = parse_AddinUdf(blob, length-2, opts);\n\t//else throw new Error(\"unsupported SupBook cch: \" + opts.sbcch);\n\to.body = body || blob.read_shift(length-2);\n\tif(typeof body === \"string\") o.Name = body;\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.150 TODO */\nvar XLSLblBuiltIn = [\n\t\"_xlnm.Consolidate_Area\",\n\t\"_xlnm.Auto_Open\",\n\t\"_xlnm.Auto_Close\",\n\t\"_xlnm.Extract\",\n\t\"_xlnm.Database\",\n\t\"_xlnm.Criteria\",\n\t\"_xlnm.Print_Area\",\n\t\"_xlnm.Print_Titles\",\n\t\"_xlnm.Recorder\",\n\t\"_xlnm.Data_Form\",\n\t\"_xlnm.Auto_Activate\",\n\t\"_xlnm.Auto_Deactivate\",\n\t\"_xlnm.Sheet_Title\",\n\t\"_xlnm._FilterDatabase\"\n];\nfunction parse_Lbl(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar flags = blob.read_shift(2);\n\tvar chKey = blob.read_shift(1);\n\tvar cch = blob.read_shift(1);\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tvar itab = 0;\n\tif(!opts || opts.biff >= 5) {\n\t\tif(opts.biff != 5) blob.l += 2;\n\t\titab = blob.read_shift(2);\n\t\tif(opts.biff == 5) blob.l += 2;\n\t\tblob.l += 4;\n\t}\n\tvar name = parse_XLUnicodeStringNoCch(blob, cch, opts);\n\tif(flags & 0x20) name = XLSLblBuiltIn[name.charCodeAt(0)];\n\tvar npflen = target - blob.l; if(opts && opts.biff == 2) --npflen;\n\tvar rgce = target == blob.l || cce === 0 ? [] : parse_NameParsedFormula(blob, npflen, opts, cce);\n\treturn {\n\t\tchKey: chKey,\n\t\tName: name,\n\t\titab: itab,\n\t\trgce: rgce\n\t};\n}\n\n/* [MS-XLS] 2.4.106 TODO: verify filename encoding */\nfunction parse_ExternSheet(blob, length, opts) {\n\tif(opts.biff < 8) return parse_BIFF5ExternSheet(blob, length, opts);\n\tvar o = [], target = blob.l + length, len = blob.read_shift(opts.biff > 8 ? 4 : 2);\n\twhile(len-- !== 0) o.push(parse_XTI(blob, opts.biff > 8 ? 12 : 6, opts));\n\t\t// [iSupBook, itabFirst, itabLast];\n\tif(blob.l != target) throw new Error(\"Bad ExternSheet: \" + blob.l + \" != \" + target);\n\treturn o;\n}\nfunction parse_BIFF5ExternSheet(blob, length, opts) {\n\tif(blob[blob.l + 1] == 0x03) blob[blob.l]++;\n\tvar o = parse_ShortXLUnicodeString(blob, length, opts);\n\treturn o.charCodeAt(0) == 0x03 ? o.slice(1) : o;\n}\n\n/* [MS-XLS] 2.4.176 TODO: check older biff */\nfunction parse_NameCmt(blob, length, opts) {\n\tif(opts.biff < 8) { blob.l += length; return; }\n\tvar cchName = blob.read_shift(2);\n\tvar cchComment = blob.read_shift(2);\n\tvar name = parse_XLUnicodeStringNoCch(blob, cchName, opts);\n\tvar comment = parse_XLUnicodeStringNoCch(blob, cchComment, opts);\n\treturn [name, comment];\n}\n\n/* [MS-XLS] 2.4.260 */\nfunction parse_ShrFmla(blob, length, opts) {\n\tvar ref = parse_RefU(blob, 6);\n\tblob.l++;\n\tvar cUse = blob.read_shift(1);\n\tlength -= 8;\n\treturn [parse_SharedParsedFormula(blob, length, opts), cUse, ref];\n}\n\n/* [MS-XLS] 2.4.4 TODO */\nfunction parse_Array(blob, length, opts) {\n\tvar ref = parse_Ref(blob, 6);\n\t/* TODO: fAlwaysCalc */\n\tswitch(opts.biff) {\n\t\tcase 2: blob.l ++; length -= 7; break;\n\t\tcase 3: case 4: blob.l += 2; length -= 8; break;\n\t\tdefault: blob.l += 6; length -= 12;\n\t}\n\treturn [ref, parse_ArrayParsedFormula(blob, length, opts, ref)];\n}\n\n/* [MS-XLS] 2.4.173 */\nfunction parse_MTRSettings(blob) {\n\tvar fMTREnabled = blob.read_shift(4) !== 0x00;\n\tvar fUserSetThreadCount = blob.read_shift(4) !== 0x00;\n\tvar cUserThreadCount = blob.read_shift(4);\n\treturn [fMTREnabled, fUserSetThreadCount, cUserThreadCount];\n}\n\n/* [MS-XLS] 2.5.186 TODO: BIFF5 */\nfunction parse_NoteSh(blob, length, opts) {\n\tif(opts.biff < 8) return;\n\tvar row = blob.read_shift(2), col = blob.read_shift(2);\n\tvar flags = blob.read_shift(2), idObj = blob.read_shift(2);\n\tvar stAuthor = parse_XLUnicodeString2(blob, 0, opts);\n\tif(opts.biff < 8) blob.read_shift(1);\n\treturn [{r:row,c:col}, stAuthor, idObj, flags];\n}\n\n/* [MS-XLS] 2.4.179 */\nfunction parse_Note(blob, length, opts) {\n\t/* TODO: Support revisions */\n\treturn parse_NoteSh(blob, length, opts);\n}\n\n/* [MS-XLS] 2.4.168 */\nfunction parse_MergeCells(blob, length) {\n\tvar merges = [];\n\tvar cmcs = blob.read_shift(2);\n\twhile (cmcs--) merges.push(parse_Ref8U(blob,length));\n\treturn merges;\n}\nfunction write_MergeCells(merges) {\n\tvar o = new_buf(2 + merges.length * 8);\n\to.write_shift(2, merges.length);\n\tfor(var i = 0; i < merges.length; ++i) write_Ref8U(merges[i], o);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.181 TODO: parse all the things! */\nfunction parse_Obj(blob, length, opts) {\n\tif(opts && opts.biff < 8) return parse_BIFF5Obj(blob, length, opts);\n\tvar cmo = parse_FtCmo(blob, 22); // id, ot, flags\n\tvar fts = parse_FtArray(blob, length-22, cmo[1]);\n\treturn { cmo: cmo, ft:fts };\n}\n/* from older spec */\nvar parse_BIFF5OT = [];\nparse_BIFF5OT[0x08] = function(blob, length) {\n\tvar tgt = blob.l + length;\n\tblob.l += 10; // todo\n\tvar cf = blob.read_shift(2);\n\tblob.l += 4;\n\tblob.l += 2; //var cbPictFmla = blob.read_shift(2);\n\tblob.l += 2;\n\tblob.l += 2; //var grbit = blob.read_shift(2);\n\tblob.l += 4;\n\tvar cchName = blob.read_shift(1);\n\tblob.l += cchName; // TODO: stName\n\tblob.l = tgt; // TODO: fmla\n\treturn { fmt:cf };\n};\n\nfunction parse_BIFF5Obj(blob, length, opts) {\n\tblob.l += 4; //var cnt = blob.read_shift(4);\n\tvar ot = blob.read_shift(2);\n\tvar id = blob.read_shift(2);\n\tvar grbit = blob.read_shift(2);\n\tblob.l += 2; //var colL = blob.read_shift(2);\n\tblob.l += 2; //var dxL = blob.read_shift(2);\n\tblob.l += 2; //var rwT = blob.read_shift(2);\n\tblob.l += 2; //var dyT = blob.read_shift(2);\n\tblob.l += 2; //var colR = blob.read_shift(2);\n\tblob.l += 2; //var dxR = blob.read_shift(2);\n\tblob.l += 2; //var rwB = blob.read_shift(2);\n\tblob.l += 2; //var dyB = blob.read_shift(2);\n\tblob.l += 2; //var cbMacro = blob.read_shift(2);\n\tblob.l += 6;\n\tlength -= 36;\n\tvar fts = [];\n\tfts.push((parse_BIFF5OT[ot]||parsenoop)(blob, length, opts));\n\treturn { cmo: [id, ot, grbit], ft:fts };\n}\n\n/* [MS-XLS] 2.4.329 TODO: parse properly */\nfunction parse_TxO(blob, length, opts) {\n\tvar s = blob.l;\n\tvar texts = \"\";\ntry {\n\tblob.l += 4;\n\tvar ot = (opts.lastobj||{cmo:[0,0]}).cmo[1];\n\tvar controlInfo; // eslint-disable-line no-unused-vars\n\tif([0,5,7,11,12,14].indexOf(ot) == -1) blob.l += 6;\n\telse controlInfo = parse_ControlInfo(blob, 6, opts);\n\tvar cchText = blob.read_shift(2);\n\t/*var cbRuns = */blob.read_shift(2);\n\t/*var ifntEmpty = */parseuint16(blob, 2);\n\tvar len = blob.read_shift(2);\n\tblob.l += len;\n\t//var fmla = parse_ObjFmla(blob, s + length - blob.l);\n\n\tfor(var i = 1; i < blob.lens.length-1; ++i) {\n\t\tif(blob.l-s != blob.lens[i]) throw new Error(\"TxO: bad continue record\");\n\t\tvar hdr = blob[blob.l];\n\t\tvar t = parse_XLUnicodeStringNoCch(blob, blob.lens[i+1]-blob.lens[i]-1);\n\t\ttexts += t;\n\t\tif(texts.length >= (hdr ? cchText : 2*cchText)) break;\n\t}\n\tif(texts.length !== cchText && texts.length !== cchText*2) {\n\t\tthrow new Error(\"cchText: \" + cchText + \" != \" + texts.length);\n\t}\n\n\tblob.l = s + length;\n\t/* [MS-XLS] 2.5.272 TxORuns */\n//\tvar rgTxoRuns = [];\n//\tfor(var j = 0; j != cbRuns/8-1; ++j) blob.l += 8;\n//\tvar cchText2 = blob.read_shift(2);\n//\tif(cchText2 !== cchText) throw new Error(\"TxOLastRun mismatch: \" + cchText2 + \" \" + cchText);\n//\tblob.l += 6;\n//\tif(s + length != blob.l) throw new Error(\"TxO \" + (s + length) + \", at \" + blob.l);\n\treturn { t: texts };\n} catch(e) { blob.l = s + length; return { t: texts }; }\n}\n\n/* [MS-XLS] 2.4.140 */\nfunction parse_HLink(blob, length) {\n\tvar ref = parse_Ref8U(blob, 8);\n\tblob.l += 16; /* CLSID */\n\tvar hlink = parse_Hyperlink(blob, length-24);\n\treturn [ref, hlink];\n}\nfunction write_HLink(hl) {\n\tvar O = new_buf(24);\n\tvar ref = decode_cell(hl[0]);\n\tO.write_shift(2, ref.r); O.write_shift(2, ref.r);\n\tO.write_shift(2, ref.c); O.write_shift(2, ref.c);\n\tvar clsid = \"d0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n\tfor(var i = 0; i < 16; ++i) O.write_shift(1, parseInt(clsid[i], 16));\n\treturn bconcat([O, write_Hyperlink(hl[1])]);\n}\n\n\n/* [MS-XLS] 2.4.141 */\nfunction parse_HLinkTooltip(blob, length) {\n\tblob.read_shift(2);\n\tvar ref = parse_Ref8U(blob, 8);\n\tvar wzTooltip = blob.read_shift((length-10)/2, 'dbcs-cont');\n\twzTooltip = wzTooltip.replace(chr0,\"\");\n\treturn [ref, wzTooltip];\n}\nfunction write_HLinkTooltip(hl) {\n\tvar TT = hl[1].Tooltip;\n\tvar O = new_buf(10 + 2 * (TT.length + 1));\n\tO.write_shift(2, 0x0800);\n\tvar ref = decode_cell(hl[0]);\n\tO.write_shift(2, ref.r); O.write_shift(2, ref.r);\n\tO.write_shift(2, ref.c); O.write_shift(2, ref.c);\n\tfor(var i = 0; i < TT.length; ++i) O.write_shift(2, TT.charCodeAt(i));\n\tO.write_shift(2, 0);\n\treturn O;\n}\n\n/* [MS-XLS] 2.4.63 */\nfunction parse_Country(blob) {\n\tvar o = [0,0], d;\n\td = blob.read_shift(2); o[0] = CountryEnum[d] || d;\n\td = blob.read_shift(2); o[1] = CountryEnum[d] || d;\n\treturn o;\n}\nfunction write_Country(o) {\n\tif(!o) o = new_buf(4);\n\to.write_shift(2, 0x01);\n\to.write_shift(2, 0x01);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.50 ClrtClient */\nfunction parse_ClrtClient(blob) {\n\tvar ccv = blob.read_shift(2);\n\tvar o = [];\n\twhile(ccv-->0) o.push(parse_LongRGB(blob, 8));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.188 */\nfunction parse_Palette(blob) {\n\tvar ccv = blob.read_shift(2);\n\tvar o = [];\n\twhile(ccv-->0) o.push(parse_LongRGB(blob, 8));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.354 */\nfunction parse_XFCRC(blob) {\n\tblob.l += 2;\n\tvar o = {cxfs:0, crc:0};\n\to.cxfs = blob.read_shift(2);\n\to.crc = blob.read_shift(4);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.53 TODO: parse flags */\n/* [MS-XLSB] 2.4.323 TODO: parse flags */\nfunction parse_ColInfo(blob, length, opts) {\n\tif(!opts.cellStyles) return parsenoop(blob, length);\n\tvar w = opts && opts.biff >= 12 ? 4 : 2;\n\tvar colFirst = blob.read_shift(w);\n\tvar colLast = blob.read_shift(w);\n\tvar coldx = blob.read_shift(w);\n\tvar ixfe = blob.read_shift(w);\n\tvar flags = blob.read_shift(2);\n\tif(w == 2) blob.l += 2;\n\treturn {s:colFirst, e:colLast, w:coldx, ixfe:ixfe, flags:flags};\n}\n\n/* [MS-XLS] 2.4.257 */\nfunction parse_Setup(blob, length) {\n\tvar o = {};\n\tif(length < 32) return o;\n\tblob.l += 16;\n\to.header = parse_Xnum(blob, 8);\n\to.footer = parse_Xnum(blob, 8);\n\tblob.l += 2;\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.261 */\nfunction parse_ShtProps(blob, length, opts) {\n\tvar def = {area:false};\n\tif(opts.biff != 5) { blob.l += length; return def; }\n\tvar d = blob.read_shift(1); blob.l += 3;\n\tif((d & 0x10)) def.area = true;\n\treturn def;\n}\n\n/* [MS-XLS] 2.4.241 */\nfunction write_RRTabId(n) {\n\tvar out = new_buf(2 * n);\n\tfor(var i = 0; i < n; ++i) out.write_shift(2, i+1);\n\treturn out;\n}\n\nvar parse_Blank = parse_XLSCell; /* [MS-XLS] 2.4.20 Just the cell */\nvar parse_Scl = parseuint16a; /* [MS-XLS] 2.4.247 num, den */\nvar parse_String = parse_XLUnicodeString; /* [MS-XLS] 2.4.268 */\n\n/* --- Specific to versions before BIFF8 --- */\nfunction parse_ImData(blob) {\n\tvar cf = blob.read_shift(2);\n\tvar env = blob.read_shift(2);\n\tvar lcb = blob.read_shift(4);\n\tvar o = {fmt:cf, env:env, len:lcb, data:blob.slice(blob.l,blob.l+lcb)};\n\tblob.l += lcb;\n\treturn o;\n}\n\n/* BIFF2_??? where ??? is the name from [XLS] */\nfunction parse_BIFF2STR(blob, length, opts) {\n\tvar cell = parse_XLSCell(blob, 6);\n\t++blob.l;\n\tvar str = parse_XLUnicodeString2(blob, length-7, opts);\n\tcell.t = 'str';\n\tcell.val = str;\n\treturn cell;\n}\n\nfunction parse_BIFF2NUM(blob) {\n\tvar cell = parse_XLSCell(blob, 6);\n\t++blob.l;\n\tvar num = parse_Xnum(blob, 8);\n\tcell.t = 'n';\n\tcell.val = num;\n\treturn cell;\n}\nfunction write_BIFF2NUM(r, c, val) {\n\tvar out = new_buf(15);\n\twrite_BIFF2Cell(out, r, c);\n\tout.write_shift(8, val, 'f');\n\treturn out;\n}\n\nfunction parse_BIFF2INT(blob) {\n\tvar cell = parse_XLSCell(blob, 6);\n\t++blob.l;\n\tvar num = blob.read_shift(2);\n\tcell.t = 'n';\n\tcell.val = num;\n\treturn cell;\n}\nfunction write_BIFF2INT(r, c, val) {\n\tvar out = new_buf(9);\n\twrite_BIFF2Cell(out, r, c);\n\tout.write_shift(2, val);\n\treturn out;\n}\n\nfunction parse_BIFF2STRING(blob) {\n\tvar cch = blob.read_shift(1);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn blob.read_shift(cch, 'sbcs-cont');\n}\n\n/* TODO: convert to BIFF8 font struct */\nfunction parse_BIFF2FONTXTRA(blob, length) {\n\tblob.l += 6; // unknown\n\tblob.l += 2; // font weight \"bls\"\n\tblob.l += 1; // charset\n\tblob.l += 3; // unknown\n\tblob.l += 1; // font family\n\tblob.l += length - 13;\n}\n\n/* TODO: parse rich text runs */\nfunction parse_RString(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar cell = parse_XLSCell(blob, 6);\n\tvar cch = blob.read_shift(2);\n\tvar str = parse_XLUnicodeStringNoCch(blob, cch, opts);\n\tblob.l = end;\n\tcell.t = 'str';\n\tcell.val = str;\n\treturn cell;\n}\n/* from js-harb (C) 2014-present  SheetJS */\nvar DBF = (function() {\nvar dbf_codepage_map = {\n\t/* Code Pages Supported by Visual FoxPro */\n0x01:   437,           0x02:   850,\n0x03:  1252,           0x04: 10000,\n0x64:   852,           0x65:   866,\n0x66:   865,           0x67:   861,\n0x68:   895,           0x69:   620,\n0x6A:   737,           0x6B:   857,\n0x78:   950,           0x79:   949,\n0x7A:   936,           0x7B:   932,\n0x7C:   874,           0x7D:  1255,\n0x7E:  1256,           0x96: 10007,\n0x97: 10029,           0x98: 10006,\n0xC8:  1250,           0xC9:  1251,\n0xCA:  1254,           0xCB:  1253,\n\n\t/* shapefile DBF extension */\n0x00: 20127,           0x08:   865,\n0x09:   437,           0x0A:   850,\n0x0B:   437,           0x0D:   437,\n0x0E:   850,           0x0F:   437,\n0x10:   850,           0x11:   437,\n0x12:   850,           0x13:   932,\n0x14:   850,           0x15:   437,\n0x16:   850,           0x17:   865,\n0x18:   437,           0x19:   437,\n0x1A:   850,           0x1B:   437,\n0x1C:   863,           0x1D:   850,\n0x1F:   852,           0x22:   852,\n0x23:   852,           0x24:   860,\n0x25:   850,           0x26:   866,\n0x37:   850,           0x40:   852,\n0x4D:   936,           0x4E:   949,\n0x4F:   950,           0x50:   874,\n0x57:  1252,           0x58:  1252,\n0x59:  1252,\n\n0xFF: 16969\n};\n\n/* TODO: find an actual specification */\nfunction dbf_to_aoa(buf, opts) {\n\tvar out = [];\n\t/* TODO: browser based */\n\tvar d = (new_raw_buf(1));\n\tswitch(opts.type) {\n\t\tcase 'base64': d = s2a(Base64.decode(buf)); break;\n\t\tcase 'binary': d = s2a(buf); break;\n\t\tcase 'buffer':\n\t\tcase 'array': d = buf; break;\n\t}\n\tprep_blob(d, 0);\n\t/* header */\n\tvar ft = d.read_shift(1);\n\tvar memo = false;\n\tvar vfp = false, l7 = false;\n\tswitch(ft) {\n\t\tcase 0x02: case 0x03: break;\n\t\tcase 0x30: vfp = true; memo = true; break;\n\t\tcase 0x31: vfp = true; break;\n\t\tcase 0x83: memo = true; break;\n\t\tcase 0x8B: memo = true; break;\n\t\tcase 0x8C: memo = true; l7 = true; break;\n\t\tcase 0xF5: memo = true; break;\n\t\tdefault: throw new Error(\"DBF Unsupported Version: \" + ft.toString(16));\n\t}\n\tvar /*filedate = new Date(),*/ nrow = 0, fpos = 0;\n\tif(ft == 0x02) nrow = d.read_shift(2);\n\t/*filedate = new Date(d.read_shift(1) + 1900, d.read_shift(1) - 1, d.read_shift(1));*/d.l += 3;\n\tif(ft != 0x02) nrow = d.read_shift(4);\n\tif(ft != 0x02) fpos = d.read_shift(2);\n\tvar rlen = d.read_shift(2);\n\n\tvar /*flags = 0,*/ current_cp = 1252;\n\tif(ft != 0x02) {\n\td.l+=16;\n\t/*flags = */d.read_shift(1);\n\t//if(memo && ((flags & 0x02) === 0)) throw new Error(\"DBF Flags \" + flags.toString(16) + \" ft \" + ft.toString(16));\n\n\t/* codepage present in FoxPro */\n\tif(d[d.l] !== 0) current_cp = dbf_codepage_map[d[d.l]];\n\td.l+=1;\n\n\td.l+=2;\n\t}\n\tif(l7) d.l += 36;\nvar fields = [], field = ({});\n\tvar hend = fpos - 10 - (vfp ? 264 : 0), ww = l7 ? 32 : 11;\n\twhile(ft == 0x02 ? d.l < d.length && d[d.l] != 0x0d: d.l < hend) {\n\t\tfield = ({});\n\t\tfield.name = cptable.utils.decode(current_cp, d.slice(d.l, d.l+ww)).replace(/[\\u0000\\r\\n].*$/g,\"\");\n\t\td.l += ww;\n\t\tfield.type = String.fromCharCode(d.read_shift(1));\n\t\tif(ft != 0x02 && !l7) field.offset = d.read_shift(4);\n\t\tfield.len = d.read_shift(1);\n\t\tif(ft == 0x02) field.offset = d.read_shift(2);\n\t\tfield.dec = d.read_shift(1);\n\t\tif(field.name.length) fields.push(field);\n\t\tif(ft != 0x02) d.l += l7 ? 13 : 14;\n\t\tswitch(field.type) {\n\t\t\tcase 'B': // VFP Double\n\t\t\t\tif((!vfp || field.len != 8) && opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n\t\t\t\tbreak;\n\t\t\tcase 'G': // General\n\t\t\tcase 'P': // Picture\n\t\t\t\tif(opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n\t\t\t\tbreak;\n\t\t\tcase 'C': // character\n\t\t\tcase 'D': // date\n\t\t\tcase 'F': // floating point\n\t\t\tcase 'I': // long\n\t\t\tcase 'L': // boolean\n\t\t\tcase 'M': // memo\n\t\t\tcase 'N': // number\n\t\t\tcase 'O': // double\n\t\t\tcase 'T': // datetime\n\t\t\tcase 'Y': // currency\n\t\t\tcase '0': // VFP _NullFlags\n\t\t\tcase '@': // timestamp\n\t\t\tcase '+': // autoincrement\n\t\t\t\tbreak;\n\t\t\tdefault: throw new Error('Unknown Field Type: ' + field.type);\n\t\t}\n\t}\n\tif(d[d.l] !== 0x0D) d.l = fpos-1;\n\telse if(ft == 0x02) d.l = 0x209;\n\tif(ft != 0x02) {\n\t\tif(d.read_shift(1) !== 0x0D) throw new Error(\"DBF Terminator not found \" + d.l + \" \" + d[d.l]);\n\t\td.l = fpos;\n\t}\n\t/* data */\n\tvar R = 0, C = 0;\n\tout[0] = [];\n\tfor(C = 0; C != fields.length; ++C) out[0][C] = fields[C].name;\n\twhile(nrow-- > 0) {\n\t\tif(d[d.l] === 0x2A) { d.l+=rlen; continue; }\n\t\t++d.l;\n\t\tout[++R] = []; C = 0;\n\t\tfor(C = 0; C != fields.length; ++C) {\n\t\t\tvar dd = d.slice(d.l, d.l+fields[C].len); d.l+=fields[C].len;\n\t\t\tprep_blob(dd, 0);\n\t\t\tvar s = cptable.utils.decode(current_cp, dd);\n\t\t\tswitch(fields[C].type) {\n\t\t\t\tcase 'C':\n\t\t\t\t\tout[R][C] = cptable.utils.decode(current_cp, dd);\n\t\t\t\t\tout[R][C] = out[R][C].trim();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'D':\n\t\t\t\t\tif(s.length === 8) out[R][C] = new Date(+s.slice(0,4), +s.slice(4,6)-1, +s.slice(6,8));\n\t\t\t\t\telse out[R][C] = s;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'F': out[R][C] = parseFloat(s.trim()); break;\n\t\t\t\tcase '+': case 'I': out[R][C] = l7 ? dd.read_shift(-4, 'i') ^ 0x80000000 : dd.read_shift(4, 'i'); break;\n\t\t\t\tcase 'L': switch(s.toUpperCase()) {\n\t\t\t\t\tcase 'Y': case 'T': out[R][C] = true; break;\n\t\t\t\t\tcase 'N': case 'F': out[R][C] = false; break;\n\t\t\t\t\tcase ' ': case '?': out[R][C] = false; break; /* NOTE: technically uninitialized */\n\t\t\t\t\tdefault: throw new Error(\"DBF Unrecognized L:|\" + s + \"|\");\n\t\t\t\t\t} break;\n\t\t\t\tcase 'M': /* TODO: handle memo files */\n\t\t\t\t\tif(!memo) throw new Error(\"DBF Unexpected MEMO for type \" + ft.toString(16));\n\t\t\t\t\tout[R][C] = \"##MEMO##\" + (l7 ? parseInt(s.trim(), 10): dd.read_shift(4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'N': out[R][C] = +s.replace(/\\u0000/g,\"\").trim(); break;\n\t\t\t\tcase '@': out[R][C] = new Date(dd.read_shift(-8, 'f') - 0x388317533400); break;\n\t\t\t\tcase 'T': out[R][C] = new Date((dd.read_shift(4) - 0x253D8C) * 0x5265C00 + dd.read_shift(4)); break;\n\t\t\t\tcase 'Y': out[R][C] = dd.read_shift(4,'i')/1e4; break;\n\t\t\t\tcase 'O': out[R][C] = -dd.read_shift(-8, 'f'); break;\n\t\t\t\tcase 'B': if(vfp && fields[C].len == 8) { out[R][C] = dd.read_shift(8,'f'); break; }\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 'G': case 'P': dd.l += fields[C].len; break;\n\t\t\t\tcase '0':\n\t\t\t\t\tif(fields[C].name === '_NullFlags') break;\n\t\t\t\t\t/* falls through */\n\t\t\t\tdefault: throw new Error(\"DBF Unsupported data type \" + fields[C].type);\n\t\t\t}\n\t\t}\n\t}\n\tif(ft != 0x02) if(d.l < d.length && d[d.l++] != 0x1A) throw new Error(\"DBF EOF Marker missing \" + (d.l-1) + \" of \" + d.length + \" \" + d[d.l-1].toString(16));\n\tif(opts && opts.sheetRows) out = out.slice(0, opts.sheetRows);\n\treturn out;\n}\n\nfunction dbf_to_sheet(buf, opts) {\n\tvar o = opts || {};\n\tif(!o.dateNF) o.dateNF = \"yyyymmdd\";\n\treturn aoa_to_sheet(dbf_to_aoa(buf, o), o);\n}\n\nfunction dbf_to_workbook(buf, opts) {\n\ttry { return sheet_to_workbook(dbf_to_sheet(buf, opts), opts); }\n\tcatch(e) { if(opts && opts.WTF) throw e; }\n\treturn ({SheetNames:[],Sheets:{}});\n}\n\nvar _RLEN = { 'B': 8, 'C': 250, 'L': 1, 'D': 8, '?': 0, '': 0 };\nfunction sheet_to_dbf(ws, opts) {\n\tvar o = opts || {};\n\tif(o.type == \"string\") throw new Error(\"Cannot write DBF to JS string\");\n\tvar ba = buf_array();\n\tvar aoa = sheet_to_json(ws, {header:1, cellDates:true});\n\tvar headers = aoa[0], data = aoa.slice(1);\n\tvar i = 0, j = 0, hcnt = 0, rlen = 1;\n\tfor(i = 0; i < headers.length; ++i) {\n\t\tif(i == null) continue;\n\t\t++hcnt;\n\t\tif(typeof headers[i] === 'number') headers[i] = headers[i].toString(10);\n\t\tif(typeof headers[i] !== 'string') throw new Error(\"DBF Invalid column name \" + headers[i] + \" |\" + (typeof headers[i]) + \"|\");\n\t\tif(headers.indexOf(headers[i]) !== i) for(j=0; j<1024;++j)\n\t\t\tif(headers.indexOf(headers[i] + \"_\" + j) == -1) { headers[i] += \"_\" + j; break; }\n\t}\n\tvar range = safe_decode_range(ws['!ref']);\n\tvar coltypes = [];\n\tfor(i = 0; i <= range.e.c - range.s.c; ++i) {\n\t\tvar col = [];\n\t\tfor(j=0; j < data.length; ++j) {\n\t\t\tif(data[j][i] != null) col.push(data[j][i]);\n\t\t}\n\t\tif(col.length == 0 || headers[i] == null) { coltypes[i] = '?'; continue; }\n\t\tvar guess = '', _guess = '';\n\t\tfor(j = 0; j < col.length; ++j) {\n\t\t\tswitch(typeof col[j]) {\n\t\t\t\t/* TODO: check if L2 compat is desired */\n\t\t\t\tcase 'number': _guess = 'B'; break;\n\t\t\t\tcase 'string': _guess = 'C'; break;\n\t\t\t\tcase 'boolean': _guess = 'L'; break;\n\t\t\t\tcase 'object': _guess = col[j] instanceof Date ? 'D' : 'C'; break;\n\t\t\t\tdefault: _guess = 'C';\n\t\t\t}\n\t\t\tguess = guess && guess != _guess ? 'C' : _guess;\n\t\t\tif(guess == 'C') break;\n\t\t}\n\t\trlen += _RLEN[guess] || 0;\n\t\tcoltypes[i] = guess;\n\t}\n\n\tvar h = ba.next(32);\n\th.write_shift(4, 0x13021130);\n\th.write_shift(4, data.length);\n\th.write_shift(2, 296 + 32 * hcnt);\n\th.write_shift(2, rlen);\n\tfor(i=0; i < 4; ++i) h.write_shift(4, 0);\n\th.write_shift(4, 0x00000300); // TODO: CP\n\n\tfor(i = 0, j = 0; i < headers.length; ++i) {\n\t\tif(headers[i] == null) continue;\n\t\tvar hf = ba.next(32);\n\t\tvar _f = (headers[i].slice(-10) + \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\").slice(0, 11);\n\t\thf.write_shift(1, _f, \"sbcs\");\n\t\thf.write_shift(1, coltypes[i] == '?' ? 'C' : coltypes[i], \"sbcs\");\n\t\thf.write_shift(4, j);\n\t\thf.write_shift(1, _RLEN[coltypes[i]] || 0);\n\t\thf.write_shift(1, 0);\n\t\thf.write_shift(1, 0x02);\n\t\thf.write_shift(4, 0);\n\t\thf.write_shift(1, 0);\n\t\thf.write_shift(4, 0);\n\t\thf.write_shift(4, 0);\n\t\tj += _RLEN[coltypes[i]] || 0;\n\t}\n\n\tvar hb = ba.next(264);\n\thb.write_shift(4, 0x0000000D);\n\tfor(i=0; i < 65;++i) hb.write_shift(4, 0x00000000);\n\tfor(i=0; i < data.length; ++i) {\n\t\tvar rout = ba.next(rlen);\n\t\trout.write_shift(1, 0);\n\t\tfor(j=0; j<headers.length; ++j) {\n\t\t\tif(headers[j] == null) continue;\n\t\t\tswitch(coltypes[j]) {\n\t\t\t\tcase 'L': rout.write_shift(1, data[i][j] == null ? 0x3F : data[i][j] ? 0x54 : 0x46); break;\n\t\t\t\tcase 'B': rout.write_shift(8, data[i][j]||0, 'f'); break;\n\t\t\t\tcase 'D':\n\t\t\t\t\tif(!data[i][j]) rout.write_shift(8, \"00000000\", \"sbcs\");\n\t\t\t\t\telse {\n\t\t\t\t\t\trout.write_shift(4, (\"0000\"+data[i][j].getFullYear()).slice(-4), \"sbcs\");\n\t\t\t\t\t\trout.write_shift(2, (\"00\"+(data[i][j].getMonth()+1)).slice(-2), \"sbcs\");\n\t\t\t\t\t\trout.write_shift(2, (\"00\"+data[i][j].getDate()).slice(-2), \"sbcs\");\n\t\t\t\t\t} break;\n\t\t\t\tcase 'C':\n\t\t\t\t\tvar _s = String(data[i][j]||\"\");\n\t\t\t\t\trout.write_shift(1, _s, \"sbcs\");\n\t\t\t\t\tfor(hcnt=0; hcnt < 250-_s.length; ++hcnt) rout.write_shift(1, 0x20); break;\n\t\t\t}\n\t\t}\n\t\t// data\n\t}\n\tba.next(1).write_shift(1, 0x1A);\n\treturn ba.end();\n}\n\treturn {\n\t\tto_workbook: dbf_to_workbook,\n\t\tto_sheet: dbf_to_sheet,\n\t\tfrom_sheet: sheet_to_dbf\n\t};\n})();\n\nvar SYLK = (function() {\n\t/* TODO: find an actual specification */\n\tfunction sylk_to_aoa(d, opts) {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return sylk_to_aoa_str(Base64.decode(d), opts);\n\t\t\tcase 'binary': return sylk_to_aoa_str(d, opts);\n\t\t\tcase 'buffer': return sylk_to_aoa_str(d.toString('binary'), opts);\n\t\t\tcase 'array': return sylk_to_aoa_str(cc2str(d), opts);\n\t\t}\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\n\t}\n\tfunction sylk_to_aoa_str(str, opts) {\n\t\tvar records = str.split(/[\\n\\r]+/), R = -1, C = -1, ri = 0, rj = 0, arr = [];\n\t\tvar formats = [];\n\t\tvar next_cell_format = null;\n\t\tvar sht = {}, rowinfo = [], colinfo = [], cw = [];\n\t\tvar Mval = 0, j;\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tMval = 0;\n\t\t\tvar rstr=records[ri].trim();\n\t\t\tvar record=rstr.replace(/;;/g, \"\\u0001\").split(\";\").map(function(x) { return x.replace(/\\u0001/g, \";\"); });\n\t\t\tvar RT=record[0], val;\n\t\t\tif(rstr.length > 0) switch(RT) {\n\t\t\tcase 'ID': break; /* header */\n\t\t\tcase 'E': break; /* EOF */\n\t\t\tcase 'B': break; /* dimensions */\n\t\t\tcase 'O': break; /* options? */\n\t\t\tcase 'P':\n\t\t\t\tif(record[1].charAt(0) == 'P')\n\t\t\t\t\tformats.push(rstr.slice(3).replace(/;;/g, \";\"));\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\tvar C_seen_K = false, C_seen_X = false;\n\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n\t\t\t\tcase 'X': C = parseInt(record[rj].slice(1))-1; C_seen_X = true; break;\n\t\t\t\tcase 'Y':\n\t\t\t\t\tR = parseInt(record[rj].slice(1))-1; if(!C_seen_X) C = 0;\n\t\t\t\t\tfor(j = arr.length; j <= R; ++j) arr[j] = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'K':\n\t\t\t\t\tval = record[rj].slice(1);\n\t\t\t\t\tif(val.charAt(0) === '\"') val = val.slice(1,val.length - 1);\n\t\t\t\t\telse if(val === 'TRUE') val = true;\n\t\t\t\t\telse if(val === 'FALSE') val = false;\n\t\t\t\t\telse if(!isNaN(fuzzynum(val))) {\n\t\t\t\t\t\tval = fuzzynum(val);\n\t\t\t\t\t\tif(next_cell_format !== null && SSF.is_date(next_cell_format)) val = numdate(val);\n\t\t\t\t\t} else if(!isNaN(fuzzydate(val).getDate())) {\n\t\t\t\t\t\tval = parseDate(val);\n\t\t\t\t\t}\n\t\t\t\t\tif(typeof cptable !== 'undefined' && typeof val == \"string\" && ((opts||{}).type != \"string\") && (opts||{}).codepage) val = cptable.utils.decode(opts.codepage, val);\n\t\t\t\t\tC_seen_K = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'E':\n\t\t\t\t\tvar formula = rc_to_a1(record[rj].slice(1), {r:R,c:C});\n\t\t\t\t\tarr[R][C] = [arr[R][C], formula];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t\tif(C_seen_K) { arr[R][C] = val; next_cell_format = null; }\n\t\t\tbreak;\n\t\t\tcase 'F':\n\t\t\tvar F_seen = 0;\n\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n\t\t\t\tcase 'X': C = parseInt(record[rj].slice(1))-1; ++F_seen; break;\n\t\t\t\tcase 'Y':\n\t\t\t\t\tR = parseInt(record[rj].slice(1))-1; /*C = 0;*/\n\t\t\t\t\tfor(j = arr.length; j <= R; ++j) arr[j] = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'M': Mval = parseInt(record[rj].slice(1)) / 20; break;\n\t\t\t\tcase 'F': break; /* ??? */\n\t\t\t\tcase 'G': break; /* hide grid */\n\t\t\t\tcase 'P':\n\t\t\t\t\tnext_cell_format = formats[parseInt(record[rj].slice(1))];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S': break; /* cell style */\n\t\t\t\tcase 'D': break; /* column */\n\t\t\t\tcase 'N': break; /* font */\n\t\t\t\tcase 'W':\n\t\t\t\t\tcw = record[rj].slice(1).split(\" \");\n\t\t\t\t\tfor(j = parseInt(cw[0], 10); j <= parseInt(cw[1], 10); ++j) {\n\t\t\t\t\t\tMval = parseInt(cw[2], 10);\n\t\t\t\t\t\tcolinfo[j-1] = Mval === 0 ? {hidden:true}: {wch:Mval}; process_col(colinfo[j-1]);\n\t\t\t\t\t} break;\n\t\t\t\tcase 'C': /* default column format */\n\t\t\t\t\tC = parseInt(record[rj].slice(1))-1;\n\t\t\t\t\tif(!colinfo[C]) colinfo[C] = {};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'R': /* row properties */\n\t\t\t\t\tR = parseInt(record[rj].slice(1))-1;\n\t\t\t\t\tif(!rowinfo[R]) rowinfo[R] = {};\n\t\t\t\t\tif(Mval > 0) { rowinfo[R].hpt = Mval; rowinfo[R].hpx = pt2px(Mval); }\n\t\t\t\t\telse if(Mval === 0) rowinfo[R].hidden = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t\tif(F_seen < 1) next_cell_format = null; break;\n\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t}\n\t\tif(rowinfo.length > 0) sht['!rows'] = rowinfo;\n\t\tif(colinfo.length > 0) sht['!cols'] = colinfo;\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn [arr, sht];\n\t}\n\n\tfunction sylk_to_sheet(d, opts) {\n\t\tvar aoasht = sylk_to_aoa(d, opts);\n\t\tvar aoa = aoasht[0], ws = aoasht[1];\n\t\tvar o = aoa_to_sheet(aoa, opts);\n\t\tkeys(ws).forEach(function(k) { o[k] = ws[k]; });\n\t\treturn o;\n\t}\n\n\tfunction sylk_to_workbook(d, opts) { return sheet_to_workbook(sylk_to_sheet(d, opts), opts); }\n\n\tfunction write_ws_cell_sylk(cell, ws, R, C) {\n\t\tvar o = \"C;Y\" + (R+1) + \";X\" + (C+1) + \";K\";\n\t\tswitch(cell.t) {\n\t\t\tcase 'n':\n\t\t\t\to += (cell.v||0);\n\t\t\t\tif(cell.f && !cell.F) o += \";E\" + a1_to_rc(cell.f, {r:R, c:C}); break;\n\t\t\tcase 'b': o += cell.v ? \"TRUE\" : \"FALSE\"; break;\n\t\t\tcase 'e': o += cell.w || cell.v; break;\n\t\t\tcase 'd': o += '\"' + (cell.w || cell.v) + '\"'; break;\n\t\t\tcase 's': o += '\"' + cell.v.replace(/\"/g,\"\") + '\"'; break;\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction write_ws_cols_sylk(out, cols) {\n\t\tcols.forEach(function(col, i) {\n\t\t\tvar rec = \"F;W\" + (i+1) + \" \" + (i+1) + \" \";\n\t\t\tif(col.hidden) rec += \"0\";\n\t\t\telse {\n\t\t\t\tif(typeof col.width == 'number') col.wpx = width2px(col.width);\n\t\t\t\tif(typeof col.wpx == 'number') col.wch = px2char(col.wpx);\n\t\t\t\tif(typeof col.wch == 'number') rec += Math.round(col.wch);\n\t\t\t}\n\t\t\tif(rec.charAt(rec.length - 1) != \" \") out.push(rec);\n\t\t});\n\t}\n\n\tfunction write_ws_rows_sylk(out, rows) {\n\t\trows.forEach(function(row, i) {\n\t\t\tvar rec = \"F;\";\n\t\t\tif(row.hidden) rec += \"M0;\";\n\t\t\telse if(row.hpt) rec += \"M\" + 20 * row.hpt + \";\";\n\t\t\telse if(row.hpx) rec += \"M\" + 20 * px2pt(row.hpx) + \";\";\n\t\t\tif(rec.length > 2) out.push(rec + \"R\" + (i+1));\n\t\t});\n\t}\n\n\tfunction sheet_to_sylk(ws, opts) {\n\t\tvar preamble = [\"ID;PWXL;N;E\"], o = [];\n\t\tvar r = safe_decode_range(ws['!ref']), cell;\n\t\tvar dense = Array.isArray(ws);\n\t\tvar RS = \"\\r\\n\";\n\n\t\tpreamble.push(\"P;PGeneral\");\n\t\tpreamble.push(\"F;P0;DG0G8;M255\");\n\t\tif(ws['!cols']) write_ws_cols_sylk(preamble, ws['!cols']);\n\t\tif(ws['!rows']) write_ws_rows_sylk(preamble, ws['!rows']);\n\n\t\tpreamble.push(\"B;Y\" + (r.e.r - r.s.r + 1) + \";X\" + (r.e.c - r.s.c + 1) + \";D\" + [r.s.c,r.s.r,r.e.c,r.e.r].join(\" \"));\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[R]||[])[C]: ws[coord];\n\t\t\t\tif(!cell || (cell.v == null && (!cell.f || cell.F))) continue;\n\t\t\t\to.push(write_ws_cell_sylk(cell, ws, R, C, opts));\n\t\t\t}\n\t\t}\n\t\treturn preamble.join(RS) + RS + o.join(RS) + RS + \"E\" + RS;\n\t}\n\n\treturn {\n\t\tto_workbook: sylk_to_workbook,\n\t\tto_sheet: sylk_to_sheet,\n\t\tfrom_sheet: sheet_to_sylk\n\t};\n})();\n\nvar DIF = (function() {\n\tfunction dif_to_aoa(d, opts) {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return dif_to_aoa_str(Base64.decode(d), opts);\n\t\t\tcase 'binary': return dif_to_aoa_str(d, opts);\n\t\t\tcase 'buffer': return dif_to_aoa_str(d.toString('binary'), opts);\n\t\t\tcase 'array': return dif_to_aoa_str(cc2str(d), opts);\n\t\t}\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\n\t}\n\tfunction dif_to_aoa_str(str, opts) {\n\t\tvar records = str.split('\\n'), R = -1, C = -1, ri = 0, arr = [];\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tif (records[ri].trim() === 'BOT') { arr[++R] = []; C = 0; continue; }\n\t\t\tif (R < 0) continue;\n\t\t\tvar metadata = records[ri].trim().split(\",\");\n\t\t\tvar type = metadata[0], value = metadata[1];\n\t\t\t++ri;\n\t\t\tvar data = records[ri].trim();\n\t\t\tswitch (+type) {\n\t\t\t\tcase -1:\n\t\t\t\t\tif (data === 'BOT') { arr[++R] = []; C = 0; continue; }\n\t\t\t\t\telse if (data !== 'EOD') throw new Error(\"Unrecognized DIF special command \" + data);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0:\n\t\t\t\t\tif(data === 'TRUE') arr[R][C] = true;\n\t\t\t\t\telse if(data === 'FALSE') arr[R][C] = false;\n\t\t\t\t\telse if(!isNaN(fuzzynum(value))) arr[R][C] = fuzzynum(value);\n\t\t\t\t\telse if(!isNaN(fuzzydate(value).getDate())) arr[R][C] = parseDate(value);\n\t\t\t\t\telse arr[R][C] = value;\n\t\t\t\t\t++C; break;\n\t\t\t\tcase 1:\n\t\t\t\t\tdata = data.slice(1,data.length-1);\n\t\t\t\t\tarr[R][C++] = data !== '' ? data : null;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (data === 'EOD') break;\n\t\t}\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn arr;\n\t}\n\n\tfunction dif_to_sheet(str, opts) { return aoa_to_sheet(dif_to_aoa(str, opts), opts); }\n\tfunction dif_to_workbook(str, opts) { return sheet_to_workbook(dif_to_sheet(str, opts), opts); }\n\n\tvar sheet_to_dif = (function() {\n\t\tvar push_field = function pf(o, topic, v, n, s) {\n\t\t\to.push(topic);\n\t\t\to.push(v + \",\" + n);\n\t\t\to.push('\"' + s.replace(/\"/g,'\"\"') + '\"');\n\t\t};\n\t\tvar push_value = function po(o, type, v, s) {\n\t\t\to.push(type + \",\" + v);\n\t\t\to.push(type == 1 ? '\"' + s.replace(/\"/g,'\"\"') + '\"' : s);\n\t\t};\n\t\treturn function sheet_to_dif(ws) {\n\t\t\tvar o = [];\n\t\t\tvar r = safe_decode_range(ws['!ref']), cell;\n\t\t\tvar dense = Array.isArray(ws);\n\t\t\tpush_field(o, \"TABLE\", 0, 1, \"sheetjs\");\n\t\t\tpush_field(o, \"VECTORS\", 0, r.e.r - r.s.r + 1,\"\");\n\t\t\tpush_field(o, \"TUPLES\", 0, r.e.c - r.s.c + 1,\"\");\n\t\t\tpush_field(o, \"DATA\", 0, 0,\"\");\n\t\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\t\tpush_value(o, -1, 0, \"BOT\");\n\t\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\t\tcell = dense ? (ws[R]||[])[C] : ws[coord];\n\t\t\t\t\tif(!cell) { push_value(o, 1, 0, \"\"); continue;}\n\t\t\t\t\tswitch(cell.t) {\n\t\t\t\t\t\tcase 'n':\n\t\t\t\t\t\t\tvar val = DIF_XL ? cell.w : cell.v;\n\t\t\t\t\t\t\tif(!val && cell.v != null) val = cell.v;\n\t\t\t\t\t\t\tif(val == null) {\n\t\t\t\t\t\t\t\tif(DIF_XL && cell.f && !cell.F) push_value(o, 1, 0, \"=\" + cell.f);\n\t\t\t\t\t\t\t\telse push_value(o, 1, 0, \"\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse push_value(o, 0, val, \"V\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\tpush_value(o, 0, cell.v ? 1 : 0, cell.v ? \"TRUE\" : \"FALSE\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 's':\n\t\t\t\t\t\t\tpush_value(o, 1, 0, (!DIF_XL || isNaN(cell.v)) ? cell.v : '=\"' + cell.v + '\"');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\tif(!cell.w) cell.w = SSF.format(cell.z || SSF._table[14], datenum(parseDate(cell.v)));\n\t\t\t\t\t\t\tif(DIF_XL) push_value(o, 0, cell.w, \"V\");\n\t\t\t\t\t\t\telse push_value(o, 1, 0, cell.w);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault: push_value(o, 1, 0, \"\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpush_value(o, -1, 0, \"EOD\");\n\t\t\tvar RS = \"\\r\\n\";\n\t\t\tvar oo = o.join(RS);\n\t\t\t//while((oo.length & 0x7F) != 0) oo += \"\\0\";\n\t\t\treturn oo;\n\t\t};\n\t})();\n\treturn {\n\t\tto_workbook: dif_to_workbook,\n\t\tto_sheet: dif_to_sheet,\n\t\tfrom_sheet: sheet_to_dif\n\t};\n})();\n\nvar ETH = (function() {\n\tfunction decode(s) { return s.replace(/\\\\b/g,\"\\\\\").replace(/\\\\c/g,\":\").replace(/\\\\n/g,\"\\n\"); }\n\tfunction encode(s) { return s.replace(/\\\\/g, \"\\\\b\").replace(/:/g, \"\\\\c\").replace(/\\n/g,\"\\\\n\"); }\n\n\tfunction eth_to_aoa(str, opts) {\n\t\tvar records = str.split('\\n'), R = -1, C = -1, ri = 0, arr = [];\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tvar record = records[ri].trim().split(\":\");\n\t\t\tif(record[0] !== 'cell') continue;\n\t\t\tvar addr = decode_cell(record[1]);\n\t\t\tif(arr.length <= addr.r) for(R = arr.length; R <= addr.r; ++R) if(!arr[R]) arr[R] = [];\n\t\t\tR = addr.r; C = addr.c;\n\t\t\tswitch(record[2]) {\n\t\t\t\tcase 't': arr[R][C] = decode(record[3]); break;\n\t\t\t\tcase 'v': arr[R][C] = +record[3]; break;\n\t\t\t\tcase 'vtf': var _f = record[record.length - 1];\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 'vtc':\n\t\t\t\t\tswitch(record[3]) {\n\t\t\t\t\t\tcase 'nl': arr[R][C] = +record[4] ? true : false; break;\n\t\t\t\t\t\tdefault: arr[R][C] = +record[4]; break;\n\t\t\t\t\t}\n\t\t\t\t\tif(record[2] == 'vtf') arr[R][C] = [arr[R][C], _f];\n\t\t\t}\n\t\t}\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn arr;\n\t}\n\n\tfunction eth_to_sheet(d, opts) { return aoa_to_sheet(eth_to_aoa(d, opts), opts); }\n\tfunction eth_to_workbook(d, opts) { return sheet_to_workbook(eth_to_sheet(d, opts), opts); }\n\n\tvar header = [\n\t\t\"socialcalc:version:1.5\",\n\t\t\"MIME-Version: 1.0\",\n\t\t\"Content-Type: multipart/mixed; boundary=SocialCalcSpreadsheetControlSave\"\n\t].join(\"\\n\");\n\n\tvar sep = [\n\t\t\"--SocialCalcSpreadsheetControlSave\",\n\t\t\"Content-type: text/plain; charset=UTF-8\"\n\t].join(\"\\n\") + \"\\n\";\n\n\t/* TODO: the other parts */\n\tvar meta = [\n\t\t\"# SocialCalc Spreadsheet Control Save\",\n\t\t\"part:sheet\"\n\t].join(\"\\n\");\n\n\tvar end = \"--SocialCalcSpreadsheetControlSave--\";\n\n\tfunction sheet_to_eth_data(ws) {\n\t\tif(!ws || !ws['!ref']) return \"\";\n\t\tvar o = [], oo = [], cell, coord = \"\";\n\t\tvar r = decode_range(ws['!ref']);\n\t\tvar dense = Array.isArray(ws);\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tcoord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[R]||[])[C] : ws[coord];\n\t\t\t\tif(!cell || cell.v == null || cell.t === 'z') continue;\n\t\t\t\too = [\"cell\", coord, 't'];\n\t\t\t\tswitch(cell.t) {\n\t\t\t\t\tcase 's': case 'str': oo.push(encode(cell.v)); break;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tif(!cell.f) { oo[2]='v'; oo[3]=cell.v; }\n\t\t\t\t\t\telse { oo[2]='vtf'; oo[3]='n'; oo[4]=cell.v; oo[5]=encode(cell.f); }\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\too[2] = 'vt'+(cell.f?'f':'c'); oo[3]='nl'; oo[4]=cell.v?\"1\":\"0\";\n\t\t\t\t\t\too[5] = encode(cell.f||(cell.v?'TRUE':'FALSE'));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\tvar t = datenum(parseDate(cell.v));\n\t\t\t\t\t\too[2] = 'vtc'; oo[3] = 'nd'; oo[4] = \"\"+t;\n\t\t\t\t\t\too[5] = cell.w || SSF.format(cell.z || SSF._table[14], t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'e': continue;\n\t\t\t\t}\n\t\t\t\to.push(oo.join(\":\"));\n\t\t\t}\n\t\t}\n\t\to.push(\"sheet:c:\" + (r.e.c-r.s.c+1) + \":r:\" + (r.e.r-r.s.r+1) + \":tvf:1\");\n\t\to.push(\"valueformat:1:text-wiki\");\n\t\t//o.push(\"copiedfrom:\" + ws['!ref']); // clipboard only\n\t\treturn o.join(\"\\n\");\n\t}\n\n\tfunction sheet_to_eth(ws) {\n\t\treturn [header, sep, meta, sep, sheet_to_eth_data(ws), end].join(\"\\n\");\n\t\t// return [\"version:1.5\", sheet_to_eth_data(ws)].join(\"\\n\"); // clipboard form\n\t}\n\n\treturn {\n\t\tto_workbook: eth_to_workbook,\n\t\tto_sheet: eth_to_sheet,\n\t\tfrom_sheet: sheet_to_eth\n\t};\n})();\n\nvar PRN = (function() {\n\tfunction set_text_arr(data, arr, R, C, o) {\n\t\tif(o.raw) arr[R][C] = data;\n\t\telse if(data === 'TRUE') arr[R][C] = true;\n\t\telse if(data === 'FALSE') arr[R][C] = false;\n\t\telse if(data === \"\"){/* empty */}\n\t\telse if(!isNaN(fuzzynum(data))) arr[R][C] = fuzzynum(data);\n\t\telse if(!isNaN(fuzzydate(data).getDate())) arr[R][C] = parseDate(data);\n\t\telse arr[R][C] = data;\n\t}\n\n\tfunction prn_to_aoa_str(f, opts) {\n\t\tvar o = opts || {};\n\t\tvar arr = ([]);\n\t\tif(!f || f.length === 0) return arr;\n\t\tvar lines = f.split(/[\\r\\n]/);\n\t\tvar L = lines.length - 1;\n\t\twhile(L >= 0 && lines[L].length === 0) --L;\n\t\tvar start = 10, idx = 0;\n\t\tvar R = 0;\n\t\tfor(; R <= L; ++R) {\n\t\t\tidx = lines[R].indexOf(\" \");\n\t\t\tif(idx == -1) idx = lines[R].length; else idx++;\n\t\t\tstart = Math.max(start, idx);\n\t\t}\n\t\tfor(R = 0; R <= L; ++R) {\n\t\t\tarr[R] = [];\n\t\t\t/* TODO: confirm that widths are always 10 */\n\t\t\tvar C = 0;\n\t\t\tset_text_arr(lines[R].slice(0, start).trim(), arr, R, C, o);\n\t\t\tfor(C = 1; C <= (lines[R].length - start)/10 + 1; ++C)\n\t\t\t\tset_text_arr(lines[R].slice(start+(C-1)*10,start+C*10).trim(),arr,R,C,o);\n\t\t}\n\t\tif(o.sheetRows) arr = arr.slice(0, o.sheetRows);\n\t\treturn arr;\n\t}\n\n\t// List of accepted CSV separators\n\tvar guess_seps = {\n0x2C: ',',\n0x09: \"\\t\",\n0x3B: ';'\n\t};\n\n\t// CSV separator weights to be used in case of equal numbers\n\tvar guess_sep_weights = {\n0x2C: 3,\n0x09: 2,\n0x3B: 1\n\t};\n\n\tfunction guess_sep(str) {\n\t\tvar cnt = {}, instr = false, end = 0, cc = 0;\n\t\tfor(;end < str.length;++end) {\n\t\t\tif((cc=str.charCodeAt(end)) == 0x22) instr = !instr;\n\t\t\telse if(!instr && cc in guess_seps) cnt[cc] = (cnt[cc]||0)+1;\n\t\t}\n\n\t\tcc = [];\n\t\tfor(end in cnt) if ( cnt.hasOwnProperty(end) ) {\n\t\t\tcc.push([ cnt[end], end ]);\n\t\t}\n\n\t\tif ( !cc.length ) {\n\t\t\tcnt = guess_sep_weights;\n\t\t\tfor(end in cnt) if ( cnt.hasOwnProperty(end) ) {\n\t\t\t\tcc.push([ cnt[end], end ]);\n\t\t\t}\n\t\t}\n\n\t\tcc.sort(function(a, b) { return a[0] - b[0] || guess_sep_weights[a[1]] - guess_sep_weights[b[1]]; });\n\n\t\treturn guess_seps[cc.pop()[1]];\n\t}\n\n\tfunction dsv_to_sheet_str(str, opts) {\n\t\tvar o = opts || {};\n\t\tvar sep = \"\";\n\t\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\t\tvar ws = o.dense ? ([]) : ({});\n\t\tvar range = ({s: {c:0, r:0}, e: {c:0, r:0}});\n\n\t\tif(str.slice(0,4) == \"sep=\" && str.charCodeAt(5) == 10) { sep = str.charAt(4); str = str.slice(6); }\n\t\telse sep = guess_sep(str.slice(0,1024));\n\t\tvar R = 0, C = 0, v = 0;\n\t\tvar start = 0, end = 0, sepcc = sep.charCodeAt(0), instr = false, cc=0;\n\t\tstr = str.replace(/\\r\\n/mg, \"\\n\");\n\t\tvar _re = o.dateNF != null ? dateNF_regex(o.dateNF) : null;\n\t\tfunction finish_cell() {\n\t\t\tvar s = str.slice(start, end);\n\t\t\tvar cell = ({});\n\t\t\tif(s.charAt(0) == '\"' && s.charAt(s.length - 1) == '\"') s = s.slice(1,-1).replace(/\"\"/g,'\"');\n\t\t\tif(s.length === 0) cell.t = 'z';\n\t\t\telse if(o.raw) { cell.t = 's'; cell.v = s; }\n\t\t\telse if(s.trim().length === 0) { cell.t = 's'; cell.v = s; }\n\t\t\telse if(s.charCodeAt(0) == 0x3D) {\n\t\t\t\tif(s.charCodeAt(1) == 0x22 && s.charCodeAt(s.length - 1) == 0x22) { cell.t = 's'; cell.v = s.slice(2,-1).replace(/\"\"/g,'\"'); }\n\t\t\t\telse if(fuzzyfmla(s)) { cell.t = 'n'; cell.f = s.slice(1); }\n\t\t\t\telse { cell.t = 's'; cell.v = s; } }\n\t\t\telse if(s == \"TRUE\") { cell.t = 'b'; cell.v = true; }\n\t\t\telse if(s == \"FALSE\") { cell.t = 'b'; cell.v = false; }\n\t\t\telse if(!isNaN(v = fuzzynum(s))) { cell.t = 'n'; if(o.cellText !== false) cell.w = s; cell.v = v; }\n\t\t\telse if(!isNaN(fuzzydate(s).getDate()) || _re && s.match(_re)) {\n\t\t\t\tcell.z = o.dateNF || SSF._table[14];\n\t\t\t\tvar k = 0;\n\t\t\t\tif(_re && s.match(_re)){ s=dateNF_fix(s, o.dateNF, (s.match(_re)||[])); k=1; }\n\t\t\t\tif(o.cellDates) { cell.t = 'd'; cell.v = parseDate(s, k); }\n\t\t\t\telse { cell.t = 'n'; cell.v = datenum(parseDate(s, k)); }\n\t\t\t\tif(o.cellText !== false) cell.w = SSF.format(cell.z, cell.v instanceof Date ? datenum(cell.v):cell.v);\n\t\t\t\tif(!o.cellNF) delete cell.z;\n\t\t\t} else {\n\t\t\t\tcell.t = 's';\n\t\t\t\tcell.v = s;\n\t\t\t}\n\t\t\tif(cell.t == 'z'){}\n\t\t\telse if(o.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = cell; }\n\t\t\telse ws[encode_cell({c:C,r:R})] = cell;\n\t\t\tstart = end+1;\n\t\t\tif(range.e.c < C) range.e.c = C;\n\t\t\tif(range.e.r < R) range.e.r = R;\n\t\t\tif(cc == sepcc) ++C; else { C = 0; ++R; if(o.sheetRows && o.sheetRows <= R) return true; }\n\t\t}\n\t\touter: for(;end < str.length;++end) switch((cc=str.charCodeAt(end))) {\n\t\t\tcase 0x22: instr = !instr; break;\n\t\t\tcase sepcc: case 0x0a: case 0x0d: if(!instr && finish_cell()) break outer; break;\n\t\t\tdefault: break;\n\t\t}\n\t\tif(end - start > 0) finish_cell();\n\n\t\tws['!ref'] = encode_range(range);\n\t\treturn ws;\n\t}\n\n\tfunction prn_to_sheet_str(str, opts) {\n\t\tif(str.slice(0,4) == \"sep=\") return dsv_to_sheet_str(str, opts);\n\t\tif(str.indexOf(\"\\t\") >= 0 || str.indexOf(\",\") >= 0 || str.indexOf(\";\") >= 0) return dsv_to_sheet_str(str, opts);\n\t\treturn aoa_to_sheet(prn_to_aoa_str(str, opts), opts);\n\t}\n\n\tfunction prn_to_sheet(d, opts) {\n\t\tvar str = \"\", bytes = opts.type == 'string' ? [0,0,0,0] : firstbyte(d, opts);\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': str = Base64.decode(d); break;\n\t\t\tcase 'binary': str = d; break;\n\t\t\tcase 'buffer':\n\t\t\t\tif(opts.codepage == 65001) str = d.toString('utf8');\n\t\t\t\telse if(opts.codepage && typeof cptable !== 'undefined') str = cptable.utils.decode(opts.codepage, d);\n\t\t\t\telse str = d.toString('binary');\n\t\t\t\tbreak;\n\t\t\tcase 'array': str = cc2str(d); break;\n\t\t\tcase 'string': str = d; break;\n\t\t\tdefault: throw new Error(\"Unrecognized type \" + opts.type);\n\t\t}\n\t\tif(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str.slice(3));\n\t\telse if((opts.type == 'binary') && typeof cptable !== 'undefined' && opts.codepage)  str = cptable.utils.decode(opts.codepage, cptable.utils.encode(1252,str));\n\t\tif(str.slice(0,19) == \"socialcalc:version:\") return ETH.to_sheet(opts.type == 'string' ? str : utf8read(str), opts);\n\t\treturn prn_to_sheet_str(str, opts);\n\t}\n\n\tfunction prn_to_workbook(d, opts) { return sheet_to_workbook(prn_to_sheet(d, opts), opts); }\n\n\tfunction sheet_to_prn(ws) {\n\t\tvar o = [];\n\t\tvar r = safe_decode_range(ws['!ref']), cell;\n\t\tvar dense = Array.isArray(ws);\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tvar oo = [];\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[R]||[])[C] : ws[coord];\n\t\t\t\tif(!cell || cell.v == null) { oo.push(\"          \"); continue; }\n\t\t\t\tvar w = (cell.w || (format_cell(cell), cell.w) || \"\").slice(0,10);\n\t\t\t\twhile(w.length < 10) w += \" \";\n\t\t\t\too.push(w + (C === 0 ? \" \" : \"\"));\n\t\t\t}\n\t\t\to.push(oo.join(\"\"));\n\t\t}\n\t\treturn o.join(\"\\n\");\n\t}\n\n\treturn {\n\t\tto_workbook: prn_to_workbook,\n\t\tto_sheet: prn_to_sheet,\n\t\tfrom_sheet: sheet_to_prn\n\t};\n})();\n\n/* Excel defaults to SYLK but warns if data is not valid */\nfunction read_wb_ID(d, opts) {\n\tvar o = opts || {}, OLD_WTF = !!o.WTF; o.WTF = true;\n\ttry {\n\t\tvar out = SYLK.to_workbook(d, o);\n\t\to.WTF = OLD_WTF;\n\t\treturn out;\n\t} catch(e) {\n\t\to.WTF = OLD_WTF;\n\t\tif(!e.message.match(/SYLK bad record ID/) && OLD_WTF) throw e;\n\t\treturn PRN.to_workbook(d, opts);\n\t}\n}\nvar WK_ = (function() {\n\tfunction lotushopper(data, cb, opts) {\n\t\tif(!data) return;\n\t\tprep_blob(data, data.l || 0);\n\t\tvar Enum = opts.Enum || WK1Enum;\n\t\twhile(data.l < data.length) {\n\t\t\tvar RT = data.read_shift(2);\n\t\t\tvar R = Enum[RT] || Enum[0xFF];\n\t\t\tvar length = data.read_shift(2);\n\t\t\tvar tgt = data.l + length;\n\t\t\tvar d = (R.f||parsenoop)(data, length, opts);\n\t\t\tdata.l = tgt;\n\t\t\tif(cb(d, R.n, RT)) return;\n\t\t}\n\t}\n\n\tfunction lotus_to_workbook(d, opts) {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return lotus_to_workbook_buf(s2a(Base64.decode(d)), opts);\n\t\t\tcase 'binary': return lotus_to_workbook_buf(s2a(d), opts);\n\t\t\tcase 'buffer':\n\t\t\tcase 'array': return lotus_to_workbook_buf(d, opts);\n\t\t}\n\t\tthrow \"Unsupported type \" + opts.type;\n\t}\n\n\tfunction lotus_to_workbook_buf(d, opts) {\n\t\tif(!d) return d;\n\t\tvar o = opts || {};\n\t\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\t\tvar s = ((o.dense ? [] : {})), n = \"Sheet1\", sidx = 0;\n\t\tvar sheets = {}, snames = [n];\n\n\t\tvar refguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n\t\tvar sheetRows = o.sheetRows || 0;\n\n\t\tif(d[2] == 0x02) o.Enum = WK1Enum;\n\t\telse if(d[2] == 0x1a) o.Enum = WK3Enum;\n\t\telse if(d[2] == 0x0e) { o.Enum = WK3Enum; o.qpro = true; d.l = 0; }\n\t\telse throw new Error(\"Unrecognized LOTUS BOF \" + d[2]);\n\t\tlotushopper(d, function(val, Rn, RT) {\n\t\t\tif(d[2] == 0x02) switch(RT) {\n\t\t\t\tcase 0x00:\n\t\t\t\t\to.vers = val;\n\t\t\t\t\tif(val >= 0x1000) o.qpro = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x06: refguess = val; break; /* RANGE */\n\t\t\t\tcase 0x0F: /* LABEL */\n\t\t\t\t\tif(!o.qpro) val[1].v = val[1].v.slice(1);\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 0x0D: /* INTEGER */\n\t\t\t\tcase 0x0E: /* NUMBER */\n\t\t\t\tcase 0x10: /* FORMULA */\n\t\t\t\tcase 0x33: /* STRING */\n\t\t\t\t\t/* TODO: actual translation of the format code */\n\t\t\t\t\tif(RT == 0x0E && (val[2] & 0x70) == 0x70 && (val[2] & 0x0F) > 1 && (val[2] & 0x0F) < 15) {\n\t\t\t\t\t\tval[1].z = o.dateNF || SSF._table[14];\n\t\t\t\t\t\tif(o.cellDates) { val[1].t = 'd'; val[1].v = numdate(val[1].v); }\n\t\t\t\t\t}\n\t\t\t\t\tif(o.dense) {\n\t\t\t\t\t\tif(!s[val[0].r]) s[val[0].r] = [];\n\t\t\t\t\t\ts[val[0].r][val[0].c] = val[1];\n\t\t\t\t\t} else s[encode_cell(val[0])] = val[1];\n\t\t\t\t\tbreak;\n\t\t\t} else switch(RT) {\n\t\t\t\tcase 0x16: /* LABEL16 */\n\t\t\t\t\tval[1].v = val[1].v.slice(1);\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 0x17: /* NUMBER17 */\n\t\t\t\tcase 0x18: /* NUMBER18 */\n\t\t\t\tcase 0x19: /* FORMULA19 */\n\t\t\t\tcase 0x25: /* NUMBER25 */\n\t\t\t\tcase 0x27: /* NUMBER27 */\n\t\t\t\tcase 0x28: /* FORMULA28 */\n\t\t\t\t\tif(val[3] > sidx) {\n\t\t\t\t\t\ts[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\t\tsheets[n] = s;\n\t\t\t\t\t\ts = (o.dense ? [] : {});\n\t\t\t\t\t\trefguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n\t\t\t\t\t\tsidx = val[3]; n = \"Sheet\" + (sidx + 1);\n\t\t\t\t\t\tsnames.push(n);\n\t\t\t\t\t}\n\t\t\t\t\tif(sheetRows > 0 && val[0].r >= sheetRows) break;\n\t\t\t\t\tif(o.dense) {\n\t\t\t\t\t\tif(!s[val[0].r]) s[val[0].r] = [];\n\t\t\t\t\t\ts[val[0].r][val[0].c] = val[1];\n\t\t\t\t\t} else s[encode_cell(val[0])] = val[1];\n\t\t\t\t\tif(refguess.e.c < val[0].c) refguess.e.c = val[0].c;\n\t\t\t\t\tif(refguess.e.r < val[0].r) refguess.e.r = val[0].r;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: break;\n\t\t\t}\n\t\t}, o);\n\n\t\ts[\"!ref\"] = encode_range(refguess);\n\t\tsheets[n] = s;\n\t\treturn { SheetNames: snames, Sheets:sheets };\n\t}\n\n\tfunction parse_RANGE(blob) {\n\t\tvar o = {s:{c:0,r:0},e:{c:0,r:0}};\n\t\to.s.c = blob.read_shift(2);\n\t\to.s.r = blob.read_shift(2);\n\t\to.e.c = blob.read_shift(2);\n\t\to.e.r = blob.read_shift(2);\n\t\tif(o.s.c == 0xFFFF) o.s.c = o.e.c = o.s.r = o.e.r = 0;\n\t\treturn o;\n\t}\n\n\tfunction parse_cell(blob, length, opts) {\n\t\tvar o = [{c:0,r:0}, {t:'n',v:0}, 0];\n\t\tif(opts.qpro && opts.vers != 0x5120) {\n\t\t\to[0].c = blob.read_shift(1);\n\t\t\tblob.l++;\n\t\t\to[0].r = blob.read_shift(2);\n\t\t\tblob.l+=2;\n\t\t} else {\n\t\t\to[2] = blob.read_shift(1);\n\t\t\to[0].c = blob.read_shift(2); o[0].r = blob.read_shift(2);\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction parse_LABEL(blob, length, opts) {\n\t\tvar tgt = blob.l + length;\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].t = 's';\n\t\tif(opts.vers == 0x5120) {\n\t\t\tblob.l++;\n\t\t\tvar len = blob.read_shift(1);\n\t\t\to[1].v = blob.read_shift(len, 'utf8');\n\t\t\treturn o;\n\t\t}\n\t\tif(opts.qpro) blob.l++;\n\t\to[1].v = blob.read_shift(tgt - blob.l, 'cstr');\n\t\treturn o;\n\t}\n\n\tfunction parse_INTEGER(blob, length, opts) {\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].v = blob.read_shift(2, 'i');\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER(blob, length, opts) {\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].v = blob.read_shift(8, 'f');\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA(blob, length, opts) {\n\t\tvar tgt = blob.l + length;\n\t\tvar o = parse_cell(blob, length, opts);\n\t\t/* TODO: formula */\n\t\to[1].v = blob.read_shift(8, 'f');\n\t\tif(opts.qpro) blob.l = tgt;\n\t\telse {\n\t\t\tvar flen = blob.read_shift(2);\n\t\t\tblob.l += flen;\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction parse_cell_3(blob) {\n\t\tvar o = [{c:0,r:0}, {t:'n',v:0}, 0];\n\t\to[0].r = blob.read_shift(2); o[3] = blob[blob.l++]; o[0].c = blob[blob.l++];\n\t\treturn o;\n\t}\n\n\tfunction parse_LABEL_16(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\to[1].t = 's';\n\t\to[1].v = blob.read_shift(length - 4, 'cstr');\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_18(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\to[1].v = blob.read_shift(2);\n\t\tvar v = o[1].v >> 1;\n\t\t/* TODO: figure out all of the corner cases */\n\t\tif(o[1].v & 0x1) {\n\t\t\tswitch(v & 0x07) {\n\t\t\t\tcase 1: v = (v >> 3) * 500; break;\n\t\t\t\tcase 2: v = (v >> 3) / 20; break;\n\t\t\t\tcase 4: v = (v >> 3) / 2000; break;\n\t\t\t\tcase 6: v = (v >> 3) / 16; break;\n\t\t\t\tcase 7: v = (v >> 3) / 64; break;\n\t\t\t\tdefault: throw \"unknown NUMBER_18 encoding \" + (v & 0x07);\n\t\t\t}\n\t\t}\n\t\to[1].v = v;\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_17(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(4);\n\t\tvar v2 = blob.read_shift(4);\n\t\tvar e = blob.read_shift(2);\n\t\tif(e == 0xFFFF) { o[1].v = 0; return o; }\n\t\tvar s = e & 0x8000; e = (e&0x7FFF) - 16446;\n\t\to[1].v = (s*2 - 1) * ((e > 0 ? (v2 << e) : (v2 >>> -e)) + (e > -32 ? (v1 << (e + 32)) : (v1 >>> -(e + 32))));\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA_19(blob, length) {\n\t\tvar o = parse_NUMBER_17(blob, 14);\n\t\tblob.l += length - 14; /* TODO: formula */\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_25(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(4);\n\t\to[1].v = v1 >> 6;\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_27(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(8,'f');\n\t\to[1].v = v1;\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA_28(blob, length) {\n\t\tvar o = parse_NUMBER_27(blob, 14);\n\t\tblob.l += length - 10; /* TODO: formula */\n\t\treturn o;\n\t}\n\n\tvar WK1Enum = {\n0x0000: { n:\"BOF\", f:parseuint16 },\n0x0001: { n:\"EOF\" },\n0x0002: { n:\"CALCMODE\" },\n0x0003: { n:\"CALCORDER\" },\n0x0004: { n:\"SPLIT\" },\n0x0005: { n:\"SYNC\" },\n0x0006: { n:\"RANGE\", f:parse_RANGE },\n0x0007: { n:\"WINDOW1\" },\n0x0008: { n:\"COLW1\" },\n0x0009: { n:\"WINTWO\" },\n0x000A: { n:\"COLW2\" },\n0x000B: { n:\"NAME\" },\n0x000C: { n:\"BLANK\" },\n0x000D: { n:\"INTEGER\", f:parse_INTEGER },\n0x000E: { n:\"NUMBER\", f:parse_NUMBER },\n0x000F: { n:\"LABEL\", f:parse_LABEL },\n0x0010: { n:\"FORMULA\", f:parse_FORMULA },\n0x0018: { n:\"TABLE\" },\n0x0019: { n:\"ORANGE\" },\n0x001A: { n:\"PRANGE\" },\n0x001B: { n:\"SRANGE\" },\n0x001C: { n:\"FRANGE\" },\n0x001D: { n:\"KRANGE1\" },\n0x0020: { n:\"HRANGE\" },\n0x0023: { n:\"KRANGE2\" },\n0x0024: { n:\"PROTEC\" },\n0x0025: { n:\"FOOTER\" },\n0x0026: { n:\"HEADER\" },\n0x0027: { n:\"SETUP\" },\n0x0028: { n:\"MARGINS\" },\n0x0029: { n:\"LABELFMT\" },\n0x002A: { n:\"TITLES\" },\n0x002B: { n:\"SHEETJS\" },\n0x002D: { n:\"GRAPH\" },\n0x002E: { n:\"NGRAPH\" },\n0x002F: { n:\"CALCCOUNT\" },\n0x0030: { n:\"UNFORMATTED\" },\n0x0031: { n:\"CURSORW12\" },\n0x0032: { n:\"WINDOW\" },\n0x0033: { n:\"STRING\", f:parse_LABEL },\n0x0037: { n:\"PASSWORD\" },\n0x0038: { n:\"LOCKED\" },\n0x003C: { n:\"QUERY\" },\n0x003D: { n:\"QUERYNAME\" },\n0x003E: { n:\"PRINT\" },\n0x003F: { n:\"PRINTNAME\" },\n0x0040: { n:\"GRAPH2\" },\n0x0041: { n:\"GRAPHNAME\" },\n0x0042: { n:\"ZOOM\" },\n0x0043: { n:\"SYMSPLIT\" },\n0x0044: { n:\"NSROWS\" },\n0x0045: { n:\"NSCOLS\" },\n0x0046: { n:\"RULER\" },\n0x0047: { n:\"NNAME\" },\n0x0048: { n:\"ACOMM\" },\n0x0049: { n:\"AMACRO\" },\n0x004A: { n:\"PARSE\" },\n0x00FF: { n:\"\", f:parsenoop }\n\t};\n\n\tvar WK3Enum = {\n0x0000: { n:\"BOF\" },\n0x0001: { n:\"EOF\" },\n0x0003: { n:\"??\" },\n0x0004: { n:\"??\" },\n0x0005: { n:\"??\" },\n0x0006: { n:\"??\" },\n0x0007: { n:\"??\" },\n0x0009: { n:\"??\" },\n0x000a: { n:\"??\" },\n0x000b: { n:\"??\" },\n0x000c: { n:\"??\" },\n0x000e: { n:\"??\" },\n0x000f: { n:\"??\" },\n0x0010: { n:\"??\" },\n0x0011: { n:\"??\" },\n0x0012: { n:\"??\" },\n0x0013: { n:\"??\" },\n0x0015: { n:\"??\" },\n0x0016: { n:\"LABEL16\", f:parse_LABEL_16},\n0x0017: { n:\"NUMBER17\", f:parse_NUMBER_17 },\n0x0018: { n:\"NUMBER18\", f:parse_NUMBER_18 },\n0x0019: { n:\"FORMULA19\", f:parse_FORMULA_19},\n0x001a: { n:\"??\" },\n0x001b: { n:\"??\" },\n0x001c: { n:\"??\" },\n0x001d: { n:\"??\" },\n0x001e: { n:\"??\" },\n0x001f: { n:\"??\" },\n0x0021: { n:\"??\" },\n0x0025: { n:\"NUMBER25\", f:parse_NUMBER_25 },\n0x0027: { n:\"NUMBER27\", f:parse_NUMBER_27 },\n0x0028: { n:\"FORMULA28\", f:parse_FORMULA_28 },\n0x00FF: { n:\"\", f:parsenoop }\n\t};\n\treturn {\n\t\tto_workbook: lotus_to_workbook\n\t};\n})();\n/* Parse a list of <r> tags */\nvar parse_rs = (function parse_rs_factory() {\n\tvar tregex = matchtag(\"t\"), rpregex = matchtag(\"rPr\"), rregex = /<(?:\\w+:)?r>/g, rend = /<\\/(?:\\w+:)?r>/, nlregex = /\\r\\n/g;\n\t/* 18.4.7 rPr CT_RPrElt */\n\tvar parse_rpr = function parse_rpr(rpr, intro, outro) {\n\t\tvar font = {}, cp = 65001, align = \"\";\n\t\tvar pass = false;\n\t\tvar m = rpr.match(tagregex), i = 0;\n\t\tif(m) for(;i!=m.length; ++i) {\n\t\t\tvar y = parsexmltag(m[i]);\n\t\t\tswitch(y[0].replace(/\\w*:/g,\"\")) {\n\t\t\t\t/* 18.8.12 condense CT_BooleanProperty */\n\t\t\t\t/* ** not required . */\n\t\t\t\tcase '<condense': break;\n\t\t\t\t/* 18.8.17 extend CT_BooleanProperty */\n\t\t\t\t/* ** not required . */\n\t\t\t\tcase '<extend': break;\n\t\t\t\t/* 18.8.36 shadow CT_BooleanProperty */\n\t\t\t\t/* ** not required . */\n\t\t\t\tcase '<shadow':\n\t\t\t\t\tif(!y.val) break;\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase '<shadow>':\n\t\t\t\tcase '<shadow/>': font.shadow = 1; break;\n\t\t\t\tcase '</shadow>': break;\n\n\t\t\t\t/* 18.4.1 charset CT_IntProperty TODO */\n\t\t\t\tcase '<charset':\n\t\t\t\t\tif(y.val == '1') break;\n\t\t\t\t\tcp = CS2CP[parseInt(y.val, 10)];\n\t\t\t\t\tbreak;\n\n\t\t\t\t/* 18.4.2 outline CT_BooleanProperty TODO */\n\t\t\t\tcase '<outline':\n\t\t\t\t\tif(!y.val) break;\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase '<outline>':\n\t\t\t\tcase '<outline/>': font.outline = 1; break;\n\t\t\t\tcase '</outline>': break;\n\n\t\t\t\t/* 18.4.5 rFont CT_FontName */\n\t\t\t\tcase '<rFont': font.name = y.val; break;\n\n\t\t\t\t/* 18.4.11 sz CT_FontSize */\n\t\t\t\tcase '<sz': font.sz = y.val; break;\n\n\t\t\t\t/* 18.4.10 strike CT_BooleanProperty */\n\t\t\t\tcase '<strike':\n\t\t\t\t\tif(!y.val) break;\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase '<strike>':\n\t\t\t\tcase '<strike/>': font.strike = 1; break;\n\t\t\t\tcase '</strike>': break;\n\n\t\t\t\t/* 18.4.13 u CT_UnderlineProperty */\n\t\t\t\tcase '<u':\n\t\t\t\t\tif(!y.val) break;\n\t\t\t\t\tswitch(y.val) {\n\t\t\t\t\t\tcase 'double': font.uval = \"double\"; break;\n\t\t\t\t\t\tcase 'singleAccounting': font.uval = \"single-accounting\"; break;\n\t\t\t\t\t\tcase 'doubleAccounting': font.uval = \"double-accounting\"; break;\n\t\t\t\t\t}\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase '<u>':\n\t\t\t\tcase '<u/>': font.u = 1; break;\n\t\t\t\tcase '</u>': break;\n\n\t\t\t\t/* 18.8.2 b */\n\t\t\t\tcase '<b':\n\t\t\t\t\tif(y.val == '0') break;\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase '<b>':\n\t\t\t\tcase '<b/>': font.b = 1; break;\n\t\t\t\tcase '</b>': break;\n\n\t\t\t\t/* 18.8.26 i */\n\t\t\t\tcase '<i':\n\t\t\t\t\tif(y.val == '0') break;\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase '<i>':\n\t\t\t\tcase '<i/>': font.i = 1; break;\n\t\t\t\tcase '</i>': break;\n\n\t\t\t\t/* 18.3.1.15 color CT_Color TODO: tint, theme, auto, indexed */\n\t\t\t\tcase '<color':\n\t\t\t\t\tif(y.rgb) font.color = y.rgb.slice(2,8);\n\t\t\t\t\tbreak;\n\n\t\t\t\t/* 18.8.18 family ST_FontFamily */\n\t\t\t\tcase '<family': font.family = y.val; break;\n\n\t\t\t\t/* 18.4.14 vertAlign CT_VerticalAlignFontProperty TODO */\n\t\t\t\tcase '<vertAlign': align = y.val; break;\n\n\t\t\t\t/* 18.8.35 scheme CT_FontScheme TODO */\n\t\t\t\tcase '<scheme': break;\n\n\t\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\t\tcase '<ext': pass = true; break;\n\t\t\t\tcase '</ext>': pass = false; break;\n\t\t\t\tdefault:\n\t\t\t\t\tif(y[0].charCodeAt(1) !== 47 && !pass) throw new Error('Unrecognized rich format ' + y[0]);\n\t\t\t}\n\t\t}\n\t\tvar style = [];\n\n\t\tif(font.u) style.push(\"text-decoration: underline;\");\n\t\tif(font.uval) style.push(\"text-underline-style:\" + font.uval + \";\");\n\t\tif(font.sz) style.push(\"font-size:\" + font.sz + \"pt;\");\n\t\tif(font.outline) style.push(\"text-effect: outline;\");\n\t\tif(font.shadow) style.push(\"text-shadow: auto;\");\n\t\tintro.push('<span style=\"' + style.join(\"\") + '\">');\n\n\t\tif(font.b) { intro.push(\"<b>\"); outro.push(\"</b>\"); }\n\t\tif(font.i) { intro.push(\"<i>\"); outro.push(\"</i>\"); }\n\t\tif(font.strike) { intro.push(\"<s>\"); outro.push(\"</s>\"); }\n\n\t\tif(align == \"superscript\") align = \"sup\";\n\t\telse if(align == \"subscript\") align = \"sub\";\n\t\tif(align != \"\") { intro.push(\"<\" + align + \">\"); outro.push(\"</\" + align + \">\"); }\n\n\t\toutro.push(\"</span>\");\n\t\treturn cp;\n\t};\n\n\t/* 18.4.4 r CT_RElt */\n\tfunction parse_r(r) {\n\t\tvar terms = [[],\"\",[]];\n\t\t/* 18.4.12 t ST_Xstring */\n\t\tvar t = r.match(tregex)/*, cp = 65001*/;\n\t\tif(!t) return \"\";\n\t\tterms[1] = t[1];\n\n\t\tvar rpr = r.match(rpregex);\n\t\tif(rpr) /*cp = */parse_rpr(rpr[1], terms[0], terms[2]);\n\n\t\treturn terms[0].join(\"\") + terms[1].replace(nlregex,'<br/>') + terms[2].join(\"\");\n\t}\n\treturn function parse_rs(rs) {\n\t\treturn rs.replace(rregex,\"\").split(rend).map(parse_r).join(\"\");\n\t};\n})();\n\n/* 18.4.8 si CT_Rst */\nvar sitregex = /<(?:\\w+:)?t[^>]*>([^<]*)<\\/(?:\\w+:)?t>/g, sirregex = /<(?:\\w+:)?r>/;\nvar sirphregex = /<(?:\\w+:)?rPh.*?>([\\s\\S]*?)<\\/(?:\\w+:)?rPh>/g;\nfunction parse_si(x, opts) {\n\tvar html = opts ? opts.cellHTML : true;\n\tvar z = {};\n\tif(!x) return null;\n\t//var y;\n\t/* 18.4.12 t ST_Xstring (Plaintext String) */\n\t// TODO: is whitespace actually valid here?\n\tif(x.match(/^\\s*<(?:\\w+:)?t[^>]*>/)) {\n\t\tz.t = unescapexml(utf8read(x.slice(x.indexOf(\">\")+1).split(/<\\/(?:\\w+:)?t>/)[0]||\"\"));\n\t\tz.r = utf8read(x);\n\t\tif(html) z.h = escapehtml(z.t);\n\t}\n\t/* 18.4.4 r CT_RElt (Rich Text Run) */\n\telse if((/*y = */x.match(sirregex))) {\n\t\tz.r = utf8read(x);\n\t\tz.t = unescapexml(utf8read((x.replace(sirphregex, '').match(sitregex)||[]).join(\"\").replace(tagregex,\"\")));\n\t\tif(html) z.h = parse_rs(z.r);\n\t}\n\t/* 18.4.3 phoneticPr CT_PhoneticPr (TODO: needed for Asian support) */\n\t/* 18.4.6 rPh CT_PhoneticRun (TODO: needed for Asian support) */\n\treturn z;\n}\n\n/* 18.4 Shared String Table */\nvar sstr0 = /<(?:\\w+:)?sst([^>]*)>([\\s\\S]*)<\\/(?:\\w+:)?sst>/;\nvar sstr1 = /<(?:\\w+:)?(?:si|sstItem)>/g;\nvar sstr2 = /<\\/(?:\\w+:)?(?:si|sstItem)>/;\nfunction parse_sst_xml(data, opts) {\n\tvar s = ([]), ss = \"\";\n\tif(!data) return s;\n\t/* 18.4.9 sst CT_Sst */\n\tvar sst = data.match(sstr0);\n\tif(sst) {\n\t\tss = sst[2].replace(sstr1,\"\").split(sstr2);\n\t\tfor(var i = 0; i != ss.length; ++i) {\n\t\t\tvar o = parse_si(ss[i].trim(), opts);\n\t\t\tif(o != null) s[s.length] = o;\n\t\t}\n\t\tsst = parsexmltag(sst[1]); s.Count = sst.count; s.Unique = sst.uniqueCount;\n\t}\n\treturn s;\n}\n\nRELS.SST = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\";\nvar straywsregex = /^\\s|\\s$|[\\t\\n\\r]/;\nfunction write_sst_xml(sst, opts) {\n\tif(!opts.bookSST) return \"\";\n\tvar o = [XML_HEADER];\n\to[o.length] = (writextag('sst', null, {\n\t\txmlns: XMLNS.main[0],\n\t\tcount: sst.Count,\n\t\tuniqueCount: sst.Unique\n\t}));\n\tfor(var i = 0; i != sst.length; ++i) { if(sst[i] == null) continue;\n\t\tvar s = sst[i];\n\t\tvar sitag = \"<si>\";\n\t\tif(s.r) sitag += s.r;\n\t\telse {\n\t\t\tsitag += \"<t\";\n\t\t\tif(!s.t) s.t = \"\";\n\t\t\tif(s.t.match(straywsregex)) sitag += ' xml:space=\"preserve\"';\n\t\t\tsitag += \">\" + escapexml(s.t) + \"</t>\";\n\t\t}\n\t\tsitag += \"</si>\";\n\t\to[o.length] = (sitag);\n\t}\n\tif(o.length>2){ o[o.length] = ('</sst>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.221 BrtBeginSst */\nfunction parse_BrtBeginSst(data) {\n\treturn [data.read_shift(4), data.read_shift(4)];\n}\n\n/* [MS-XLSB] 2.1.7.45 Shared Strings */\nfunction parse_sst_bin(data, opts) {\n\tvar s = ([]);\n\tvar pass = false;\n\trecordhopper(data, function hopper_sst(val, R_n, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x009F: /* 'BrtBeginSst' */\n\t\t\t\ts.Count = val[0]; s.Unique = val[1]; break;\n\t\t\tcase 0x0013: /* 'BrtSSTItem' */\n\t\t\t\ts.push(val); break;\n\t\t\tcase 0x00A0: /* 'BrtEndSst' */\n\t\t\t\treturn true;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(R_n.indexOf(\"Begin\") > 0){/* empty */}\n\t\t\t\telse if(R_n.indexOf(\"End\") > 0){/* empty */}\n\t\t\t\tif(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n\t\t}\n\t});\n\treturn s;\n}\n\nfunction write_BrtBeginSst(sst, o) {\n\tif(!o) o = new_buf(8);\n\to.write_shift(4, sst.Count);\n\to.write_shift(4, sst.Unique);\n\treturn o;\n}\n\nvar write_BrtSSTItem = write_RichStr;\n\nfunction write_sst_bin(sst) {\n\tvar ba = buf_array();\n\twrite_record(ba, \"BrtBeginSst\", write_BrtBeginSst(sst));\n\tfor(var i = 0; i < sst.length; ++i) write_record(ba, \"BrtSSTItem\", write_BrtSSTItem(sst[i]));\n\t/* FRTSST */\n\twrite_record(ba, \"BrtEndSst\");\n\treturn ba.end();\n}\nfunction _JS2ANSI(str) {\n\tif(typeof cptable !== 'undefined') return cptable.utils.encode(current_ansi, str);\n\tvar o = [], oo = str.split(\"\");\n\tfor(var i = 0; i < oo.length; ++i) o[i] = oo[i].charCodeAt(0);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.4 Version */\nfunction parse_CRYPTOVersion(blob, length) {\n\tvar o = {};\n\to.Major = blob.read_shift(2);\n\to.Minor = blob.read_shift(2);\nif(length >= 4) blob.l += length - 4;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.5 DataSpaceVersionInfo */\nfunction parse_DataSpaceVersionInfo(blob) {\n\tvar o = {};\n\to.id = blob.read_shift(0, 'lpp4');\n\to.R = parse_CRYPTOVersion(blob, 4);\n\to.U = parse_CRYPTOVersion(blob, 4);\n\to.W = parse_CRYPTOVersion(blob, 4);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6.1 DataSpaceMapEntry Structure */\nfunction parse_DataSpaceMapEntry(blob) {\n\tvar len = blob.read_shift(4);\n\tvar end = blob.l + len - 4;\n\tvar o = {};\n\tvar cnt = blob.read_shift(4);\n\tvar comps = [];\n\t/* [MS-OFFCRYPTO] 2.1.6.2 DataSpaceReferenceComponent Structure */\n\twhile(cnt-- > 0) comps.push({ t: blob.read_shift(4), v: blob.read_shift(0, 'lpp4') });\n\to.name = blob.read_shift(0, 'lpp4');\n\to.comps = comps;\n\tif(blob.l != end) throw new Error(\"Bad DataSpaceMapEntry: \" + blob.l + \" != \" + end);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6 DataSpaceMap */\nfunction parse_DataSpaceMap(blob) {\n\tvar o = [];\n\tblob.l += 4; // must be 0x8\n\tvar cnt = blob.read_shift(4);\n\twhile(cnt-- > 0) o.push(parse_DataSpaceMapEntry(blob));\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.7 DataSpaceDefinition */\nfunction parse_DataSpaceDefinition(blob) {\n\tvar o = [];\n\tblob.l += 4; // must be 0x8\n\tvar cnt = blob.read_shift(4);\n\twhile(cnt-- > 0) o.push(blob.read_shift(0, 'lpp4'));\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.8 DataSpaceDefinition */\nfunction parse_TransformInfoHeader(blob) {\n\tvar o = {};\n\t/*var len = */blob.read_shift(4);\n\tblob.l += 4; // must be 0x1\n\to.id = blob.read_shift(0, 'lpp4');\n\to.name = blob.read_shift(0, 'lpp4');\n\to.R = parse_CRYPTOVersion(blob, 4);\n\to.U = parse_CRYPTOVersion(blob, 4);\n\to.W = parse_CRYPTOVersion(blob, 4);\n\treturn o;\n}\n\nfunction parse_Primary(blob) {\n\t/* [MS-OFFCRYPTO] 2.2.6 IRMDSTransformInfo */\n\tvar hdr = parse_TransformInfoHeader(blob);\n\t/* [MS-OFFCRYPTO] 2.1.9 EncryptionTransformInfo */\n\thdr.ename = blob.read_shift(0, '8lpp4');\n\thdr.blksz = blob.read_shift(4);\n\thdr.cmode = blob.read_shift(4);\n\tif(blob.read_shift(4) != 0x04) throw new Error(\"Bad !Primary record\");\n\treturn hdr;\n}\n\n/* [MS-OFFCRYPTO] 2.3.2 Encryption Header */\nfunction parse_EncryptionHeader(blob, length) {\n\tvar tgt = blob.l + length;\n\tvar o = {};\n\to.Flags = (blob.read_shift(4) & 0x3F);\n\tblob.l += 4;\n\to.AlgID = blob.read_shift(4);\n\tvar valid = false;\n\tswitch(o.AlgID) {\n\t\tcase 0x660E: case 0x660F: case 0x6610: valid = (o.Flags == 0x24); break;\n\t\tcase 0x6801: valid = (o.Flags == 0x04); break;\n\t\tcase 0: valid = (o.Flags == 0x10 || o.Flags == 0x04 || o.Flags == 0x24); break;\n\t\tdefault: throw 'Unrecognized encryption algorithm: ' + o.AlgID;\n\t}\n\tif(!valid) throw new Error(\"Encryption Flags/AlgID mismatch\");\n\to.AlgIDHash = blob.read_shift(4);\n\to.KeySize = blob.read_shift(4);\n\to.ProviderType = blob.read_shift(4);\n\tblob.l += 8;\n\to.CSPName = blob.read_shift((tgt-blob.l)>>1, 'utf16le');\n\tblob.l = tgt;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.3 Encryption Verifier */\nfunction parse_EncryptionVerifier(blob, length) {\n\tvar o = {}, tgt = blob.l + length;\n\tblob.l += 4; // SaltSize must be 0x10\n\to.Salt = blob.slice(blob.l, blob.l+16); blob.l += 16;\n\to.Verifier = blob.slice(blob.l, blob.l+16); blob.l += 16;\n\t/*var sz = */blob.read_shift(4);\n\to.VerifierHash = blob.slice(blob.l, tgt); blob.l = tgt;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.* EncryptionInfo Stream */\nfunction parse_EncryptionInfo(blob) {\n\tvar vers = parse_CRYPTOVersion(blob);\n\tswitch(vers.Minor) {\n\t\tcase 0x02: return [vers.Minor, parse_EncInfoStd(blob, vers)];\n\t\tcase 0x03: return [vers.Minor, parse_EncInfoExt(blob, vers)];\n\t\tcase 0x04: return [vers.Minor, parse_EncInfoAgl(blob, vers)];\n\t}\n\tthrow new Error(\"ECMA-376 Encrypted file unrecognized Version: \" + vers.Minor);\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.5  EncryptionInfo Stream (Standard Encryption) */\nfunction parse_EncInfoStd(blob) {\n\tvar flags = blob.read_shift(4);\n\tif((flags & 0x3F) != 0x24) throw new Error(\"EncryptionInfo mismatch\");\n\tvar sz = blob.read_shift(4);\n\t//var tgt = blob.l + sz;\n\tvar hdr = parse_EncryptionHeader(blob, sz);\n\tvar verifier = parse_EncryptionVerifier(blob, blob.length - blob.l);\n\treturn { t:\"Std\", h:hdr, v:verifier };\n}\n/* [MS-OFFCRYPTO] 2.3.4.6  EncryptionInfo Stream (Extensible Encryption) */\nfunction parse_EncInfoExt() { throw new Error(\"File is password-protected: ECMA-376 Extensible\"); }\n/* [MS-OFFCRYPTO] 2.3.4.10 EncryptionInfo Stream (Agile Encryption) */\nfunction parse_EncInfoAgl(blob) {\n\tvar KeyData = [\"saltSize\",\"blockSize\",\"keyBits\",\"hashSize\",\"cipherAlgorithm\",\"cipherChaining\",\"hashAlgorithm\",\"saltValue\"];\n\tblob.l+=4;\n\tvar xml = blob.read_shift(blob.length - blob.l, 'utf8');\n\tvar o = {};\n\txml.replace(tagregex, function xml_agile(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<encryption': case '</encryption>': break;\n\t\t\tcase '<keyData': KeyData.forEach(function(k) { o[k] = y[k]; }); break;\n\t\t\tcase '<dataIntegrity': o.encryptedHmacKey = y.encryptedHmacKey; o.encryptedHmacValue = y.encryptedHmacValue; break;\n\t\t\tcase '<keyEncryptors>': case '<keyEncryptors': o.encs = []; break;\n\t\t\tcase '</keyEncryptors>': break;\n\n\t\t\tcase '<keyEncryptor': o.uri = y.uri; break;\n\t\t\tcase '</keyEncryptor>': break;\n\t\t\tcase '<encryptedKey': o.encs.push(y); break;\n\t\t\tdefault: throw y[0];\n\t\t}\n\t});\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.5.1 RC4 CryptoAPI Encryption Header */\nfunction parse_RC4CryptoHeader(blob, length) {\n\tvar o = {};\n\tvar vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4); length -= 4;\n\tif(vers.Minor != 2) throw new Error('unrecognized minor version code: ' + vers.Minor);\n\tif(vers.Major > 4 || vers.Major < 2) throw new Error('unrecognized major version code: ' + vers.Major);\n\to.Flags = blob.read_shift(4); length -= 4;\n\tvar sz = blob.read_shift(4); length -= 4;\n\to.EncryptionHeader = parse_EncryptionHeader(blob, sz); length -= sz;\n\to.EncryptionVerifier = parse_EncryptionVerifier(blob, length);\n\treturn o;\n}\n/* [MS-OFFCRYPTO] 2.3.6.1 RC4 Encryption Header */\nfunction parse_RC4Header(blob) {\n\tvar o = {};\n\tvar vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4);\n\tif(vers.Major != 1 || vers.Minor != 1) throw 'unrecognized version code ' + vers.Major + ' : ' + vers.Minor;\n\to.Salt = blob.read_shift(16);\n\to.EncryptedVerifier = blob.read_shift(16);\n\to.EncryptedVerifierHash = blob.read_shift(16);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.1 Binary Document Password Verifier Derivation */\nfunction crypto_CreatePasswordVerifier_Method1(Password) {\n\tvar Verifier = 0x0000, PasswordArray;\n\tvar PasswordDecoded = _JS2ANSI(Password);\n\tvar len = PasswordDecoded.length + 1, i, PasswordByte;\n\tvar Intermediate1, Intermediate2, Intermediate3;\n\tPasswordArray = new_raw_buf(len);\n\tPasswordArray[0] = PasswordDecoded.length;\n\tfor(i = 1; i != len; ++i) PasswordArray[i] = PasswordDecoded[i-1];\n\tfor(i = len-1; i >= 0; --i) {\n\t\tPasswordByte = PasswordArray[i];\n\t\tIntermediate1 = ((Verifier & 0x4000) === 0x0000) ? 0 : 1;\n\t\tIntermediate2 = (Verifier << 1) & 0x7FFF;\n\t\tIntermediate3 = Intermediate1 | Intermediate2;\n\t\tVerifier = Intermediate3 ^ PasswordByte;\n\t}\n\treturn Verifier ^ 0xCE4B;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.2 Binary Document XOR Array Initialization */\nvar crypto_CreateXorArray_Method1 = (function() {\n\tvar PadArray = [0xBB, 0xFF, 0xFF, 0xBA, 0xFF, 0xFF, 0xB9, 0x80, 0x00, 0xBE, 0x0F, 0x00, 0xBF, 0x0F, 0x00];\n\tvar InitialCode = [0xE1F0, 0x1D0F, 0xCC9C, 0x84C0, 0x110C, 0x0E10, 0xF1CE, 0x313E, 0x1872, 0xE139, 0xD40F, 0x84F9, 0x280C, 0xA96A, 0x4EC3];\n\tvar XorMatrix = [0xAEFC, 0x4DD9, 0x9BB2, 0x2745, 0x4E8A, 0x9D14, 0x2A09, 0x7B61, 0xF6C2, 0xFDA5, 0xEB6B, 0xC6F7, 0x9DCF, 0x2BBF, 0x4563, 0x8AC6, 0x05AD, 0x0B5A, 0x16B4, 0x2D68, 0x5AD0, 0x0375, 0x06EA, 0x0DD4, 0x1BA8, 0x3750, 0x6EA0, 0xDD40, 0xD849, 0xA0B3, 0x5147, 0xA28E, 0x553D, 0xAA7A, 0x44D5, 0x6F45, 0xDE8A, 0xAD35, 0x4A4B, 0x9496, 0x390D, 0x721A, 0xEB23, 0xC667, 0x9CEF, 0x29FF, 0x53FE, 0xA7FC, 0x5FD9, 0x47D3, 0x8FA6, 0x0F6D, 0x1EDA, 0x3DB4, 0x7B68, 0xF6D0, 0xB861, 0x60E3, 0xC1C6, 0x93AD, 0x377B, 0x6EF6, 0xDDEC, 0x45A0, 0x8B40, 0x06A1, 0x0D42, 0x1A84, 0x3508, 0x6A10, 0xAA51, 0x4483, 0x8906, 0x022D, 0x045A, 0x08B4, 0x1168, 0x76B4, 0xED68, 0xCAF1, 0x85C3, 0x1BA7, 0x374E, 0x6E9C, 0x3730, 0x6E60, 0xDCC0, 0xA9A1, 0x4363, 0x86C6, 0x1DAD, 0x3331, 0x6662, 0xCCC4, 0x89A9, 0x0373, 0x06E6, 0x0DCC, 0x1021, 0x2042, 0x4084, 0x8108, 0x1231, 0x2462, 0x48C4];\n\tvar Ror = function(Byte) { return ((Byte/2) | (Byte*128)) & 0xFF; };\n\tvar XorRor = function(byte1, byte2) { return Ror(byte1 ^ byte2); };\n\tvar CreateXorKey_Method1 = function(Password) {\n\t\tvar XorKey = InitialCode[Password.length - 1];\n\t\tvar CurrentElement = 0x68;\n\t\tfor(var i = Password.length-1; i >= 0; --i) {\n\t\t\tvar Char = Password[i];\n\t\t\tfor(var j = 0; j != 7; ++j) {\n\t\t\t\tif(Char & 0x40) XorKey ^= XorMatrix[CurrentElement];\n\t\t\t\tChar *= 2; --CurrentElement;\n\t\t\t}\n\t\t}\n\t\treturn XorKey;\n\t};\n\treturn function(password) {\n\t\tvar Password = _JS2ANSI(password);\n\t\tvar XorKey = CreateXorKey_Method1(Password);\n\t\tvar Index = Password.length;\n\t\tvar ObfuscationArray = new_raw_buf(16);\n\t\tfor(var i = 0; i != 16; ++i) ObfuscationArray[i] = 0x00;\n\t\tvar Temp, PasswordLastChar, PadIndex;\n\t\tif((Index & 1) === 1) {\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(PadArray[0], Temp);\n\t\t\t--Index;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tPasswordLastChar = Password[Password.length - 1];\n\t\t\tObfuscationArray[Index] = XorRor(PasswordLastChar, Temp);\n\t\t}\n\t\twhile(Index > 0) {\n\t\t\t--Index;\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t\t--Index;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t}\n\t\tIndex = 15;\n\t\tPadIndex = 15 - Password.length;\n\t\twhile(PadIndex > 0) {\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(PadArray[PadIndex], Temp);\n\t\t\t--Index;\n\t\t\t--PadIndex;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t\t--Index;\n\t\t\t--PadIndex;\n\t\t}\n\t\treturn ObfuscationArray;\n\t};\n})();\n\n/* [MS-OFFCRYPTO] 2.3.7.3 Binary Document XOR Data Transformation Method 1 */\nvar crypto_DecryptData_Method1 = function(password, Data, XorArrayIndex, XorArray, O) {\n\t/* If XorArray is set, use it; if O is not set, make changes in-place */\n\tif(!O) O = Data;\n\tif(!XorArray) XorArray = crypto_CreateXorArray_Method1(password);\n\tvar Index, Value;\n\tfor(Index = 0; Index != Data.length; ++Index) {\n\t\tValue = Data[Index];\n\t\tValue ^= XorArray[XorArrayIndex];\n\t\tValue = ((Value>>5) | (Value<<3)) & 0xFF;\n\t\tO[Index] = Value;\n\t\t++XorArrayIndex;\n\t}\n\treturn [O, XorArrayIndex, XorArray];\n};\n\nvar crypto_MakeXorDecryptor = function(password) {\n\tvar XorArrayIndex = 0, XorArray = crypto_CreateXorArray_Method1(password);\n\treturn function(Data) {\n\t\tvar O = crypto_DecryptData_Method1(\"\", Data, XorArrayIndex, XorArray);\n\t\tXorArrayIndex = O[1];\n\t\treturn O[0];\n\t};\n};\n\n/* 2.5.343 */\nfunction parse_XORObfuscation(blob, length, opts, out) {\n\tvar o = ({ key: parseuint16(blob), verificationBytes: parseuint16(blob) });\n\tif(opts.password) o.verifier = crypto_CreatePasswordVerifier_Method1(opts.password);\n\tout.valid = o.verificationBytes === o.verifier;\n\tif(out.valid) out.insitu = crypto_MakeXorDecryptor(opts.password);\n\treturn o;\n}\n\n/* 2.4.117 */\nfunction parse_FilePassHeader(blob, length, oo) {\n\tvar o = oo || {}; o.Info = blob.read_shift(2); blob.l -= 2;\n\tif(o.Info === 1) o.Data = parse_RC4Header(blob, length);\n\telse o.Data = parse_RC4CryptoHeader(blob, length);\n\treturn o;\n}\nfunction parse_FilePass(blob, length, opts) {\n\tvar o = ({ Type: opts.biff >= 8 ? blob.read_shift(2) : 0 }); /* wEncryptionType */\n\tif(o.Type) parse_FilePassHeader(blob, length-2, o);\n\telse parse_XORObfuscation(blob, opts.biff >= 8 ? length : length - 2, opts, o);\n\treturn o;\n}\n\n\nvar RTF = (function() {\n\tfunction rtf_to_sheet(d, opts) {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return rtf_to_sheet_str(Base64.decode(d), opts);\n\t\t\tcase 'binary': return rtf_to_sheet_str(d, opts);\n\t\t\tcase 'buffer': return rtf_to_sheet_str(d.toString('binary'), opts);\n\t\t\tcase 'array':  return rtf_to_sheet_str(cc2str(d), opts);\n\t\t}\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\n\t}\n\n\tfunction rtf_to_sheet_str(str, opts) {\n\t\tvar o = opts || {};\n\t\tvar ws = o.dense ? ([]) : ({});\n\t\tvar range = ({s: {c:0, r:0}, e: {c:0, r:0}});\n\n\t\t// TODO: parse\n\t\tif(!str.match(/\\\\trowd/)) throw new Error(\"RTF missing table\");\n\n\t\tws['!ref'] = encode_range(range);\n\t\treturn ws;\n\t}\n\n\tfunction rtf_to_workbook(d, opts) { return sheet_to_workbook(rtf_to_sheet(d, opts), opts); }\n\n\t/* TODO: this is a stub */\n\tfunction sheet_to_rtf(ws) {\n\t\tvar o = [\"{\\\\rtf1\\\\ansi\"];\n\t\tvar r = safe_decode_range(ws['!ref']), cell;\n\t\tvar dense = Array.isArray(ws);\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\to.push(\"\\\\trowd\\\\trautofit1\");\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) o.push(\"\\\\cellx\" + (C+1));\n\t\t\to.push(\"\\\\pard\\\\intbl\");\n\t\t\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[R]||[])[C]: ws[coord];\n\t\t\t\tif(!cell || cell.v == null && (!cell.f || cell.F)) continue;\n\t\t\t\to.push(\" \" + (cell.w || (format_cell(cell), cell.w)));\n\t\t\t\to.push(\"\\\\cell\");\n\t\t\t}\n\t\t\to.push(\"\\\\pard\\\\intbl\\\\row\");\n\t\t}\n\t\treturn o.join(\"\") + \"}\";\n\t}\n\n\treturn {\n\t\tto_workbook: rtf_to_workbook,\n\t\tto_sheet: rtf_to_sheet,\n\t\tfrom_sheet: sheet_to_rtf\n\t};\n})();\nfunction hex2RGB(h) {\n\tvar o = h.slice(h[0]===\"#\"?1:0).slice(0,6);\n\treturn [parseInt(o.slice(0,2),16),parseInt(o.slice(2,4),16),parseInt(o.slice(4,6),16)];\n}\nfunction rgb2Hex(rgb) {\n\tfor(var i=0,o=1; i!=3; ++i) o = o*256 + (rgb[i]>255?255:rgb[i]<0?0:rgb[i]);\n\treturn o.toString(16).toUpperCase().slice(1);\n}\n\nfunction rgb2HSL(rgb) {\n\tvar R = rgb[0]/255, G = rgb[1]/255, B=rgb[2]/255;\n\tvar M = Math.max(R, G, B), m = Math.min(R, G, B), C = M - m;\n\tif(C === 0) return [0, 0, R];\n\n\tvar H6 = 0, S = 0, L2 = (M + m);\n\tS = C / (L2 > 1 ? 2 - L2 : L2);\n\tswitch(M){\n\t\tcase R: H6 = ((G - B) / C + 6)%6; break;\n\t\tcase G: H6 = ((B - R) / C + 2); break;\n\t\tcase B: H6 = ((R - G) / C + 4); break;\n\t}\n\treturn [H6 / 6, S, L2 / 2];\n}\n\nfunction hsl2RGB(hsl){\n\tvar H = hsl[0], S = hsl[1], L = hsl[2];\n\tvar C = S * 2 * (L < 0.5 ? L : 1 - L), m = L - C/2;\n\tvar rgb = [m,m,m], h6 = 6*H;\n\n\tvar X;\n\tif(S !== 0) switch(h6|0) {\n\t\tcase 0: case 6: X = C * h6; rgb[0] += C; rgb[1] += X; break;\n\t\tcase 1: X = C * (2 - h6);   rgb[0] += X; rgb[1] += C; break;\n\t\tcase 2: X = C * (h6 - 2);   rgb[1] += C; rgb[2] += X; break;\n\t\tcase 3: X = C * (4 - h6);   rgb[1] += X; rgb[2] += C; break;\n\t\tcase 4: X = C * (h6 - 4);   rgb[2] += C; rgb[0] += X; break;\n\t\tcase 5: X = C * (6 - h6);   rgb[2] += X; rgb[0] += C; break;\n\t}\n\tfor(var i = 0; i != 3; ++i) rgb[i] = Math.round(rgb[i]*255);\n\treturn rgb;\n}\n\n/* 18.8.3 bgColor tint algorithm */\nfunction rgb_tint(hex, tint) {\n\tif(tint === 0) return hex;\n\tvar hsl = rgb2HSL(hex2RGB(hex));\n\tif (tint < 0) hsl[2] = hsl[2] * (1 + tint);\n\telse hsl[2] = 1 - (1 - hsl[2]) * (1 - tint);\n\treturn rgb2Hex(hsl2RGB(hsl));\n}\n\n/* 18.3.1.13 width calculations */\n/* [MS-OI29500] 2.1.595 Column Width & Formatting */\nvar DEF_MDW = 6, MAX_MDW = 15, MIN_MDW = 1, MDW = DEF_MDW;\nfunction width2px(width) { return Math.floor(( width + (Math.round(128/MDW))/256 )* MDW ); }\nfunction px2char(px) { return (Math.floor((px - 5)/MDW * 100 + 0.5))/100; }\nfunction char2width(chr) { return (Math.round((chr * MDW + 5)/MDW*256))/256; }\n//function px2char_(px) { return (((px - 5)/MDW * 100 + 0.5))/100; }\n//function char2width_(chr) { return (((chr * MDW + 5)/MDW*256))/256; }\nfunction cycle_width(collw) { return char2width(px2char(width2px(collw))); }\n/* XLSX/XLSB/XLS specify width in units of MDW */\nfunction find_mdw_colw(collw) {\n\tvar delta = Math.abs(collw - cycle_width(collw)), _MDW = MDW;\n\tif(delta > 0.005) for(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) if(Math.abs(collw - cycle_width(collw)) <= delta) { delta = Math.abs(collw - cycle_width(collw)); _MDW = MDW; }\n\tMDW = _MDW;\n}\n/* XLML specifies width in terms of pixels */\n/*function find_mdw_wpx(wpx) {\n\tvar delta = Infinity, guess = 0, _MDW = MIN_MDW;\n\tfor(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) {\n\t\tguess = char2width_(px2char_(wpx))*256;\n\t\tguess = (guess) % 1;\n\t\tif(guess > 0.5) guess--;\n\t\tif(Math.abs(guess) < delta) { delta = Math.abs(guess); _MDW = MDW; }\n\t}\n\tMDW = _MDW;\n}*/\n\nfunction process_col(coll) {\n\tif(coll.width) {\n\t\tcoll.wpx = width2px(coll.width);\n\t\tcoll.wch = px2char(coll.wpx);\n\t\tcoll.MDW = MDW;\n\t} else if(coll.wpx) {\n\t\tcoll.wch = px2char(coll.wpx);\n\t\tcoll.width = char2width(coll.wch);\n\t\tcoll.MDW = MDW;\n\t} else if(typeof coll.wch == 'number') {\n\t\tcoll.width = char2width(coll.wch);\n\t\tcoll.wpx = width2px(coll.width);\n\t\tcoll.MDW = MDW;\n\t}\n\tif(coll.customWidth) delete coll.customWidth;\n}\n\nvar DEF_PPI = 96, PPI = DEF_PPI;\nfunction px2pt(px) { return px * 96 / PPI; }\nfunction pt2px(pt) { return pt * PPI / 96; }\n\n/* [MS-EXSPXML3] 2.4.54 ST_enmPattern */\nvar XLMLPatternTypeMap = {\n\t\"None\": \"none\",\n\t\"Solid\": \"solid\",\n\t\"Gray50\": \"mediumGray\",\n\t\"Gray75\": \"darkGray\",\n\t\"Gray25\": \"lightGray\",\n\t\"HorzStripe\": \"darkHorizontal\",\n\t\"VertStripe\": \"darkVertical\",\n\t\"ReverseDiagStripe\": \"darkDown\",\n\t\"DiagStripe\": \"darkUp\",\n\t\"DiagCross\": \"darkGrid\",\n\t\"ThickDiagCross\": \"darkTrellis\",\n\t\"ThinHorzStripe\": \"lightHorizontal\",\n\t\"ThinVertStripe\": \"lightVertical\",\n\t\"ThinReverseDiagStripe\": \"lightDown\",\n\t\"ThinHorzCross\": \"lightGrid\"\n};\n\n/* 18.8.5 borders CT_Borders */\nfunction parse_borders(t, styles, themes, opts) {\n\tstyles.Borders = [];\n\tvar border = {}/*, sub_border = {}*/;\n\tvar pass = false;\n\tt[0].match(tagregex).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<borders': case '<borders>': case '</borders>': break;\n\n\t\t\t/* 18.8.4 border CT_Border */\n\t\t\tcase '<border': case '<border>': case '<border/>':\n\t\t\t\tborder = {};\n\t\t\t\tif (y.diagonalUp) { border.diagonalUp = y.diagonalUp; }\n\t\t\t\tif (y.diagonalDown) { border.diagonalDown = y.diagonalDown; }\n\t\t\t\tstyles.Borders.push(border);\n\t\t\t\tbreak;\n\t\t\tcase '</border>': break;\n\n\t\t\t/* note: not in spec, appears to be CT_BorderPr */\n\t\t\tcase '<left/>': break;\n\t\t\tcase '<left': case '<left>': break;\n\t\t\tcase '</left>': break;\n\n\t\t\t/* note: not in spec, appears to be CT_BorderPr */\n\t\t\tcase '<right/>': break;\n\t\t\tcase '<right': case '<right>': break;\n\t\t\tcase '</right>': break;\n\n\t\t\t/* 18.8.43 top CT_BorderPr */\n\t\t\tcase '<top/>': break;\n\t\t\tcase '<top': case '<top>': break;\n\t\t\tcase '</top>': break;\n\n\t\t\t/* 18.8.6 bottom CT_BorderPr */\n\t\t\tcase '<bottom/>': break;\n\t\t\tcase '<bottom': case '<bottom>': break;\n\t\t\tcase '</bottom>': break;\n\n\t\t\t/* 18.8.13 diagonal CT_BorderPr */\n\t\t\tcase '<diagonal': case '<diagonal>': case '<diagonal/>': break;\n\t\t\tcase '</diagonal>': break;\n\n\t\t\t/* 18.8.25 horizontal CT_BorderPr */\n\t\t\tcase '<horizontal': case '<horizontal>': case '<horizontal/>': break;\n\t\t\tcase '</horizontal>': break;\n\n\t\t\t/* 18.8.44 vertical CT_BorderPr */\n\t\t\tcase '<vertical': case '<vertical>': case '<vertical/>': break;\n\t\t\tcase '</vertical>': break;\n\n\t\t\t/* 18.8.37 start CT_BorderPr */\n\t\t\tcase '<start': case '<start>': case '<start/>': break;\n\t\t\tcase '</start>': break;\n\n\t\t\t/* 18.8.16 end CT_BorderPr */\n\t\t\tcase '<end': case '<end>': case '<end/>': break;\n\t\t\tcase '</end>': break;\n\n\t\t\t/* 18.8.? color CT_Color */\n\t\t\tcase '<color': case '<color>': break;\n\t\t\tcase '<color/>': case '</color>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in borders');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.21 fills CT_Fills */\nfunction parse_fills(t, styles, themes, opts) {\n\tstyles.Fills = [];\n\tvar fill = {};\n\tvar pass = false;\n\tt[0].match(tagregex).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<fills': case '<fills>': case '</fills>': break;\n\n\t\t\t/* 18.8.20 fill CT_Fill */\n\t\t\tcase '<fill>': case '<fill': case '<fill/>':\n\t\t\t\tfill = {}; styles.Fills.push(fill); break;\n\t\t\tcase '</fill>': break;\n\n\t\t\t/* 18.8.24 gradientFill CT_GradientFill */\n\t\t\tcase '<gradientFill>': break;\n\t\t\tcase '<gradientFill':\n\t\t\tcase '</gradientFill>': styles.Fills.push(fill); fill = {}; break;\n\n\t\t\t/* 18.8.32 patternFill CT_PatternFill */\n\t\t\tcase '<patternFill': case '<patternFill>':\n\t\t\t\tif(y.patternType) fill.patternType = y.patternType;\n\t\t\t\tbreak;\n\t\t\tcase '<patternFill/>': case '</patternFill>': break;\n\n\t\t\t/* 18.8.3 bgColor CT_Color */\n\t\t\tcase '<bgColor':\n\t\t\t\tif(!fill.bgColor) fill.bgColor = {};\n\t\t\t\tif(y.indexed) fill.bgColor.indexed = parseInt(y.indexed, 10);\n\t\t\t\tif(y.theme) fill.bgColor.theme = parseInt(y.theme, 10);\n\t\t\t\tif(y.tint) fill.bgColor.tint = parseFloat(y.tint);\n\t\t\t\t/* Excel uses ARGB strings */\n\t\t\t\tif(y.rgb) fill.bgColor.rgb = y.rgb.slice(-6);\n\t\t\t\tbreak;\n\t\t\tcase '<bgColor/>': case '</bgColor>': break;\n\n\t\t\t/* 18.8.19 fgColor CT_Color */\n\t\t\tcase '<fgColor':\n\t\t\t\tif(!fill.fgColor) fill.fgColor = {};\n\t\t\t\tif(y.theme) fill.fgColor.theme = parseInt(y.theme, 10);\n\t\t\t\tif(y.tint) fill.fgColor.tint = parseFloat(y.tint);\n\t\t\t\t/* Excel uses ARGB strings */\n\t\t\t\tif(y.rgb) fill.fgColor.rgb = y.rgb.slice(-6);\n\t\t\t\tbreak;\n\t\t\tcase '<fgColor/>': case '</fgColor>': break;\n\n\t\t\t/* 18.8.38 stop CT_GradientStop */\n\t\t\tcase '<stop': case '<stop/>': break;\n\t\t\tcase '</stop>': break;\n\n\t\t\t/* 18.8.? color CT_Color */\n\t\t\tcase '<color': case '<color/>': break;\n\t\t\tcase '</color>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in fills');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.23 fonts CT_Fonts */\nfunction parse_fonts(t, styles, themes, opts) {\n\tstyles.Fonts = [];\n\tvar font = {};\n\tvar pass = false;\n\tt[0].match(tagregex).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<fonts': case '<fonts>': case '</fonts>': break;\n\n\t\t\t/* 18.8.22 font CT_Font */\n\t\t\tcase '<font': case '<font>': break;\n\t\t\tcase '</font>': case '<font/>':\n\t\t\t\tstyles.Fonts.push(font);\n\t\t\t\tfont = {};\n\t\t\t\tbreak;\n\n\t\t\t/* 18.8.29 name CT_FontName */\n\t\t\tcase '<name': if(y.val) font.name = y.val; break;\n\t\t\tcase '<name/>': case '</name>': break;\n\n\t\t\t/* 18.8.2  b CT_BooleanProperty */\n\t\t\tcase '<b': font.bold = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<b/>': font.bold = 1; break;\n\n\t\t\t/* 18.8.26 i CT_BooleanProperty */\n\t\t\tcase '<i': font.italic = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<i/>': font.italic = 1; break;\n\n\t\t\t/* 18.4.13 u CT_UnderlineProperty */\n\t\t\tcase '<u':\n\t\t\t\tswitch(y.val) {\n\t\t\t\t\tcase \"none\": font.underline = 0x00; break;\n\t\t\t\t\tcase \"single\": font.underline = 0x01; break;\n\t\t\t\t\tcase \"double\": font.underline = 0x02; break;\n\t\t\t\t\tcase \"singleAccounting\": font.underline = 0x21; break;\n\t\t\t\t\tcase \"doubleAccounting\": font.underline = 0x22; break;\n\t\t\t\t} break;\n\t\t\tcase '<u/>': font.underline = 1; break;\n\n\t\t\t/* 18.4.10 strike CT_BooleanProperty */\n\t\t\tcase '<strike': font.strike = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<strike/>': font.strike = 1; break;\n\n\t\t\t/* 18.4.2  outline CT_BooleanProperty */\n\t\t\tcase '<outline': font.outline = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<outline/>': font.outline = 1; break;\n\n\t\t\t/* 18.8.36 shadow CT_BooleanProperty */\n\t\t\tcase '<shadow': font.shadow = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<shadow/>': font.shadow = 1; break;\n\n\t\t\t/* 18.8.12 condense CT_BooleanProperty */\n\t\t\tcase '<condense': font.condense = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<condense/>': font.condense = 1; break;\n\n\t\t\t/* 18.8.17 extend CT_BooleanProperty */\n\t\t\tcase '<extend': font.extend = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<extend/>': font.extend = 1; break;\n\n\t\t\t/* 18.4.11 sz CT_FontSize */\n\t\t\tcase '<sz': if(y.val) font.sz = +y.val; break;\n\t\t\tcase '<sz/>': case '</sz>': break;\n\n\t\t\t/* 18.4.14 vertAlign CT_VerticalAlignFontProperty */\n\t\t\tcase '<vertAlign': if(y.val) font.vertAlign = y.val; break;\n\t\t\tcase '<vertAlign/>': case '</vertAlign>': break;\n\n\t\t\t/* 18.8.18 family CT_FontFamily */\n\t\t\tcase '<family': if(y.val) font.family = parseInt(y.val,10); break;\n\t\t\tcase '<family/>': case '</family>': break;\n\n\t\t\t/* 18.8.35 scheme CT_FontScheme */\n\t\t\tcase '<scheme': if(y.val) font.scheme = y.val; break;\n\t\t\tcase '<scheme/>': case '</scheme>': break;\n\n\t\t\t/* 18.4.1 charset CT_IntProperty */\n\t\t\tcase '<charset':\n\t\t\t\tif(y.val == '1') break;\n\t\t\t\ty.codepage = CS2CP[parseInt(y.val, 10)];\n\t\t\t\tbreak;\n\n\t\t\t/* 18.?.? color CT_Color */\n\t\t\tcase '<color':\n\t\t\t\tif(!font.color) font.color = {};\n\t\t\t\tif(y.auto) font.color.auto = parsexmlbool(y.auto);\n\n\t\t\t\tif(y.rgb) font.color.rgb = y.rgb.slice(-6);\n\t\t\t\telse if(y.indexed) {\n\t\t\t\t\tfont.color.index = parseInt(y.indexed, 10);\n\t\t\t\t\tvar icv = XLSIcv[font.color.index];\n\t\t\t\t\tif(font.color.index == 81) icv = XLSIcv[1];\n\t\t\t\t\tif(!icv) throw new Error(x);\n\t\t\t\t\tfont.color.rgb = icv[0].toString(16) + icv[1].toString(16) + icv[2].toString(16);\n\t\t\t\t} else if(y.theme) {\n\t\t\t\t\tfont.color.theme = parseInt(y.theme, 10);\n\t\t\t\t\tif(y.tint) font.color.tint = parseFloat(y.tint);\n\t\t\t\t\tif(y.theme && themes.themeElements && themes.themeElements.clrScheme) {\n\t\t\t\t\t\tfont.color.rgb = rgb_tint(themes.themeElements.clrScheme[font.color.theme].rgb, font.color.tint || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase '<color/>': case '</color>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in fonts');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.31 numFmts CT_NumFmts */\nfunction parse_numFmts(t, styles, opts) {\n\tstyles.NumberFmt = [];\n\tvar k/*Array<number>*/ = (keys(SSF._table));\n\tfor(var i=0; i < k.length; ++i) styles.NumberFmt[k[i]] = SSF._table[k[i]];\n\tvar m = t[0].match(tagregex);\n\tif(!m) return;\n\tfor(i=0; i < m.length; ++i) {\n\t\tvar y = parsexmltag(m[i]);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<numFmts': case '</numFmts>': case '<numFmts/>': case '<numFmts>': break;\n\t\t\tcase '<numFmt': {\n\t\t\t\tvar f=unescapexml(utf8read(y.formatCode)), j=parseInt(y.numFmtId,10);\n\t\t\t\tstyles.NumberFmt[j] = f;\n\t\t\t\tif(j>0) {\n\t\t\t\t\tif(j > 0x188) {\n\t\t\t\t\t\tfor(j = 0x188; j > 0x3c; --j) if(styles.NumberFmt[j] == null) break;\n\t\t\t\t\t\tstyles.NumberFmt[j] = f;\n\t\t\t\t\t}\n\t\t\t\t\tSSF.load(f,j);\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase '</numFmt>': break;\n\t\t\tdefault: if(opts.WTF) throw new Error('unrecognized ' + y[0] + ' in numFmts');\n\t\t}\n\t}\n}\n\nfunction write_numFmts(NF) {\n\tvar o = [\"<numFmts>\"];\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) o[o.length] = (writextag('numFmt',null,{numFmtId:i,formatCode:escapexml(NF[i])}));\n\t});\n\tif(o.length === 1) return \"\";\n\to[o.length] = (\"</numFmts>\");\n\to[0] = writextag('numFmts', null, { count:o.length-2 }).replace(\"/>\", \">\");\n\treturn o.join(\"\");\n}\n\n/* 18.8.10 cellXfs CT_CellXfs */\nvar cellXF_uint = [ \"numFmtId\", \"fillId\", \"fontId\", \"borderId\", \"xfId\" ];\nvar cellXF_bool = [ \"applyAlignment\", \"applyBorder\", \"applyFill\", \"applyFont\", \"applyNumberFormat\", \"applyProtection\", \"pivotButton\", \"quotePrefix\" ];\nfunction parse_cellXfs(t, styles, opts) {\n\tstyles.CellXf = [];\n\tvar xf;\n\tvar pass = false;\n\tt[0].match(tagregex).forEach(function(x) {\n\t\tvar y = parsexmltag(x), i = 0;\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<cellXfs': case '<cellXfs>': case '<cellXfs/>': case '</cellXfs>': break;\n\n\t\t\t/* 18.8.45 xf CT_Xf */\n\t\t\tcase '<xf': case '<xf/>':\n\t\t\t\txf = y;\n\t\t\t\tdelete xf[0];\n\t\t\t\tfor(i = 0; i < cellXF_uint.length; ++i) if(xf[cellXF_uint[i]])\n\t\t\t\t\txf[cellXF_uint[i]] = parseInt(xf[cellXF_uint[i]], 10);\n\t\t\t\tfor(i = 0; i < cellXF_bool.length; ++i) if(xf[cellXF_bool[i]])\n\t\t\t\t\txf[cellXF_bool[i]] = parsexmlbool(xf[cellXF_bool[i]]);\n\t\t\t\tif(xf.numFmtId > 0x188) {\n\t\t\t\t\tfor(i = 0x188; i > 0x3c; --i) if(styles.NumberFmt[xf.numFmtId] == styles.NumberFmt[i]) { xf.numFmtId = i; break; }\n\t\t\t\t}\n\t\t\t\tstyles.CellXf.push(xf); break;\n\t\t\tcase '</xf>': break;\n\n\t\t\t/* 18.8.1 alignment CT_CellAlignment */\n\t\t\tcase '<alignment': case '<alignment/>':\n\t\t\t\tvar alignment = {};\n\t\t\t\tif(y.vertical) alignment.vertical = y.vertical;\n\t\t\t\tif(y.horizontal) alignment.horizontal = y.horizontal;\n\t\t\t\tif(y.textRotation != null) alignment.textRotation = y.textRotation;\n\t\t\t\tif(y.indent) alignment.indent = y.indent;\n\t\t\t\tif(y.wrapText) alignment.wrapText = y.wrapText;\n\t\t\t\txf.alignment = alignment;\n\t\t\t\tbreak;\n\t\t\tcase '</alignment>': break;\n\n\t\t\t/* 18.8.33 protection CT_CellProtection */\n\t\t\tcase '<protection': case '</protection>': case '<protection/>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in cellXfs');\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction write_cellXfs(cellXfs) {\n\tvar o = [];\n\to[o.length] = (writextag('cellXfs',null));\n\tcellXfs.forEach(function(c) { o[o.length] = (writextag('xf', null, c)); });\n\to[o.length] = (\"</cellXfs>\");\n\tif(o.length === 2) return \"\";\n\to[0] = writextag('cellXfs',null, {count:o.length-2}).replace(\"/>\",\">\");\n\treturn o.join(\"\");\n}\n\n/* 18.8 Styles CT_Stylesheet*/\nvar parse_sty_xml= (function make_pstyx() {\nvar numFmtRegex = /<(?:\\w+:)?numFmts([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?numFmts>/;\nvar cellXfRegex = /<(?:\\w+:)?cellXfs([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?cellXfs>/;\nvar fillsRegex = /<(?:\\w+:)?fills([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?fills>/;\nvar fontsRegex = /<(?:\\w+:)?fonts([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?fonts>/;\nvar bordersRegex = /<(?:\\w+:)?borders([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?borders>/;\n\nreturn function parse_sty_xml(data, themes, opts) {\n\tvar styles = {};\n\tif(!data) return styles;\n\tdata = data.replace(/<!--([\\s\\S]*?)-->/mg,\"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm,\"\");\n\t/* 18.8.39 styleSheet CT_Stylesheet */\n\tvar t;\n\n\t/* 18.8.31 numFmts CT_NumFmts ? */\n\tif((t=data.match(numFmtRegex))) parse_numFmts(t, styles, opts);\n\n\t/* 18.8.23 fonts CT_Fonts ? */\n\tif((t=data.match(fontsRegex))) parse_fonts(t, styles, themes, opts);\n\n\t/* 18.8.21 fills CT_Fills ? */\n\tif((t=data.match(fillsRegex))) parse_fills(t, styles, themes, opts);\n\n\t/* 18.8.5  borders CT_Borders ? */\n\tif((t=data.match(bordersRegex))) parse_borders(t, styles, themes, opts);\n\n\t/* 18.8.9  cellStyleXfs CT_CellStyleXfs ? */\n\n\t/* 18.8.10 cellXfs CT_CellXfs ? */\n\tif((t=data.match(cellXfRegex))) parse_cellXfs(t, styles, opts);\n\n\t/* 18.8.8  cellStyles CT_CellStyles ? */\n\t/* 18.8.15 dxfs CT_Dxfs ? */\n\t/* 18.8.42 tableStyles CT_TableStyles ? */\n\t/* 18.8.11 colors CT_Colors ? */\n\t/* 18.2.10 extLst CT_ExtensionList ? */\n\n\treturn styles;\n};\n})();\n\nvar STYLES_XML_ROOT = writextag('styleSheet', null, {\n\t'xmlns': XMLNS.main[0],\n\t'xmlns:vt': XMLNS.vt\n});\n\nRELS.STY = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\";\n\nfunction write_sty_xml(wb, opts) {\n\tvar o = [XML_HEADER, STYLES_XML_ROOT], w;\n\tif(wb.SSF && (w = write_numFmts(wb.SSF)) != null) o[o.length] = w;\n\to[o.length] = ('<fonts count=\"1\"><font><sz val=\"12\"/><color theme=\"1\"/><name val=\"Calibri\"/><family val=\"2\"/><scheme val=\"minor\"/></font></fonts>');\n\to[o.length] = ('<fills count=\"2\"><fill><patternFill patternType=\"none\"/></fill><fill><patternFill patternType=\"gray125\"/></fill></fills>');\n\to[o.length] = ('<borders count=\"1\"><border><left/><right/><top/><bottom/><diagonal/></border></borders>');\n\to[o.length] = ('<cellStyleXfs count=\"1\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\"/></cellStyleXfs>');\n\tif((w = write_cellXfs(opts.cellXfs))) o[o.length] = (w);\n\to[o.length] = ('<cellStyles count=\"1\"><cellStyle name=\"Normal\" xfId=\"0\" builtinId=\"0\"/></cellStyles>');\n\to[o.length] = ('<dxfs count=\"0\"/>');\n\to[o.length] = ('<tableStyles count=\"0\" defaultTableStyle=\"TableStyleMedium9\" defaultPivotStyle=\"PivotStyleMedium4\"/>');\n\n\tif(o.length>2){ o[o.length] = ('</styleSheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.657 BrtFmt */\nfunction parse_BrtFmt(data, length) {\n\tvar numFmtId = data.read_shift(2);\n\tvar stFmtCode = parse_XLWideString(data,length-2);\n\treturn [numFmtId, stFmtCode];\n}\nfunction write_BrtFmt(i, f, o) {\n\tif(!o) o = new_buf(6 + 4 * f.length);\n\to.write_shift(2, i);\n\twrite_XLWideString(f, o);\n\tvar out = (o.length > o.l) ? o.slice(0, o.l) : o;\n\tif(o.l == null) o.l = o.length;\n\treturn out;\n}\n\n/* [MS-XLSB] 2.4.659 BrtFont TODO */\nfunction parse_BrtFont(data, length, opts) {\n\tvar out = ({});\n\n\tout.sz = data.read_shift(2) / 20;\n\n\tvar grbit = parse_FontFlags(data, 2, opts);\n\tif(grbit.fCondense) out.condense = 1;\n\tif(grbit.fExtend) out.extend = 1;\n\tif(grbit.fShadow) out.shadow = 1;\n\tif(grbit.fOutline) out.outline = 1;\n\tif(grbit.fStrikeout) out.strike = 1;\n\tif(grbit.fItalic) out.italic = 1;\n\n\tvar bls = data.read_shift(2);\n\tif(bls === 0x02BC) out.bold = 1;\n\n\tswitch(data.read_shift(2)) {\n\t\t/* case 0: out.vertAlign = \"baseline\"; break; */\n\t\tcase 1: out.vertAlign = \"superscript\"; break;\n\t\tcase 2: out.vertAlign = \"subscript\"; break;\n\t}\n\n\tvar underline = data.read_shift(1);\n\tif(underline != 0) out.underline = underline;\n\n\tvar family = data.read_shift(1);\n\tif(family > 0) out.family = family;\n\n\tvar bCharSet = data.read_shift(1);\n\tif(bCharSet > 0) out.charset = bCharSet;\n\n\tdata.l++;\n\tout.color = parse_BrtColor(data, 8);\n\n\tswitch(data.read_shift(1)) {\n\t\t/* case 0: out.scheme = \"none\": break; */\n\t\tcase 1: out.scheme = \"major\"; break;\n\t\tcase 2: out.scheme = \"minor\"; break;\n\t}\n\n\tout.name = parse_XLWideString(data, length - 21);\n\n\treturn out;\n}\nfunction write_BrtFont(font, o) {\n\tif(!o) o = new_buf(25+4*32);\n\to.write_shift(2, font.sz * 20);\n\twrite_FontFlags(font, o);\n\to.write_shift(2, font.bold ? 0x02BC : 0x0190);\n\tvar sss = 0;\n\tif(font.vertAlign == \"superscript\") sss = 1;\n\telse if(font.vertAlign == \"subscript\") sss = 2;\n\to.write_shift(2, sss);\n\to.write_shift(1, font.underline || 0);\n\to.write_shift(1, font.family || 0);\n\to.write_shift(1, font.charset || 0);\n\to.write_shift(1, 0);\n\twrite_BrtColor(font.color, o);\n\tvar scheme = 0;\n\tif(font.scheme == \"major\") scheme = 1;\n\tif(font.scheme == \"minor\") scheme = 2;\n\to.write_shift(1, scheme);\n\twrite_XLWideString(font.name, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.650 BrtFill */\nvar XLSBFillPTNames = [\n\t\"none\",\n\t\"solid\",\n\t\"mediumGray\",\n\t\"darkGray\",\n\t\"lightGray\",\n\t\"darkHorizontal\",\n\t\"darkVertical\",\n\t\"darkDown\",\n\t\"darkUp\",\n\t\"darkGrid\",\n\t\"darkTrellis\",\n\t\"lightHorizontal\",\n\t\"lightVertical\",\n\t\"lightDown\",\n\t\"lightUp\",\n\t\"lightGrid\",\n\t\"lightTrellis\",\n\t\"gray125\",\n\t\"gray0625\"\n];\nvar rev_XLSBFillPTNames = (evert(XLSBFillPTNames));\n/* TODO: gradient fill representation */\nvar parse_BrtFill = parsenoop;\nfunction write_BrtFill(fill, o) {\n\tif(!o) o = new_buf(4*3 + 8*7 + 16*1);\n\tvar fls = rev_XLSBFillPTNames[fill.patternType];\n\tif(fls == null) fls = 0x28;\n\to.write_shift(4, fls);\n\tvar j = 0;\n\tif(fls != 0x28) {\n\t\t/* TODO: custom FG Color */\n\t\twrite_BrtColor({auto:1}, o);\n\t\t/* TODO: custom BG Color */\n\t\twrite_BrtColor({auto:1}, o);\n\n\t\tfor(; j < 12; ++j) o.write_shift(4, 0);\n\t} else {\n\t\tfor(; j < 4; ++j) o.write_shift(4, 0);\n\n\t\tfor(; j < 12; ++j) o.write_shift(4, 0); /* TODO */\n\t\t/* iGradientType */\n\t\t/* xnumDegree */\n\t\t/* xnumFillToLeft */\n\t\t/* xnumFillToRight */\n\t\t/* xnumFillToTop */\n\t\t/* xnumFillToBottom */\n\t\t/* cNumStop */\n\t\t/* xfillGradientStop */\n\t}\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.824 BrtXF */\nfunction parse_BrtXF(data, length) {\n\tvar tgt = data.l + length;\n\tvar ixfeParent = data.read_shift(2);\n\tvar ifmt = data.read_shift(2);\n\tdata.l = tgt;\n\treturn {ixfe:ixfeParent, numFmtId:ifmt };\n}\nfunction write_BrtXF(data, ixfeP, o) {\n\tif(!o) o = new_buf(16);\n\to.write_shift(2, ixfeP||0);\n\to.write_shift(2, data.numFmtId||0);\n\to.write_shift(2, 0); /* iFont */\n\to.write_shift(2, 0); /* iFill */\n\to.write_shift(2, 0); /* ixBorder */\n\to.write_shift(1, 0); /* trot */\n\to.write_shift(1, 0); /* indent */\n\to.write_shift(1, 0); /* flags */\n\to.write_shift(1, 0); /* flags */\n\to.write_shift(1, 0); /* xfGrbitAtr */\n\to.write_shift(1, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.4 Blxf TODO */\nfunction write_Blxf(data, o) {\n\tif(!o) o = new_buf(10);\n\to.write_shift(1, 0); /* dg */\n\to.write_shift(1, 0);\n\to.write_shift(4, 0); /* color */\n\to.write_shift(4, 0); /* color */\n\treturn o;\n}\n/* [MS-XLSB] 2.4.302 BrtBorder TODO */\nvar parse_BrtBorder = parsenoop;\nfunction write_BrtBorder(border, o) {\n\tif(!o) o = new_buf(51);\n\to.write_shift(1, 0); /* diagonal */\n\twrite_Blxf(null, o); /* top */\n\twrite_Blxf(null, o); /* bottom */\n\twrite_Blxf(null, o); /* left */\n\twrite_Blxf(null, o); /* right */\n\twrite_Blxf(null, o); /* diag */\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.763 BrtStyle TODO */\nfunction write_BrtStyle(style, o) {\n\tif(!o) o = new_buf(12+4*10);\n\to.write_shift(4, style.xfId);\n\to.write_shift(2, 1);\n\to.write_shift(1, +style.builtinId);\n\to.write_shift(1, 0); /* iLevel */\n\twrite_XLNullableWideString(style.name || \"\", o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.272 BrtBeginTableStyles */\nfunction write_BrtBeginTableStyles(cnt, defTableStyle, defPivotStyle) {\n\tvar o = new_buf(4+256*2*4);\n\to.write_shift(4, cnt);\n\twrite_XLNullableWideString(defTableStyle, o);\n\twrite_XLNullableWideString(defPivotStyle, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction parse_sty_bin(data, themes, opts) {\n\tvar styles = {};\n\tstyles.NumberFmt = ([]);\n\tfor(var y in SSF._table) styles.NumberFmt[y] = SSF._table[y];\n\n\tstyles.CellXf = [];\n\tstyles.Fonts = [];\n\tvar state = [];\n\tvar pass = false;\n\trecordhopper(data, function hopper_sty(val, R_n, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x002C: /* 'BrtFmt' */\n\t\t\t\tstyles.NumberFmt[val[0]] = val[1]; SSF.load(val[1], val[0]);\n\t\t\t\tbreak;\n\t\t\tcase 0x002B: /* 'BrtFont' */\n\t\t\t\tstyles.Fonts.push(val);\n\t\t\t\tif(val.color.theme != null && themes && themes.themeElements && themes.themeElements.clrScheme) {\n\t\t\t\t\tval.color.rgb = rgb_tint(themes.themeElements.clrScheme[val.color.theme].rgb, val.color.tint || 0);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 0x0401: /* 'BrtKnownFonts' */ break;\n\t\t\tcase 0x002D: /* 'BrtFill' */ break;\n\t\t\tcase 0x002E: /* 'BrtBorder' */ break;\n\t\t\tcase 0x002F: /* 'BrtXF' */\n\t\t\t\tif(state[state.length - 1] == \"BrtBeginCellXFs\") {\n\t\t\t\t\tstyles.CellXf.push(val);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 0x0030: /* 'BrtStyle' */\n\t\t\tcase 0x01FB: /* 'BrtDXF' */\n\t\t\tcase 0x023C: /* 'BrtMRUColor' */\n\t\t\tcase 0x01DB: /* 'BrtIndexedColor': */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0493: /* 'BrtDXF14' */\n\t\t\tcase 0x0836: /* 'BrtDXF15' */\n\t\t\tcase 0x046A: /* 'BrtSlicerStyleElement' */\n\t\t\tcase 0x0200: /* 'BrtTableStyleElement' */\n\t\t\tcase 0x082F: /* 'BrtTimelineStyleElement' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(R_n); break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); break;\n\n\t\t\tdefault:\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0) state.push(R_n);\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0) state.pop();\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n\t\t}\n\t});\n\treturn styles;\n}\n\nfunction write_FMTS_bin(ba, NF) {\n\tif(!NF) return;\n\tvar cnt = 0;\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\nfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) ++cnt;\n\t});\n\n\tif(cnt == 0) return;\n\twrite_record(ba, \"BrtBeginFmts\", write_UInt32LE(cnt));\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\nfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) write_record(ba, \"BrtFmt\", write_BrtFmt(i, NF[i]));\n\t});\n\twrite_record(ba, \"BrtEndFmts\");\n}\n\nfunction write_FONTS_bin(ba) {\n\tvar cnt = 1;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, \"BrtBeginFonts\", write_UInt32LE(cnt));\n\twrite_record(ba, \"BrtFont\", write_BrtFont({\n\t\tsz:12,\n\t\tcolor: {theme:1},\n\t\tname: \"Calibri\",\n\t\tfamily: 2,\n\t\tscheme: \"minor\"\n\t}));\n\t/* 1*65491BrtFont [ACFONTS] */\n\twrite_record(ba, \"BrtEndFonts\");\n}\n\nfunction write_FILLS_bin(ba) {\n\tvar cnt = 2;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, \"BrtBeginFills\", write_UInt32LE(cnt));\n\twrite_record(ba, \"BrtFill\", write_BrtFill({patternType:\"none\"}));\n\twrite_record(ba, \"BrtFill\", write_BrtFill({patternType:\"gray125\"}));\n\t/* 1*65431BrtFill */\n\twrite_record(ba, \"BrtEndFills\");\n}\n\nfunction write_BORDERS_bin(ba) {\n\tvar cnt = 1;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, \"BrtBeginBorders\", write_UInt32LE(cnt));\n\twrite_record(ba, \"BrtBorder\", write_BrtBorder({}));\n\t/* 1*65430BrtBorder */\n\twrite_record(ba, \"BrtEndBorders\");\n}\n\nfunction write_CELLSTYLEXFS_bin(ba) {\n\tvar cnt = 1;\n\twrite_record(ba, \"BrtBeginCellStyleXFs\", write_UInt32LE(cnt));\n\twrite_record(ba, \"BrtXF\", write_BrtXF({\n\t\tnumFmtId:0,\n\t\tfontId:0,\n\t\tfillId:0,\n\t\tborderId:0\n\t}, 0xFFFF));\n\t/* 1*65430(BrtXF *FRT) */\n\twrite_record(ba, \"BrtEndCellStyleXFs\");\n}\n\nfunction write_CELLXFS_bin(ba, data) {\n\twrite_record(ba, \"BrtBeginCellXFs\", write_UInt32LE(data.length));\n\tdata.forEach(function(c) { write_record(ba, \"BrtXF\", write_BrtXF(c,0)); });\n\t/* 1*65430(BrtXF *FRT) */\n\twrite_record(ba, \"BrtEndCellXFs\");\n}\n\nfunction write_STYLES_bin(ba) {\n\tvar cnt = 1;\n\n\twrite_record(ba, \"BrtBeginStyles\", write_UInt32LE(cnt));\n\twrite_record(ba, \"BrtStyle\", write_BrtStyle({\n\t\txfId:0,\n\t\tbuiltinId:0,\n\t\tname:\"Normal\"\n\t}));\n\t/* 1*65430(BrtStyle *FRT) */\n\twrite_record(ba, \"BrtEndStyles\");\n}\n\nfunction write_DXFS_bin(ba) {\n\tvar cnt = 0;\n\n\twrite_record(ba, \"BrtBeginDXFs\", write_UInt32LE(cnt));\n\t/* *2147483647(BrtDXF *FRT) */\n\twrite_record(ba, \"BrtEndDXFs\");\n}\n\nfunction write_TABLESTYLES_bin(ba) {\n\tvar cnt = 0;\n\n\twrite_record(ba, \"BrtBeginTableStyles\", write_BrtBeginTableStyles(cnt, \"TableStyleMedium9\", \"PivotStyleMedium4\"));\n\t/* *TABLESTYLE */\n\twrite_record(ba, \"BrtEndTableStyles\");\n}\n\nfunction write_COLORPALETTE_bin() {\n\treturn;\n\t/* BrtBeginColorPalette [INDEXEDCOLORS] [MRUCOLORS] BrtEndColorPalette */\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction write_sty_bin(wb, opts) {\n\tvar ba = buf_array();\n\twrite_record(ba, \"BrtBeginStyleSheet\");\n\twrite_FMTS_bin(ba, wb.SSF);\n\twrite_FONTS_bin(ba, wb);\n\twrite_FILLS_bin(ba, wb);\n\twrite_BORDERS_bin(ba, wb);\n\twrite_CELLSTYLEXFS_bin(ba, wb);\n\twrite_CELLXFS_bin(ba, opts.cellXfs);\n\twrite_STYLES_bin(ba, wb);\n\twrite_DXFS_bin(ba, wb);\n\twrite_TABLESTYLES_bin(ba, wb);\n\twrite_COLORPALETTE_bin(ba, wb);\n\t/* FRTSTYLESHEET*/\n\twrite_record(ba, \"BrtEndStyleSheet\");\n\treturn ba.end();\n}\nRELS.THEME = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\";\n\n/* 20.1.6.2 clrScheme CT_ColorScheme */\nfunction parse_clrScheme(t, themes, opts) {\n\tthemes.themeElements.clrScheme = [];\n\tvar color = {};\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0]) {\n\t\t\t/* 20.1.6.2 clrScheme (Color Scheme) CT_ColorScheme */\n\t\t\tcase '<a:clrScheme': case '</a:clrScheme>': break;\n\n\t\t\t/* 20.1.2.3.32 srgbClr CT_SRgbColor */\n\t\t\tcase '<a:srgbClr':\n\t\t\t\tcolor.rgb = y.val; break;\n\n\t\t\t/* 20.1.2.3.33 sysClr CT_SystemColor */\n\t\t\tcase '<a:sysClr':\n\t\t\t\tcolor.rgb = y.lastClr; break;\n\n\t\t\t/* 20.1.4.1.1 accent1 (Accent 1) */\n\t\t\t/* 20.1.4.1.2 accent2 (Accent 2) */\n\t\t\t/* 20.1.4.1.3 accent3 (Accent 3) */\n\t\t\t/* 20.1.4.1.4 accent4 (Accent 4) */\n\t\t\t/* 20.1.4.1.5 accent5 (Accent 5) */\n\t\t\t/* 20.1.4.1.6 accent6 (Accent 6) */\n\t\t\t/* 20.1.4.1.9 dk1 (Dark 1) */\n\t\t\t/* 20.1.4.1.10 dk2 (Dark 2) */\n\t\t\t/* 20.1.4.1.15 folHlink (Followed Hyperlink) */\n\t\t\t/* 20.1.4.1.19 hlink (Hyperlink) */\n\t\t\t/* 20.1.4.1.22 lt1 (Light 1) */\n\t\t\t/* 20.1.4.1.23 lt2 (Light 2) */\n\t\t\tcase '<a:dk1>': case '</a:dk1>':\n\t\t\tcase '<a:lt1>': case '</a:lt1>':\n\t\t\tcase '<a:dk2>': case '</a:dk2>':\n\t\t\tcase '<a:lt2>': case '</a:lt2>':\n\t\t\tcase '<a:accent1>': case '</a:accent1>':\n\t\t\tcase '<a:accent2>': case '</a:accent2>':\n\t\t\tcase '<a:accent3>': case '</a:accent3>':\n\t\t\tcase '<a:accent4>': case '</a:accent4>':\n\t\t\tcase '<a:accent5>': case '</a:accent5>':\n\t\t\tcase '<a:accent6>': case '</a:accent6>':\n\t\t\tcase '<a:hlink>': case '</a:hlink>':\n\t\t\tcase '<a:folHlink>': case '</a:folHlink>':\n\t\t\t\tif (y[0].charAt(1) === '/') {\n\t\t\t\t\tthemes.themeElements.clrScheme.push(color);\n\t\t\t\t\tcolor = {};\n\t\t\t\t} else {\n\t\t\t\t\tcolor.name = y[0].slice(3, y[0].length - 1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault: if(opts && opts.WTF) throw new Error('Unrecognized ' + y[0] + ' in clrScheme');\n\t\t}\n\t});\n}\n\n/* 20.1.4.1.18 fontScheme CT_FontScheme */\nfunction parse_fontScheme() { }\n\n/* 20.1.4.1.15 fmtScheme CT_StyleMatrix */\nfunction parse_fmtScheme() { }\n\nvar clrsregex = /<a:clrScheme([^>]*)>[\\s\\S]*<\\/a:clrScheme>/;\nvar fntsregex = /<a:fontScheme([^>]*)>[\\s\\S]*<\\/a:fontScheme>/;\nvar fmtsregex = /<a:fmtScheme([^>]*)>[\\s\\S]*<\\/a:fmtScheme>/;\n\n/* 20.1.6.10 themeElements CT_BaseStyles */\nfunction parse_themeElements(data, themes, opts) {\n\tthemes.themeElements = {};\n\n\tvar t;\n\n\t[\n\t\t/* clrScheme CT_ColorScheme */\n\t\t['clrScheme', clrsregex, parse_clrScheme],\n\t\t/* fontScheme CT_FontScheme */\n\t\t['fontScheme', fntsregex, parse_fontScheme],\n\t\t/* fmtScheme CT_StyleMatrix */\n\t\t['fmtScheme', fmtsregex, parse_fmtScheme]\n\t].forEach(function(m) {\n\t\tif(!(t=data.match(m[1]))) throw new Error(m[0] + ' not found in themeElements');\n\t\tm[2](t, themes, opts);\n\t});\n}\n\nvar themeltregex = /<a:themeElements([^>]*)>[\\s\\S]*<\\/a:themeElements>/;\n\n/* 14.2.7 Theme Part */\nfunction parse_theme_xml(data, opts) {\n\t/* 20.1.6.9 theme CT_OfficeStyleSheet */\n\tif(!data || data.length === 0) return parse_theme_xml(write_theme());\n\n\tvar t;\n\tvar themes = {};\n\n\t/* themeElements CT_BaseStyles */\n\tif(!(t=data.match(themeltregex))) throw new Error('themeElements not found in theme');\n\tparse_themeElements(t[0], themes, opts);\n\n\treturn themes;\n}\n\nfunction write_theme(Themes, opts) {\n\tif(opts && opts.themeXLSX) return opts.themeXLSX;\n\tvar o = [XML_HEADER];\n\to[o.length] = '<a:theme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Office Theme\">';\n\to[o.length] =  '<a:themeElements>';\n\n\to[o.length] =   '<a:clrScheme name=\"Office\">';\n\to[o.length] =    '<a:dk1><a:sysClr val=\"windowText\" lastClr=\"000000\"/></a:dk1>';\n\to[o.length] =    '<a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1>';\n\to[o.length] =    '<a:dk2><a:srgbClr val=\"1F497D\"/></a:dk2>';\n\to[o.length] =    '<a:lt2><a:srgbClr val=\"EEECE1\"/></a:lt2>';\n\to[o.length] =    '<a:accent1><a:srgbClr val=\"4F81BD\"/></a:accent1>';\n\to[o.length] =    '<a:accent2><a:srgbClr val=\"C0504D\"/></a:accent2>';\n\to[o.length] =    '<a:accent3><a:srgbClr val=\"9BBB59\"/></a:accent3>';\n\to[o.length] =    '<a:accent4><a:srgbClr val=\"8064A2\"/></a:accent4>';\n\to[o.length] =    '<a:accent5><a:srgbClr val=\"4BACC6\"/></a:accent5>';\n\to[o.length] =    '<a:accent6><a:srgbClr val=\"F79646\"/></a:accent6>';\n\to[o.length] =    '<a:hlink><a:srgbClr val=\"0000FF\"/></a:hlink>';\n\to[o.length] =    '<a:folHlink><a:srgbClr val=\"800080\"/></a:folHlink>';\n\to[o.length] =   '</a:clrScheme>';\n\n\to[o.length] =   '<a:fontScheme name=\"Office\">';\n\to[o.length] =    '<a:majorFont>';\n\to[o.length] =     '<a:latin typeface=\"Cambria\"/>';\n\to[o.length] =     '<a:ea typeface=\"\"/>';\n\to[o.length] =     '<a:cs typeface=\"\"/>';\n\to[o.length] =     '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n\to[o.length] =     '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n\to[o.length] =     '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n\to[o.length] =     '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n\to[o.length] =     '<a:font script=\"Arab\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Hebr\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n\to[o.length] =     '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n\to[o.length] =     '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n\to[o.length] =     '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n\to[o.length] =     '<a:font script=\"Khmr\" typeface=\"MoolBoran\"/>';\n\to[o.length] =     '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n\to[o.length] =     '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n\to[o.length] =     '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n\to[o.length] =     '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n\to[o.length] =     '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n\to[o.length] =     '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n\to[o.length] =     '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n\to[o.length] =     '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n\to[o.length] =     '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n\to[o.length] =     '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n\to[o.length] =     '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n\to[o.length] =     '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n\to[o.length] =     '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n\to[o.length] =     '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n\to[o.length] =     '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Viet\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n\to[o.length] =     '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n\to[o.length] =    '</a:majorFont>';\n\to[o.length] =    '<a:minorFont>';\n\to[o.length] =     '<a:latin typeface=\"Calibri\"/>';\n\to[o.length] =     '<a:ea typeface=\"\"/>';\n\to[o.length] =     '<a:cs typeface=\"\"/>';\n\to[o.length] =     '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n\to[o.length] =     '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n\to[o.length] =     '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n\to[o.length] =     '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n\to[o.length] =     '<a:font script=\"Arab\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Hebr\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n\to[o.length] =     '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n\to[o.length] =     '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n\to[o.length] =     '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n\to[o.length] =     '<a:font script=\"Khmr\" typeface=\"DaunPenh\"/>';\n\to[o.length] =     '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n\to[o.length] =     '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n\to[o.length] =     '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n\to[o.length] =     '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n\to[o.length] =     '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n\to[o.length] =     '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n\to[o.length] =     '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n\to[o.length] =     '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n\to[o.length] =     '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n\to[o.length] =     '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n\to[o.length] =     '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n\to[o.length] =     '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n\to[o.length] =     '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n\to[o.length] =     '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n\to[o.length] =     '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Viet\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n\to[o.length] =     '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n\to[o.length] =    '</a:minorFont>';\n\to[o.length] =   '</a:fontScheme>';\n\n\to[o.length] =   '<a:fmtScheme name=\"Office\">';\n\to[o.length] =    '<a:fillStyleLst>';\n\to[o.length] =     '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"35000\"><a:schemeClr val=\"phClr\"><a:tint val=\"37000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"15000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:lin ang=\"16200000\" scaled=\"1\"/>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"100000\"/><a:shade val=\"100000\"/><a:satMod val=\"130000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:shade val=\"100000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:lin ang=\"16200000\" scaled=\"0\"/>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =    '</a:fillStyleLst>';\n\to[o.length] =    '<a:lnStyleLst>';\n\to[o.length] =     '<a:ln w=\"9525\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"><a:shade val=\"95000\"/><a:satMod val=\"105000\"/></a:schemeClr></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =     '<a:ln w=\"25400\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =     '<a:ln w=\"38100\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =    '</a:lnStyleLst>';\n\to[o.length] =    '<a:effectStyleLst>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"20000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"38000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =      '<a:scene3d><a:camera prst=\"orthographicFront\"><a:rot lat=\"0\" lon=\"0\" rev=\"0\"/></a:camera><a:lightRig rig=\"threePt\" dir=\"t\"><a:rot lat=\"0\" lon=\"0\" rev=\"1200000\"/></a:lightRig></a:scene3d>';\n\to[o.length] =      '<a:sp3d><a:bevelT w=\"63500\" h=\"25400\"/></a:sp3d>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =    '</a:effectStyleLst>';\n\to[o.length] =    '<a:bgFillStyleLst>';\n\to[o.length] =     '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"40000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"40000\"><a:schemeClr val=\"phClr\"><a:tint val=\"45000\"/><a:shade val=\"99000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"20000\"/><a:satMod val=\"255000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"-80000\" r=\"50000\" b=\"180000\"/></a:path>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"80000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"30000\"/><a:satMod val=\"200000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"50000\" r=\"50000\" b=\"50000\"/></a:path>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =    '</a:bgFillStyleLst>';\n\to[o.length] =   '</a:fmtScheme>';\n\to[o.length] =  '</a:themeElements>';\n\n\to[o.length] =  '<a:objectDefaults>';\n\to[o.length] =   '<a:spDef>';\n\to[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"3\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"lt1\"/></a:fontRef></a:style>';\n\to[o.length] =   '</a:spDef>';\n\to[o.length] =   '<a:lnDef>';\n\to[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"0\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"tx1\"/></a:fontRef></a:style>';\n\to[o.length] =   '</a:lnDef>';\n\to[o.length] =  '</a:objectDefaults>';\n\to[o.length] =  '<a:extraClrSchemeLst/>';\n\to[o.length] = '</a:theme>';\n\treturn o.join(\"\");\n}\n/* [MS-XLS] 2.4.326 TODO: payload is a zip file */\nfunction parse_Theme(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar dwThemeVersion = blob.read_shift(4);\n\tif(dwThemeVersion === 124226) return;\n\tif(!opts.cellStyles || !jszip) { blob.l = end; return; }\n\tvar data = blob.slice(blob.l);\n\tblob.l = end;\n\tvar zip; try { zip = new jszip(data); } catch(e) { return; }\n\tvar themeXML = getzipstr(zip, \"theme/theme/theme1.xml\", true);\n\tif(!themeXML) return;\n\treturn parse_theme_xml(themeXML, opts);\n}\n\n/* 2.5.49 */\nfunction parse_ColorTheme(blob) { return blob.read_shift(4); }\n\n/* 2.5.155 */\nfunction parse_FullColorExt(blob) {\n\tvar o = {};\n\to.xclrType = blob.read_shift(2);\n\to.nTintShade = blob.read_shift(2);\n\tswitch(o.xclrType) {\n\t\tcase 0: blob.l += 4; break;\n\t\tcase 1: o.xclrValue = parse_IcvXF(blob, 4); break;\n\t\tcase 2: o.xclrValue = parse_LongRGBA(blob, 4); break;\n\t\tcase 3: o.xclrValue = parse_ColorTheme(blob, 4); break;\n\t\tcase 4: blob.l += 4; break;\n\t}\n\tblob.l += 8;\n\treturn o;\n}\n\n/* 2.5.164 TODO: read 7 bits*/\nfunction parse_IcvXF(blob, length) {\n\treturn parsenoop(blob, length);\n}\n\n/* 2.5.280 */\nfunction parse_XFExtGradient(blob, length) {\n\treturn parsenoop(blob, length);\n}\n\n/* [MS-XLS] 2.5.108 */\nfunction parse_ExtProp(blob) {\n\tvar extType = blob.read_shift(2);\n\tvar cb = blob.read_shift(2) - 4;\n\tvar o = [extType];\n\tswitch(extType) {\n\t\tcase 0x04: case 0x05: case 0x07: case 0x08:\n\t\tcase 0x09: case 0x0A: case 0x0B: case 0x0D:\n\t\t\to[1] = parse_FullColorExt(blob, cb); break;\n\t\tcase 0x06: o[1] = parse_XFExtGradient(blob, cb); break;\n\t\tcase 0x0E: case 0x0F: o[1] = blob.read_shift(cb === 1 ? 1 : 2); break;\n\t\tdefault: throw new Error(\"Unrecognized ExtProp type: \" + extType + \" \" + cb);\n\t}\n\treturn o;\n}\n\n/* 2.4.355 */\nfunction parse_XFExt(blob, length) {\n\tvar end = blob.l + length;\n\tblob.l += 2;\n\tvar ixfe = blob.read_shift(2);\n\tblob.l += 2;\n\tvar cexts = blob.read_shift(2);\n\tvar ext = [];\n\twhile(cexts-- > 0) ext.push(parse_ExtProp(blob, end-blob.l));\n\treturn {ixfe:ixfe, ext:ext};\n}\n\n/* xf is an XF, see parse_XFExt for xfext */\nfunction update_xfext(xf, xfext) {\n\txfext.forEach(function(xfe) {\n\t\tswitch(xfe[0]) { /* 2.5.108 extPropData */\n\t\t\tcase 0x04: break; /* foreground color */\n\t\t\tcase 0x05: break; /* background color */\n\t\t\tcase 0x06: break; /* gradient fill */\n\t\t\tcase 0x07: break; /* top cell border color */\n\t\t\tcase 0x08: break; /* bottom cell border color */\n\t\t\tcase 0x09: break; /* left cell border color */\n\t\t\tcase 0x0a: break; /* right cell border color */\n\t\t\tcase 0x0b: break; /* diagonal cell border color */\n\t\t\tcase 0x0d: break; /* text color */\n\t\t\tcase 0x0e: break; /* font scheme */\n\t\t\tcase 0x0f: break; /* indentation level */\n\t\t}\n\t});\n}\n\n/* 18.6 Calculation Chain */\nfunction parse_cc_xml(data) {\n\tvar d = [];\n\tif(!data) return d;\n\tvar i = 1;\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0]) {\n\t\t\tcase '<?xml': break;\n\t\t\t/* 18.6.2  calcChain CT_CalcChain 1 */\n\t\t\tcase '<calcChain': case '<calcChain>': case '</calcChain>': break;\n\t\t\t/* 18.6.1  c CT_CalcCell 1 */\n\t\t\tcase '<c': delete y[0]; if(y.i) i = y.i; else y.i = i; d.push(y); break;\n\t\t}\n\t});\n\treturn d;\n}\n\n//function write_cc_xml(data, opts) { }\n\n/* [MS-XLSB] 2.6.4.1 */\nfunction parse_BrtCalcChainItem$(data) {\n\tvar out = {};\n\tout.i = data.read_shift(4);\n\tvar cell = {};\n\tcell.r = data.read_shift(4);\n\tcell.c = data.read_shift(4);\n\tout.r = encode_cell(cell);\n\tvar flags = data.read_shift(1);\n\tif(flags & 0x2) out.l = '1';\n\tif(flags & 0x8) out.a = '1';\n\treturn out;\n}\n\n/* 18.6 Calculation Chain */\nfunction parse_cc_bin(data, name, opts) {\n\tvar out = [];\n\tvar pass = false;\n\trecordhopper(data, function hopper_cc(val, R_n, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x003F: /* 'BrtCalcChainItem$' */\n\t\t\t\tout.push(val); break;\n\n\t\t\tdefault:\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n\t\t}\n\t});\n\treturn out;\n}\n\n//function write_cc_bin(data, opts) { }\n/* 18.14 Supplementary Workbook Data */\nfunction parse_xlink_xml() {\n\t//var opts = _opts || {};\n\t//if(opts.WTF) throw \"XLSX External Link\";\n}\n\n/* [MS-XLSB] 2.1.7.25 External Link */\nfunction parse_xlink_bin(data, name, _opts) {\n\tif(!data) return data;\n\tvar opts = _opts || {};\n\n\tvar pass = false, end = false;\n\n\trecordhopper(data, function xlink_parse(val, R_n, RT) {\n\t\tif(end) return;\n\t\tswitch(RT) {\n\t\t\tcase 0x0167: /* 'BrtSupTabs' */\n\t\t\tcase 0x016B: /* 'BrtExternTableStart' */\n\t\t\tcase 0x016C: /* 'BrtExternTableEnd' */\n\t\t\tcase 0x016E: /* 'BrtExternRowHdr' */\n\t\t\tcase 0x016F: /* 'BrtExternCellBlank' */\n\t\t\tcase 0x0170: /* 'BrtExternCellReal' */\n\t\t\tcase 0x0171: /* 'BrtExternCellBool' */\n\t\t\tcase 0x0172: /* 'BrtExternCellError' */\n\t\t\tcase 0x0173: /* 'BrtExternCellString' */\n\t\t\tcase 0x01D8: /* 'BrtExternValueMeta' */\n\t\t\tcase 0x0241: /* 'BrtSupNameStart' */\n\t\t\tcase 0x0242: /* 'BrtSupNameValueStart' */\n\t\t\tcase 0x0243: /* 'BrtSupNameValueEnd' */\n\t\t\tcase 0x0244: /* 'BrtSupNameNum' */\n\t\t\tcase 0x0245: /* 'BrtSupNameErr' */\n\t\t\tcase 0x0246: /* 'BrtSupNameSt' */\n\t\t\tcase 0x0247: /* 'BrtSupNameNil' */\n\t\t\tcase 0x0248: /* 'BrtSupNameBool' */\n\t\t\tcase 0x0249: /* 'BrtSupNameFmla' */\n\t\t\tcase 0x024A: /* 'BrtSupNameBits' */\n\t\t\tcase 0x024B: /* 'BrtSupNameEnd' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT.toString(16) + \" \" + R_n);\n\t\t}\n\t}, opts);\n}\nRELS.IMG = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\";\nRELS.DRAW = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\";\n/* 20.5 DrawingML - SpreadsheetML Drawing */\nfunction parse_drawing(data, rels) {\n\tif(!data) return \"??\";\n\t/*\n\t  Chartsheet Drawing:\n\t   - 20.5.2.35 wsDr CT_Drawing\n\t    - 20.5.2.1  absoluteAnchor CT_AbsoluteAnchor\n\t     - 20.5.2.16 graphicFrame CT_GraphicalObjectFrame\n\t      - 20.1.2.2.16 graphic CT_GraphicalObject\n\t       - 20.1.2.2.17 graphicData CT_GraphicalObjectData\n          - chart reference\n\t   the actual type is based on the URI of the graphicData\n\t\tTODO: handle embedded charts and other types of graphics\n\t*/\n\tvar id = (data.match(/<c:chart [^>]*r:id=\"([^\"]*)\"/)||[\"\",\"\"])[1];\n\n\treturn rels['!id'][id].Target;\n}\n\n/* L.5.5.2 SpreadsheetML Comments + VML Schema */\nvar _shapeid = 1024;\nfunction write_comments_vml(rId, comments) {\n\tvar csize = [21600, 21600];\n\t/* L.5.2.1.2 Path Attribute */\n\tvar bbox = [\"m0,0l0\",csize[1],csize[0],csize[1],csize[0],\"0xe\"].join(\",\");\n\tvar o = [\n\t\twritextag(\"xml\", null, { 'xmlns:v': XLMLNS.v, 'xmlns:o': XLMLNS.o, 'xmlns:x': XLMLNS.x, 'xmlns:mv': XLMLNS.mv }).replace(/\\/>/,\">\"),\n\t\twritextag(\"o:shapelayout\", writextag(\"o:idmap\", null, {'v:ext':\"edit\", 'data':rId}), {'v:ext':\"edit\"}),\n\t\twritextag(\"v:shapetype\", [\n\t\t\twritextag(\"v:stroke\", null, {joinstyle:\"miter\"}),\n\t\t\twritextag(\"v:path\", null, {gradientshapeok:\"t\", 'o:connecttype':\"rect\"})\n\t\t].join(\"\"), {id:\"_x0000_t202\", 'o:spt':202, coordsize:csize.join(\",\"),path:bbox})\n\t];\n\twhile(_shapeid < rId * 1000) _shapeid += 1000;\n\n\tcomments.forEach(function(x) { var c = decode_cell(x[0]);\n\to = o.concat([\n\t'<v:shape' + wxt_helper({\n\t\tid:'_x0000_s' + (++_shapeid),\n\t\ttype:\"#_x0000_t202\",\n\t\tstyle:\"position:absolute; margin-left:80pt;margin-top:5pt;width:104pt;height:64pt;z-index:10\" + (x[1].hidden ? \";visibility:hidden\" : \"\") ,\n\t\tfillcolor:\"#ECFAD4\",\n\t\tstrokecolor:\"#edeaa1\"\n\t}) + '>',\n\t\twritextag('v:fill', writextag(\"o:fill\", null, {type:\"gradientUnscaled\", 'v:ext':\"view\"}), {'color2':\"#BEFF82\", 'angle':\"-180\", 'type':\"gradient\"}),\n\t\twritextag(\"v:shadow\", null, {on:\"t\", 'obscured':\"t\"}),\n\t\twritextag(\"v:path\", null, {'o:connecttype':\"none\"}),\n\t\t'<v:textbox><div style=\"text-align:left\"></div></v:textbox>',\n\t\t'<x:ClientData ObjectType=\"Note\">',\n\t\t\t'<x:MoveWithCells/>',\n\t\t\t'<x:SizeWithCells/>',\n\t\t\t/* Part 4 19.4.2.3 Anchor (Anchor) */\n\t\t\twritetag('x:Anchor', [c.c, 0, c.r, 0, c.c+3, 100, c.r+5, 100].join(\",\")),\n\t\t\twritetag('x:AutoFill', \"False\"),\n\t\t\twritetag('x:Row', String(c.r)),\n\t\t\twritetag('x:Column', String(c.c)),\n\t\t\tx[1].hidden ? '' : '<x:Visible/>',\n\t\t'</x:ClientData>',\n\t'</v:shape>'\n\t]); });\n\to.push('</xml>');\n\treturn o.join(\"\");\n}\n\nRELS.CMNT = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments\";\n\nfunction parse_comments(zip, dirComments, sheets, sheetRels, opts) {\n\tfor(var i = 0; i != dirComments.length; ++i) {\n\t\tvar canonicalpath=dirComments[i];\n\t\tvar comments=parse_cmnt(getzipdata(zip, canonicalpath.replace(/^\\//,''), true), canonicalpath, opts);\n\t\tif(!comments || !comments.length) continue;\n\t\t// find the sheets targeted by these comments\n\t\tvar sheetNames = keys(sheets);\n\t\tfor(var j = 0; j != sheetNames.length; ++j) {\n\t\t\tvar sheetName = sheetNames[j];\n\t\t\tvar rels = sheetRels[sheetName];\n\t\t\tif(rels) {\n\t\t\t\tvar rel = rels[canonicalpath];\n\t\t\t\tif(rel) insertCommentsIntoSheet(sheetName, sheets[sheetName], comments);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction insertCommentsIntoSheet(sheetName, sheet, comments) {\n\tvar dense = Array.isArray(sheet);\n\tvar cell;\n\tcomments.forEach(function(comment) {\n\t\tvar r = decode_cell(comment.ref);\n\t\tif(dense) {\n\t\t\tif(!sheet[r.r]) sheet[r.r] = [];\n\t\t\tcell = sheet[r.r][r.c];\n\t\t} else cell = sheet[comment.ref];\n\t\tif (!cell) {\n\t\t\tcell = {};\n\t\t\tif(dense) sheet[r.r][r.c] = cell;\n\t\t\telse sheet[comment.ref] = cell;\n\t\t\tvar range = safe_decode_range(sheet[\"!ref\"]||\"BDWGO1000001:A1\");\n\t\t\tif(range.s.r > r.r) range.s.r = r.r;\n\t\t\tif(range.e.r < r.r) range.e.r = r.r;\n\t\t\tif(range.s.c > r.c) range.s.c = r.c;\n\t\t\tif(range.e.c < r.c) range.e.c = r.c;\n\t\t\tvar encoded = encode_range(range);\n\t\t\tif (encoded !== sheet[\"!ref\"]) sheet[\"!ref\"] = encoded;\n\t\t}\n\n\t\tif (!cell.c) cell.c = [];\n\t\tvar o = ({a: comment.author, t: comment.t, r: comment.r});\n\t\tif(comment.h) o.h = comment.h;\n\t\tcell.c.push(o);\n\t});\n}\n\n/* 18.7 Comments */\nfunction parse_comments_xml(data, opts) {\n\t/* 18.7.6 CT_Comments */\n\tif(data.match(/<(?:\\w+:)?comments *\\/>/)) return [];\n\tvar authors = [];\n\tvar commentList = [];\n\tvar authtag = data.match(/<(?:\\w+:)?authors>([\\s\\S]*)<\\/(?:\\w+:)?authors>/);\n\tif(authtag && authtag[1]) authtag[1].split(/<\\/\\w*:?author>/).forEach(function(x) {\n\t\tif(x === \"\" || x.trim() === \"\") return;\n\t\tvar a = x.match(/<(?:\\w+:)?author[^>]*>(.*)/);\n\t\tif(a) authors.push(a[1]);\n\t});\n\tvar cmnttag = data.match(/<(?:\\w+:)?commentList>([\\s\\S]*)<\\/(?:\\w+:)?commentList>/);\n\tif(cmnttag && cmnttag[1]) cmnttag[1].split(/<\\/\\w*:?comment>/).forEach(function(x) {\n\t\tif(x === \"\" || x.trim() === \"\") return;\n\t\tvar cm = x.match(/<(?:\\w+:)?comment[^>]*>/);\n\t\tif(!cm) return;\n\t\tvar y = parsexmltag(cm[0]);\n\t\tvar comment = ({ author: y.authorId && authors[y.authorId] || \"sheetjsghost\", ref: y.ref, guid: y.guid });\n\t\tvar cell = decode_cell(y.ref);\n\t\tif(opts.sheetRows && opts.sheetRows <= cell.r) return;\n\t\tvar textMatch = x.match(/<(?:\\w+:)?text>([\\s\\S]*)<\\/(?:\\w+:)?text>/);\n\t\tvar rt = !!textMatch && !!textMatch[1] && parse_si(textMatch[1]) || {r:\"\",t:\"\",h:\"\"};\n\t\tcomment.r = rt.r;\n\t\tif(rt.r == \"<t></t>\") rt.t = rt.h = \"\";\n\t\tcomment.t = rt.t.replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n\t\tif(opts.cellHTML) comment.h = rt.h;\n\t\tcommentList.push(comment);\n\t});\n\treturn commentList;\n}\n\nvar CMNT_XML_ROOT = writextag('comments', null, { 'xmlns': XMLNS.main[0] });\nfunction write_comments_xml(data) {\n\tvar o = [XML_HEADER, CMNT_XML_ROOT];\n\n\tvar iauthor = [];\n\to.push(\"<authors>\");\n\tdata.forEach(function(x) { x[1].forEach(function(w) { var a = escapexml(w.a);\n\t\tif(iauthor.indexOf(a) > -1) return;\n\t\tiauthor.push(a);\n\t\to.push(\"<author>\" + a + \"</author>\");\n\t}); });\n\to.push(\"</authors>\");\n\to.push(\"<commentList>\");\n\tdata.forEach(function(d) {\n\t\td[1].forEach(function(c) {\n\t\t\t/* 18.7.3 CT_Comment */\n\t\t\to.push('<comment ref=\"' + d[0] + '\" authorId=\"' + iauthor.indexOf(escapexml(c.a)) + '\"><text>');\n\t\t\to.push(writetag(\"t\", c.t == null ? \"\" : escapexml(c.t)));\n\t\t\to.push('</text></comment>');\n\t\t});\n\t});\n\to.push(\"</commentList>\");\n\tif(o.length>2) { o[o.length] = ('</comments>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.28 BrtBeginComment */\nfunction parse_BrtBeginComment(data) {\n\tvar out = {};\n\tout.iauthor = data.read_shift(4);\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tout.rfx = rfx.s;\n\tout.ref = encode_cell(rfx.s);\n\tdata.l += 16; /*var guid = parse_GUID(data); */\n\treturn out;\n}\nfunction write_BrtBeginComment(data, o) {\n\tif(o == null) o = new_buf(36);\n\to.write_shift(4, data[1].iauthor);\n\twrite_UncheckedRfX((data[0]), o);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.327 BrtCommentAuthor */\nvar parse_BrtCommentAuthor = parse_XLWideString;\nfunction write_BrtCommentAuthor(data) { return write_XLWideString(data.slice(0, 54)); }\n\n/* [MS-XLSB] 2.1.7.8 Comments */\nfunction parse_comments_bin(data, opts) {\n\tvar out = [];\n\tvar authors = [];\n\tvar c = {};\n\tvar pass = false;\n\trecordhopper(data, function hopper_cmnt(val, R_n, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x0278: /* 'BrtCommentAuthor' */\n\t\t\t\tauthors.push(val); break;\n\t\t\tcase 0x027B: /* 'BrtBeginComment' */\n\t\t\t\tc = val; break;\n\t\t\tcase 0x027D: /* 'BrtCommentText' */\n\t\t\t\tc.t = val.t; c.h = val.h; c.r = val.r; break;\n\t\t\tcase 0x027C: /* 'BrtEndComment' */\n\t\t\t\tc.author = authors[c.iauthor];\n\t\t\t\tdelete c.iauthor;\n\t\t\t\tif(opts.sheetRows && opts.sheetRows <= c.rfx.r) break;\n\t\t\t\tif(!c.t) c.t = \"\";\n\t\t\t\tdelete c.rfx; out.push(c); break;\n\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */ break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */ break;\n\n\n\t\t\tdefault:\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n\t\t}\n\t});\n\treturn out;\n}\n\nfunction write_comments_bin(data) {\n\tvar ba = buf_array();\n\tvar iauthor = [];\n\twrite_record(ba, \"BrtBeginComments\");\n\n\twrite_record(ba, \"BrtBeginCommentAuthors\");\n\tdata.forEach(function(comment) {\n\t\tcomment[1].forEach(function(c) {\n\t\t\tif(iauthor.indexOf(c.a) > -1) return;\n\t\t\tiauthor.push(c.a.slice(0,54));\n\t\t\twrite_record(ba, \"BrtCommentAuthor\", write_BrtCommentAuthor(c.a));\n\t\t});\n\t});\n\twrite_record(ba, \"BrtEndCommentAuthors\");\n\n\twrite_record(ba, \"BrtBeginCommentList\");\n\tdata.forEach(function(comment) {\n\t\tcomment[1].forEach(function(c) {\n\t\t\tc.iauthor = iauthor.indexOf(c.a);\n\t\t\tvar range = {s:decode_cell(comment[0]),e:decode_cell(comment[0])};\n\t\t\twrite_record(ba, \"BrtBeginComment\", write_BrtBeginComment([range, c]));\n\t\t\tif(c.t && c.t.length > 0) write_record(ba, \"BrtCommentText\", write_BrtCommentText(c));\n\t\t\twrite_record(ba, \"BrtEndComment\");\n\t\t\tdelete c.iauthor;\n\t\t});\n\t});\n\twrite_record(ba, \"BrtEndCommentList\");\n\n\twrite_record(ba, \"BrtEndComments\");\n\treturn ba.end();\n}\nvar CT_VBA = \"application/vnd.ms-office.vbaProject\";\nfunction make_vba_xls(cfb) {\n\tvar newcfb = CFB.utils.cfb_new({root:\"R\"});\n\tcfb.FullPaths.forEach(function(p, i) {\n\t\tif(p.slice(-1) === \"/\" || !p.match(/_VBA_PROJECT_CUR/)) return;\n\t\tvar newpath = p.replace(/^[^\\/]*/,\"R\").replace(/\\/_VBA_PROJECT_CUR\\u0000*/, \"\");\n\t\tCFB.utils.cfb_add(newcfb, newpath, cfb.FileIndex[i].content);\n\t});\n\treturn CFB.write(newcfb);\n}\n\nfunction fill_vba_xls(cfb, vba) {\n\tvba.FullPaths.forEach(function(p, i) {\n\t\tif(i == 0) return;\n\t\tvar newpath = p.replace(/[^\\/]*[\\/]/, \"/_VBA_PROJECT_CUR/\");\n\t\tif(newpath.slice(-1) !== \"/\") CFB.utils.cfb_add(cfb, newpath, vba.FileIndex[i].content);\n\t});\n}\n\nvar VBAFMTS = [ \"xlsb\", \"xlsm\", \"xlam\", \"biff8\", \"xla\" ];\n\nRELS.DS = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/dialogsheet\";\nRELS.MS = \"http://schemas.microsoft.com/office/2006/relationships/xlMacrosheet\";\n\n/* macro and dialog sheet stubs */\nfunction parse_ds_bin() { return {'!type':'dialog'}; }\nfunction parse_ds_xml() { return {'!type':'dialog'}; }\nfunction parse_ms_bin() { return {'!type':'macro'}; }\nfunction parse_ms_xml() { return {'!type':'macro'}; }\n/* TODO: it will be useful to parse the function str */\nvar rc_to_a1 = (function(){\n\tvar rcregex = /(^|[^A-Za-z])R(\\[?)(-?\\d+|)\\]?C(\\[?)(-?\\d+|)\\]?/g;\n\tvar rcbase = ({r:0,c:0});\n\tfunction rcfunc($$,$1,$2,$3,$4,$5) {\n\t\tvar R = $3.length>0?parseInt($3,10)|0:0, C = $5.length>0?parseInt($5,10)|0:0;\n\t\tif(C<0 && $4.length === 0) C=0;\n\t\tvar cRel = false, rRel = false;\n\t\tif($4.length > 0 || $5.length == 0) cRel = true; if(cRel) C += rcbase.c; else --C;\n\t\tif($2.length > 0 || $3.length == 0) rRel = true; if(rRel) R += rcbase.r; else --R;\n\t\treturn $1 + (cRel ? \"\" : \"$\") + encode_col(C) + (rRel ? \"\" : \"$\") + encode_row(R);\n\t}\n\treturn function rc_to_a1(fstr, base) {\n\t\trcbase = base;\n\t\treturn fstr.replace(rcregex, rcfunc);\n\t};\n})();\n\nvar crefregex = /(^|[^._A-Z0-9])([$]?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])([$]?)([1-9]\\d{0,5}|10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6])(?![_.\\(A-Za-z0-9])/g;\nvar a1_to_rc =(function(){\n\treturn function a1_to_rc(fstr, base) {\n\t\treturn fstr.replace(crefregex, function($0, $1, $2, $3, $4, $5) {\n\t\t\tvar c = decode_col($3) - ($2 ? 0 : base.c);\n\t\t\tvar r = decode_row($5) - ($4 ? 0 : base.r);\n\t\t\tvar R = (r == 0 ? \"\" : !$4 ? \"[\" + r + \"]\" : (r+1));\n\t\t\tvar C = (c == 0 ? \"\" : !$2 ? \"[\" + c + \"]\" : (c+1));\n\t\t\treturn $1 + \"R\" + R + \"C\" + C;\n\t\t});\n\t};\n})();\n\n/* no defined name can collide with a valid cell address A1:XFD1048576 ... except LOG10! */\nfunction shift_formula_str(f, delta) {\n\treturn f.replace(crefregex, function($0, $1, $2, $3, $4, $5) {\n\t\treturn $1+($2==\"$\" ? $2+$3 : encode_col(decode_col($3)+delta.c))+($4==\"$\" ? $4+$5 : encode_row(decode_row($5) + delta.r));\n\t});\n}\n\nfunction shift_formula_xlsx(f, range, cell) {\n\tvar r = decode_range(range), s = r.s, c = decode_cell(cell);\n\tvar delta = {r:c.r - s.r, c:c.c - s.c};\n\treturn shift_formula_str(f, delta);\n}\n\n/* TODO: parse formula */\nfunction fuzzyfmla(f) {\n\tif(f.length == 1) return false;\n\treturn true;\n}\n\nfunction _xlfn(f) {\n\treturn f.replace(/_xlfn\\./g,\"\");\n}\nfunction parseread1(blob) { blob.l+=1; return; }\n\n/* [MS-XLS] 2.5.51 */\nfunction parse_ColRelU(blob, length) {\n\tvar c = blob.read_shift(length == 1 ? 1 : 2);\n\treturn [c & 0x3FFF, (c >> 14) & 1, (c >> 15) & 1];\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.89 */\nfunction parse_RgceArea(blob, length, opts) {\n\tvar w = 2;\n\tif(opts) {\n\t\tif(opts.biff >= 2 && opts.biff <= 5) return parse_RgceArea_BIFF2(blob, length, opts);\n\t\telse if(opts.biff == 12) w = 4;\n\t}\n\tvar r=blob.read_shift(w), R=blob.read_shift(w);\n\tvar c=parse_ColRelU(blob, 2);\n\tvar C=parse_ColRelU(blob, 2);\n\treturn { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };\n}\n/* BIFF 2-5 encodes flags in the row field */\nfunction parse_RgceArea_BIFF2(blob) {\n\tvar r=parse_ColRelU(blob, 2), R=parse_ColRelU(blob, 2);\n\tvar c=blob.read_shift(1);\n\tvar C=blob.read_shift(1);\n\treturn { s:{r:r[0], c:c, cRel:r[1], rRel:r[2]}, e:{r:R[0], c:C, cRel:R[1], rRel:R[2]} };\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.90 */\nfunction parse_RgceAreaRel(blob, length, opts) {\n\tif(opts.biff < 8) return parse_RgceArea_BIFF2(blob, length, opts);\n\tvar r=blob.read_shift(opts.biff == 12 ? 4 : 2), R=blob.read_shift(opts.biff == 12 ? 4 : 2);\n\tvar c=parse_ColRelU(blob, 2);\n\tvar C=parse_ColRelU(blob, 2);\n\treturn { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };\n}\n\n/* [MS-XLS] 2.5.198.109 ; [MS-XLSB] 2.5.97.91 */\nfunction parse_RgceLoc(blob, length, opts) {\n\tif(opts && opts.biff >= 2 && opts.biff <= 5) return parse_RgceLoc_BIFF2(blob, length, opts);\n\tvar r = blob.read_shift(opts && opts.biff == 12 ? 4 : 2);\n\tvar c = parse_ColRelU(blob, 2);\n\treturn {r:r, c:c[0], cRel:c[1], rRel:c[2]};\n}\nfunction parse_RgceLoc_BIFF2(blob) {\n\tvar r = parse_ColRelU(blob, 2);\n\tvar c = blob.read_shift(1);\n\treturn {r:r[0], c:c, cRel:r[1], rRel:r[2]};\n}\n\n/* [MS-XLS] 2.5.198.107, 2.5.47 */\nfunction parse_RgceElfLoc(blob) {\n\tvar r = blob.read_shift(2);\n\tvar c = blob.read_shift(2);\n\treturn {r:r, c:c & 0xFF, fQuoted:!!(c & 0x4000), cRel:c>>15, rRel:c>>15 };\n}\n\n/* [MS-XLS] 2.5.198.111 ; [MS-XLSB] 2.5.97.92 TODO */\nfunction parse_RgceLocRel(blob, length, opts) {\n\tvar biff = opts && opts.biff ? opts.biff : 8;\n\tif(biff >= 2 && biff <= 5) return parse_RgceLocRel_BIFF2(blob, length, opts);\n\tvar r = blob.read_shift(biff >= 12 ? 4 : 2);\n\tvar cl = blob.read_shift(2);\n\tvar cRel = (cl & 0x4000) >> 14, rRel = (cl & 0x8000) >> 15;\n\tcl &= 0x3FFF;\n\tif(rRel == 1) while(r > 0x7FFFF) r -= 0x100000;\n\tif(cRel == 1) while(cl > 0x1FFF) cl = cl - 0x4000;\n\treturn {r:r,c:cl,cRel:cRel,rRel:rRel};\n}\nfunction parse_RgceLocRel_BIFF2(blob) {\n\tvar rl = blob.read_shift(2);\n\tvar c = blob.read_shift(1);\n\tvar rRel = (rl & 0x8000) >> 15, cRel = (rl & 0x4000) >> 14;\n\trl &= 0x3FFF;\n\tif(rRel == 1 && rl >= 0x2000) rl = rl - 0x4000;\n\tif(cRel == 1 && c >= 0x80) c = c - 0x100;\n\treturn {r:rl,c:c,cRel:cRel,rRel:rRel};\n}\n\n/* [MS-XLS] 2.5.198.27 ; [MS-XLSB] 2.5.97.18 */\nfunction parse_PtgArea(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar area = parse_RgceArea(blob, opts.biff >= 2 && opts.biff <= 5 ? 6 : 8, opts);\n\treturn [type, area];\n}\n\n/* [MS-XLS] 2.5.198.28 ; [MS-XLSB] 2.5.97.19 */\nfunction parse_PtgArea3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2, 'i');\n\tvar w = 8;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: blob.l += 12; w = 6; break;\n\t\tcase 12: w = 12; break;\n\t}\n\tvar area = parse_RgceArea(blob, w, opts);\n\treturn [type, ixti, area];\n}\n\n/* [MS-XLS] 2.5.198.29 ; [MS-XLSB] 2.5.97.20 */\nfunction parse_PtgAreaErr(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tblob.l += opts && (opts.biff > 8) ? 12 : (opts.biff < 8 ? 6 : 8);\n\treturn [type];\n}\n/* [MS-XLS] 2.5.198.30 ; [MS-XLSB] 2.5.97.21 */\nfunction parse_PtgAreaErr3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2);\n\tvar w = 8;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: blob.l += 12; w = 6; break;\n\t\tcase 12: w = 12; break;\n\t}\n\tblob.l += w;\n\treturn [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.31 ; [MS-XLSB] 2.5.97.22 */\nfunction parse_PtgAreaN(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar area = parse_RgceAreaRel(blob, length - 1, opts);\n\treturn [type, area];\n}\n\n/* [MS-XLS] 2.5.198.32 ; [MS-XLSB] 2.5.97.23 */\nfunction parse_PtgArray(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tblob.l += opts.biff == 2 ? 6 : opts.biff == 12 ? 14 : 7;\n\treturn [type];\n}\n\n/* [MS-XLS] 2.5.198.33 ; [MS-XLSB] 2.5.97.24 */\nfunction parse_PtgAttrBaxcel(blob) {\n\tvar bitSemi = blob[blob.l+1] & 0x01; /* 1 = volatile */\n\tvar bitBaxcel = 1;\n\tblob.l += 4;\n\treturn [bitSemi, bitBaxcel];\n}\n\n/* [MS-XLS] 2.5.198.34 ; [MS-XLSB] 2.5.97.25 */\nfunction parse_PtgAttrChoose(blob, length, opts) {\n\tblob.l +=2;\n\tvar offset = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tvar o = [];\n\t/* offset is 1 less than the number of elements */\n\tfor(var i = 0; i <= offset; ++i) o.push(blob.read_shift(opts && opts.biff == 2 ? 1 : 2));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.35 ; [MS-XLSB] 2.5.97.26 */\nfunction parse_PtgAttrGoto(blob, length, opts) {\n\tvar bitGoto = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitGoto, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLS] 2.5.198.36 ; [MS-XLSB] 2.5.97.27 */\nfunction parse_PtgAttrIf(blob, length, opts) {\n\tvar bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitIf, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLSB] 2.5.97.28 */\nfunction parse_PtgAttrIfError(blob) {\n\tvar bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitIf, blob.read_shift(2)];\n}\n\n/* [MS-XLS] 2.5.198.37 ; [MS-XLSB] 2.5.97.29 */\nfunction parse_PtgAttrSemi(blob, length, opts) {\n\tvar bitSemi = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += opts && opts.biff == 2 ? 3 : 4;\n\treturn [bitSemi];\n}\n\n/* [MS-XLS] 2.5.198.40 ; [MS-XLSB] 2.5.97.32 */\nfunction parse_PtgAttrSpaceType(blob) {\n\tvar type = blob.read_shift(1), cch = blob.read_shift(1);\n\treturn [type, cch];\n}\n\n/* [MS-XLS] 2.5.198.38 ; [MS-XLSB] 2.5.97.30 */\nfunction parse_PtgAttrSpace(blob) {\n\tblob.read_shift(2);\n\treturn parse_PtgAttrSpaceType(blob, 2);\n}\n\n/* [MS-XLS] 2.5.198.39 ; [MS-XLSB] 2.5.97.31 */\nfunction parse_PtgAttrSpaceSemi(blob) {\n\tblob.read_shift(2);\n\treturn parse_PtgAttrSpaceType(blob, 2);\n}\n\n/* [MS-XLS] 2.5.198.84 ; [MS-XLSB] 2.5.97.68 TODO */\nfunction parse_PtgRef(blob, length, opts) {\n\t//var ptg = blob[blob.l] & 0x1F;\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar loc = parse_RgceLoc(blob, 0, opts);\n\treturn [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.88 ; [MS-XLSB] 2.5.97.72 TODO */\nfunction parse_PtgRefN(blob, length, opts) {\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar loc = parse_RgceLocRel(blob, 0, opts);\n\treturn [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.85 ; [MS-XLSB] 2.5.97.69 TODO */\nfunction parse_PtgRef3d(blob, length, opts) {\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar ixti = blob.read_shift(2); // XtiIndex\n\tif(opts && opts.biff == 5) blob.l += 12;\n\tvar loc = parse_RgceLoc(blob, 0, opts); // TODO: or RgceLocRel\n\treturn [type, ixti, loc];\n}\n\n\n/* [MS-XLS] 2.5.198.62 ; [MS-XLSB] 2.5.97.45 TODO */\nfunction parse_PtgFunc(blob, length, opts) {\n\t//var ptg = blob[blob.l] & 0x1F;\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar iftab = blob.read_shift(opts && opts.biff <= 3 ? 1 : 2);\n\treturn [FtabArgc[iftab], Ftab[iftab], type];\n}\n/* [MS-XLS] 2.5.198.63 ; [MS-XLSB] 2.5.97.46 TODO */\nfunction parse_PtgFuncVar(blob, length, opts) {\n\tvar type = blob[blob.l++];\n\tvar cparams = blob.read_shift(1), tab = opts && opts.biff <= 3 ? [(type == 0x58 ? -1 : 0), blob.read_shift(1)]: parsetab(blob);\n\treturn [cparams, (tab[0] === 0 ? Ftab : Cetab)[tab[1]]];\n}\n\nfunction parsetab(blob) {\n\treturn [blob[blob.l+1]>>7, blob.read_shift(2) & 0x7FFF];\n}\n\n/* [MS-XLS] 2.5.198.41 ; [MS-XLSB] 2.5.97.33 */\nfunction parse_PtgAttrSum(blob, length, opts) {\n\tblob.l += opts && opts.biff == 2 ? 3 : 4; return;\n}\n\n/* [MS-XLS] 2.5.198.58 ; [MS-XLSB] 2.5.97.40 */\nfunction parse_PtgExp(blob, length, opts) {\n\tblob.l++;\n\tif(opts && opts.biff == 12) return [blob.read_shift(4, 'i'), 0];\n\tvar row = blob.read_shift(2);\n\tvar col = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [row, col];\n}\n\n/* [MS-XLS] 2.5.198.57 ; [MS-XLSB] 2.5.97.39 */\nfunction parse_PtgErr(blob) { blob.l++; return BErr[blob.read_shift(1)]; }\n\n/* [MS-XLS] 2.5.198.66 ; [MS-XLSB] 2.5.97.49 */\nfunction parse_PtgInt(blob) { blob.l++; return blob.read_shift(2); }\n\n/* [MS-XLS] 2.5.198.42 ; [MS-XLSB] 2.5.97.34 */\nfunction parse_PtgBool(blob) { blob.l++; return blob.read_shift(1)!==0;}\n\n/* [MS-XLS] 2.5.198.79 ; [MS-XLSB] 2.5.97.63 */\nfunction parse_PtgNum(blob) { blob.l++; return parse_Xnum(blob, 8); }\n\n/* [MS-XLS] 2.5.198.89 ; [MS-XLSB] 2.5.97.74 */\nfunction parse_PtgStr(blob, length, opts) { blob.l++; return parse_ShortXLUnicodeString(blob, length-1, opts); }\n\n/* [MS-XLS] 2.5.192.112 + 2.5.192.11{3,4,5,6,7} */\n/* [MS-XLSB] 2.5.97.93 + 2.5.97.9{4,5,6,7} */\nfunction parse_SerAr(blob, biff) {\n\tvar val = [blob.read_shift(1)];\n\tif(biff == 12) switch(val[0]) {\n\t\tcase 0x02: val[0] = 0x04; break; /* SerBool */\n\t\tcase 0x04: val[0] = 0x10; break; /* SerErr */\n\t\tcase 0x00: val[0] = 0x01; break; /* SerNum */\n\t\tcase 0x01: val[0] = 0x02; break; /* SerStr */\n\t}\n\tswitch(val[0]) {\n\t\tcase 0x04: /* SerBool -- boolean */\n\t\t\tval[1] = parsebool(blob, 1) ? 'TRUE' : 'FALSE';\n\t\t\tif(biff != 12) blob.l += 7; break;\n\t\tcase 0x25: /* appears to be an alias */\n\t\tcase 0x10: /* SerErr -- error */\n\t\t\tval[1] = BErr[blob[blob.l]];\n\t\t\tblob.l += ((biff == 12) ? 4 : 8); break;\n\t\tcase 0x00: /* SerNil -- honestly, I'm not sure how to reproduce this */\n\t\t\tblob.l += 8; break;\n\t\tcase 0x01: /* SerNum -- Xnum */\n\t\t\tval[1] = parse_Xnum(blob, 8); break;\n\t\tcase 0x02: /* SerStr -- XLUnicodeString (<256 chars) */\n\t\t\tval[1] = parse_XLUnicodeString2(blob, 0, {biff:biff > 0 && biff < 8 ? 2 : biff}); break;\n\t\tdefault: throw new Error(\"Bad SerAr: \" + val[0]); /* Unreachable */\n\t}\n\treturn val;\n}\n\n/* [MS-XLS] 2.5.198.61 ; [MS-XLSB] 2.5.97.44 */\nfunction parse_PtgExtraMem(blob, cce, opts) {\n\tvar count = blob.read_shift((opts.biff == 12) ? 4 : 2);\n\tvar out = [];\n\tfor(var i = 0; i != count; ++i) out.push(((opts.biff == 12) ? parse_UncheckedRfX : parse_Ref8U)(blob, 8));\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.198.59 ; [MS-XLSB] 2.5.97.41 */\nfunction parse_PtgExtraArray(blob, length, opts) {\n\tvar rows = 0, cols = 0;\n\tif(opts.biff == 12) {\n\t\trows = blob.read_shift(4); // DRw\n\t\tcols = blob.read_shift(4); // DCol\n\t} else {\n\t\tcols = 1 + blob.read_shift(1); //DColByteU\n\t\trows = 1 + blob.read_shift(2); //DRw\n\t}\n\tif(opts.biff >= 2 && opts.biff < 8) { --rows; if(--cols == 0) cols = 0x100; }\n\t// $FlowIgnore\n\tfor(var i = 0, o = []; i != rows && (o[i] = []); ++i)\n\t\tfor(var j = 0; j != cols; ++j) o[i][j] = parse_SerAr(blob, opts.biff);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 */\nfunction parse_PtgName(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar w = (!opts || (opts.biff >= 8)) ? 4 : 2;\n\tvar nameindex = blob.read_shift(w);\n\tswitch(opts.biff) {\n\t\tcase 2: blob.l += 5; break;\n\t\tcase 3: case 4: blob.l += 8; break;\n\t\tcase 5: blob.l += 12; break;\n\t}\n\treturn [type, 0, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 */\nfunction parse_PtgNameX(blob, length, opts) {\n\tif(opts.biff == 5) return parse_PtgNameX_BIFF5(blob, length, opts);\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar ixti = blob.read_shift(2); // XtiIndex\n\tvar nameindex = blob.read_shift(4);\n\treturn [type, ixti, nameindex];\n}\nfunction parse_PtgNameX_BIFF5(blob) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar ixti = blob.read_shift(2, 'i'); // XtiIndex\n\tblob.l += 8;\n\tvar nameindex = blob.read_shift(2);\n\tblob.l += 12;\n\treturn [type, ixti, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.70 ; [MS-XLSB] 2.5.97.54 */\nfunction parse_PtgMemArea(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tblob.l += (opts && opts.biff == 2 ? 3 : 4);\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [type, cce];\n}\n\n/* [MS-XLS] 2.5.198.72 ; [MS-XLSB] 2.5.97.56 */\nfunction parse_PtgMemFunc(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [type, cce];\n}\n\n\n/* [MS-XLS] 2.5.198.86 ; [MS-XLSB] 2.5.97.69 */\nfunction parse_PtgRefErr(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tblob.l += 4;\n\tif(opts.biff < 8) blob.l--;\n\tif(opts.biff == 12) blob.l += 2;\n\treturn [type];\n}\n\n/* [MS-XLS] 2.5.198.87 ; [MS-XLSB] 2.5.97.71 */\nfunction parse_PtgRefErr3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2);\n\tvar w = 4;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: w = 15; break;\n\t\tcase 12: w = 6; break;\n\t}\n\tblob.l += w;\n\treturn [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.71 ; [MS-XLSB] 2.5.97.55 */\nvar parse_PtgMemErr = parsenoop;\n/* [MS-XLS] 2.5.198.73  ; [MS-XLSB] 2.5.97.57 */\nvar parse_PtgMemNoMem = parsenoop;\n/* [MS-XLS] 2.5.198.92 */\nvar parse_PtgTbl = parsenoop;\n\nfunction parse_PtgElfLoc(blob, length, opts) {\n\tblob.l += 2;\n\treturn [parse_RgceElfLoc(blob, 4, opts)];\n}\nfunction parse_PtgElfNoop(blob) {\n\tblob.l += 6;\n\treturn [];\n}\n/* [MS-XLS] 2.5.198.46 */\nvar parse_PtgElfCol = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.47 */\nvar parse_PtgElfColS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.48 */\nvar parse_PtgElfColSV = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.49 */\nvar parse_PtgElfColV = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.50 */\nfunction parse_PtgElfLel(blob) {\n\tblob.l += 2;\n\treturn [parseuint16(blob), blob.read_shift(2) & 0x01];\n}\n/* [MS-XLS] 2.5.198.51 */\nvar parse_PtgElfRadical = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.52 */\nvar parse_PtgElfRadicalLel = parse_PtgElfLel;\n/* [MS-XLS] 2.5.198.53 */\nvar parse_PtgElfRadicalS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.54 */\nvar parse_PtgElfRw = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.55 */\nvar parse_PtgElfRwV = parse_PtgElfLoc;\n\n/* [MS-XLSB] 2.5.97.52 TODO */\nvar PtgListRT = [\n\t\"Data\",\n\t\"All\",\n\t\"Headers\",\n\t\"??\",\n\t\"?Data2\",\n\t\"??\",\n\t\"?DataHeaders\",\n\t\"??\",\n\t\"Totals\",\n\t\"??\",\n\t\"??\",\n\t\"??\",\n\t\"?DataTotals\",\n\t\"??\",\n\t\"??\",\n\t\"??\",\n\t\"?Current\"\n];\nfunction parse_PtgList(blob) {\n\tblob.l += 2;\n\tvar ixti = blob.read_shift(2);\n\tvar flags = blob.read_shift(2);\n\tvar idx = blob.read_shift(4);\n\tvar c = blob.read_shift(2);\n\tvar C = blob.read_shift(2);\n\tvar rt = PtgListRT[(flags >> 2) & 0x1F];\n\treturn {ixti: ixti, coltype:(flags&0x3), rt:rt, idx:idx, c:c, C:C};\n}\n/* [MS-XLS] 2.5.198.91 ; [MS-XLSB] 2.5.97.76 */\nfunction parse_PtgSxName(blob) {\n\tblob.l += 2;\n\treturn [blob.read_shift(4)];\n}\n\n/* [XLS] old spec */\nfunction parse_PtgSheet(blob, length, opts) {\n\tblob.l += 5;\n\tblob.l += 2;\n\tblob.l += (opts.biff == 2 ? 1 : 4);\n\treturn [\"PTGSHEET\"];\n}\nfunction parse_PtgEndSheet(blob, length, opts) {\n\tblob.l += (opts.biff == 2 ? 4 : 5);\n\treturn [\"PTGENDSHEET\"];\n}\nfunction parse_PtgMemAreaN(blob) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(2);\n\treturn [type, cce];\n}\nfunction parse_PtgMemNoMemN(blob) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(2);\n\treturn [type, cce];\n}\nfunction parse_PtgAttrNoop(blob) {\n\tblob.l += 4;\n\treturn [0, 0];\n}\n\n/* [MS-XLS] 2.5.198.25 ; [MS-XLSB] 2.5.97.16 */\nvar PtgTypes = {\n0x01: { n:'PtgExp', f:parse_PtgExp },\n0x02: { n:'PtgTbl', f:parse_PtgTbl },\n0x03: { n:'PtgAdd', f:parseread1 },\n0x04: { n:'PtgSub', f:parseread1 },\n0x05: { n:'PtgMul', f:parseread1 },\n0x06: { n:'PtgDiv', f:parseread1 },\n0x07: { n:'PtgPower', f:parseread1 },\n0x08: { n:'PtgConcat', f:parseread1 },\n0x09: { n:'PtgLt', f:parseread1 },\n0x0A: { n:'PtgLe', f:parseread1 },\n0x0B: { n:'PtgEq', f:parseread1 },\n0x0C: { n:'PtgGe', f:parseread1 },\n0x0D: { n:'PtgGt', f:parseread1 },\n0x0E: { n:'PtgNe', f:parseread1 },\n0x0F: { n:'PtgIsect', f:parseread1 },\n0x10: { n:'PtgUnion', f:parseread1 },\n0x11: { n:'PtgRange', f:parseread1 },\n0x12: { n:'PtgUplus', f:parseread1 },\n0x13: { n:'PtgUminus', f:parseread1 },\n0x14: { n:'PtgPercent', f:parseread1 },\n0x15: { n:'PtgParen', f:parseread1 },\n0x16: { n:'PtgMissArg', f:parseread1 },\n0x17: { n:'PtgStr', f:parse_PtgStr },\n0x1A: { n:'PtgSheet', f:parse_PtgSheet },\n0x1B: { n:'PtgEndSheet', f:parse_PtgEndSheet },\n0x1C: { n:'PtgErr', f:parse_PtgErr },\n0x1D: { n:'PtgBool', f:parse_PtgBool },\n0x1E: { n:'PtgInt', f:parse_PtgInt },\n0x1F: { n:'PtgNum', f:parse_PtgNum },\n0x20: { n:'PtgArray', f:parse_PtgArray },\n0x21: { n:'PtgFunc', f:parse_PtgFunc },\n0x22: { n:'PtgFuncVar', f:parse_PtgFuncVar },\n0x23: { n:'PtgName', f:parse_PtgName },\n0x24: { n:'PtgRef', f:parse_PtgRef },\n0x25: { n:'PtgArea', f:parse_PtgArea },\n0x26: { n:'PtgMemArea', f:parse_PtgMemArea },\n0x27: { n:'PtgMemErr', f:parse_PtgMemErr },\n0x28: { n:'PtgMemNoMem', f:parse_PtgMemNoMem },\n0x29: { n:'PtgMemFunc', f:parse_PtgMemFunc },\n0x2A: { n:'PtgRefErr', f:parse_PtgRefErr },\n0x2B: { n:'PtgAreaErr', f:parse_PtgAreaErr },\n0x2C: { n:'PtgRefN', f:parse_PtgRefN },\n0x2D: { n:'PtgAreaN', f:parse_PtgAreaN },\n0x2E: { n:'PtgMemAreaN', f:parse_PtgMemAreaN },\n0x2F: { n:'PtgMemNoMemN', f:parse_PtgMemNoMemN },\n0x39: { n:'PtgNameX', f:parse_PtgNameX },\n0x3A: { n:'PtgRef3d', f:parse_PtgRef3d },\n0x3B: { n:'PtgArea3d', f:parse_PtgArea3d },\n0x3C: { n:'PtgRefErr3d', f:parse_PtgRefErr3d },\n0x3D: { n:'PtgAreaErr3d', f:parse_PtgAreaErr3d },\n0xFF: {}\n};\n/* These are duplicated in the PtgTypes table */\nvar PtgDupes = {\n0x40: 0x20, 0x60: 0x20,\n0x41: 0x21, 0x61: 0x21,\n0x42: 0x22, 0x62: 0x22,\n0x43: 0x23, 0x63: 0x23,\n0x44: 0x24, 0x64: 0x24,\n0x45: 0x25, 0x65: 0x25,\n0x46: 0x26, 0x66: 0x26,\n0x47: 0x27, 0x67: 0x27,\n0x48: 0x28, 0x68: 0x28,\n0x49: 0x29, 0x69: 0x29,\n0x4A: 0x2A, 0x6A: 0x2A,\n0x4B: 0x2B, 0x6B: 0x2B,\n0x4C: 0x2C, 0x6C: 0x2C,\n0x4D: 0x2D, 0x6D: 0x2D,\n0x4E: 0x2E, 0x6E: 0x2E,\n0x4F: 0x2F, 0x6F: 0x2F,\n0x58: 0x22, 0x78: 0x22,\n0x59: 0x39, 0x79: 0x39,\n0x5A: 0x3A, 0x7A: 0x3A,\n0x5B: 0x3B, 0x7B: 0x3B,\n0x5C: 0x3C, 0x7C: 0x3C,\n0x5D: 0x3D, 0x7D: 0x3D\n};\n(function(){for(var y in PtgDupes) PtgTypes[y] = PtgTypes[PtgDupes[y]];})();\n\nvar Ptg18 = {\n0x01: { n:'PtgElfLel', f:parse_PtgElfLel },\n0x02: { n:'PtgElfRw', f:parse_PtgElfRw },\n0x03: { n:'PtgElfCol', f:parse_PtgElfCol },\n0x06: { n:'PtgElfRwV', f:parse_PtgElfRwV },\n0x07: { n:'PtgElfColV', f:parse_PtgElfColV },\n0x0A: { n:'PtgElfRadical', f:parse_PtgElfRadical },\n0x0B: { n:'PtgElfRadicalS', f:parse_PtgElfRadicalS },\n0x0D: { n:'PtgElfColS', f:parse_PtgElfColS },\n0x0F: { n:'PtgElfColSV', f:parse_PtgElfColSV },\n0x10: { n:'PtgElfRadicalLel', f:parse_PtgElfRadicalLel },\n0x19: { n:'PtgList', f:parse_PtgList },\n0x1D: { n:'PtgSxName', f:parse_PtgSxName },\n0xFF: {}\n};\nvar Ptg19 = {\n0x00: { n:'PtgAttrNoop', f:parse_PtgAttrNoop },\n0x01: { n:'PtgAttrSemi', f:parse_PtgAttrSemi },\n0x02: { n:'PtgAttrIf', f:parse_PtgAttrIf },\n0x04: { n:'PtgAttrChoose', f:parse_PtgAttrChoose },\n0x08: { n:'PtgAttrGoto', f:parse_PtgAttrGoto },\n0x10: { n:'PtgAttrSum', f:parse_PtgAttrSum },\n0x20: { n:'PtgAttrBaxcel', f:parse_PtgAttrBaxcel },\n0x40: { n:'PtgAttrSpace', f:parse_PtgAttrSpace },\n0x41: { n:'PtgAttrSpaceSemi', f:parse_PtgAttrSpaceSemi },\n0x80: { n:'PtgAttrIfError', f:parse_PtgAttrIfError },\n0xFF: {}\n};\nPtg19[0x21] = Ptg19[0x20];\n\n/* [MS-XLS] 2.5.198.103 ; [MS-XLSB] 2.5.97.87 */\nfunction parse_RgbExtra(blob, length, rgce, opts) {\n\tif(opts.biff < 8) return parsenoop(blob, length);\n\tvar target = blob.l + length;\n\tvar o = [];\n\tfor(var i = 0; i !== rgce.length; ++i) {\n\t\tswitch(rgce[i][0]) {\n\t\t\tcase 'PtgArray': /* PtgArray -> PtgExtraArray */\n\t\t\t\trgce[i][1] = parse_PtgExtraArray(blob, 0, opts);\n\t\t\t\to.push(rgce[i][1]);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgMemArea': /* PtgMemArea -> PtgExtraMem */\n\t\t\t\trgce[i][2] = parse_PtgExtraMem(blob, rgce[i][1], opts);\n\t\t\t\to.push(rgce[i][2]);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgExp': /* PtgExp -> PtgExtraCol */\n\t\t\t\tif(opts && opts.biff == 12) {\n\t\t\t\t\trgce[i][1][1] = blob.read_shift(4);\n\t\t\t\t\to.push(rgce[i][1]);\n\t\t\t\t} break;\n\t\t\tcase 'PtgList': /* TODO: PtgList -> PtgExtraList */\n\t\t\tcase 'PtgElfRadicalS': /* TODO: PtgElfRadicalS -> PtgExtraElf */\n\t\t\tcase 'PtgElfColS': /* TODO: PtgElfColS -> PtgExtraElf */\n\t\t\tcase 'PtgElfColSV': /* TODO: PtgElfColSV -> PtgExtraElf */\n\t\t\t\tthrow \"Unsupported \" + rgce[i][0];\n\t\t\tdefault: break;\n\t\t}\n\t}\n\tlength = target - blob.l;\n\t/* note: this is technically an error but Excel disregards */\n\t//if(target !== blob.l && blob.l !== target - length) throw new Error(target + \" != \" + blob.l);\n\tif(length !== 0) o.push(parsenoop(blob, length));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.104 ; [MS-XLSB] 2.5.97.88 */\nfunction parse_Rgce(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar R, id, ptgs = [];\n\twhile(target != blob.l) {\n\t\tlength = target - blob.l;\n\t\tid = blob[blob.l];\n\t\tR = PtgTypes[id];\n\t\tif(id === 0x18 || id === 0x19) R = (id === 0x18 ? Ptg18 : Ptg19)[blob[blob.l + 1]];\n\t\tif(!R || !R.f) { /*ptgs.push*/(parsenoop(blob, length)); }\n\t\telse { ptgs.push([R.n, R.f(blob, length, opts)]); }\n\t}\n\treturn ptgs;\n}\n\nfunction stringify_array(f) {\n\tvar o = [];\n\tfor(var i = 0; i < f.length; ++i) {\n\t\tvar x = f[i], r = [];\n\t\tfor(var j = 0; j < x.length; ++j) {\n\t\t\tvar y = x[j];\n\t\t\tif(y) switch(y[0]) {\n\t\t\t\t// TODO: handle embedded quotes\n\t\t\t\tcase 0x02:\nr.push('\"' + y[1].replace(/\"/g,'\"\"') + '\"'); break;\n\t\t\t\tdefault: r.push(y[1]);\n\t\t\t} else r.push(\"\");\n\t\t}\n\t\to.push(r.join(\",\"));\n\t}\n\treturn o.join(\";\");\n}\n\n/* [MS-XLS] 2.2.2 ; [MS-XLSB] 2.2.2 TODO */\nvar PtgBinOp = {\n\tPtgAdd: \"+\",\n\tPtgConcat: \"&\",\n\tPtgDiv: \"/\",\n\tPtgEq: \"=\",\n\tPtgGe: \">=\",\n\tPtgGt: \">\",\n\tPtgLe: \"<=\",\n\tPtgLt: \"<\",\n\tPtgMul: \"*\",\n\tPtgNe: \"<>\",\n\tPtgPower: \"^\",\n\tPtgSub: \"-\"\n};\nfunction formula_quote_sheet_name(sname, opts) {\n\tif(!sname && !(opts && opts.biff <= 5 && opts.biff >= 2)) throw new Error(\"empty sheet name\");\n\tif(sname.indexOf(\" \") > -1) return \"'\" + sname + \"'\";\n\treturn sname;\n}\nfunction get_ixti_raw(supbooks, ixti, opts) {\n\tif(!supbooks) return \"SH33TJSERR0\";\n\tif(!supbooks.XTI) return \"SH33TJSERR6\";\n\tvar XTI = supbooks.XTI[ixti];\n\tif(opts.biff > 8 && !supbooks.XTI[ixti]) return supbooks.SheetNames[ixti];\n\tif(opts.biff < 8) {\n\t\tif(ixti > 10000) ixti-= 65536;\n\t\tif(ixti < 0) ixti = -ixti;\n\t\treturn ixti == 0 ? \"\" : supbooks.XTI[ixti - 1];\n\t}\n\tif(!XTI) return \"SH33TJSERR1\";\n\tvar o = \"\";\n\tif(opts.biff > 8) switch(supbooks[XTI[0]][0]) {\n\t\tcase 0x0165: /* 'BrtSupSelf' */\n\t\t\to = XTI[1] == -1 ? \"#REF\" : supbooks.SheetNames[XTI[1]];\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n\t\tcase 0x0166: /* 'BrtSupSame' */\n\t\t\tif(opts.SID != null) return supbooks.SheetNames[opts.SID];\n\t\t\treturn \"SH33TJSSAME\" + supbooks[XTI[0]][0];\n\t\tcase 0x0163: /* 'BrtSupBookSrc' */\n\t\t\t/* falls through */\n\t\tdefault: return \"SH33TJSSRC\" + supbooks[XTI[0]][0];\n\t}\n\tswitch(supbooks[XTI[0]][0][0]) {\n\t\tcase 0x0401:\n\t\t\to = XTI[1] == -1 ? \"#REF\" : (supbooks.SheetNames[XTI[1]] || \"SH33TJSERR3\");\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n\t\tcase 0x3A01: return \"SH33TJSERR8\";\n\t\tdefault:\n\t\t\tif(!supbooks[XTI[0]][0][3]) return \"SH33TJSERR2\";\n\t\t\to = XTI[1] == -1 ? \"#REF\" : (supbooks[XTI[0]][0][3][XTI[1]] || \"SH33TJSERR4\");\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks[XTI[0]][0][3][XTI[2]];\n\t}\n}\nfunction get_ixti(supbooks, ixti, opts) {\n\treturn formula_quote_sheet_name(get_ixti_raw(supbooks, ixti, opts), opts);\n}\nfunction stringify_formula(formula/*Array<any>*/, range, cell, supbooks, opts) {\n\tvar biff = (opts && opts.biff) || 8;\n\tvar _range = /*range != null ? range :*/ {s:{c:0, r:0},e:{c:0, r:0}};\n\tvar stack = [], e1, e2,  c, ixti=0, nameidx=0, r, sname=\"\";\n\tif(!formula[0] || !formula[0][0]) return \"\";\n\tvar last_sp = -1, sp = \"\";\n\tfor(var ff = 0, fflen = formula[0].length; ff < fflen; ++ff) {\n\t\tvar f = formula[0][ff];\n\t\tswitch(f[0]) {\n\t\t\tcase 'PtgUminus': /* [MS-XLS] 2.5.198.93 */\n\t\t\t\tstack.push(\"-\" + stack.pop()); break;\n\t\t\tcase 'PtgUplus': /* [MS-XLS] 2.5.198.95 */\n\t\t\t\tstack.push(\"+\" + stack.pop()); break;\n\t\t\tcase 'PtgPercent': /* [MS-XLS] 2.5.198.81 */\n\t\t\t\tstack.push(stack.pop() + \"%\"); break;\n\n\t\t\tcase 'PtgAdd':    /* [MS-XLS] 2.5.198.26 */\n\t\t\tcase 'PtgConcat': /* [MS-XLS] 2.5.198.43 */\n\t\t\tcase 'PtgDiv':    /* [MS-XLS] 2.5.198.45 */\n\t\t\tcase 'PtgEq':     /* [MS-XLS] 2.5.198.56 */\n\t\t\tcase 'PtgGe':     /* [MS-XLS] 2.5.198.64 */\n\t\t\tcase 'PtgGt':     /* [MS-XLS] 2.5.198.65 */\n\t\t\tcase 'PtgLe':     /* [MS-XLS] 2.5.198.68 */\n\t\t\tcase 'PtgLt':     /* [MS-XLS] 2.5.198.69 */\n\t\t\tcase 'PtgMul':    /* [MS-XLS] 2.5.198.75 */\n\t\t\tcase 'PtgNe':     /* [MS-XLS] 2.5.198.78 */\n\t\t\tcase 'PtgPower':  /* [MS-XLS] 2.5.198.82 */\n\t\t\tcase 'PtgSub':    /* [MS-XLS] 2.5.198.90 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tif(last_sp >= 0) {\n\t\t\t\t\tswitch(formula[0][last_sp][1][0]) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tsp = fill(\" \", formula[0][last_sp][1][1]); break;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tsp = fill(\"\\r\", formula[0][last_sp][1][1]); break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsp = \"\";\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n\t\t\t\t\t}\n\t\t\t\t\te2 = e2 + sp;\n\t\t\t\t\tlast_sp = -1;\n\t\t\t\t}\n\t\t\t\tstack.push(e2+PtgBinOp[f[0]]+e1);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgIsect': /* [MS-XLS] 2.5.198.67 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(e2+\" \"+e1);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgUnion': /* [MS-XLS] 2.5.198.94 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(e2+\",\"+e1);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRange': /* [MS-XLS] 2.5.198.83 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(e2+\":\"+e1);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrChoose': /* [MS-XLS] 2.5.198.34 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrGoto': /* [MS-XLS] 2.5.198.35 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrIf': /* [MS-XLS] 2.5.198.36 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrIfError': /* [MS-XLSB] 2.5.97.28 */\n\t\t\t\tbreak;\n\n\n\t\t\tcase 'PtgRef': /* [MS-XLS] 2.5.198.84 */\nc = shift_cell_xls((f[1][1]), _range, opts);\n\t\t\t\tstack.push(encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRefN': /* [MS-XLS] 2.5.198.88 */\nc = cell ? shift_cell_xls((f[1][1]), cell, opts) : (f[1][1]);\n\t\t\t\tstack.push(encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRef3d': /* [MS-XLS] 2.5.198.85 */\nixti = f[1][1]; c = shift_cell_xls((f[1][2]), _range, opts);\n\t\t\t\tsname = get_ixti(supbooks, ixti, opts);\n\t\t\t\tvar w = sname; /* IE9 fails on defined names */ // eslint-disable-line no-unused-vars\n\t\t\t\tstack.push(sname + \"!\" + encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgFunc': /* [MS-XLS] 2.5.198.62 */\n\t\t\tcase 'PtgFuncVar': /* [MS-XLS] 2.5.198.63 */\n\t\t\t\t/* f[1] = [argc, func, type] */\n\t\t\t\tvar argc = (f[1][0]), func = (f[1][1]);\n\t\t\t\tif(!argc) argc = 0;\n\t\t\t\targc &= 0x7F;\n\t\t\t\tvar args = argc == 0 ? [] : stack.slice(-argc);\n\t\t\t\tstack.length -= argc;\n\t\t\t\tif(func === 'User') func = args.shift();\n\t\t\t\tstack.push(func + \"(\" + args.join(\",\") + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgBool': /* [MS-XLS] 2.5.198.42 */\n\t\t\t\tstack.push(f[1] ? \"TRUE\" : \"FALSE\"); break;\n\t\t\tcase 'PtgInt': /* [MS-XLS] 2.5.198.66 */\n\t\t\t\tstack.push(f[1]); break;\n\t\t\tcase 'PtgNum': /* [MS-XLS] 2.5.198.79 TODO: precision? */\n\t\t\t\tstack.push(String(f[1])); break;\n\t\t\tcase 'PtgStr': /* [MS-XLS] 2.5.198.89 */\n\t\t\t\t// $FlowIgnore\n\t\t\t\tstack.push('\"' + f[1] + '\"'); break;\n\t\t\tcase 'PtgErr': /* [MS-XLS] 2.5.198.57 */\n\t\t\t\tstack.push(f[1]); break;\n\t\t\tcase 'PtgAreaN': /* [MS-XLS] 2.5.198.31 TODO */\nr = shift_range_xls(f[1][1], cell ? {s:cell} : _range, opts);\n\t\t\t\tstack.push(encode_range_xls((r), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgArea': /* [MS-XLS] 2.5.198.27 TODO: fixed points */\nr = shift_range_xls(f[1][1], _range, opts);\n\t\t\t\tstack.push(encode_range_xls((r), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgArea3d': /* [MS-XLS] 2.5.198.28 TODO */\nixti = f[1][1]; r = f[1][2];\n\t\t\t\tsname = get_ixti(supbooks, ixti, opts);\n\t\t\t\tstack.push(sname + \"!\" + encode_range_xls((r), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrSum': /* [MS-XLS] 2.5.198.41 */\n\t\t\t\tstack.push(\"SUM(\" + stack.pop() + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrBaxcel': /* [MS-XLS] 2.5.198.33 */\n\t\t\tcase 'PtgAttrSemi': /* [MS-XLS] 2.5.198.37 */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgName': /* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 TODO: revisions */\n\t\t\t\t/* f[1] = type, 0, nameindex */\n\t\t\t\tnameidx = (f[1][2]);\n\t\t\t\tvar lbl = (supbooks.names||[])[nameidx-1] || (supbooks[0]||[])[nameidx];\n\t\t\t\tvar name = lbl ? lbl.Name : \"SH33TJSNAME\" + String(nameidx);\n\t\t\t\tif(name in XLSXFutureFunctions) name = XLSXFutureFunctions[name];\n\t\t\t\tstack.push(name);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgNameX': /* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 TODO: revisions */\n\t\t\t\t/* f[1] = type, ixti, nameindex */\n\t\t\t\tvar bookidx = (f[1][1]); nameidx = (f[1][2]); var externbook;\n\t\t\t\t/* TODO: Properly handle missing values */\n\t\t\t\tif(opts.biff <= 5) {\n\t\t\t\t\tif(bookidx < 0) bookidx = -bookidx;\n\t\t\t\t\tif(supbooks[bookidx]) externbook = supbooks[bookidx][nameidx];\n\t\t\t\t} else {\n\t\t\t\t\tvar o = \"\";\n\t\t\t\t\tif(((supbooks[bookidx]||[])[0]||[])[0] == 0x3A01){/* empty */}\n\t\t\t\t\telse if(((supbooks[bookidx]||[])[0]||[])[0] == 0x0401){\n\t\t\t\t\t\tif(supbooks[bookidx][nameidx] && supbooks[bookidx][nameidx].itab > 0) {\n\t\t\t\t\t\t\to = supbooks.SheetNames[supbooks[bookidx][nameidx].itab-1] + \"!\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse o = supbooks.SheetNames[nameidx-1]+ \"!\";\n\t\t\t\t\tif(supbooks[bookidx] && supbooks[bookidx][nameidx]) o += supbooks[bookidx][nameidx].Name;\n\t\t\t\t\telse if(supbooks[0] && supbooks[0][nameidx]) o += supbooks[0][nameidx].Name;\n\t\t\t\t\telse o += \"SH33TJSERRX\";\n\t\t\t\t\tstack.push(o);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!externbook) externbook = {Name: \"SH33TJSERRY\"};\n\t\t\t\tstack.push(externbook.Name);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgParen': /* [MS-XLS] 2.5.198.80 */\n\t\t\t\tvar lp = '(', rp = ')';\n\t\t\t\tif(last_sp >= 0) {\n\t\t\t\t\tsp = \"\";\n\t\t\t\t\tswitch(formula[0][last_sp][1][0]) {\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 2: lp = fill(\" \", formula[0][last_sp][1][1]) + lp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 3: lp = fill(\"\\r\", formula[0][last_sp][1][1]) + lp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 4: rp = fill(\" \", formula[0][last_sp][1][1]) + rp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 5: rp = fill(\"\\r\", formula[0][last_sp][1][1]) + rp; break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n\t\t\t\t\t}\n\t\t\t\t\tlast_sp = -1;\n\t\t\t\t}\n\t\t\t\tstack.push(lp + stack.pop() + rp); break;\n\n\t\t\tcase 'PtgRefErr': /* [MS-XLS] 2.5.198.86 */\n\t\t\t\tstack.push('#REF!'); break;\n\n\t\t\tcase 'PtgRefErr3d': /* [MS-XLS] 2.5.198.87 */\n\t\t\t\tstack.push('#REF!'); break;\n\n\t\t\tcase 'PtgExp': /* [MS-XLS] 2.5.198.58 TODO */\n\t\t\t\tc = {c:(f[1][1]),r:(f[1][0])};\n\t\t\t\tvar q = ({c: cell.c, r:cell.r});\n\t\t\t\tif(supbooks.sharedf[encode_cell(c)]) {\n\t\t\t\t\tvar parsedf = (supbooks.sharedf[encode_cell(c)]);\n\t\t\t\t\tstack.push(stringify_formula(parsedf, _range, q, supbooks, opts));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar fnd = false;\n\t\t\t\t\tfor(e1=0;e1!=supbooks.arrayf.length; ++e1) {\n\t\t\t\t\t\t/* TODO: should be something like range_has */\n\t\t\t\t\t\te2 = supbooks.arrayf[e1];\n\t\t\t\t\t\tif(c.c < e2[0].s.c || c.c > e2[0].e.c) continue;\n\t\t\t\t\t\tif(c.r < e2[0].s.r || c.r > e2[0].e.r) continue;\n\t\t\t\t\t\tstack.push(stringify_formula(e2[1], _range, q, supbooks, opts));\n\t\t\t\t\t\tfnd = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(!fnd) stack.push(f[1]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgArray': /* [MS-XLS] 2.5.198.32 TODO */\n\t\t\t\tstack.push(\"{\" + stringify_array(f[1]) + \"}\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemArea': /* [MS-XLS] 2.5.198.70 TODO: confirm this is a non-display */\n\t\t\t\t//stack.push(\"(\" + f[2].map(encode_range).join(\",\") + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrSpace': /* [MS-XLS] 2.5.198.38 */\n\t\t\tcase 'PtgAttrSpaceSemi': /* [MS-XLS] 2.5.198.39 */\n\t\t\t\tlast_sp = ff;\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgTbl': /* [MS-XLS] 2.5.198.92 TODO */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemErr': /* [MS-XLS] 2.5.198.71 */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMissArg': /* [MS-XLS] 2.5.198.74 */\n\t\t\t\tstack.push(\"\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAreaErr': /* [MS-XLS] 2.5.198.29 */\n\t\t\t\tstack.push(\"#REF!\"); break;\n\n\t\t\tcase 'PtgAreaErr3d': /* [MS-XLS] 2.5.198.30 */\n\t\t\t\tstack.push(\"#REF!\"); break;\n\n\t\t\tcase 'PtgList': /* [MS-XLSB] 2.5.97.52 */\n\t\t\t\t// $FlowIgnore\n\t\t\t\tstack.push(\"Table\" + f[1].idx + \"[#\" + f[1].rt + \"]\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemAreaN':\n\t\t\tcase 'PtgMemNoMemN':\n\t\t\tcase 'PtgAttrNoop':\n\t\t\tcase 'PtgSheet':\n\t\t\tcase 'PtgEndSheet':\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemFunc': /* [MS-XLS] 2.5.198.72 TODO */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgMemNoMem': /* [MS-XLS] 2.5.198.73 TODO */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgElfCol': /* [MS-XLS] 2.5.198.46 */\n\t\t\tcase 'PtgElfColS': /* [MS-XLS] 2.5.198.47 */\n\t\t\tcase 'PtgElfColSV': /* [MS-XLS] 2.5.198.48 */\n\t\t\tcase 'PtgElfColV': /* [MS-XLS] 2.5.198.49 */\n\t\t\tcase 'PtgElfLel': /* [MS-XLS] 2.5.198.50 */\n\t\t\tcase 'PtgElfRadical': /* [MS-XLS] 2.5.198.51 */\n\t\t\tcase 'PtgElfRadicalLel': /* [MS-XLS] 2.5.198.52 */\n\t\t\tcase 'PtgElfRadicalS': /* [MS-XLS] 2.5.198.53 */\n\t\t\tcase 'PtgElfRw': /* [MS-XLS] 2.5.198.54 */\n\t\t\tcase 'PtgElfRwV': /* [MS-XLS] 2.5.198.55 */\n\t\t\t\tthrow new Error(\"Unsupported ELFs\");\n\n\t\t\tcase 'PtgSxName': /* [MS-XLS] 2.5.198.91 TODO -- find a test case */\n\t\t\t\tthrow new Error('Unrecognized Formula Token: ' + String(f));\n\t\t\tdefault: throw new Error('Unrecognized Formula Token: ' + String(f));\n\t\t}\n\t\tvar PtgNonDisp = ['PtgAttrSpace', 'PtgAttrSpaceSemi', 'PtgAttrGoto'];\n\t\tif(opts.biff != 3) if(last_sp >= 0 && PtgNonDisp.indexOf(formula[0][ff][0]) == -1) {\n\t\t\tf = formula[0][last_sp];\n\t\t\tvar _left = true;\n\t\t\tswitch(f[1][0]) {\n\t\t\t\t/* note: some bad XLSB files omit the PtgParen */\n\t\t\t\tcase 4: _left = false;\n\t\t\t\t/* falls through */\n\t\t\t\tcase 0:\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tsp = fill(\" \", f[1][1]); break;\n\t\t\t\tcase 5: _left = false;\n\t\t\t\t/* falls through */\n\t\t\t\tcase 1:\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tsp = fill(\"\\r\", f[1][1]); break;\n\t\t\t\tdefault:\n\t\t\t\t\tsp = \"\";\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + f[1][0]);\n\t\t\t}\n\t\t\tstack.push((_left ? sp : \"\") + stack.pop() + (_left ? \"\" : sp));\n\t\t\tlast_sp = -1;\n\t\t}\n\t}\n\tif(stack.length > 1 && opts.WTF) throw new Error(\"bad formula stack\");\n\treturn stack[0];\n}\n\n/* [MS-XLS] 2.5.198.1 TODO */\nfunction parse_ArrayParsedFormula(blob, length, opts) {\n\tvar target = blob.l + length, len = opts.biff == 2 ? 1 : 2;\n\tvar rgcb, cce = blob.read_shift(len); // length of rgce\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n\tblob.l = target;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.3 TODO */\nfunction parse_XLSCellParsedFormula(blob, length, opts) {\n\tvar target = blob.l + length, len = opts.biff == 2 ? 1 : 2;\n\tvar rgcb, cce = blob.read_shift(len); // length of rgce\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n\tblob.l = target;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.21 */\nfunction parse_NameParsedFormula(blob, length, opts, cce) {\n\tvar target = blob.l + length;\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tvar rgcb;\n\tif(target !== blob.l) rgcb = parse_RgbExtra(blob, target - blob.l, rgce, opts);\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.118 TODO */\nfunction parse_SharedParsedFormula(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar rgcb, cce = blob.read_shift(2); // length of rgce\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tif(length !== cce + 2) rgcb = parse_RgbExtra(blob, target - cce - 2, rgce, opts);\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.133 TODO: how to emit empty strings? */\nfunction parse_FormulaValue(blob) {\n\tvar b;\n\tif(__readUInt16LE(blob,blob.l + 6) !== 0xFFFF) return [parse_Xnum(blob),'n'];\n\tswitch(blob[blob.l]) {\n\t\tcase 0x00: blob.l += 8; return [\"String\", 's'];\n\t\tcase 0x01: b = blob[blob.l+2] === 0x1; blob.l += 8; return [b,'b'];\n\t\tcase 0x02: b = blob[blob.l+2]; blob.l += 8; return [b,'e'];\n\t\tcase 0x03: blob.l += 8; return [\"\",'s'];\n\t}\n\treturn [];\n}\n\n/* [MS-XLS] 2.4.127 TODO */\nfunction parse_Formula(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar cell = parse_XLSCell(blob, 6);\n\tif(opts.biff == 2) ++blob.l;\n\tvar val = parse_FormulaValue(blob,8);\n\tvar flags = blob.read_shift(1);\n\tif(opts.biff != 2) {\n\t\tblob.read_shift(1);\n\t\tif(opts.biff >= 5) {\n\t\t\t/*var chn = */blob.read_shift(4);\n\t\t}\n\t}\n\tvar cbf = parse_XLSCellParsedFormula(blob, end - blob.l, opts);\n\treturn {cell:cell, val:val[0], formula:cbf, shared: (flags >> 3) & 1, tt:val[1]};\n}\n\n/* XLSB Parsed Formula records have the same shape */\nfunction parse_XLSBParsedFormula(data, length, opts) {\n\tvar cce = data.read_shift(4);\n\tvar rgce = parse_Rgce(data, cce, opts);\n\tvar cb = data.read_shift(4);\n\tvar rgcb = cb > 0 ? parse_RgbExtra(data, cb, rgce, opts) : null;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLSB] 2.5.97.1 ArrayParsedFormula */\nvar parse_XLSBArrayParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.4 CellParsedFormula */\nvar parse_XLSBCellParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.12 NameParsedFormula */\nvar parse_XLSBNameParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.98 SharedParsedFormula */\nvar parse_XLSBSharedParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLS] 2.5.198.4 */\nvar Cetab = {\n0x0000: 'BEEP',\n0x0001: 'OPEN',\n0x0002: 'OPEN.LINKS',\n0x0003: 'CLOSE.ALL',\n0x0004: 'SAVE',\n0x0005: 'SAVE.AS',\n0x0006: 'FILE.DELETE',\n0x0007: 'PAGE.SETUP',\n0x0008: 'PRINT',\n0x0009: 'PRINTER.SETUP',\n0x000A: 'QUIT',\n0x000B: 'NEW.WINDOW',\n0x000C: 'ARRANGE.ALL',\n0x000D: 'WINDOW.SIZE',\n0x000E: 'WINDOW.MOVE',\n0x000F: 'FULL',\n0x0010: 'CLOSE',\n0x0011: 'RUN',\n0x0016: 'SET.PRINT.AREA',\n0x0017: 'SET.PRINT.TITLES',\n0x0018: 'SET.PAGE.BREAK',\n0x0019: 'REMOVE.PAGE.BREAK',\n0x001A: 'FONT',\n0x001B: 'DISPLAY',\n0x001C: 'PROTECT.DOCUMENT',\n0x001D: 'PRECISION',\n0x001E: 'A1.R1C1',\n0x001F: 'CALCULATE.NOW',\n0x0020: 'CALCULATION',\n0x0022: 'DATA.FIND',\n0x0023: 'EXTRACT',\n0x0024: 'DATA.DELETE',\n0x0025: 'SET.DATABASE',\n0x0026: 'SET.CRITERIA',\n0x0027: 'SORT',\n0x0028: 'DATA.SERIES',\n0x0029: 'TABLE',\n0x002A: 'FORMAT.NUMBER',\n0x002B: 'ALIGNMENT',\n0x002C: 'STYLE',\n0x002D: 'BORDER',\n0x002E: 'CELL.PROTECTION',\n0x002F: 'COLUMN.WIDTH',\n0x0030: 'UNDO',\n0x0031: 'CUT',\n0x0032: 'COPY',\n0x0033: 'PASTE',\n0x0034: 'CLEAR',\n0x0035: 'PASTE.SPECIAL',\n0x0036: 'EDIT.DELETE',\n0x0037: 'INSERT',\n0x0038: 'FILL.RIGHT',\n0x0039: 'FILL.DOWN',\n0x003D: 'DEFINE.NAME',\n0x003E: 'CREATE.NAMES',\n0x003F: 'FORMULA.GOTO',\n0x0040: 'FORMULA.FIND',\n0x0041: 'SELECT.LAST.CELL',\n0x0042: 'SHOW.ACTIVE.CELL',\n0x0043: 'GALLERY.AREA',\n0x0044: 'GALLERY.BAR',\n0x0045: 'GALLERY.COLUMN',\n0x0046: 'GALLERY.LINE',\n0x0047: 'GALLERY.PIE',\n0x0048: 'GALLERY.SCATTER',\n0x0049: 'COMBINATION',\n0x004A: 'PREFERRED',\n0x004B: 'ADD.OVERLAY',\n0x004C: 'GRIDLINES',\n0x004D: 'SET.PREFERRED',\n0x004E: 'AXES',\n0x004F: 'LEGEND',\n0x0050: 'ATTACH.TEXT',\n0x0051: 'ADD.ARROW',\n0x0052: 'SELECT.CHART',\n0x0053: 'SELECT.PLOT.AREA',\n0x0054: 'PATTERNS',\n0x0055: 'MAIN.CHART',\n0x0056: 'OVERLAY',\n0x0057: 'SCALE',\n0x0058: 'FORMAT.LEGEND',\n0x0059: 'FORMAT.TEXT',\n0x005A: 'EDIT.REPEAT',\n0x005B: 'PARSE',\n0x005C: 'JUSTIFY',\n0x005D: 'HIDE',\n0x005E: 'UNHIDE',\n0x005F: 'WORKSPACE',\n0x0060: 'FORMULA',\n0x0061: 'FORMULA.FILL',\n0x0062: 'FORMULA.ARRAY',\n0x0063: 'DATA.FIND.NEXT',\n0x0064: 'DATA.FIND.PREV',\n0x0065: 'FORMULA.FIND.NEXT',\n0x0066: 'FORMULA.FIND.PREV',\n0x0067: 'ACTIVATE',\n0x0068: 'ACTIVATE.NEXT',\n0x0069: 'ACTIVATE.PREV',\n0x006A: 'UNLOCKED.NEXT',\n0x006B: 'UNLOCKED.PREV',\n0x006C: 'COPY.PICTURE',\n0x006D: 'SELECT',\n0x006E: 'DELETE.NAME',\n0x006F: 'DELETE.FORMAT',\n0x0070: 'VLINE',\n0x0071: 'HLINE',\n0x0072: 'VPAGE',\n0x0073: 'HPAGE',\n0x0074: 'VSCROLL',\n0x0075: 'HSCROLL',\n0x0076: 'ALERT',\n0x0077: 'NEW',\n0x0078: 'CANCEL.COPY',\n0x0079: 'SHOW.CLIPBOARD',\n0x007A: 'MESSAGE',\n0x007C: 'PASTE.LINK',\n0x007D: 'APP.ACTIVATE',\n0x007E: 'DELETE.ARROW',\n0x007F: 'ROW.HEIGHT',\n0x0080: 'FORMAT.MOVE',\n0x0081: 'FORMAT.SIZE',\n0x0082: 'FORMULA.REPLACE',\n0x0083: 'SEND.KEYS',\n0x0084: 'SELECT.SPECIAL',\n0x0085: 'APPLY.NAMES',\n0x0086: 'REPLACE.FONT',\n0x0087: 'FREEZE.PANES',\n0x0088: 'SHOW.INFO',\n0x0089: 'SPLIT',\n0x008A: 'ON.WINDOW',\n0x008B: 'ON.DATA',\n0x008C: 'DISABLE.INPUT',\n0x008E: 'OUTLINE',\n0x008F: 'LIST.NAMES',\n0x0090: 'FILE.CLOSE',\n0x0091: 'SAVE.WORKBOOK',\n0x0092: 'DATA.FORM',\n0x0093: 'COPY.CHART',\n0x0094: 'ON.TIME',\n0x0095: 'WAIT',\n0x0096: 'FORMAT.FONT',\n0x0097: 'FILL.UP',\n0x0098: 'FILL.LEFT',\n0x0099: 'DELETE.OVERLAY',\n0x009B: 'SHORT.MENUS',\n0x009F: 'SET.UPDATE.STATUS',\n0x00A1: 'COLOR.PALETTE',\n0x00A2: 'DELETE.STYLE',\n0x00A3: 'WINDOW.RESTORE',\n0x00A4: 'WINDOW.MAXIMIZE',\n0x00A6: 'CHANGE.LINK',\n0x00A7: 'CALCULATE.DOCUMENT',\n0x00A8: 'ON.KEY',\n0x00A9: 'APP.RESTORE',\n0x00AA: 'APP.MOVE',\n0x00AB: 'APP.SIZE',\n0x00AC: 'APP.MINIMIZE',\n0x00AD: 'APP.MAXIMIZE',\n0x00AE: 'BRING.TO.FRONT',\n0x00AF: 'SEND.TO.BACK',\n0x00B9: 'MAIN.CHART.TYPE',\n0x00BA: 'OVERLAY.CHART.TYPE',\n0x00BB: 'SELECT.END',\n0x00BC: 'OPEN.MAIL',\n0x00BD: 'SEND.MAIL',\n0x00BE: 'STANDARD.FONT',\n0x00BF: 'CONSOLIDATE',\n0x00C0: 'SORT.SPECIAL',\n0x00C1: 'GALLERY.3D.AREA',\n0x00C2: 'GALLERY.3D.COLUMN',\n0x00C3: 'GALLERY.3D.LINE',\n0x00C4: 'GALLERY.3D.PIE',\n0x00C5: 'VIEW.3D',\n0x00C6: 'GOAL.SEEK',\n0x00C7: 'WORKGROUP',\n0x00C8: 'FILL.GROUP',\n0x00C9: 'UPDATE.LINK',\n0x00CA: 'PROMOTE',\n0x00CB: 'DEMOTE',\n0x00CC: 'SHOW.DETAIL',\n0x00CE: 'UNGROUP',\n0x00CF: 'OBJECT.PROPERTIES',\n0x00D0: 'SAVE.NEW.OBJECT',\n0x00D1: 'SHARE',\n0x00D2: 'SHARE.NAME',\n0x00D3: 'DUPLICATE',\n0x00D4: 'APPLY.STYLE',\n0x00D5: 'ASSIGN.TO.OBJECT',\n0x00D6: 'OBJECT.PROTECTION',\n0x00D7: 'HIDE.OBJECT',\n0x00D8: 'SET.EXTRACT',\n0x00D9: 'CREATE.PUBLISHER',\n0x00DA: 'SUBSCRIBE.TO',\n0x00DB: 'ATTRIBUTES',\n0x00DC: 'SHOW.TOOLBAR',\n0x00DE: 'PRINT.PREVIEW',\n0x00DF: 'EDIT.COLOR',\n0x00E0: 'SHOW.LEVELS',\n0x00E1: 'FORMAT.MAIN',\n0x00E2: 'FORMAT.OVERLAY',\n0x00E3: 'ON.RECALC',\n0x00E4: 'EDIT.SERIES',\n0x00E5: 'DEFINE.STYLE',\n0x00F0: 'LINE.PRINT',\n0x00F3: 'ENTER.DATA',\n0x00F9: 'GALLERY.RADAR',\n0x00FA: 'MERGE.STYLES',\n0x00FB: 'EDITION.OPTIONS',\n0x00FC: 'PASTE.PICTURE',\n0x00FD: 'PASTE.PICTURE.LINK',\n0x00FE: 'SPELLING',\n0x0100: 'ZOOM',\n0x0103: 'INSERT.OBJECT',\n0x0104: 'WINDOW.MINIMIZE',\n0x0109: 'SOUND.NOTE',\n0x010A: 'SOUND.PLAY',\n0x010B: 'FORMAT.SHAPE',\n0x010C: 'EXTEND.POLYGON',\n0x010D: 'FORMAT.AUTO',\n0x0110: 'GALLERY.3D.BAR',\n0x0111: 'GALLERY.3D.SURFACE',\n0x0112: 'FILL.AUTO',\n0x0114: 'CUSTOMIZE.TOOLBAR',\n0x0115: 'ADD.TOOL',\n0x0116: 'EDIT.OBJECT',\n0x0117: 'ON.DOUBLECLICK',\n0x0118: 'ON.ENTRY',\n0x0119: 'WORKBOOK.ADD',\n0x011A: 'WORKBOOK.MOVE',\n0x011B: 'WORKBOOK.COPY',\n0x011C: 'WORKBOOK.OPTIONS',\n0x011D: 'SAVE.WORKSPACE',\n0x0120: 'CHART.WIZARD',\n0x0121: 'DELETE.TOOL',\n0x0122: 'MOVE.TOOL',\n0x0123: 'WORKBOOK.SELECT',\n0x0124: 'WORKBOOK.ACTIVATE',\n0x0125: 'ASSIGN.TO.TOOL',\n0x0127: 'COPY.TOOL',\n0x0128: 'RESET.TOOL',\n0x0129: 'CONSTRAIN.NUMERIC',\n0x012A: 'PASTE.TOOL',\n0x012E: 'WORKBOOK.NEW',\n0x0131: 'SCENARIO.CELLS',\n0x0132: 'SCENARIO.DELETE',\n0x0133: 'SCENARIO.ADD',\n0x0134: 'SCENARIO.EDIT',\n0x0135: 'SCENARIO.SHOW',\n0x0136: 'SCENARIO.SHOW.NEXT',\n0x0137: 'SCENARIO.SUMMARY',\n0x0138: 'PIVOT.TABLE.WIZARD',\n0x0139: 'PIVOT.FIELD.PROPERTIES',\n0x013A: 'PIVOT.FIELD',\n0x013B: 'PIVOT.ITEM',\n0x013C: 'PIVOT.ADD.FIELDS',\n0x013E: 'OPTIONS.CALCULATION',\n0x013F: 'OPTIONS.EDIT',\n0x0140: 'OPTIONS.VIEW',\n0x0141: 'ADDIN.MANAGER',\n0x0142: 'MENU.EDITOR',\n0x0143: 'ATTACH.TOOLBARS',\n0x0144: 'VBAActivate',\n0x0145: 'OPTIONS.CHART',\n0x0148: 'VBA.INSERT.FILE',\n0x014A: 'VBA.PROCEDURE.DEFINITION',\n0x0150: 'ROUTING.SLIP',\n0x0152: 'ROUTE.DOCUMENT',\n0x0153: 'MAIL.LOGON',\n0x0156: 'INSERT.PICTURE',\n0x0157: 'EDIT.TOOL',\n0x0158: 'GALLERY.DOUGHNUT',\n0x015E: 'CHART.TREND',\n0x0160: 'PIVOT.ITEM.PROPERTIES',\n0x0162: 'WORKBOOK.INSERT',\n0x0163: 'OPTIONS.TRANSITION',\n0x0164: 'OPTIONS.GENERAL',\n0x0172: 'FILTER.ADVANCED',\n0x0175: 'MAIL.ADD.MAILER',\n0x0176: 'MAIL.DELETE.MAILER',\n0x0177: 'MAIL.REPLY',\n0x0178: 'MAIL.REPLY.ALL',\n0x0179: 'MAIL.FORWARD',\n0x017A: 'MAIL.NEXT.LETTER',\n0x017B: 'DATA.LABEL',\n0x017C: 'INSERT.TITLE',\n0x017D: 'FONT.PROPERTIES',\n0x017E: 'MACRO.OPTIONS',\n0x017F: 'WORKBOOK.HIDE',\n0x0180: 'WORKBOOK.UNHIDE',\n0x0181: 'WORKBOOK.DELETE',\n0x0182: 'WORKBOOK.NAME',\n0x0184: 'GALLERY.CUSTOM',\n0x0186: 'ADD.CHART.AUTOFORMAT',\n0x0187: 'DELETE.CHART.AUTOFORMAT',\n0x0188: 'CHART.ADD.DATA',\n0x0189: 'AUTO.OUTLINE',\n0x018A: 'TAB.ORDER',\n0x018B: 'SHOW.DIALOG',\n0x018C: 'SELECT.ALL',\n0x018D: 'UNGROUP.SHEETS',\n0x018E: 'SUBTOTAL.CREATE',\n0x018F: 'SUBTOTAL.REMOVE',\n0x0190: 'RENAME.OBJECT',\n0x019C: 'WORKBOOK.SCROLL',\n0x019D: 'WORKBOOK.NEXT',\n0x019E: 'WORKBOOK.PREV',\n0x019F: 'WORKBOOK.TAB.SPLIT',\n0x01A0: 'FULL.SCREEN',\n0x01A1: 'WORKBOOK.PROTECT',\n0x01A4: 'SCROLLBAR.PROPERTIES',\n0x01A5: 'PIVOT.SHOW.PAGES',\n0x01A6: 'TEXT.TO.COLUMNS',\n0x01A7: 'FORMAT.CHARTTYPE',\n0x01A8: 'LINK.FORMAT',\n0x01A9: 'TRACER.DISPLAY',\n0x01AE: 'TRACER.NAVIGATE',\n0x01AF: 'TRACER.CLEAR',\n0x01B0: 'TRACER.ERROR',\n0x01B1: 'PIVOT.FIELD.GROUP',\n0x01B2: 'PIVOT.FIELD.UNGROUP',\n0x01B3: 'CHECKBOX.PROPERTIES',\n0x01B4: 'LABEL.PROPERTIES',\n0x01B5: 'LISTBOX.PROPERTIES',\n0x01B6: 'EDITBOX.PROPERTIES',\n0x01B7: 'PIVOT.REFRESH',\n0x01B8: 'LINK.COMBO',\n0x01B9: 'OPEN.TEXT',\n0x01BA: 'HIDE.DIALOG',\n0x01BB: 'SET.DIALOG.FOCUS',\n0x01BC: 'ENABLE.OBJECT',\n0x01BD: 'PUSHBUTTON.PROPERTIES',\n0x01BE: 'SET.DIALOG.DEFAULT',\n0x01BF: 'FILTER',\n0x01C0: 'FILTER.SHOW.ALL',\n0x01C1: 'CLEAR.OUTLINE',\n0x01C2: 'FUNCTION.WIZARD',\n0x01C3: 'ADD.LIST.ITEM',\n0x01C4: 'SET.LIST.ITEM',\n0x01C5: 'REMOVE.LIST.ITEM',\n0x01C6: 'SELECT.LIST.ITEM',\n0x01C7: 'SET.CONTROL.VALUE',\n0x01C8: 'SAVE.COPY.AS',\n0x01CA: 'OPTIONS.LISTS.ADD',\n0x01CB: 'OPTIONS.LISTS.DELETE',\n0x01CC: 'SERIES.AXES',\n0x01CD: 'SERIES.X',\n0x01CE: 'SERIES.Y',\n0x01CF: 'ERRORBAR.X',\n0x01D0: 'ERRORBAR.Y',\n0x01D1: 'FORMAT.CHART',\n0x01D2: 'SERIES.ORDER',\n0x01D3: 'MAIL.LOGOFF',\n0x01D4: 'CLEAR.ROUTING.SLIP',\n0x01D5: 'APP.ACTIVATE.MICROSOFT',\n0x01D6: 'MAIL.EDIT.MAILER',\n0x01D7: 'ON.SHEET',\n0x01D8: 'STANDARD.WIDTH',\n0x01D9: 'SCENARIO.MERGE',\n0x01DA: 'SUMMARY.INFO',\n0x01DB: 'FIND.FILE',\n0x01DC: 'ACTIVE.CELL.FONT',\n0x01DD: 'ENABLE.TIPWIZARD',\n0x01DE: 'VBA.MAKE.ADDIN',\n0x01E0: 'INSERTDATATABLE',\n0x01E1: 'WORKGROUP.OPTIONS',\n0x01E2: 'MAIL.SEND.MAILER',\n0x01E5: 'AUTOCORRECT',\n0x01E9: 'POST.DOCUMENT',\n0x01EB: 'PICKLIST',\n0x01ED: 'VIEW.SHOW',\n0x01EE: 'VIEW.DEFINE',\n0x01EF: 'VIEW.DELETE',\n0x01FD: 'SHEET.BACKGROUND',\n0x01FE: 'INSERT.MAP.OBJECT',\n0x01FF: 'OPTIONS.MENONO',\n0x0205: 'MSOCHECKS',\n0x0206: 'NORMAL',\n0x0207: 'LAYOUT',\n0x0208: 'RM.PRINT.AREA',\n0x0209: 'CLEAR.PRINT.AREA',\n0x020A: 'ADD.PRINT.AREA',\n0x020B: 'MOVE.BRK',\n0x0221: 'HIDECURR.NOTE',\n0x0222: 'HIDEALL.NOTES',\n0x0223: 'DELETE.NOTE',\n0x0224: 'TRAVERSE.NOTES',\n0x0225: 'ACTIVATE.NOTES',\n0x026C: 'PROTECT.REVISIONS',\n0x026D: 'UNPROTECT.REVISIONS',\n0x0287: 'OPTIONS.ME',\n0x028D: 'WEB.PUBLISH',\n0x029B: 'NEWWEBQUERY',\n0x02A1: 'PIVOT.TABLE.CHART',\n0x02F1: 'OPTIONS.SAVE',\n0x02F3: 'OPTIONS.SPELL',\n0x0328: 'HIDEALL.INKANNOTS'\n};\n\n/* [MS-XLS] 2.5.198.17 */\n/* [MS-XLSB] 2.5.97.10 */\nvar Ftab = {\n0x0000: 'COUNT',\n0x0001: 'IF',\n0x0002: 'ISNA',\n0x0003: 'ISERROR',\n0x0004: 'SUM',\n0x0005: 'AVERAGE',\n0x0006: 'MIN',\n0x0007: 'MAX',\n0x0008: 'ROW',\n0x0009: 'COLUMN',\n0x000A: 'NA',\n0x000B: 'NPV',\n0x000C: 'STDEV',\n0x000D: 'DOLLAR',\n0x000E: 'FIXED',\n0x000F: 'SIN',\n0x0010: 'COS',\n0x0011: 'TAN',\n0x0012: 'ATAN',\n0x0013: 'PI',\n0x0014: 'SQRT',\n0x0015: 'EXP',\n0x0016: 'LN',\n0x0017: 'LOG10',\n0x0018: 'ABS',\n0x0019: 'INT',\n0x001A: 'SIGN',\n0x001B: 'ROUND',\n0x001C: 'LOOKUP',\n0x001D: 'INDEX',\n0x001E: 'REPT',\n0x001F: 'MID',\n0x0020: 'LEN',\n0x0021: 'VALUE',\n0x0022: 'TRUE',\n0x0023: 'FALSE',\n0x0024: 'AND',\n0x0025: 'OR',\n0x0026: 'NOT',\n0x0027: 'MOD',\n0x0028: 'DCOUNT',\n0x0029: 'DSUM',\n0x002A: 'DAVERAGE',\n0x002B: 'DMIN',\n0x002C: 'DMAX',\n0x002D: 'DSTDEV',\n0x002E: 'VAR',\n0x002F: 'DVAR',\n0x0030: 'TEXT',\n0x0031: 'LINEST',\n0x0032: 'TREND',\n0x0033: 'LOGEST',\n0x0034: 'GROWTH',\n0x0035: 'GOTO',\n0x0036: 'HALT',\n0x0037: 'RETURN',\n0x0038: 'PV',\n0x0039: 'FV',\n0x003A: 'NPER',\n0x003B: 'PMT',\n0x003C: 'RATE',\n0x003D: 'MIRR',\n0x003E: 'IRR',\n0x003F: 'RAND',\n0x0040: 'MATCH',\n0x0041: 'DATE',\n0x0042: 'TIME',\n0x0043: 'DAY',\n0x0044: 'MONTH',\n0x0045: 'YEAR',\n0x0046: 'WEEKDAY',\n0x0047: 'HOUR',\n0x0048: 'MINUTE',\n0x0049: 'SECOND',\n0x004A: 'NOW',\n0x004B: 'AREAS',\n0x004C: 'ROWS',\n0x004D: 'COLUMNS',\n0x004E: 'OFFSET',\n0x004F: 'ABSREF',\n0x0050: 'RELREF',\n0x0051: 'ARGUMENT',\n0x0052: 'SEARCH',\n0x0053: 'TRANSPOSE',\n0x0054: 'ERROR',\n0x0055: 'STEP',\n0x0056: 'TYPE',\n0x0057: 'ECHO',\n0x0058: 'SET.NAME',\n0x0059: 'CALLER',\n0x005A: 'DEREF',\n0x005B: 'WINDOWS',\n0x005C: 'SERIES',\n0x005D: 'DOCUMENTS',\n0x005E: 'ACTIVE.CELL',\n0x005F: 'SELECTION',\n0x0060: 'RESULT',\n0x0061: 'ATAN2',\n0x0062: 'ASIN',\n0x0063: 'ACOS',\n0x0064: 'CHOOSE',\n0x0065: 'HLOOKUP',\n0x0066: 'VLOOKUP',\n0x0067: 'LINKS',\n0x0068: 'INPUT',\n0x0069: 'ISREF',\n0x006A: 'GET.FORMULA',\n0x006B: 'GET.NAME',\n0x006C: 'SET.VALUE',\n0x006D: 'LOG',\n0x006E: 'EXEC',\n0x006F: 'CHAR',\n0x0070: 'LOWER',\n0x0071: 'UPPER',\n0x0072: 'PROPER',\n0x0073: 'LEFT',\n0x0074: 'RIGHT',\n0x0075: 'EXACT',\n0x0076: 'TRIM',\n0x0077: 'REPLACE',\n0x0078: 'SUBSTITUTE',\n0x0079: 'CODE',\n0x007A: 'NAMES',\n0x007B: 'DIRECTORY',\n0x007C: 'FIND',\n0x007D: 'CELL',\n0x007E: 'ISERR',\n0x007F: 'ISTEXT',\n0x0080: 'ISNUMBER',\n0x0081: 'ISBLANK',\n0x0082: 'T',\n0x0083: 'N',\n0x0084: 'FOPEN',\n0x0085: 'FCLOSE',\n0x0086: 'FSIZE',\n0x0087: 'FREADLN',\n0x0088: 'FREAD',\n0x0089: 'FWRITELN',\n0x008A: 'FWRITE',\n0x008B: 'FPOS',\n0x008C: 'DATEVALUE',\n0x008D: 'TIMEVALUE',\n0x008E: 'SLN',\n0x008F: 'SYD',\n0x0090: 'DDB',\n0x0091: 'GET.DEF',\n0x0092: 'REFTEXT',\n0x0093: 'TEXTREF',\n0x0094: 'INDIRECT',\n0x0095: 'REGISTER',\n0x0096: 'CALL',\n0x0097: 'ADD.BAR',\n0x0098: 'ADD.MENU',\n0x0099: 'ADD.COMMAND',\n0x009A: 'ENABLE.COMMAND',\n0x009B: 'CHECK.COMMAND',\n0x009C: 'RENAME.COMMAND',\n0x009D: 'SHOW.BAR',\n0x009E: 'DELETE.MENU',\n0x009F: 'DELETE.COMMAND',\n0x00A0: 'GET.CHART.ITEM',\n0x00A1: 'DIALOG.BOX',\n0x00A2: 'CLEAN',\n0x00A3: 'MDETERM',\n0x00A4: 'MINVERSE',\n0x00A5: 'MMULT',\n0x00A6: 'FILES',\n0x00A7: 'IPMT',\n0x00A8: 'PPMT',\n0x00A9: 'COUNTA',\n0x00AA: 'CANCEL.KEY',\n0x00AB: 'FOR',\n0x00AC: 'WHILE',\n0x00AD: 'BREAK',\n0x00AE: 'NEXT',\n0x00AF: 'INITIATE',\n0x00B0: 'REQUEST',\n0x00B1: 'POKE',\n0x00B2: 'EXECUTE',\n0x00B3: 'TERMINATE',\n0x00B4: 'RESTART',\n0x00B5: 'HELP',\n0x00B6: 'GET.BAR',\n0x00B7: 'PRODUCT',\n0x00B8: 'FACT',\n0x00B9: 'GET.CELL',\n0x00BA: 'GET.WORKSPACE',\n0x00BB: 'GET.WINDOW',\n0x00BC: 'GET.DOCUMENT',\n0x00BD: 'DPRODUCT',\n0x00BE: 'ISNONTEXT',\n0x00BF: 'GET.NOTE',\n0x00C0: 'NOTE',\n0x00C1: 'STDEVP',\n0x00C2: 'VARP',\n0x00C3: 'DSTDEVP',\n0x00C4: 'DVARP',\n0x00C5: 'TRUNC',\n0x00C6: 'ISLOGICAL',\n0x00C7: 'DCOUNTA',\n0x00C8: 'DELETE.BAR',\n0x00C9: 'UNREGISTER',\n0x00CC: 'USDOLLAR',\n0x00CD: 'FINDB',\n0x00CE: 'SEARCHB',\n0x00CF: 'REPLACEB',\n0x00D0: 'LEFTB',\n0x00D1: 'RIGHTB',\n0x00D2: 'MIDB',\n0x00D3: 'LENB',\n0x00D4: 'ROUNDUP',\n0x00D5: 'ROUNDDOWN',\n0x00D6: 'ASC',\n0x00D7: 'DBCS',\n0x00D8: 'RANK',\n0x00DB: 'ADDRESS',\n0x00DC: 'DAYS360',\n0x00DD: 'TODAY',\n0x00DE: 'VDB',\n0x00DF: 'ELSE',\n0x00E0: 'ELSE.IF',\n0x00E1: 'END.IF',\n0x00E2: 'FOR.CELL',\n0x00E3: 'MEDIAN',\n0x00E4: 'SUMPRODUCT',\n0x00E5: 'SINH',\n0x00E6: 'COSH',\n0x00E7: 'TANH',\n0x00E8: 'ASINH',\n0x00E9: 'ACOSH',\n0x00EA: 'ATANH',\n0x00EB: 'DGET',\n0x00EC: 'CREATE.OBJECT',\n0x00ED: 'VOLATILE',\n0x00EE: 'LAST.ERROR',\n0x00EF: 'CUSTOM.UNDO',\n0x00F0: 'CUSTOM.REPEAT',\n0x00F1: 'FORMULA.CONVERT',\n0x00F2: 'GET.LINK.INFO',\n0x00F3: 'TEXT.BOX',\n0x00F4: 'INFO',\n0x00F5: 'GROUP',\n0x00F6: 'GET.OBJECT',\n0x00F7: 'DB',\n0x00F8: 'PAUSE',\n0x00FB: 'RESUME',\n0x00FC: 'FREQUENCY',\n0x00FD: 'ADD.TOOLBAR',\n0x00FE: 'DELETE.TOOLBAR',\n0x00FF: 'User',\n0x0100: 'RESET.TOOLBAR',\n0x0101: 'EVALUATE',\n0x0102: 'GET.TOOLBAR',\n0x0103: 'GET.TOOL',\n0x0104: 'SPELLING.CHECK',\n0x0105: 'ERROR.TYPE',\n0x0106: 'APP.TITLE',\n0x0107: 'WINDOW.TITLE',\n0x0108: 'SAVE.TOOLBAR',\n0x0109: 'ENABLE.TOOL',\n0x010A: 'PRESS.TOOL',\n0x010B: 'REGISTER.ID',\n0x010C: 'GET.WORKBOOK',\n0x010D: 'AVEDEV',\n0x010E: 'BETADIST',\n0x010F: 'GAMMALN',\n0x0110: 'BETAINV',\n0x0111: 'BINOMDIST',\n0x0112: 'CHIDIST',\n0x0113: 'CHIINV',\n0x0114: 'COMBIN',\n0x0115: 'CONFIDENCE',\n0x0116: 'CRITBINOM',\n0x0117: 'EVEN',\n0x0118: 'EXPONDIST',\n0x0119: 'FDIST',\n0x011A: 'FINV',\n0x011B: 'FISHER',\n0x011C: 'FISHERINV',\n0x011D: 'FLOOR',\n0x011E: 'GAMMADIST',\n0x011F: 'GAMMAINV',\n0x0120: 'CEILING',\n0x0121: 'HYPGEOMDIST',\n0x0122: 'LOGNORMDIST',\n0x0123: 'LOGINV',\n0x0124: 'NEGBINOMDIST',\n0x0125: 'NORMDIST',\n0x0126: 'NORMSDIST',\n0x0127: 'NORMINV',\n0x0128: 'NORMSINV',\n0x0129: 'STANDARDIZE',\n0x012A: 'ODD',\n0x012B: 'PERMUT',\n0x012C: 'POISSON',\n0x012D: 'TDIST',\n0x012E: 'WEIBULL',\n0x012F: 'SUMXMY2',\n0x0130: 'SUMX2MY2',\n0x0131: 'SUMX2PY2',\n0x0132: 'CHITEST',\n0x0133: 'CORREL',\n0x0134: 'COVAR',\n0x0135: 'FORECAST',\n0x0136: 'FTEST',\n0x0137: 'INTERCEPT',\n0x0138: 'PEARSON',\n0x0139: 'RSQ',\n0x013A: 'STEYX',\n0x013B: 'SLOPE',\n0x013C: 'TTEST',\n0x013D: 'PROB',\n0x013E: 'DEVSQ',\n0x013F: 'GEOMEAN',\n0x0140: 'HARMEAN',\n0x0141: 'SUMSQ',\n0x0142: 'KURT',\n0x0143: 'SKEW',\n0x0144: 'ZTEST',\n0x0145: 'LARGE',\n0x0146: 'SMALL',\n0x0147: 'QUARTILE',\n0x0148: 'PERCENTILE',\n0x0149: 'PERCENTRANK',\n0x014A: 'MODE',\n0x014B: 'TRIMMEAN',\n0x014C: 'TINV',\n0x014E: 'MOVIE.COMMAND',\n0x014F: 'GET.MOVIE',\n0x0150: 'CONCATENATE',\n0x0151: 'POWER',\n0x0152: 'PIVOT.ADD.DATA',\n0x0153: 'GET.PIVOT.TABLE',\n0x0154: 'GET.PIVOT.FIELD',\n0x0155: 'GET.PIVOT.ITEM',\n0x0156: 'RADIANS',\n0x0157: 'DEGREES',\n0x0158: 'SUBTOTAL',\n0x0159: 'SUMIF',\n0x015A: 'COUNTIF',\n0x015B: 'COUNTBLANK',\n0x015C: 'SCENARIO.GET',\n0x015D: 'OPTIONS.LISTS.GET',\n0x015E: 'ISPMT',\n0x015F: 'DATEDIF',\n0x0160: 'DATESTRING',\n0x0161: 'NUMBERSTRING',\n0x0162: 'ROMAN',\n0x0163: 'OPEN.DIALOG',\n0x0164: 'SAVE.DIALOG',\n0x0165: 'VIEW.GET',\n0x0166: 'GETPIVOTDATA',\n0x0167: 'HYPERLINK',\n0x0168: 'PHONETIC',\n0x0169: 'AVERAGEA',\n0x016A: 'MAXA',\n0x016B: 'MINA',\n0x016C: 'STDEVPA',\n0x016D: 'VARPA',\n0x016E: 'STDEVA',\n0x016F: 'VARA',\n0x0170: 'BAHTTEXT',\n0x0171: 'THAIDAYOFWEEK',\n0x0172: 'THAIDIGIT',\n0x0173: 'THAIMONTHOFYEAR',\n0x0174: 'THAINUMSOUND',\n0x0175: 'THAINUMSTRING',\n0x0176: 'THAISTRINGLENGTH',\n0x0177: 'ISTHAIDIGIT',\n0x0178: 'ROUNDBAHTDOWN',\n0x0179: 'ROUNDBAHTUP',\n0x017A: 'THAIYEAR',\n0x017B: 'RTD',\n\n0x017C: 'CUBEVALUE',\n0x017D: 'CUBEMEMBER',\n0x017E: 'CUBEMEMBERPROPERTY',\n0x017F: 'CUBERANKEDMEMBER',\n0x0180: 'HEX2BIN',\n0x0181: 'HEX2DEC',\n0x0182: 'HEX2OCT',\n0x0183: 'DEC2BIN',\n0x0184: 'DEC2HEX',\n0x0185: 'DEC2OCT',\n0x0186: 'OCT2BIN',\n0x0187: 'OCT2HEX',\n0x0188: 'OCT2DEC',\n0x0189: 'BIN2DEC',\n0x018A: 'BIN2OCT',\n0x018B: 'BIN2HEX',\n0x018C: 'IMSUB',\n0x018D: 'IMDIV',\n0x018E: 'IMPOWER',\n0x018F: 'IMABS',\n0x0190: 'IMSQRT',\n0x0191: 'IMLN',\n0x0192: 'IMLOG2',\n0x0193: 'IMLOG10',\n0x0194: 'IMSIN',\n0x0195: 'IMCOS',\n0x0196: 'IMEXP',\n0x0197: 'IMARGUMENT',\n0x0198: 'IMCONJUGATE',\n0x0199: 'IMAGINARY',\n0x019A: 'IMREAL',\n0x019B: 'COMPLEX',\n0x019C: 'IMSUM',\n0x019D: 'IMPRODUCT',\n0x019E: 'SERIESSUM',\n0x019F: 'FACTDOUBLE',\n0x01A0: 'SQRTPI',\n0x01A1: 'QUOTIENT',\n0x01A2: 'DELTA',\n0x01A3: 'GESTEP',\n0x01A4: 'ISEVEN',\n0x01A5: 'ISODD',\n0x01A6: 'MROUND',\n0x01A7: 'ERF',\n0x01A8: 'ERFC',\n0x01A9: 'BESSELJ',\n0x01AA: 'BESSELK',\n0x01AB: 'BESSELY',\n0x01AC: 'BESSELI',\n0x01AD: 'XIRR',\n0x01AE: 'XNPV',\n0x01AF: 'PRICEMAT',\n0x01B0: 'YIELDMAT',\n0x01B1: 'INTRATE',\n0x01B2: 'RECEIVED',\n0x01B3: 'DISC',\n0x01B4: 'PRICEDISC',\n0x01B5: 'YIELDDISC',\n0x01B6: 'TBILLEQ',\n0x01B7: 'TBILLPRICE',\n0x01B8: 'TBILLYIELD',\n0x01B9: 'PRICE',\n0x01BA: 'YIELD',\n0x01BB: 'DOLLARDE',\n0x01BC: 'DOLLARFR',\n0x01BD: 'NOMINAL',\n0x01BE: 'EFFECT',\n0x01BF: 'CUMPRINC',\n0x01C0: 'CUMIPMT',\n0x01C1: 'EDATE',\n0x01C2: 'EOMONTH',\n0x01C3: 'YEARFRAC',\n0x01C4: 'COUPDAYBS',\n0x01C5: 'COUPDAYS',\n0x01C6: 'COUPDAYSNC',\n0x01C7: 'COUPNCD',\n0x01C8: 'COUPNUM',\n0x01C9: 'COUPPCD',\n0x01CA: 'DURATION',\n0x01CB: 'MDURATION',\n0x01CC: 'ODDLPRICE',\n0x01CD: 'ODDLYIELD',\n0x01CE: 'ODDFPRICE',\n0x01CF: 'ODDFYIELD',\n0x01D0: 'RANDBETWEEN',\n0x01D1: 'WEEKNUM',\n0x01D2: 'AMORDEGRC',\n0x01D3: 'AMORLINC',\n0x01D4: 'CONVERT',\n0x02D4: 'SHEETJS',\n0x01D5: 'ACCRINT',\n0x01D6: 'ACCRINTM',\n0x01D7: 'WORKDAY',\n0x01D8: 'NETWORKDAYS',\n0x01D9: 'GCD',\n0x01DA: 'MULTINOMIAL',\n0x01DB: 'LCM',\n0x01DC: 'FVSCHEDULE',\n0x01DD: 'CUBEKPIMEMBER',\n0x01DE: 'CUBESET',\n0x01DF: 'CUBESETCOUNT',\n0x01E0: 'IFERROR',\n0x01E1: 'COUNTIFS',\n0x01E2: 'SUMIFS',\n0x01E3: 'AVERAGEIF',\n0x01E4: 'AVERAGEIFS'\n};\nvar FtabArgc = {\n0x0002: 1, /* ISNA */\n0x0003: 1, /* ISERROR */\n0x000A: 0, /* NA */\n0x000F: 1, /* SIN */\n0x0010: 1, /* COS */\n0x0011: 1, /* TAN */\n0x0012: 1, /* ATAN */\n0x0013: 0, /* PI */\n0x0014: 1, /* SQRT */\n0x0015: 1, /* EXP */\n0x0016: 1, /* LN */\n0x0017: 1, /* LOG10 */\n0x0018: 1, /* ABS */\n0x0019: 1, /* INT */\n0x001A: 1, /* SIGN */\n0x001B: 2, /* ROUND */\n0x001E: 2, /* REPT */\n0x001F: 3, /* MID */\n0x0020: 1, /* LEN */\n0x0021: 1, /* VALUE */\n0x0022: 0, /* TRUE */\n0x0023: 0, /* FALSE */\n0x0026: 1, /* NOT */\n0x0027: 2, /* MOD */\n0x0028: 3, /* DCOUNT */\n0x0029: 3, /* DSUM */\n0x002A: 3, /* DAVERAGE */\n0x002B: 3, /* DMIN */\n0x002C: 3, /* DMAX */\n0x002D: 3, /* DSTDEV */\n0x002F: 3, /* DVAR */\n0x0030: 2, /* TEXT */\n0x0035: 1, /* GOTO */\n0x003D: 3, /* MIRR */\n0x003F: 0, /* RAND */\n0x0041: 3, /* DATE */\n0x0042: 3, /* TIME */\n0x0043: 1, /* DAY */\n0x0044: 1, /* MONTH */\n0x0045: 1, /* YEAR */\n0x0046: 1, /* WEEKDAY */\n0x0047: 1, /* HOUR */\n0x0048: 1, /* MINUTE */\n0x0049: 1, /* SECOND */\n0x004A: 0, /* NOW */\n0x004B: 1, /* AREAS */\n0x004C: 1, /* ROWS */\n0x004D: 1, /* COLUMNS */\n0x004F: 2, /* ABSREF */\n0x0050: 2, /* RELREF */\n0x0053: 1, /* TRANSPOSE */\n0x0055: 0, /* STEP */\n0x0056: 1, /* TYPE */\n0x0059: 0, /* CALLER */\n0x005A: 1, /* DEREF */\n0x005E: 0, /* ACTIVE.CELL */\n0x005F: 0, /* SELECTION */\n0x0061: 2, /* ATAN2 */\n0x0062: 1, /* ASIN */\n0x0063: 1, /* ACOS */\n0x0065: 3, /* HLOOKUP */\n0x0066: 3, /* VLOOKUP */\n0x0069: 1, /* ISREF */\n0x006A: 1, /* GET.FORMULA */\n0x006C: 2, /* SET.VALUE */\n0x006F: 1, /* CHAR */\n0x0070: 1, /* LOWER */\n0x0071: 1, /* UPPER */\n0x0072: 1, /* PROPER */\n0x0075: 2, /* EXACT */\n0x0076: 1, /* TRIM */\n0x0077: 4, /* REPLACE */\n0x0079: 1, /* CODE */\n0x007E: 1, /* ISERR */\n0x007F: 1, /* ISTEXT */\n0x0080: 1, /* ISNUMBER */\n0x0081: 1, /* ISBLANK */\n0x0082: 1, /* T */\n0x0083: 1, /* N */\n0x0085: 1, /* FCLOSE */\n0x0086: 1, /* FSIZE */\n0x0087: 1, /* FREADLN */\n0x0088: 2, /* FREAD */\n0x0089: 2, /* FWRITELN */\n0x008A: 2, /* FWRITE */\n0x008C: 1, /* DATEVALUE */\n0x008D: 1, /* TIMEVALUE */\n0x008E: 3, /* SLN */\n0x008F: 4, /* SYD */\n0x0090: 4, /* DDB */\n0x00A1: 1, /* DIALOG.BOX */\n0x00A2: 1, /* CLEAN */\n0x00A3: 1, /* MDETERM */\n0x00A4: 1, /* MINVERSE */\n0x00A5: 2, /* MMULT */\n0x00AC: 1, /* WHILE */\n0x00AF: 2, /* INITIATE */\n0x00B0: 2, /* REQUEST */\n0x00B1: 3, /* POKE */\n0x00B2: 2, /* EXECUTE */\n0x00B3: 1, /* TERMINATE */\n0x00B8: 1, /* FACT */\n0x00BA: 1, /* GET.WORKSPACE */\n0x00BD: 3, /* DPRODUCT */\n0x00BE: 1, /* ISNONTEXT */\n0x00C3: 3, /* DSTDEVP */\n0x00C4: 3, /* DVARP */\n0x00C5: 1, /* TRUNC */\n0x00C6: 1, /* ISLOGICAL */\n0x00C7: 3, /* DCOUNTA */\n0x00C9: 1, /* UNREGISTER */\n0x00CF: 4, /* REPLACEB */\n0x00D2: 3, /* MIDB */\n0x00D3: 1, /* LENB */\n0x00D4: 2, /* ROUNDUP */\n0x00D5: 2, /* ROUNDDOWN */\n0x00D6: 1, /* ASC */\n0x00D7: 1, /* DBCS */\n0x00E1: 0, /* END.IF */\n0x00E5: 1, /* SINH */\n0x00E6: 1, /* COSH */\n0x00E7: 1, /* TANH */\n0x00E8: 1, /* ASINH */\n0x00E9: 1, /* ACOSH */\n0x00EA: 1, /* ATANH */\n0x00EB: 3, /* DGET */\n0x00F4: 1, /* INFO */\n0x00F7: 4, /* DB */\n0x00FC: 2, /* FREQUENCY */\n0x0101: 1, /* EVALUATE */\n0x0105: 1, /* ERROR.TYPE */\n0x010F: 1, /* GAMMALN */\n0x0111: 4, /* BINOMDIST */\n0x0112: 2, /* CHIDIST */\n0x0113: 2, /* CHIINV */\n0x0114: 2, /* COMBIN */\n0x0115: 3, /* CONFIDENCE */\n0x0116: 3, /* CRITBINOM */\n0x0117: 1, /* EVEN */\n0x0118: 3, /* EXPONDIST */\n0x0119: 3, /* FDIST */\n0x011A: 3, /* FINV */\n0x011B: 1, /* FISHER */\n0x011C: 1, /* FISHERINV */\n0x011D: 2, /* FLOOR */\n0x011E: 4, /* GAMMADIST */\n0x011F: 3, /* GAMMAINV */\n0x0120: 2, /* CEILING */\n0x0121: 4, /* HYPGEOMDIST */\n0x0122: 3, /* LOGNORMDIST */\n0x0123: 3, /* LOGINV */\n0x0124: 3, /* NEGBINOMDIST */\n0x0125: 4, /* NORMDIST */\n0x0126: 1, /* NORMSDIST */\n0x0127: 3, /* NORMINV */\n0x0128: 1, /* NORMSINV */\n0x0129: 3, /* STANDARDIZE */\n0x012A: 1, /* ODD */\n0x012B: 2, /* PERMUT */\n0x012C: 3, /* POISSON */\n0x012D: 3, /* TDIST */\n0x012E: 4, /* WEIBULL */\n0x012F: 2, /* SUMXMY2 */\n0x0130: 2, /* SUMX2MY2 */\n0x0131: 2, /* SUMX2PY2 */\n0x0132: 2, /* CHITEST */\n0x0133: 2, /* CORREL */\n0x0134: 2, /* COVAR */\n0x0135: 3, /* FORECAST */\n0x0136: 2, /* FTEST */\n0x0137: 2, /* INTERCEPT */\n0x0138: 2, /* PEARSON */\n0x0139: 2, /* RSQ */\n0x013A: 2, /* STEYX */\n0x013B: 2, /* SLOPE */\n0x013C: 4, /* TTEST */\n0x0145: 2, /* LARGE */\n0x0146: 2, /* SMALL */\n0x0147: 2, /* QUARTILE */\n0x0148: 2, /* PERCENTILE */\n0x014B: 2, /* TRIMMEAN */\n0x014C: 2, /* TINV */\n0x0151: 2, /* POWER */\n0x0156: 1, /* RADIANS */\n0x0157: 1, /* DEGREES */\n0x015A: 2, /* COUNTIF */\n0x015B: 1, /* COUNTBLANK */\n0x015E: 4, /* ISPMT */\n0x015F: 3, /* DATEDIF */\n0x0160: 1, /* DATESTRING */\n0x0161: 2, /* NUMBERSTRING */\n0x0168: 1, /* PHONETIC */\n0x0170: 1, /* BAHTTEXT */\n0x0171: 1, /* THAIDAYOFWEEK */\n0x0172: 1, /* THAIDIGIT */\n0x0173: 1, /* THAIMONTHOFYEAR */\n0x0174: 1, /* THAINUMSOUND */\n0x0175: 1, /* THAINUMSTRING */\n0x0176: 1, /* THAISTRINGLENGTH */\n0x0177: 1, /* ISTHAIDIGIT */\n0x0178: 1, /* ROUNDBAHTDOWN */\n0x0179: 1, /* ROUNDBAHTUP */\n0x017A: 1, /* THAIYEAR */\n0x017E: 3, /* CUBEMEMBERPROPERTY */\n0x0181: 1, /* HEX2DEC */\n0x0188: 1, /* OCT2DEC */\n0x0189: 1, /* BIN2DEC */\n0x018C: 2, /* IMSUB */\n0x018D: 2, /* IMDIV */\n0x018E: 2, /* IMPOWER */\n0x018F: 1, /* IMABS */\n0x0190: 1, /* IMSQRT */\n0x0191: 1, /* IMLN */\n0x0192: 1, /* IMLOG2 */\n0x0193: 1, /* IMLOG10 */\n0x0194: 1, /* IMSIN */\n0x0195: 1, /* IMCOS */\n0x0196: 1, /* IMEXP */\n0x0197: 1, /* IMARGUMENT */\n0x0198: 1, /* IMCONJUGATE */\n0x0199: 1, /* IMAGINARY */\n0x019A: 1, /* IMREAL */\n0x019E: 4, /* SERIESSUM */\n0x019F: 1, /* FACTDOUBLE */\n0x01A0: 1, /* SQRTPI */\n0x01A1: 2, /* QUOTIENT */\n0x01A4: 1, /* ISEVEN */\n0x01A5: 1, /* ISODD */\n0x01A6: 2, /* MROUND */\n0x01A8: 1, /* ERFC */\n0x01A9: 2, /* BESSELJ */\n0x01AA: 2, /* BESSELK */\n0x01AB: 2, /* BESSELY */\n0x01AC: 2, /* BESSELI */\n0x01AE: 3, /* XNPV */\n0x01B6: 3, /* TBILLEQ */\n0x01B7: 3, /* TBILLPRICE */\n0x01B8: 3, /* TBILLYIELD */\n0x01BB: 2, /* DOLLARDE */\n0x01BC: 2, /* DOLLARFR */\n0x01BD: 2, /* NOMINAL */\n0x01BE: 2, /* EFFECT */\n0x01BF: 6, /* CUMPRINC */\n0x01C0: 6, /* CUMIPMT */\n0x01C1: 2, /* EDATE */\n0x01C2: 2, /* EOMONTH */\n0x01D0: 2, /* RANDBETWEEN */\n0x01D4: 3, /* CONVERT */\n0x01DC: 2, /* FVSCHEDULE */\n0x01DF: 1, /* CUBESETCOUNT */\n0x01E0: 2, /* IFERROR */\n0xFFFF: 0\n};\n/* [MS-XLSX] 2.2.3 Functions */\n/* [MS-XLSB] 2.5.97.10 Ftab */\nvar XLSXFutureFunctions = {\n\t\"_xlfn.ACOT\": \"ACOT\",\n\t\"_xlfn.ACOTH\": \"ACOTH\",\n\t\"_xlfn.AGGREGATE\": \"AGGREGATE\",\n\t\"_xlfn.ARABIC\": \"ARABIC\",\n\t\"_xlfn.AVERAGEIF\": \"AVERAGEIF\",\n\t\"_xlfn.AVERAGEIFS\": \"AVERAGEIFS\",\n\t\"_xlfn.BASE\": \"BASE\",\n\t\"_xlfn.BETA.DIST\": \"BETA.DIST\",\n\t\"_xlfn.BETA.INV\": \"BETA.INV\",\n\t\"_xlfn.BINOM.DIST\": \"BINOM.DIST\",\n\t\"_xlfn.BINOM.DIST.RANGE\": \"BINOM.DIST.RANGE\",\n\t\"_xlfn.BINOM.INV\": \"BINOM.INV\",\n\t\"_xlfn.BITAND\": \"BITAND\",\n\t\"_xlfn.BITLSHIFT\": \"BITLSHIFT\",\n\t\"_xlfn.BITOR\": \"BITOR\",\n\t\"_xlfn.BITRSHIFT\": \"BITRSHIFT\",\n\t\"_xlfn.BITXOR\": \"BITXOR\",\n\t\"_xlfn.CEILING.MATH\": \"CEILING.MATH\",\n\t\"_xlfn.CEILING.PRECISE\": \"CEILING.PRECISE\",\n\t\"_xlfn.CHISQ.DIST\": \"CHISQ.DIST\",\n\t\"_xlfn.CHISQ.DIST.RT\": \"CHISQ.DIST.RT\",\n\t\"_xlfn.CHISQ.INV\": \"CHISQ.INV\",\n\t\"_xlfn.CHISQ.INV.RT\": \"CHISQ.INV.RT\",\n\t\"_xlfn.CHISQ.TEST\": \"CHISQ.TEST\",\n\t\"_xlfn.COMBINA\": \"COMBINA\",\n\t\"_xlfn.CONCAT\": \"CONCAT\",\n\t\"_xlfn.CONFIDENCE.NORM\": \"CONFIDENCE.NORM\",\n\t\"_xlfn.CONFIDENCE.T\": \"CONFIDENCE.T\",\n\t\"_xlfn.COT\": \"COT\",\n\t\"_xlfn.COTH\": \"COTH\",\n\t\"_xlfn.COUNTIFS\": \"COUNTIFS\",\n\t\"_xlfn.COVARIANCE.P\": \"COVARIANCE.P\",\n\t\"_xlfn.COVARIANCE.S\": \"COVARIANCE.S\",\n\t\"_xlfn.CSC\": \"CSC\",\n\t\"_xlfn.CSCH\": \"CSCH\",\n\t\"_xlfn.DAYS\": \"DAYS\",\n\t\"_xlfn.DECIMAL\": \"DECIMAL\",\n\t\"_xlfn.ECMA.CEILING\": \"ECMA.CEILING\",\n\t\"_xlfn.ERF.PRECISE\": \"ERF.PRECISE\",\n\t\"_xlfn.ERFC.PRECISE\": \"ERFC.PRECISE\",\n\t\"_xlfn.EXPON.DIST\": \"EXPON.DIST\",\n\t\"_xlfn.F.DIST\": \"F.DIST\",\n\t\"_xlfn.F.DIST.RT\": \"F.DIST.RT\",\n\t\"_xlfn.F.INV\": \"F.INV\",\n\t\"_xlfn.F.INV.RT\": \"F.INV.RT\",\n\t\"_xlfn.F.TEST\": \"F.TEST\",\n\t\"_xlfn.FILTERXML\": \"FILTERXML\",\n\t\"_xlfn.FLOOR.MATH\": \"FLOOR.MATH\",\n\t\"_xlfn.FLOOR.PRECISE\": \"FLOOR.PRECISE\",\n\t\"_xlfn.FORECAST.ETS\": \"FORECAST.ETS\",\n\t\"_xlfn.FORECAST.ETS.CONFINT\": \"FORECAST.ETS.CONFINT\",\n\t\"_xlfn.FORECAST.ETS.SEASONALITY\": \"FORECAST.ETS.SEASONALITY\",\n\t\"_xlfn.FORECAST.ETS.STAT\": \"FORECAST.ETS.STAT\",\n\t\"_xlfn.FORECAST.LINEAR\": \"FORECAST.LINEAR\",\n\t\"_xlfn.FORMULATEXT\": \"FORMULATEXT\",\n\t\"_xlfn.GAMMA\": \"GAMMA\",\n\t\"_xlfn.GAMMA.DIST\": \"GAMMA.DIST\",\n\t\"_xlfn.GAMMA.INV\": \"GAMMA.INV\",\n\t\"_xlfn.GAMMALN.PRECISE\": \"GAMMALN.PRECISE\",\n\t\"_xlfn.GAUSS\": \"GAUSS\",\n\t\"_xlfn.HYPGEOM.DIST\": \"HYPGEOM.DIST\",\n\t\"_xlfn.IFERROR\": \"IFERROR\",\n\t\"_xlfn.IFNA\": \"IFNA\",\n\t\"_xlfn.IFS\": \"IFS\",\n\t\"_xlfn.IMCOSH\": \"IMCOSH\",\n\t\"_xlfn.IMCOT\": \"IMCOT\",\n\t\"_xlfn.IMCSC\": \"IMCSC\",\n\t\"_xlfn.IMCSCH\": \"IMCSCH\",\n\t\"_xlfn.IMSEC\": \"IMSEC\",\n\t\"_xlfn.IMSECH\": \"IMSECH\",\n\t\"_xlfn.IMSINH\": \"IMSINH\",\n\t\"_xlfn.IMTAN\": \"IMTAN\",\n\t\"_xlfn.ISFORMULA\": \"ISFORMULA\",\n\t\"_xlfn.ISO.CEILING\": \"ISO.CEILING\",\n\t\"_xlfn.ISOWEEKNUM\": \"ISOWEEKNUM\",\n\t\"_xlfn.LOGNORM.DIST\": \"LOGNORM.DIST\",\n\t\"_xlfn.LOGNORM.INV\": \"LOGNORM.INV\",\n\t\"_xlfn.MAXIFS\": \"MAXIFS\",\n\t\"_xlfn.MINIFS\": \"MINIFS\",\n\t\"_xlfn.MODE.MULT\": \"MODE.MULT\",\n\t\"_xlfn.MODE.SNGL\": \"MODE.SNGL\",\n\t\"_xlfn.MUNIT\": \"MUNIT\",\n\t\"_xlfn.NEGBINOM.DIST\": \"NEGBINOM.DIST\",\n\t\"_xlfn.NETWORKDAYS.INTL\": \"NETWORKDAYS.INTL\",\n\t\"_xlfn.NIGBINOM\": \"NIGBINOM\",\n\t\"_xlfn.NORM.DIST\": \"NORM.DIST\",\n\t\"_xlfn.NORM.INV\": \"NORM.INV\",\n\t\"_xlfn.NORM.S.DIST\": \"NORM.S.DIST\",\n\t\"_xlfn.NORM.S.INV\": \"NORM.S.INV\",\n\t\"_xlfn.NUMBERVALUE\": \"NUMBERVALUE\",\n\t\"_xlfn.PDURATION\": \"PDURATION\",\n\t\"_xlfn.PERCENTILE.EXC\": \"PERCENTILE.EXC\",\n\t\"_xlfn.PERCENTILE.INC\": \"PERCENTILE.INC\",\n\t\"_xlfn.PERCENTRANK.EXC\": \"PERCENTRANK.EXC\",\n\t\"_xlfn.PERCENTRANK.INC\": \"PERCENTRANK.INC\",\n\t\"_xlfn.PERMUTATIONA\": \"PERMUTATIONA\",\n\t\"_xlfn.PHI\": \"PHI\",\n\t\"_xlfn.POISSON.DIST\": \"POISSON.DIST\",\n\t\"_xlfn.QUARTILE.EXC\": \"QUARTILE.EXC\",\n\t\"_xlfn.QUARTILE.INC\": \"QUARTILE.INC\",\n\t\"_xlfn.QUERYSTRING\": \"QUERYSTRING\",\n\t\"_xlfn.RANK.AVG\": \"RANK.AVG\",\n\t\"_xlfn.RANK.EQ\": \"RANK.EQ\",\n\t\"_xlfn.RRI\": \"RRI\",\n\t\"_xlfn.SEC\": \"SEC\",\n\t\"_xlfn.SECH\": \"SECH\",\n\t\"_xlfn.SHEET\": \"SHEET\",\n\t\"_xlfn.SHEETS\": \"SHEETS\",\n\t\"_xlfn.SKEW.P\": \"SKEW.P\",\n\t\"_xlfn.STDEV.P\": \"STDEV.P\",\n\t\"_xlfn.STDEV.S\": \"STDEV.S\",\n\t\"_xlfn.SUMIFS\": \"SUMIFS\",\n\t\"_xlfn.SWITCH\": \"SWITCH\",\n\t\"_xlfn.T.DIST\": \"T.DIST\",\n\t\"_xlfn.T.DIST.2T\": \"T.DIST.2T\",\n\t\"_xlfn.T.DIST.RT\": \"T.DIST.RT\",\n\t\"_xlfn.T.INV\": \"T.INV\",\n\t\"_xlfn.T.INV.2T\": \"T.INV.2T\",\n\t\"_xlfn.T.TEST\": \"T.TEST\",\n\t\"_xlfn.TEXTJOIN\": \"TEXTJOIN\",\n\t\"_xlfn.UNICHAR\": \"UNICHAR\",\n\t\"_xlfn.UNICODE\": \"UNICODE\",\n\t\"_xlfn.VAR.P\": \"VAR.P\",\n\t\"_xlfn.VAR.S\": \"VAR.S\",\n\t\"_xlfn.WEBSERVICE\": \"WEBSERVICE\",\n\t\"_xlfn.WEIBULL.DIST\": \"WEIBULL.DIST\",\n\t\"_xlfn.WORKDAY.INTL\": \"WORKDAY.INTL\",\n\t\"_xlfn.XOR\": \"XOR\",\n\t\"_xlfn.Z.TEST\": \"Z.TEST\"\n};\n\n/* Part 3 TODO: actually parse formulae */\nfunction ods_to_csf_formula(f) {\n\tif(f.slice(0,3) == \"of:\") f = f.slice(3);\n\t/* 5.2 Basic Expressions */\n\tif(f.charCodeAt(0) == 61) {\n\t\tf = f.slice(1);\n\t\tif(f.charCodeAt(0) == 61) f = f.slice(1);\n\t}\n\tf = f.replace(/COM\\.MICROSOFT\\./g, \"\");\n\t/* Part 3 Section 5.8 References */\n\tf = f.replace(/\\[((?:\\.[A-Z]+[0-9]+)(?::\\.[A-Z]+[0-9]+)?)\\]/g, function($$, $1) { return $1.replace(/\\./g,\"\"); });\n\t/* TODO: something other than this */\n\tf = f.replace(/\\[.(#[A-Z]*[?!])\\]/g, \"$1\");\n\treturn f.replace(/[;~]/g,\",\").replace(/\\|/g,\";\");\n}\n\nfunction csf_to_ods_formula(f) {\n\tvar o = \"of:=\" + f.replace(crefregex, \"$1[.$2$3$4$5]\").replace(/\\]:\\[/g,\":\");\n\t/* TODO: something other than this */\n\treturn o.replace(/;/g, \"|\").replace(/,/g,\";\");\n}\n\nfunction ods_to_csf_3D(r) {\n\tvar a = r.split(\":\");\n\tvar s = a[0].split(\".\")[0];\n\treturn [s, a[0].split(\".\")[1] + (a.length > 1 ? (\":\" + (a[1].split(\".\")[1] || a[1].split(\".\")[0])) : \"\")];\n}\n\nfunction csf_to_ods_3D(r) {\n\treturn r.replace(/\\./,\"!\");\n}\n\nvar strs = {}; // shared strings\nvar _ssfopts = {}; // spreadsheet formatting options\n\nRELS.WS = [\n\t\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\",\n\t\"http://purl.oclc.org/ooxml/officeDocument/relationships/worksheet\"\n];\n\n/*global Map */\nvar browser_has_Map = typeof Map !== 'undefined';\n\nfunction get_sst_id(sst, str, rev) {\n\tvar i = 0, len = sst.length;\n\tif(rev) {\n\t\tif(browser_has_Map ? rev.has(str) : rev.hasOwnProperty(str)) {\n\t\t\tvar revarr = browser_has_Map ? rev.get(str) : rev[str];\n\t\t\tfor(; i < revarr.length; ++i) {\n\t\t\t\tif(sst[revarr[i]].t === str) { sst.Count ++; return revarr[i]; }\n\t\t\t}\n\t\t}\n\t} else for(; i < len; ++i) {\n\t\tif(sst[i].t === str) { sst.Count ++; return i; }\n\t}\n\tsst[len] = ({t:str}); sst.Count ++; sst.Unique ++;\n\tif(rev) {\n\t\tif(browser_has_Map) {\n\t\t\tif(!rev.has(str)) rev.set(str, []);\n\t\t\trev.get(str).push(len);\n\t\t} else {\n\t\t\tif(!rev.hasOwnProperty(str)) rev[str] = [];\n\t\t\trev[str].push(len);\n\t\t}\n\t}\n\treturn len;\n}\n\nfunction col_obj_w(C, col) {\n\tvar p = ({min:C+1,max:C+1});\n\t/* wch (chars), wpx (pixels) */\n\tvar wch = -1;\n\tif(col.MDW) MDW = col.MDW;\n\tif(col.width != null) p.customWidth = 1;\n\telse if(col.wpx != null) wch = px2char(col.wpx);\n\telse if(col.wch != null) wch = col.wch;\n\tif(wch > -1) { p.width = char2width(wch); p.customWidth = 1; }\n\telse if(col.width != null) p.width = col.width;\n\tif(col.hidden) p.hidden = true;\n\treturn p;\n}\n\nfunction default_margins(margins, mode) {\n\tif(!margins) return;\n\tvar defs = [0.7, 0.7, 0.75, 0.75, 0.3, 0.3];\n\tif(mode == 'xlml') defs = [1, 1, 1, 1, 0.5, 0.5];\n\tif(margins.left   == null) margins.left   = defs[0];\n\tif(margins.right  == null) margins.right  = defs[1];\n\tif(margins.top    == null) margins.top    = defs[2];\n\tif(margins.bottom == null) margins.bottom = defs[3];\n\tif(margins.header == null) margins.header = defs[4];\n\tif(margins.footer == null) margins.footer = defs[5];\n}\n\nfunction get_cell_style(styles, cell, opts) {\n\tvar z = opts.revssf[cell.z != null ? cell.z : \"General\"];\n\tvar i = 0x3c, len = styles.length;\n\tif(z == null && opts.ssf) {\n\t\tfor(; i < 0x188; ++i) if(opts.ssf[i] == null) {\n\t\t\tSSF.load(cell.z, i);\n\t\t\t// $FlowIgnore\n\t\t\topts.ssf[i] = cell.z;\n\t\t\topts.revssf[cell.z] = z = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i = 0; i != len; ++i) if(styles[i].numFmtId === z) return i;\n\tstyles[len] = {\n\t\tnumFmtId:z,\n\t\tfontId:0,\n\t\tfillId:0,\n\t\tborderId:0,\n\t\txfId:0,\n\t\tapplyNumberFormat:1\n\t};\n\treturn len;\n}\n\nfunction safe_format(p, fmtid, fillid, opts, themes, styles) {\n\tif(p.t === 'z') return;\n\tif(p.t === 'd' && typeof p.v === 'string') p.v = parseDate(p.v);\n\ttry {\n\t\tif(opts.cellNF) p.z = SSF._table[fmtid];\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(!opts || opts.cellText !== false) try {\n\t\tif(SSF._table[fmtid] == null) SSF.load(SSFImplicit[fmtid] || \"General\", fmtid);\n\t\tif(p.t === 'e') p.w = p.w || BErr[p.v];\n\t\telse if(fmtid === 0) {\n\t\t\tif(p.t === 'n') {\n\t\t\t\tif((p.v|0) === p.v) p.w = SSF._general_int(p.v);\n\t\t\t\telse p.w = SSF._general_num(p.v);\n\t\t\t}\n\t\t\telse if(p.t === 'd') {\n\t\t\t\tvar dd = datenum(p.v);\n\t\t\t\tif((dd|0) === dd) p.w = SSF._general_int(dd);\n\t\t\t\telse p.w = SSF._general_num(dd);\n\t\t\t}\n\t\t\telse if(p.v === undefined) return \"\";\n\t\t\telse p.w = SSF._general(p.v,_ssfopts);\n\t\t}\n\t\telse if(p.t === 'd') p.w = SSF.format(fmtid,datenum(p.v),_ssfopts);\n\t\telse p.w = SSF.format(fmtid,p.v,_ssfopts);\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(!opts.cellStyles) return;\n\tif(fillid != null) try {\n\t\tp.s = styles.Fills[fillid];\n\t\tif (p.s.fgColor && p.s.fgColor.theme && !p.s.fgColor.rgb) {\n\t\t\tp.s.fgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.fgColor.theme].rgb, p.s.fgColor.tint || 0);\n\t\t\tif(opts.WTF) p.s.fgColor.raw_rgb = themes.themeElements.clrScheme[p.s.fgColor.theme].rgb;\n\t\t}\n\t\tif (p.s.bgColor && p.s.bgColor.theme) {\n\t\t\tp.s.bgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.bgColor.theme].rgb, p.s.bgColor.tint || 0);\n\t\t\tif(opts.WTF) p.s.bgColor.raw_rgb = themes.themeElements.clrScheme[p.s.bgColor.theme].rgb;\n\t\t}\n\t} catch(e) { if(opts.WTF && styles.Fills) throw e; }\n}\n\nfunction check_ws(ws, sname, i) {\n\tif(ws && ws['!ref']) {\n\t\tvar range = safe_decode_range(ws['!ref']);\n\t\tif(range.e.c < range.s.c || range.e.r < range.s.r) throw new Error(\"Bad range (\" + i + \"): \" + ws['!ref']);\n\t}\n}\nfunction parse_ws_xml_dim(ws, s) {\n\tvar d = safe_decode_range(s);\n\tif(d.s.r<=d.e.r && d.s.c<=d.e.c && d.s.r>=0 && d.s.c>=0) ws[\"!ref\"] = encode_range(d);\n}\nvar mergecregex = /<(?:\\w:)?mergeCell ref=\"[A-Z0-9:]+\"\\s*[\\/]?>/g;\nvar sheetdataregex = /<(?:\\w+:)?sheetData>([\\s\\S]*)<\\/(?:\\w+:)?sheetData>/;\nvar hlinkregex = /<(?:\\w:)?hyperlink [^>]*>/mg;\nvar dimregex = /\"(\\w*:\\w*)\"/;\nvar colregex = /<(?:\\w:)?col\\b[^>]*[\\/]?>/g;\nvar afregex = /<(?:\\w:)?autoFilter[^>]*([\\/]|>([\\s\\S]*)<\\/(?:\\w:)?autoFilter)>/g;\nvar marginregex= /<(?:\\w:)?pageMargins[^>]*\\/>/g;\nvar sheetprregex = /<(?:\\w:)?sheetPr(?:[^>a-z][^>]*)?\\/>/;\nvar svsregex = /<(?:\\w:)?sheetViews[^>]*(?:[\\/]|>([\\s\\S]*)<\\/(?:\\w:)?sheetViews)>/;\n/* 18.3 Worksheets */\nfunction parse_ws_xml(data, opts, idx, rels, wb, themes, styles) {\n\tif(!data) return data;\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\n\t/* 18.3.1.99 worksheet CT_Worksheet */\n\tvar s = opts.dense ? ([]) : ({});\n\tvar refguess = ({s: {r:2000000, c:2000000}, e: {r:0, c:0} });\n\n\tvar data1 = \"\", data2 = \"\";\n\tvar mtch = data.match(sheetdataregex);\n\tif(mtch) {\n\t\tdata1 = data.slice(0, mtch.index);\n\t\tdata2 = data.slice(mtch.index + mtch[0].length);\n\t} else data1 = data2 = data;\n\n\t/* 18.3.1.82 sheetPr CT_SheetPr */\n\tvar sheetPr = data1.match(sheetprregex);\n\tif(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\n\n\t/* 18.3.1.35 dimension CT_SheetDimension */\n\t// $FlowIgnore\n\tvar ridx = (data1.match(/<(?:\\w*:)?dimension/)||{index:-1}).index;\n\tif(ridx > 0) {\n\t\tvar ref = data1.slice(ridx,ridx+50).match(dimregex);\n\t\tif(ref) parse_ws_xml_dim(s, ref[1]);\n\t}\n\n\t/* 18.3.1.88 sheetViews CT_SheetViews */\n\tvar svs = data1.match(svsregex);\n\tif(svs && svs[1]) parse_ws_xml_sheetviews(svs[1], wb);\n\n\t/* 18.3.1.17 cols CT_Cols */\n\tvar columns = [];\n\tif(opts.cellStyles) {\n\t\t/* 18.3.1.13 col CT_Col */\n\t\tvar cols = data1.match(colregex);\n\t\tif(cols) parse_ws_xml_cols(columns, cols);\n\t}\n\n\t/* 18.3.1.80 sheetData CT_SheetData ? */\n\tif(mtch) parse_ws_xml_data(mtch[1], s, opts, refguess, themes, styles);\n\n\t/* 18.3.1.2  autoFilter CT_AutoFilter */\n\tvar afilter = data2.match(afregex);\n\tif(afilter) s['!autofilter'] = parse_ws_xml_autofilter(afilter[0]);\n\n\t/* 18.3.1.55 mergeCells CT_MergeCells */\n\tvar merges = [];\n\tvar _merge = data2.match(mergecregex);\n\tif(_merge) for(ridx = 0; ridx != _merge.length; ++ridx)\n\t\tmerges[ridx] = safe_decode_range(_merge[ridx].slice(_merge[ridx].indexOf(\"\\\"\")+1));\n\n\t/* 18.3.1.48 hyperlinks CT_Hyperlinks */\n\tvar hlink = data2.match(hlinkregex);\n\tif(hlink) parse_ws_xml_hlinks(s, hlink, rels);\n\n\t/* 18.3.1.62 pageMargins CT_PageMargins */\n\tvar margins = data2.match(marginregex);\n\tif(margins) s['!margins'] = parse_ws_xml_margins(parsexmltag(margins[0]));\n\n\tif(!s[\"!ref\"] && refguess.e.c >= refguess.s.c && refguess.e.r >= refguess.s.r) s[\"!ref\"] = encode_range(refguess);\n\tif(opts.sheetRows > 0 && s[\"!ref\"]) {\n\t\tvar tmpref = safe_decode_range(s[\"!ref\"]);\n\t\tif(opts.sheetRows <= +tmpref.e.r) {\n\t\t\ttmpref.e.r = opts.sheetRows - 1;\n\t\t\tif(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n\t\t\tif(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n\t\t\tif(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n\t\t\tif(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n\t\t\ts[\"!fullref\"] = s[\"!ref\"];\n\t\t\ts[\"!ref\"] = encode_range(tmpref);\n\t\t}\n\t}\n\tif(columns.length > 0) s[\"!cols\"] = columns;\n\tif(merges.length > 0) s[\"!merges\"] = merges;\n\treturn s;\n}\n\nfunction write_ws_xml_merges(merges) {\n\tif(merges.length === 0) return \"\";\n\tvar o = '<mergeCells count=\"' + merges.length + '\">';\n\tfor(var i = 0; i != merges.length; ++i) o += '<mergeCell ref=\"' + encode_range(merges[i]) + '\"/>';\n\treturn o + '</mergeCells>';\n}\n\n/* 18.3.1.82-3 sheetPr CT_ChartsheetPr / CT_SheetPr */\nfunction parse_ws_xml_sheetpr(sheetPr, s, wb, idx) {\n\tvar data = parsexmltag(sheetPr);\n\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\tif(data.codeName) wb.Sheets[idx].CodeName = data.codeName;\n}\n\n/* 18.3.1.85 sheetProtection CT_SheetProtection */\nfunction write_ws_xml_protection(sp) {\n\t// algorithmName, hashValue, saltValue, spinCountpassword\n\tvar o = ({sheet:1});\n\tvar deffalse = [\"objects\", \"scenarios\", \"selectLockedCells\", \"selectUnlockedCells\"];\n\tvar deftrue = [\n\t\t\"formatColumns\", \"formatRows\", \"formatCells\",\n\t\t\"insertColumns\", \"insertRows\", \"insertHyperlinks\",\n\t\t\"deleteColumns\", \"deleteRows\",\n\t\t\"sort\", \"autoFilter\", \"pivotTables\"\n\t];\n\tdeffalse.forEach(function(n) { if(sp[n] != null && sp[n]) o[n] = \"1\"; });\n\tdeftrue.forEach(function(n) { if(sp[n] != null && !sp[n]) o[n] = \"0\"; });\n\t/* TODO: algorithm */\n\tif(sp.password) o.password = crypto_CreatePasswordVerifier_Method1(sp.password).toString(16).toUpperCase();\n\treturn writextag('sheetProtection', null, o);\n}\n\nfunction parse_ws_xml_hlinks(s, data, rels) {\n\tvar dense = Array.isArray(s);\n\tfor(var i = 0; i != data.length; ++i) {\n\t\tvar val = parsexmltag(utf8read(data[i]), true);\n\t\tif(!val.ref) return;\n\t\tvar rel = ((rels || {})['!id']||[])[val.id];\n\t\tif(rel) {\n\t\t\tval.Target = rel.Target;\n\t\t\tif(val.location) val.Target += \"#\"+val.location;\n\t\t} else {\n\t\t\tval.Target = \"#\" + val.location;\n\t\t\trel = {Target: val.Target, TargetMode: 'Internal'};\n\t\t}\n\t\tval.Rel = rel;\n\t\tif(val.tooltip) { val.Tooltip = val.tooltip; delete val.tooltip; }\n\t\tvar rng = safe_decode_range(val.ref);\n\t\tfor(var R=rng.s.r;R<=rng.e.r;++R) for(var C=rng.s.c;C<=rng.e.c;++C) {\n\t\t\tvar addr = encode_cell({c:C,r:R});\n\t\t\tif(dense) {\n\t\t\t\tif(!s[R]) s[R] = [];\n\t\t\t\tif(!s[R][C]) s[R][C] = {t:\"z\",v:undefined};\n\t\t\t\ts[R][C].l = val;\n\t\t\t} else {\n\t\t\t\tif(!s[addr]) s[addr] = {t:\"z\",v:undefined};\n\t\t\t\ts[addr].l = val;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction parse_ws_xml_margins(margin) {\n\tvar o = {};\n\t[\"left\", \"right\", \"top\", \"bottom\", \"header\", \"footer\"].forEach(function(k) {\n\t\tif(margin[k]) o[k] = parseFloat(margin[k]);\n\t});\n\treturn o;\n}\nfunction write_ws_xml_margins(margin) {\n\tdefault_margins(margin);\n\treturn writextag('pageMargins', null, margin);\n}\n\nfunction parse_ws_xml_cols(columns, cols) {\n\tvar seencol = false;\n\tfor(var coli = 0; coli != cols.length; ++coli) {\n\t\tvar coll = parsexmltag(cols[coli], true);\n\t\tif(coll.hidden) coll.hidden = parsexmlbool(coll.hidden);\n\t\tvar colm=parseInt(coll.min, 10)-1, colM=parseInt(coll.max,10)-1;\n\t\tdelete coll.min; delete coll.max; coll.width = +coll.width;\n\t\tif(!seencol && coll.width) { seencol = true; find_mdw_colw(coll.width); }\n\t\tprocess_col(coll);\n\t\twhile(colm <= colM) columns[colm++] = dup(coll);\n\t}\n}\n\nfunction write_ws_xml_cols(ws, cols) {\n\tvar o = [\"<cols>\"], col;\n\tfor(var i = 0; i != cols.length; ++i) {\n\t\tif(!(col = cols[i])) continue;\n\t\to[o.length] = (writextag('col', null, col_obj_w(i, col)));\n\t}\n\to[o.length] = \"</cols>\";\n\treturn o.join(\"\");\n}\n\nfunction parse_ws_xml_autofilter(data) {\n\tvar o = { ref: (data.match(/ref=\"([^\"]*)\"/)||[])[1]};\n\treturn o;\n}\nfunction write_ws_xml_autofilter(data, ws, wb, idx) {\n\tvar ref = typeof data.ref == \"string\" ? data.ref : encode_range(data.ref);\n\tif(!wb.Workbook) wb.Workbook = {};\n\tif(!wb.Workbook.Names) wb.Workbook.Names = [];\n\tvar names = wb.Workbook.Names;\n\tvar range = decode_range(ref);\n\tif(range.s.r == range.e.r) { range.e.r = decode_range(ws[\"!ref\"]).e.r; ref = encode_range(range); }\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar name = names[i];\n\t\tif(name.Name != '_xlnm._FilterDatabase') continue;\n\t\tif(name.Sheet != idx) continue;\n\t\tname.Ref = \"'\" + wb.SheetNames[idx] + \"'!\" + ref; break;\n\t}\n\tif(i == names.length) names.push({ Name: '_xlnm._FilterDatabase', Sheet: idx, Ref: \"'\" + wb.SheetNames[idx] + \"'!\" + ref  });\n\treturn writextag(\"autoFilter\", null, {ref:ref});\n}\n\n/* 18.3.1.88 sheetViews CT_SheetViews */\n/* 18.3.1.87 sheetView CT_SheetView */\nvar sviewregex = /<(?:\\w:)?sheetView(?:[^>a-z][^>]*)?\\/>/;\nfunction parse_ws_xml_sheetviews(data, wb) {\n\t(data.match(sviewregex)||[]).forEach(function(r) {\n\t\tvar tag = parsexmltag(r);\n\t\tif(parsexmlbool(tag.rightToLeft)) {\n\t\t\tif(!wb.Views) wb.Views = [{}];\n\t\t\tif(!wb.Views[0]) wb.Views[0] = {};\n\t\t\twb.Views[0].RTL = true;\n\t\t}\n\t});\n}\nfunction write_ws_xml_sheetviews(ws, opts, idx, wb) {\n\tvar sview = {workbookViewId:\"0\"};\n\t// $FlowIgnore\n\tif( (((wb||{}).Workbook||{}).Views||[])[0] ) sview.rightToLeft = wb.Workbook.Views[0].RTL ? \"1\" : \"0\";\n\treturn writextag(\"sheetViews\", writextag(\"sheetView\", null, sview), {});\n}\n\nfunction write_ws_xml_cell(cell, ref, ws, opts) {\n\tif(cell.v === undefined && cell.f === undefined || cell.t === 'z') return \"\";\n\tvar vv = \"\";\n\tvar oldt = cell.t, oldv = cell.v;\n\tswitch(cell.t) {\n\t\tcase 'b': vv = cell.v ? \"1\" : \"0\"; break;\n\t\tcase 'n': vv = ''+cell.v; break;\n\t\tcase 'e': vv = BErr[cell.v]; break;\n\t\tcase 'd':\n\t\t\tif(opts.cellDates) vv = parseDate(cell.v, -1).toISOString();\n\t\t\telse {\n\t\t\t\tcell = dup(cell);\n\t\t\t\tcell.t = 'n';\n\t\t\t\tvv = ''+(cell.v = datenum(parseDate(cell.v)));\n\t\t\t}\n\t\t\tif(typeof cell.z === 'undefined') cell.z = SSF._table[14];\n\t\t\tbreak;\n\t\tdefault: vv = cell.v; break;\n\t}\n\tvar v = writetag('v', escapexml(vv)), o = ({r:ref});\n\t/* TODO: cell style */\n\tvar os = get_cell_style(opts.cellXfs, cell, opts);\n\tif(os !== 0) o.s = os;\n\tswitch(cell.t) {\n\t\tcase 'n': break;\n\t\tcase 'd': o.t = \"d\"; break;\n\t\tcase 'b': o.t = \"b\"; break;\n\t\tcase 'e': o.t = \"e\"; break;\n\t\tdefault: if(cell.v == null) { delete cell.t; break; }\n\t\t\tif(opts.bookSST) {\n\t\t\t\tv = writetag('v', ''+get_sst_id(opts.Strings, cell.v, opts.revStrings));\n\t\t\t\to.t = \"s\"; break;\n\t\t\t}\n\t\t\to.t = \"str\"; break;\n\t}\n\tif(cell.t != oldt) { cell.t = oldt; cell.v = oldv; }\n\tif(cell.f) {\n\t\tvar ff = cell.F && cell.F.slice(0, ref.length) == ref ? {t:\"array\", ref:cell.F} : null;\n\t\tv = writextag('f', escapexml(cell.f), ff) + (cell.v != null ? v : \"\");\n\t}\n\tif(cell.l) ws['!links'].push([ref, cell.l]);\n\tif(cell.c) ws['!comments'].push([ref, cell.c]);\n\treturn writextag('c', v, o);\n}\n\nvar parse_ws_xml_data = (function() {\n\tvar cellregex = /<(?:\\w+:)?c[ >]/, rowregex = /<\\/(?:\\w+:)?row>/;\n\tvar rregex = /r=[\"']([^\"']*)[\"']/, isregex = /<(?:\\w+:)?is>([\\S\\s]*?)<\\/(?:\\w+:)?is>/;\n\tvar refregex = /ref=[\"']([^\"']*)[\"']/;\n\tvar match_v = matchtag(\"v\"), match_f = matchtag(\"f\");\n\nreturn function parse_ws_xml_data(sdata, s, opts, guess, themes, styles) {\n\tvar ri = 0, x = \"\", cells = [], cref = [], idx=0, i=0, cc=0, d=\"\", p;\n\tvar tag, tagr = 0, tagc = 0;\n\tvar sstr, ftag;\n\tvar fmtid = 0, fillid = 0;\n\tvar do_format = Array.isArray(styles.CellXf), cf;\n\tvar arrayf = [];\n\tvar sharedf = [];\n\tvar dense = Array.isArray(s);\n\tvar rows = [], rowobj = {}, rowrite = false;\n\tfor(var marr = sdata.split(rowregex), mt = 0, marrlen = marr.length; mt != marrlen; ++mt) {\n\t\tx = marr[mt].trim();\n\t\tvar xlen = x.length;\n\t\tif(xlen === 0) continue;\n\n\t\t/* 18.3.1.73 row CT_Row */\n\t\tfor(ri = 0; ri < xlen; ++ri) if(x.charCodeAt(ri) === 62) break; ++ri;\n\t\ttag = parsexmltag(x.slice(0,ri), true);\n\t\ttagr = tag.r != null ? parseInt(tag.r, 10) : tagr+1; tagc = -1;\n\t\tif(opts.sheetRows && opts.sheetRows < tagr) continue;\n\t\tif(guess.s.r > tagr - 1) guess.s.r = tagr - 1;\n\t\tif(guess.e.r < tagr - 1) guess.e.r = tagr - 1;\n\n\t\tif(opts && opts.cellStyles) {\n\t\t\trowobj = {}; rowrite = false;\n\t\t\tif(tag.ht) { rowrite = true; rowobj.hpt = parseFloat(tag.ht); rowobj.hpx = pt2px(rowobj.hpt); }\n\t\t\tif(tag.hidden == \"1\") { rowrite = true; rowobj.hidden = true; }\n\t\t\tif(tag.outlineLevel != null) { rowrite = true; rowobj.level = +tag.outlineLevel; }\n\t\t\tif(rowrite) rows[tagr-1] = rowobj;\n\t\t}\n\n\t\t/* 18.3.1.4 c CT_Cell */\n\t\tcells = x.slice(ri).split(cellregex);\n\t\tfor(ri = 0; ri != cells.length; ++ri) {\n\t\t\tx = cells[ri].trim();\n\t\t\tif(x.length === 0) continue;\n\t\t\tcref = x.match(rregex); idx = ri; i=0; cc=0;\n\t\t\tx = \"<c \" + (x.slice(0,1)==\"<\"?\">\":\"\") + x;\n\t\t\tif(cref != null && cref.length === 2) {\n\t\t\t\tidx = 0; d=cref[1];\n\t\t\t\tfor(i=0; i != d.length; ++i) {\n\t\t\t\t\tif((cc=d.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\t\t\t\tidx = 26*idx + cc;\n\t\t\t\t}\n\t\t\t\t--idx;\n\t\t\t\ttagc = idx;\n\t\t\t} else ++tagc;\n\t\t\tfor(i = 0; i != x.length; ++i) if(x.charCodeAt(i) === 62) break; ++i;\n\t\t\ttag = parsexmltag(x.slice(0,i), true);\n\t\t\tif(!tag.r) tag.r = encode_cell({r:tagr-1, c:tagc});\n\t\t\td = x.slice(i);\n\t\t\tp = ({t:\"\"});\n\n\t\t\tif((cref=d.match(match_v))!= null && cref[1] !== '') p.v=unescapexml(cref[1]);\n\t\t\tif(opts.cellFormula) {\n\t\t\t\tif((cref=d.match(match_f))!= null && cref[1] !== '') {\n\t\t\t\t\t/* TODO: match against XLSXFutureFunctions */\n\t\t\t\t\tp.f=_xlfn(unescapexml(utf8read(cref[1])));\n\t\t\t\t\tif(cref[0].indexOf('t=\"array\"') > -1) {\n\t\t\t\t\t\tp.F = (d.match(refregex)||[])[1];\n\t\t\t\t\t\tif(p.F.indexOf(\":\") > -1) arrayf.push([safe_decode_range(p.F), p.F]);\n\t\t\t\t\t} else if(cref[0].indexOf('t=\"shared\"') > -1) {\n\t\t\t\t\t\t// TODO: parse formula\n\t\t\t\t\t\tftag = parsexmltag(cref[0]);\n\t\t\t\t\t\tsharedf[parseInt(ftag.si, 10)] = [ftag, _xlfn(unescapexml(utf8read(cref[1])))];\n\t\t\t\t\t}\n\t\t\t\t} else if((cref=d.match(/<f[^>]*\\/>/))) {\n\t\t\t\t\tftag = parsexmltag(cref[0]);\n\t\t\t\t\tif(sharedf[ftag.si]) p.f = shift_formula_xlsx(sharedf[ftag.si][1], sharedf[ftag.si][0].ref, tag.r);\n\t\t\t\t}\n\t\t\t\t/* TODO: factor out contains logic */\n\t\t\t\tvar _tag = decode_cell(tag.r);\n\t\t\t\tfor(i = 0; i < arrayf.length; ++i)\n\t\t\t\t\tif(_tag.r >= arrayf[i][0].s.r && _tag.r <= arrayf[i][0].e.r)\n\t\t\t\t\t\tif(_tag.c >= arrayf[i][0].s.c && _tag.c <= arrayf[i][0].e.c)\n\t\t\t\t\t\t\tp.F = arrayf[i][1];\n\t\t\t}\n\n\t\t\tif(tag.t == null && p.v === undefined) {\n\t\t\t\tif(p.f || p.F) {\n\t\t\t\t\tp.v = 0; p.t = \"n\";\n\t\t\t\t} else if(!opts.sheetStubs) continue;\n\t\t\t\telse p.t = \"z\";\n\t\t\t}\n\t\t\telse p.t = tag.t || \"n\";\n\t\t\tif(guess.s.c > tagc) guess.s.c = tagc;\n\t\t\tif(guess.e.c < tagc) guess.e.c = tagc;\n\t\t\t/* 18.18.11 t ST_CellType */\n\t\t\tswitch(p.t) {\n\t\t\t\tcase 'n':\n\t\t\t\t\tif(p.v == \"\" || p.v == null) {\n\t\t\t\t\t\tif(!opts.sheetStubs) continue;\n\t\t\t\t\t\tp.t = 'z';\n\t\t\t\t\t} else p.v = parseFloat(p.v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 's':\n\t\t\t\t\tif(typeof p.v == 'undefined') {\n\t\t\t\t\t\tif(!opts.sheetStubs) continue;\n\t\t\t\t\t\tp.t = 'z';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsstr = strs[parseInt(p.v, 10)];\n\t\t\t\t\t\tp.v = sstr.t;\n\t\t\t\t\t\tp.r = sstr.r;\n\t\t\t\t\t\tif(opts.cellHTML) p.h = sstr.h;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'str':\n\t\t\t\t\tp.t = \"s\";\n\t\t\t\t\tp.v = (p.v!=null) ? utf8read(p.v) : '';\n\t\t\t\t\tif(opts.cellHTML) p.h = escapehtml(p.v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'inlineStr':\n\t\t\t\t\tcref = d.match(isregex);\n\t\t\t\t\tp.t = 's';\n\t\t\t\t\tif(cref != null && (sstr = parse_si(cref[1]))) p.v = sstr.t; else p.v = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'b': p.v = parsexmlbool(p.v); break;\n\t\t\t\tcase 'd':\n\t\t\t\t\tif(opts.cellDates) p.v = parseDate(p.v, 1);\n\t\t\t\t\telse { p.v = datenum(parseDate(p.v, 1)); p.t = 'n'; }\n\t\t\t\t\tbreak;\n\t\t\t\t/* error string in .w, number in .v */\n\t\t\t\tcase 'e':\n\t\t\t\t\tif(!opts || opts.cellText !== false) p.w = p.v;\n\t\t\t\t\tp.v = RBErr[p.v]; break;\n\t\t\t}\n\t\t\t/* formatting */\n\t\t\tfmtid = fillid = 0;\n\t\t\tif(do_format && tag.s !== undefined) {\n\t\t\t\tcf = styles.CellXf[tag.s];\n\t\t\t\tif(cf != null) {\n\t\t\t\t\tif(cf.numFmtId != null) fmtid = cf.numFmtId;\n\t\t\t\t\tif(opts.cellStyles) {\n\t\t\t\t\t\tif(cf.fillId != null) fillid = cf.fillId;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsafe_format(p, fmtid, fillid, opts, themes, styles);\n\t\t\tif(opts.cellDates && do_format && p.t == 'n' && SSF.is_date(SSF._table[fmtid])) { p.t = 'd'; p.v = numdate(p.v); }\n\t\t\tif(dense) {\n\t\t\t\tvar _r = decode_cell(tag.r);\n\t\t\t\tif(!s[_r.r]) s[_r.r] = [];\n\t\t\t\ts[_r.r][_r.c] = p;\n\t\t\t} else s[tag.r] = p;\n\t\t}\n\t}\n\tif(rows.length > 0) s['!rows'] = rows;\n}; })();\n\nfunction write_ws_xml_data(ws, opts, idx, wb) {\n\tvar o = [], r = [], range = safe_decode_range(ws['!ref']), cell=\"\", ref, rr = \"\", cols = [], R=0, C=0, rows = ws['!rows'];\n\tvar dense = Array.isArray(ws);\n\tvar params = ({r:rr}), row, height = -1;\n\tfor(C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n\tfor(R = range.s.r; R <= range.e.r; ++R) {\n\t\tr = [];\n\t\trr = encode_row(R);\n\t\tfor(C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tref = cols[C] + rr;\n\t\t\tvar _cell = dense ? (ws[R]||[])[C]: ws[ref];\n\t\t\tif(_cell === undefined) continue;\n\t\t\tif((cell = write_ws_xml_cell(_cell, ref, ws, opts, idx, wb)) != null) r.push(cell);\n\t\t}\n\t\tif(r.length > 0 || (rows && rows[R])) {\n\t\t\tparams = ({r:rr});\n\t\t\tif(rows && rows[R]) {\n\t\t\t\trow = rows[R];\n\t\t\t\tif(row.hidden) params.hidden = 1;\n\t\t\t\theight = -1;\n\t\t\t\tif(row.hpx) height = px2pt(row.hpx);\n\t\t\t\telse if(row.hpt) height = row.hpt;\n\t\t\t\tif(height > -1) { params.ht = height; params.customHeight = 1; }\n\t\t\t\tif(row.level) { params.outlineLevel = row.level; }\n\t\t\t}\n\t\t\to[o.length] = (writextag('row', r.join(\"\"), params));\n\t\t}\n\t}\n\tif(rows) for(; R < rows.length; ++R) {\n\t\tif(rows && rows[R]) {\n\t\t\tparams = ({r:R+1});\n\t\t\trow = rows[R];\n\t\t\tif(row.hidden) params.hidden = 1;\n\t\t\theight = -1;\n\t\t\tif (row.hpx) height = px2pt(row.hpx);\n\t\t\telse if (row.hpt) height = row.hpt;\n\t\t\tif (height > -1) { params.ht = height; params.customHeight = 1; }\n\t\t\tif (row.level) { params.outlineLevel = row.level; }\n\t\t\to[o.length] = (writextag('row', \"\", params));\n\t\t}\n\t}\n\treturn o.join(\"\");\n}\n\nvar WS_XML_ROOT = writextag('worksheet', null, {\n\t'xmlns': XMLNS.main[0],\n\t'xmlns:r': XMLNS.r\n});\n\nfunction write_ws_xml(idx, opts, wb, rels) {\n\tvar o = [XML_HEADER, WS_XML_ROOT];\n\tvar s = wb.SheetNames[idx], sidx = 0, rdata = \"\";\n\tvar ws = wb.Sheets[s];\n\tif(ws == null) ws = {};\n\tvar ref = ws['!ref'] || 'A1';\n\tvar range = safe_decode_range(ref);\n\tif(range.e.c > 0x3FFF || range.e.r > 0xFFFFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + ref + \" exceeds format limit A1:XFD1048576\");\n\t\trange.e.c = Math.min(range.e.c, 0x3FFF);\n\t\trange.e.r = Math.min(range.e.c, 0xFFFFF);\n\t\tref = encode_range(range);\n\t}\n\tif(!rels) rels = {};\n\tws['!comments'] = [];\n\tws['!drawing'] = [];\n\n\tif(opts.bookType !== 'xlsx' && wb.vbaraw) {\n\t\tvar cname = wb.SheetNames[idx];\n\t\ttry { if(wb.Workbook) cname = wb.Workbook.Sheets[idx].CodeName || cname; } catch(e) {}\n\t\to[o.length] = (writextag('sheetPr', null, {'codeName': escapexml(cname)}));\n\t}\n\n\to[o.length] = (writextag('dimension', null, {'ref': ref}));\n\n\to[o.length] = write_ws_xml_sheetviews(ws, opts, idx, wb);\n\n\t/* TODO: store in WB, process styles */\n\tif(opts.sheetFormat) o[o.length] = (writextag('sheetFormatPr', null, {\n\t\tdefaultRowHeight:opts.sheetFormat.defaultRowHeight||'16',\n\t\tbaseColWidth:opts.sheetFormat.baseColWidth||'10',\n\t\toutlineLevelRow:opts.sheetFormat.outlineLevelRow||'7'\n\t}));\n\n\tif(ws['!cols'] != null && ws['!cols'].length > 0) o[o.length] = (write_ws_xml_cols(ws, ws['!cols']));\n\n\to[sidx = o.length] = '<sheetData/>';\n\tws['!links'] = [];\n\tif(ws['!ref'] != null) {\n\t\trdata = write_ws_xml_data(ws, opts, idx, wb, rels);\n\t\tif(rdata.length > 0) o[o.length] = (rdata);\n\t}\n\tif(o.length>sidx+1) { o[o.length] = ('</sheetData>'); o[sidx]=o[sidx].replace(\"/>\",\">\"); }\n\n\t/* sheetCalcPr */\n\n\tif(ws['!protect'] != null) o[o.length] = write_ws_xml_protection(ws['!protect']);\n\n\t/* protectedRanges */\n\t/* scenarios */\n\n\tif(ws['!autofilter'] != null) o[o.length] = write_ws_xml_autofilter(ws['!autofilter'], ws, wb, idx);\n\n\t/* sortState */\n\t/* dataConsolidate */\n\t/* customSheetViews */\n\n\tif(ws['!merges'] != null && ws['!merges'].length > 0) o[o.length] = (write_ws_xml_merges(ws['!merges']));\n\n\t/* phoneticPr */\n\t/* conditionalFormatting */\n\t/* dataValidations */\n\n\tvar relc = -1, rel, rId = -1;\n\tif(ws['!links'].length > 0) {\n\t\to[o.length] = \"<hyperlinks>\";\n\t\tws['!links'].forEach(function(l) {\n\t\t\tif(!l[1].Target) return;\n\t\t\trel = ({\"ref\":l[0]});\n\t\t\tif(l[1].Target.charAt(0) != \"#\") {\n\t\t\t\trId = add_rels(rels, -1, escapexml(l[1].Target).replace(/#.*$/, \"\"), RELS.HLINK);\n\t\t\t\trel[\"r:id\"] = \"rId\"+rId;\n\t\t\t}\n\t\t\tif((relc = l[1].Target.indexOf(\"#\")) > -1) rel.location = escapexml(l[1].Target.slice(relc+1));\n\t\t\tif(l[1].Tooltip) rel.tooltip = escapexml(l[1].Tooltip);\n\t\t\to[o.length] = writextag(\"hyperlink\",null,rel);\n\t\t});\n\t\to[o.length] = \"</hyperlinks>\";\n\t}\n\tdelete ws['!links'];\n\n\t/* printOptions */\n\tif (ws['!margins'] != null) o[o.length] =  write_ws_xml_margins(ws['!margins']);\n\t/* pageSetup */\n\n\t//var hfidx = o.length;\n\to[o.length] = \"\";\n\n\t/* rowBreaks */\n\t/* colBreaks */\n\t/* customProperties */\n\t/* cellWatches */\n\n\tif(!opts || opts.ignoreEC || (opts.ignoreEC == (void 0))) o[o.length] = writetag(\"ignoredErrors\", writextag(\"ignoredError\", null, {numberStoredAsText:1, sqref:ref}));\n\n\t/* smartTags */\n\n\tif(ws['!drawing'].length > 0) {\n\t\trId = add_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\n\t\to[o.length] = writextag(\"drawing\", null, {\"r:id\":\"rId\" + rId});\n\t}\n\telse delete ws['!drawing'];\n\n\tif(ws['!comments'].length > 0) {\n\t\trId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx+1) + \".vml\", RELS.VML);\n\t\to[o.length] = writextag(\"legacyDrawing\", null, {\"r:id\":\"rId\" + rId});\n\t\tws['!legacy'] = rId;\n\t}\n\n\t/* drawingHF */\n\t/* picture */\n\t/* oleObjects */\n\t/* controls */\n\t/* webPublishItems */\n\t/* tableParts */\n\t/* extList */\n\n\tif(o.length>2) { o[o.length] = ('</worksheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSB] 2.4.726 BrtRowHdr */\nfunction parse_BrtRowHdr(data, length) {\n\tvar z = ({});\n\tvar tgt = data.l + length;\n\tz.r = data.read_shift(4);\n\tdata.l += 4; // TODO: ixfe\n\tvar miyRw = data.read_shift(2);\n\tdata.l += 1; // TODO: top/bot padding\n\tvar flags = data.read_shift(1);\n\tdata.l = tgt;\n\tif(flags & 0x07) z.level = flags & 0x07;\n\tif(flags & 0x10) z.hidden = true;\n\tif(flags & 0x20) z.hpt = miyRw / 20;\n\treturn z;\n}\nfunction write_BrtRowHdr(R, range, ws) {\n\tvar o = new_buf(17+8*16);\n\tvar row = (ws['!rows']||[])[R]||{};\n\to.write_shift(4, R);\n\n\to.write_shift(4, 0); /* TODO: ixfe */\n\n\tvar miyRw = 0x0140;\n\tif(row.hpx) miyRw = px2pt(row.hpx) * 20;\n\telse if(row.hpt) miyRw = row.hpt * 20;\n\to.write_shift(2, miyRw);\n\n\to.write_shift(1, 0); /* top/bot padding */\n\n\tvar flags = 0x0;\n\tif(row.level) flags |= row.level;\n\tif(row.hidden) flags |= 0x10;\n\tif(row.hpx || row.hpt) flags |= 0x20;\n\to.write_shift(1, flags);\n\n\to.write_shift(1, 0); /* phonetic guide */\n\n\t/* [MS-XLSB] 2.5.8 BrtColSpan explains the mechanism */\n\tvar ncolspan = 0, lcs = o.l;\n\to.l += 4;\n\n\tvar caddr = {r:R, c:0};\n\tfor(var i = 0; i < 16; ++i) {\n\t\tif((range.s.c > ((i+1) << 10)) || (range.e.c < (i << 10))) continue;\n\t\tvar first = -1, last = -1;\n\t\tfor(var j = (i<<10); j < ((i+1)<<10); ++j) {\n\t\t\tcaddr.c = j;\n\t\t\tvar cell = Array.isArray(ws) ? (ws[caddr.r]||[])[caddr.c] : ws[encode_cell(caddr)];\n\t\t\tif(cell) { if(first < 0) first = j; last = j; }\n\t\t}\n\t\tif(first < 0) continue;\n\t\t++ncolspan;\n\t\to.write_shift(4, first);\n\t\to.write_shift(4, last);\n\t}\n\n\tvar l = o.l;\n\to.l = lcs;\n\to.write_shift(4, ncolspan);\n\to.l = l;\n\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction write_row_header(ba, ws, range, R) {\n\tvar o = write_BrtRowHdr(R, range, ws);\n\tif((o.length > 17) || (ws['!rows']||[])[R]) write_record(ba, 'BrtRowHdr', o);\n}\n\n/* [MS-XLSB] 2.4.820 BrtWsDim */\nvar parse_BrtWsDim = parse_UncheckedRfX;\nvar write_BrtWsDim = write_UncheckedRfX;\n\n/* [MS-XLSB] 2.4.821 BrtWsFmtInfo */\nfunction parse_BrtWsFmtInfo() {\n}\n//function write_BrtWsFmtInfo(ws, o) { }\n\n/* [MS-XLSB] 2.4.823 BrtWsProp */\nfunction parse_BrtWsProp(data, length) {\n\tvar z = {};\n\t/* TODO: pull flags */\n\tdata.l += 19;\n\tz.name = parse_XLSBCodeName(data, length - 19);\n\treturn z;\n}\nfunction write_BrtWsProp(str, o) {\n\tif(o == null) o = new_buf(84+4*str.length);\n\tfor(var i = 0; i < 3; ++i) o.write_shift(1,0);\n\twrite_BrtColor({auto:1}, o);\n\to.write_shift(-4,-1);\n\to.write_shift(-4,-1);\n\twrite_XLSBCodeName(str, o);\n\treturn o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.306 BrtCellBlank */\nfunction parse_BrtCellBlank(data) {\n\tvar cell = parse_XLSBCell(data);\n\treturn [cell];\n}\nfunction write_BrtCellBlank(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\treturn write_XLSBCell(ncell, o);\n}\n\n\n/* [MS-XLSB] 2.4.307 BrtCellBool */\nfunction parse_BrtCellBool(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar fBool = data.read_shift(1);\n\treturn [cell, fBool, 'b'];\n}\nfunction write_BrtCellBool(cell, ncell, o) {\n\tif(o == null) o = new_buf(9);\n\twrite_XLSBCell(ncell, o);\n\to.write_shift(1, cell.v ? 1 : 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.308 BrtCellError */\nfunction parse_BrtCellError(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar bError = data.read_shift(1);\n\treturn [cell, bError, 'e'];\n}\n\n/* [MS-XLSB] 2.4.311 BrtCellIsst */\nfunction parse_BrtCellIsst(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar isst = data.read_shift(4);\n\treturn [cell, isst, 's'];\n}\nfunction write_BrtCellIsst(cell, ncell, o) {\n\tif(o == null) o = new_buf(12);\n\twrite_XLSBCell(ncell, o);\n\to.write_shift(4, ncell.v);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.313 BrtCellReal */\nfunction parse_BrtCellReal(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_Xnum(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtCellReal(cell, ncell, o) {\n\tif(o == null) o = new_buf(16);\n\twrite_XLSBCell(ncell, o);\n\twrite_Xnum(cell.v, o);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.314 BrtCellRk */\nfunction parse_BrtCellRk(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_RkNumber(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtCellRk(cell, ncell, o) {\n\tif(o == null) o = new_buf(12);\n\twrite_XLSBCell(ncell, o);\n\twrite_RkNumber(cell.v, o);\n\treturn o;\n}\n\n\n/* [MS-XLSB] 2.4.317 BrtCellSt */\nfunction parse_BrtCellSt(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_XLWideString(data);\n\treturn [cell, value, 'str'];\n}\nfunction write_BrtCellSt(cell, ncell, o) {\n\tif(o == null) o = new_buf(12 + 4 * cell.v.length);\n\twrite_XLSBCell(ncell, o);\n\twrite_XLWideString(cell.v, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.653 BrtFmlaBool */\nfunction parse_BrtFmlaBool(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = data.read_shift(1);\n\tvar o = [cell, value, 'b'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.654 BrtFmlaError */\nfunction parse_BrtFmlaError(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = data.read_shift(1);\n\tvar o = [cell, value, 'e'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.655 BrtFmlaNum */\nfunction parse_BrtFmlaNum(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = parse_Xnum(data);\n\tvar o = [cell, value, 'n'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.656 BrtFmlaString */\nfunction parse_BrtFmlaString(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = parse_XLWideString(data);\n\tvar o = [cell, value, 'str'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.682 BrtMergeCell */\nvar parse_BrtMergeCell = parse_UncheckedRfX;\nvar write_BrtMergeCell = write_UncheckedRfX;\n/* [MS-XLSB] 2.4.107 BrtBeginMergeCells */\nfunction write_BrtBeginMergeCells(cnt, o) {\n\tif(o == null) o = new_buf(4);\n\to.write_shift(4, cnt);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.662 BrtHLink */\nfunction parse_BrtHLink(data, length) {\n\tvar end = data.l + length;\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tvar relId = parse_XLNullableWideString(data);\n\tvar loc = parse_XLWideString(data);\n\tvar tooltip = parse_XLWideString(data);\n\tvar display = parse_XLWideString(data);\n\tdata.l = end;\n\tvar o = ({rfx:rfx, relId:relId, loc:loc, display:display});\n\tif(tooltip) o.Tooltip = tooltip;\n\treturn o;\n}\nfunction write_BrtHLink(l, rId) {\n\tvar o = new_buf(50+4*(l[1].Target.length + (l[1].Tooltip || \"\").length));\n\twrite_UncheckedRfX({s:decode_cell(l[0]), e:decode_cell(l[0])}, o);\n\twrite_RelID(\"rId\" + rId, o);\n\tvar locidx = l[1].Target.indexOf(\"#\");\n\tvar loc = locidx == -1 ? \"\" : l[1].Target.slice(locidx+1);\n\twrite_XLWideString(loc || \"\", o);\n\twrite_XLWideString(l[1].Tooltip || \"\", o);\n\twrite_XLWideString(\"\", o);\n\treturn o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.6 BrtArrFmla */\nfunction parse_BrtArrFmla(data, length, opts) {\n\tvar end = data.l + length;\n\tvar rfx = parse_RfX(data, 16);\n\tvar fAlwaysCalc = data.read_shift(1);\n\tvar o = [rfx]; o[2] = fAlwaysCalc;\n\tif(opts.cellFormula) {\n\t\tvar formula = parse_XLSBArrayParsedFormula(data, end - data.l, opts);\n\t\to[1] = formula;\n\t} else data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.750 BrtShrFmla */\nfunction parse_BrtShrFmla(data, length, opts) {\n\tvar end = data.l + length;\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tvar o = [rfx];\n\tif(opts.cellFormula) {\n\t\tvar formula = parse_XLSBSharedParsedFormula(data, end - data.l, opts);\n\t\to[1] = formula;\n\t\tdata.l = end;\n\t} else data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.323 BrtColInfo */\n/* TODO: once XLS ColInfo is set, combine the functions */\nfunction write_BrtColInfo(C, col, o) {\n\tif(o == null) o = new_buf(18);\n\tvar p = col_obj_w(C, col);\n\to.write_shift(-4, C);\n\to.write_shift(-4, C);\n\to.write_shift(4, (p.width || 10) * 256);\n\to.write_shift(4, 0/*ixfe*/); // style\n\tvar flags = 0;\n\tif(col.hidden) flags |= 0x01;\n\tif(typeof p.width == 'number') flags |= 0x02;\n\to.write_shift(1, flags); // bit flag\n\to.write_shift(1, 0); // bit flag\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.678 BrtMargins */\nvar BrtMarginKeys = [\"left\",\"right\",\"top\",\"bottom\",\"header\",\"footer\"];\nfunction parse_BrtMargins(data) {\n\tvar margins = ({});\n\tBrtMarginKeys.forEach(function(k) { margins[k] = parse_Xnum(data, 8); });\n\treturn margins;\n}\nfunction write_BrtMargins(margins, o) {\n\tif(o == null) o = new_buf(6*8);\n\tdefault_margins(margins);\n\tBrtMarginKeys.forEach(function(k) { write_Xnum((margins)[k], o); });\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.299 BrtBeginWsView */\nfunction parse_BrtBeginWsView(data) {\n\tvar f = data.read_shift(2);\n\tdata.l += 28;\n\treturn { RTL: f & 0x20 };\n}\nfunction write_BrtBeginWsView(ws, Workbook, o) {\n\tif(o == null) o = new_buf(30);\n\tvar f = 0x39c;\n\tif((((Workbook||{}).Views||[])[0]||{}).RTL) f |= 0x20;\n\to.write_shift(2, f); // bit flag\n\to.write_shift(4, 0);\n\to.write_shift(4, 0); // view first row\n\to.write_shift(4, 0); // view first col\n\to.write_shift(1, 0); // gridline color ICV\n\to.write_shift(1, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 100); // zoom scale\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(4, 0); // workbook view id\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.309 BrtCellIgnoreEC */\nfunction write_BrtCellIgnoreEC(ref) {\n\tvar o = new_buf(24);\n\to.write_shift(4, 4);\n\to.write_shift(4, 1);\n\twrite_UncheckedRfX(ref, o);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.748 BrtSheetProtection */\nfunction write_BrtSheetProtection(sp, o) {\n\tif(o == null) o = new_buf(16*4+2);\n\to.write_shift(2, sp.password ? crypto_CreatePasswordVerifier_Method1(sp.password) : 0);\n\to.write_shift(4, 1); // this record should not be written if no protection\n\t[\n\t\t[\"objects\",             false], // fObjects\n\t\t[\"scenarios\",           false], // fScenarios\n\t\t[\"formatCells\",          true], // fFormatCells\n\t\t[\"formatColumns\",        true], // fFormatColumns\n\t\t[\"formatRows\",           true], // fFormatRows\n\t\t[\"insertColumns\",        true], // fInsertColumns\n\t\t[\"insertRows\",           true], // fInsertRows\n\t\t[\"insertHyperlinks\",     true], // fInsertHyperlinks\n\t\t[\"deleteColumns\",        true], // fDeleteColumns\n\t\t[\"deleteRows\",           true], // fDeleteRows\n\t\t[\"selectLockedCells\",   false], // fSelLockedCells\n\t\t[\"sort\",                 true], // fSort\n\t\t[\"autoFilter\",           true], // fAutoFilter\n\t\t[\"pivotTables\",          true], // fPivotTables\n\t\t[\"selectUnlockedCells\", false]  // fSelUnlockedCells\n\t].forEach(function(n) {\nif(n[1]) o.write_shift(4, sp[n[0]] != null && !sp[n[0]] ? 1 : 0);\n\t\telse      o.write_shift(4, sp[n[0]] != null && sp[n[0]] ? 0 : 1);\n\t});\n\treturn o;\n}\n\n/* [MS-XLSB] 2.1.7.61 Worksheet */\nfunction parse_ws_bin(data, _opts, idx, rels, wb, themes, styles) {\n\tif(!data) return data;\n\tvar opts = _opts || {};\n\tif(!rels) rels = {'!id':{}};\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\tvar s = (opts.dense ? [] : {});\n\n\tvar ref;\n\tvar refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\n\tvar pass = false, end = false;\n\tvar row, p, cf, R, C, addr, sstr, rr, cell;\n\tvar merges = [];\n\topts.biff = 12;\n\topts['!row'] = 0;\n\n\tvar ai = 0, af = false;\n\n\tvar arrayf = [];\n\tvar sharedf = {};\n\tvar supbooks = opts.supbooks || ([[]]);\n\tsupbooks.sharedf = sharedf;\n\tsupbooks.arrayf = arrayf;\n\tsupbooks.SheetNames = wb.SheetNames || wb.Sheets.map(function(x) { return x.name; });\n\tif(!opts.supbooks) {\n\t\topts.supbooks = supbooks;\n\t\tif(wb.Names) for(var i = 0; i < wb.Names.length; ++i) supbooks[0][i+1] = wb.Names[i];\n\t}\n\n\tvar colinfo = [], rowinfo = [];\n\tvar seencol = false;\n\n\trecordhopper(data, function ws_parse(val, R_n, RT) {\n\t\tif(end) return;\n\t\tswitch(RT) {\n\t\t\tcase 0x0094: /* 'BrtWsDim' */\n\t\t\t\tref = val; break;\n\t\t\tcase 0x0000: /* 'BrtRowHdr' */\n\t\t\t\trow = val;\n\t\t\t\tif(opts.sheetRows && opts.sheetRows <= row.r) end=true;\n\t\t\t\trr = encode_row(R = row.r);\n\t\t\t\topts['!row'] = row.r;\n\t\t\t\tif(val.hidden || val.hpt || val.level != null) {\n\t\t\t\t\tif(val.hpt) val.hpx = pt2px(val.hpt);\n\t\t\t\t\trowinfo[val.r] = val;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0002: /* 'BrtCellRk' */\n\t\t\tcase 0x0003: /* 'BrtCellError' */\n\t\t\tcase 0x0004: /* 'BrtCellBool' */\n\t\t\tcase 0x0005: /* 'BrtCellReal' */\n\t\t\tcase 0x0006: /* 'BrtCellSt' */\n\t\t\tcase 0x0007: /* 'BrtCellIsst' */\n\t\t\tcase 0x0008: /* 'BrtFmlaString' */\n\t\t\tcase 0x0009: /* 'BrtFmlaNum' */\n\t\t\tcase 0x000A: /* 'BrtFmlaBool' */\n\t\t\tcase 0x000B: /* 'BrtFmlaError' */\n\t\t\t\tp = ({t:val[2]});\n\t\t\t\tswitch(val[2]) {\n\t\t\t\t\tcase 'n': p.v = val[1]; break;\n\t\t\t\t\tcase 's': sstr = strs[val[1]]; p.v = sstr.t; p.r = sstr.r; break;\n\t\t\t\t\tcase 'b': p.v = val[1] ? true : false; break;\n\t\t\t\t\tcase 'e': p.v = val[1]; if(opts.cellText !== false) p.w = BErr[p.v]; break;\n\t\t\t\t\tcase 'str': p.t = 's'; p.v = val[1]; break;\n\t\t\t\t}\n\t\t\t\tif((cf = styles.CellXf[val[0].iStyleRef])) safe_format(p,cf.numFmtId,null,opts, themes, styles);\n\t\t\t\tC = val[0].c;\n\t\t\t\tif(opts.dense) { if(!s[R]) s[R] = []; s[R][C] = p; }\n\t\t\t\telse s[encode_col(C) + rr] = p;\n\t\t\t\tif(opts.cellFormula) {\n\t\t\t\t\taf = false;\n\t\t\t\t\tfor(ai = 0; ai < arrayf.length; ++ai) {\n\t\t\t\t\t\tvar aii = arrayf[ai];\n\t\t\t\t\t\tif(row.r >= aii[0].s.r && row.r <= aii[0].e.r)\n\t\t\t\t\t\t\tif(C >= aii[0].s.c && C <= aii[0].e.c) {\n\t\t\t\t\t\t\t\tp.F = encode_range(aii[0]); af = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!af && val.length > 3) p.f = val[3];\n\t\t\t\t}\n\t\t\t\tif(refguess.s.r > row.r) refguess.s.r = row.r;\n\t\t\t\tif(refguess.s.c > C) refguess.s.c = C;\n\t\t\t\tif(refguess.e.r < row.r) refguess.e.r = row.r;\n\t\t\t\tif(refguess.e.c < C) refguess.e.c = C;\n\t\t\t\tif(opts.cellDates && cf && p.t == 'n' && SSF.is_date(SSF._table[cf.numFmtId])) {\n\t\t\t\t\tvar _d = SSF.parse_date_code(p.v); if(_d) { p.t = 'd'; p.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0001: /* 'BrtCellBlank' */\n\t\t\t\tif(!opts.sheetStubs || pass) break;\n\t\t\t\tp = ({t:'z',v:undefined});\n\t\t\t\tC = val[0].c;\n\t\t\t\tif(opts.dense) { if(!s[R]) s[R] = []; s[R][C] = p; }\n\t\t\t\telse s[encode_col(C) + rr] = p;\n\t\t\t\tif(refguess.s.r > row.r) refguess.s.r = row.r;\n\t\t\t\tif(refguess.s.c > C) refguess.s.c = C;\n\t\t\t\tif(refguess.e.r < row.r) refguess.e.r = row.r;\n\t\t\t\tif(refguess.e.c < C) refguess.e.c = C;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x00B0: /* 'BrtMergeCell' */\n\t\t\t\tmerges.push(val); break;\n\n\t\t\tcase 0x01EE: /* 'BrtHLink' */\n\t\t\t\tvar rel = rels['!id'][val.relId];\n\t\t\t\tif(rel) {\n\t\t\t\t\tval.Target = rel.Target;\n\t\t\t\t\tif(val.loc) val.Target += \"#\"+val.loc;\n\t\t\t\t\tval.Rel = rel;\n\t\t\t\t} else if(val.relId == '') {\n\t\t\t\t\tval.Target = \"#\" + val.loc;\n\t\t\t\t}\n\t\t\t\tfor(R=val.rfx.s.r;R<=val.rfx.e.r;++R) for(C=val.rfx.s.c;C<=val.rfx.e.c;++C) {\n\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\tif(!s[R]) s[R] = [];\n\t\t\t\t\t\tif(!s[R][C]) s[R][C] = {t:'z',v:undefined};\n\t\t\t\t\t\ts[R][C].l = val;\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddr = encode_cell({c:C,r:R});\n\t\t\t\t\t\tif(!s[addr]) s[addr] = {t:'z',v:undefined};\n\t\t\t\t\t\ts[addr].l = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01AA: /* 'BrtArrFmla' */\n\t\t\t\tif(!opts.cellFormula) break;\n\t\t\t\tarrayf.push(val);\n\t\t\t\tcell = ((opts.dense ? s[R][C] : s[encode_col(C) + rr]));\n\t\t\t\tcell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);\n\t\t\t\tcell.F = encode_range(val[0]);\n\t\t\t\tbreak;\n\t\t\tcase 0x01AB: /* 'BrtShrFmla' */\n\t\t\t\tif(!opts.cellFormula) break;\n\t\t\t\tsharedf[encode_cell(val[0].s)] = val[1];\n\t\t\t\tcell = (opts.dense ? s[R][C] : s[encode_col(C) + rr]);\n\t\t\t\tcell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);\n\t\t\t\tbreak;\n\n\t\t\t/* identical to 'ColInfo' in XLS */\n\t\t\tcase 0x003C: /* 'BrtColInfo' */\n\t\t\t\tif(!opts.cellStyles) break;\n\t\t\t\twhile(val.e >= val.s) {\n\t\t\t\t\tcolinfo[val.e--] = { width: val.w/256, hidden: !!(val.flags & 0x01) };\n\t\t\t\t\tif(!seencol) { seencol = true; find_mdw_colw(val.w/256); }\n\t\t\t\t\tprocess_col(colinfo[val.e+1]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x00A1: /* 'BrtBeginAFilter' */\n\t\t\t\ts['!autofilter'] = { ref:encode_range(val) };\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01DC: /* 'BrtMargins' */\n\t\t\t\ts['!margins'] = val;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0093: /* 'BrtWsProp' */\n\t\t\t\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\t\t\t\tif(val.name) wb.Sheets[idx].CodeName = val.name;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0089: /* 'BrtBeginWsView' */\n\t\t\t\tif(!wb.Views) wb.Views = [{}];\n\t\t\t\tif(!wb.Views[0]) wb.Views[0] = {};\n\t\t\t\tif(val.RTL) wb.Views[0].RTL = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01E5: /* 'BrtWsFmtInfo' */\n\t\t\t\tbreak;\n\t\t\tcase 0x00AF: /* 'BrtAFilterDateGroupItem' */\n\t\t\tcase 0x0284: /* 'BrtActiveX' */\n\t\t\tcase 0x0271: /* 'BrtBigName' */\n\t\t\tcase 0x0232: /* 'BrtBkHim' */\n\t\t\tcase 0x018C: /* 'BrtBrk' */\n\t\t\tcase 0x0458: /* 'BrtCFIcon' */\n\t\t\tcase 0x047A: /* 'BrtCFRuleExt' */\n\t\t\tcase 0x01D7: /* 'BrtCFVO' */\n\t\t\tcase 0x041A: /* 'BrtCFVO14' */\n\t\t\tcase 0x0289: /* 'BrtCellIgnoreEC' */\n\t\t\tcase 0x0451: /* 'BrtCellIgnoreEC14' */\n\t\t\tcase 0x0031: /* 'BrtCellMeta' */\n\t\t\tcase 0x024D: /* 'BrtCellSmartTagProperty' */\n\t\t\tcase 0x025F: /* 'BrtCellWatch' */\n\t\t\tcase 0x0234: /* 'BrtColor' */\n\t\t\tcase 0x041F: /* 'BrtColor14' */\n\t\t\tcase 0x00A8: /* 'BrtColorFilter' */\n\t\t\tcase 0x00AE: /* 'BrtCustomFilter' */\n\t\t\tcase 0x049C: /* 'BrtCustomFilter14' */\n\t\t\tcase 0x01F3: /* 'BrtDRef' */\n\t\t\tcase 0x0040: /* 'BrtDVal' */\n\t\t\tcase 0x041D: /* 'BrtDVal14' */\n\t\t\tcase 0x0226: /* 'BrtDrawing' */\n\t\t\tcase 0x00AB: /* 'BrtDynamicFilter' */\n\t\t\tcase 0x00A7: /* 'BrtFilter' */\n\t\t\tcase 0x0499: /* 'BrtFilter14' */\n\t\t\tcase 0x00A9: /* 'BrtIconFilter' */\n\t\t\tcase 0x049D: /* 'BrtIconFilter14' */\n\t\t\tcase 0x0227: /* 'BrtLegacyDrawing' */\n\t\t\tcase 0x0228: /* 'BrtLegacyDrawingHF' */\n\t\t\tcase 0x0295: /* 'BrtListPart' */\n\t\t\tcase 0x027F: /* 'BrtOleObject' */\n\t\t\tcase 0x01DE: /* 'BrtPageSetup' */\n\t\t\tcase 0x0097: /* 'BrtPane' */\n\t\t\tcase 0x0219: /* 'BrtPhoneticInfo' */\n\t\t\tcase 0x01DD: /* 'BrtPrintOptions' */\n\t\t\tcase 0x0218: /* 'BrtRangeProtection' */\n\t\t\tcase 0x044F: /* 'BrtRangeProtection14' */\n\t\t\tcase 0x02A8: /* 'BrtRangeProtectionIso' */\n\t\t\tcase 0x0450: /* 'BrtRangeProtectionIso14' */\n\t\t\tcase 0x0400: /* 'BrtRwDescent' */\n\t\t\tcase 0x0098: /* 'BrtSel' */\n\t\t\tcase 0x0297: /* 'BrtSheetCalcProp' */\n\t\t\tcase 0x0217: /* 'BrtSheetProtection' */\n\t\t\tcase 0x02A6: /* 'BrtSheetProtectionIso' */\n\t\t\tcase 0x01F8: /* 'BrtSlc' */\n\t\t\tcase 0x0413: /* 'BrtSparkline' */\n\t\t\tcase 0x01AC: /* 'BrtTable' */\n\t\t\tcase 0x00AA: /* 'BrtTop10Filter' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\tcase 0x0032: /* 'BrtValueMeta' */\n\t\t\tcase 0x0816: /* 'BrtWebExtension' */\n\t\t\tcase 0x0415: /* 'BrtWsFmtInfoEx14' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */ break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */ break;\n\n\t\t\tdefault:\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n\t\t}\n\t}, opts);\n\n\tdelete opts.supbooks;\n\tdelete opts['!row'];\n\n\tif(!s[\"!ref\"] && (refguess.s.r < 2000000 || ref && (ref.e.r > 0 || ref.e.c > 0 || ref.s.r > 0 || ref.s.c > 0))) s[\"!ref\"] = encode_range(ref || refguess);\n\tif(opts.sheetRows && s[\"!ref\"]) {\n\t\tvar tmpref = safe_decode_range(s[\"!ref\"]);\n\t\tif(opts.sheetRows <= +tmpref.e.r) {\n\t\t\ttmpref.e.r = opts.sheetRows - 1;\n\t\t\tif(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n\t\t\tif(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n\t\t\tif(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n\t\t\tif(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n\t\t\ts[\"!fullref\"] = s[\"!ref\"];\n\t\t\ts[\"!ref\"] = encode_range(tmpref);\n\t\t}\n\t}\n\tif(merges.length > 0) s[\"!merges\"] = merges;\n\tif(colinfo.length > 0) s[\"!cols\"] = colinfo;\n\tif(rowinfo.length > 0) s[\"!rows\"] = rowinfo;\n\treturn s;\n}\n\n/* TODO: something useful -- this is a stub */\nfunction write_ws_bin_cell(ba, cell, R, C, opts, ws) {\n\tif(cell.v === undefined) return \"\";\n\tvar vv = \"\";\n\tswitch(cell.t) {\n\t\tcase 'b': vv = cell.v ? \"1\" : \"0\"; break;\n\t\tcase 'd': // no BrtCellDate :(\n\t\t\tcell = dup(cell);\n\t\t\tcell.z = cell.z || SSF._table[14];\n\t\t\tcell.v = datenum(parseDate(cell.v)); cell.t = 'n';\n\t\t\tbreak;\n\t\t/* falls through */\n\t\tcase 'n': case 'e': vv = ''+cell.v; break;\n\t\tdefault: vv = cell.v; break;\n\t}\n\tvar o = ({r:R, c:C});\n\t/* TODO: cell style */\n\to.s = get_cell_style(opts.cellXfs, cell, opts);\n\tif(cell.l) ws['!links'].push([encode_cell(o), cell.l]);\n\tif(cell.c) ws['!comments'].push([encode_cell(o), cell.c]);\n\tswitch(cell.t) {\n\t\tcase 's': case 'str':\n\t\t\tif(opts.bookSST) {\n\t\t\t\tvv = get_sst_id(opts.Strings, (cell.v), opts.revStrings);\n\t\t\t\to.t = \"s\"; o.v = vv;\n\t\t\t\twrite_record(ba, \"BrtCellIsst\", write_BrtCellIsst(cell, o));\n\t\t\t} else {\n\t\t\t\to.t = \"str\";\n\t\t\t\twrite_record(ba, \"BrtCellSt\", write_BrtCellSt(cell, o));\n\t\t\t}\n\t\t\treturn;\n\t\tcase 'n':\n\t\t\t/* TODO: determine threshold for Real vs RK */\n\t\t\tif(cell.v == (cell.v | 0) && cell.v > -1000 && cell.v < 1000) write_record(ba, \"BrtCellRk\", write_BrtCellRk(cell, o));\n\t\t\telse write_record(ba, \"BrtCellReal\", write_BrtCellReal(cell, o));\n\t\t\treturn;\n\t\tcase 'b':\n\t\t\to.t = \"b\";\n\t\t\twrite_record(ba, \"BrtCellBool\", write_BrtCellBool(cell, o));\n\t\t\treturn;\n\t\tcase 'e': /* TODO: error */ o.t = \"e\"; break;\n\t}\n\twrite_record(ba, \"BrtCellBlank\", write_BrtCellBlank(cell, o));\n}\n\nfunction write_CELLTABLE(ba, ws, idx, opts) {\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\"), ref, rr = \"\", cols = [];\n\twrite_record(ba, 'BrtBeginSheetData');\n\tvar dense = Array.isArray(ws);\n\tvar cap = range.e.r;\n\tif(ws['!rows']) cap = Math.max(range.e.r, ws['!rows'].length - 1);\n\tfor(var R = range.s.r; R <= cap; ++R) {\n\t\trr = encode_row(R);\n\t\t/* [ACCELLTABLE] */\n\t\t/* BrtRowHdr */\n\t\twrite_row_header(ba, ws, range, R);\n\t\tif(R <= range.e.r) for(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\t/* *16384CELL */\n\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\tref = cols[C] + rr;\n\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\tif(!cell) continue;\n\t\t\t/* write cell */\n\t\t\twrite_ws_bin_cell(ba, cell, R, C, opts, ws);\n\t\t}\n\t}\n\twrite_record(ba, 'BrtEndSheetData');\n}\n\nfunction write_MERGECELLS(ba, ws) {\n\tif(!ws || !ws['!merges']) return;\n\twrite_record(ba, 'BrtBeginMergeCells', write_BrtBeginMergeCells(ws['!merges'].length));\n\tws['!merges'].forEach(function(m) { write_record(ba, 'BrtMergeCell', write_BrtMergeCell(m)); });\n\twrite_record(ba, 'BrtEndMergeCells');\n}\n\nfunction write_COLINFOS(ba, ws) {\n\tif(!ws || !ws['!cols']) return;\n\twrite_record(ba, 'BrtBeginColInfos');\n\tws['!cols'].forEach(function(m, i) { if(m) write_record(ba, 'BrtColInfo', write_BrtColInfo(i, m)); });\n\twrite_record(ba, 'BrtEndColInfos');\n}\n\nfunction write_IGNOREECS(ba, ws) {\n\tif(!ws || !ws['!ref']) return;\n\twrite_record(ba, 'BrtBeginCellIgnoreECs');\n\twrite_record(ba, 'BrtCellIgnoreEC', write_BrtCellIgnoreEC(safe_decode_range(ws['!ref'])));\n\twrite_record(ba, 'BrtEndCellIgnoreECs');\n}\n\nfunction write_HLINKS(ba, ws, rels) {\n\t/* *BrtHLink */\n\tws['!links'].forEach(function(l) {\n\t\tif(!l[1].Target) return;\n\t\tvar rId = add_rels(rels, -1, l[1].Target.replace(/#.*$/, \"\"), RELS.HLINK);\n\t\twrite_record(ba, \"BrtHLink\", write_BrtHLink(l, rId));\n\t});\n\tdelete ws['!links'];\n}\nfunction write_LEGACYDRAWING(ba, ws, idx, rels) {\n\t/* [BrtLegacyDrawing] */\n\tif(ws['!comments'].length > 0) {\n\t\tvar rId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx+1) + \".vml\", RELS.VML);\n\t\twrite_record(ba, \"BrtLegacyDrawing\", write_RelID(\"rId\" + rId));\n\t\tws['!legacy'] = rId;\n\t}\n}\n\nfunction write_AUTOFILTER(ba, ws) {\n\tif(!ws['!autofilter']) return;\n\twrite_record(ba, \"BrtBeginAFilter\", write_UncheckedRfX(safe_decode_range(ws['!autofilter'].ref)));\n\t/* *FILTERCOLUMN */\n\t/* [SORTSTATE] */\n\t/* BrtEndAFilter */\n\twrite_record(ba, \"BrtEndAFilter\");\n}\n\nfunction write_WSVIEWS2(ba, ws, Workbook) {\n\twrite_record(ba, \"BrtBeginWsViews\");\n\t{ /* 1*WSVIEW2 */\n\t\t/* [ACUID] */\n\t\twrite_record(ba, \"BrtBeginWsView\", write_BrtBeginWsView(ws, Workbook));\n\t\t/* [BrtPane] */\n\t\t/* *4BrtSel */\n\t\t/* *4SXSELECT */\n\t\t/* *FRT */\n\t\twrite_record(ba, \"BrtEndWsView\");\n\t}\n\t/* *FRT */\n\twrite_record(ba, \"BrtEndWsViews\");\n}\n\nfunction write_WSFMTINFO() {\n\t/* [ACWSFMTINFO] */\n\t//write_record(ba, \"BrtWsFmtInfo\", write_BrtWsFmtInfo(ws));\n}\n\nfunction write_SHEETPROTECT(ba, ws) {\n\tif(!ws['!protect']) return;\n\t/* [BrtSheetProtectionIso] */\n\twrite_record(ba, \"BrtSheetProtection\", write_BrtSheetProtection(ws['!protect']));\n}\n\nfunction write_ws_bin(idx, opts, wb, rels) {\n\tvar ba = buf_array();\n\tvar s = wb.SheetNames[idx], ws = wb.Sheets[s] || {};\n\tvar c = s; try { if(wb && wb.Workbook) c = wb.Workbook.Sheets[idx].CodeName || c; } catch(e) {}\n\tvar r = safe_decode_range(ws['!ref'] || \"A1\");\n\tif(r.e.c > 0x3FFF || r.e.r > 0xFFFFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:XFD1048576\");\n\t\tr.e.c = Math.min(r.e.c, 0x3FFF);\n\t\tr.e.r = Math.min(r.e.c, 0xFFFFF);\n\t}\n\tws['!links'] = [];\n\t/* passed back to write_zip and removed there */\n\tws['!comments'] = [];\n\twrite_record(ba, \"BrtBeginSheet\");\n\tif(wb.vbaraw) write_record(ba, \"BrtWsProp\", write_BrtWsProp(c));\n\twrite_record(ba, \"BrtWsDim\", write_BrtWsDim(r));\n\twrite_WSVIEWS2(ba, ws, wb.Workbook);\n\twrite_WSFMTINFO(ba, ws);\n\twrite_COLINFOS(ba, ws, idx, opts, wb);\n\twrite_CELLTABLE(ba, ws, idx, opts, wb);\n\t/* [BrtSheetCalcProp] */\n\twrite_SHEETPROTECT(ba, ws);\n\t/* *([BrtRangeProtectionIso] BrtRangeProtection) */\n\t/* [SCENMAN] */\n\twrite_AUTOFILTER(ba, ws);\n\t/* [SORTSTATE] */\n\t/* [DCON] */\n\t/* [USERSHVIEWS] */\n\twrite_MERGECELLS(ba, ws);\n\t/* [BrtPhoneticInfo] */\n\t/* *CONDITIONALFORMATTING */\n\t/* [DVALS] */\n\twrite_HLINKS(ba, ws, rels);\n\t/* [BrtPrintOptions] */\n\tif(ws['!margins']) write_record(ba, \"BrtMargins\", write_BrtMargins(ws['!margins']));\n\t/* [BrtPageSetup] */\n\t/* [HEADERFOOTER] */\n\t/* [RWBRK] */\n\t/* [COLBRK] */\n\t/* *BrtBigName */\n\t/* [CELLWATCHES] */\n\tif(!opts || opts.ignoreEC || (opts.ignoreEC == (void 0))) write_IGNOREECS(ba, ws);\n\t/* [SMARTTAGS] */\n\t/* [BrtDrawing] */\n\twrite_LEGACYDRAWING(ba, ws, idx, rels);\n\t/* [BrtLegacyDrawingHF] */\n\t/* [BrtBkHim] */\n\t/* [OLEOBJECTS] */\n\t/* [ACTIVEXCONTROLS] */\n\t/* [WEBPUBITEMS] */\n\t/* [LISTPARTS] */\n\t/* FRTWORKSHEET */\n\twrite_record(ba, \"BrtEndSheet\");\n\treturn ba.end();\n}\nfunction parse_numCache(data) {\n\tvar col = [];\n\n\t/* 21.2.2.150 pt CT_NumVal */\n\t(data.match(/<c:pt idx=\"(\\d*)\">(.*?)<\\/c:pt>/mg)||[]).forEach(function(pt) {\n\t\tvar q = pt.match(/<c:pt idx=\"(\\d*?)\"><c:v>(.*)<\\/c:v><\\/c:pt>/);\n\t\tif(!q) return;\n\t\tcol[+q[1]] = +q[2];\n\t});\n\n\t/* 21.2.2.71 formatCode CT_Xstring */\n\tvar nf = unescapexml((data.match(/<c:formatCode>([\\s\\S]*?)<\\/c:formatCode>/) || [\"\",\"General\"])[1]);\n\n\treturn [col, nf];\n}\n\n/* 21.2 DrawingML - Charts */\nfunction parse_chart(data, name, opts, rels, wb, csheet) {\n\tvar cs = ((csheet || {\"!type\":\"chart\"}));\n\tif(!data) return csheet;\n\t/* 21.2.2.27 chart CT_Chart */\n\n\tvar C = 0, R = 0, col = \"A\";\n\tvar refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\n\t/* 21.2.2.120 numCache CT_NumData */\n\t(data.match(/<c:numCache>[\\s\\S]*?<\\/c:numCache>/gm)||[]).forEach(function(nc) {\n\t\tvar cache = parse_numCache(nc);\n\t\trefguess.s.r = refguess.s.c = 0;\n\t\trefguess.e.c = C;\n\t\tcol = encode_col(C);\n\t\tcache[0].forEach(function(n,i) {\n\t\t\tcs[col + encode_row(i)] = {t:'n', v:n, z:cache[1] };\n\t\t\tR = i;\n\t\t});\n\t\tif(refguess.e.r < R) refguess.e.r = R;\n\t\t++C;\n\t});\n\tif(C > 0) cs[\"!ref\"] = encode_range(refguess);\n\treturn cs;\n}\nRELS.CS = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartsheet\";\n\nvar CS_XML_ROOT = writextag('chartsheet', null, {\n\t'xmlns': XMLNS.main[0],\n\t'xmlns:r': XMLNS.r\n});\n\n/* 18.3 Worksheets also covers Chartsheets */\nfunction parse_cs_xml(data, opts, idx, rels, wb) {\n\tif(!data) return data;\n\t/* 18.3.1.12 chartsheet CT_ChartSheet */\n\tif(!rels) rels = {'!id':{}};\n\tvar s = {'!type':\"chart\", '!chart':null, '!rel':\"\"};\n\tvar m;\n\n\t/* 18.3.1.83 sheetPr CT_ChartsheetPr */\n\tvar sheetPr = data.match(sheetprregex);\n\tif(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\n\n\t/* 18.3.1.36 drawing CT_Drawing */\n\tif((m = data.match(/drawing r:id=\"(.*?)\"/))) s['!rel'] = m[1];\n\n\tif(rels['!id'][s['!rel']]) s['!chart'] = rels['!id'][s['!rel']];\n\treturn s;\n}\nfunction write_cs_xml(idx, opts, wb, rels) {\n\tvar o = [XML_HEADER, CS_XML_ROOT];\n\to[o.length] = writextag(\"drawing\", null, {\"r:id\": \"rId1\"});\n\tadd_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\n\tif(o.length>2) { o[o.length] = ('</chartsheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSB] 2.4.331 BrtCsProp */\nfunction parse_BrtCsProp(data, length) {\n\tdata.l += 10;\n\tvar name = parse_XLWideString(data, length - 10);\n\treturn { name: name };\n}\n\n/* [MS-XLSB] 2.1.7.7 Chart Sheet */\nfunction parse_cs_bin(data, opts, idx, rels, wb) {\n\tif(!data) return data;\n\tif(!rels) rels = {'!id':{}};\n\tvar s = {'!type':\"chart\", '!chart':null, '!rel':\"\"};\n\tvar state = [];\n\tvar pass = false;\n\trecordhopper(data, function cs_parse(val, R_n, RT) {\n\t\tswitch(RT) {\n\n\t\t\tcase 0x0226: /* 'BrtDrawing' */\n\t\t\t\ts['!rel'] = val; break;\n\n\t\t\tcase 0x028B: /* 'BrtCsProp' */\n\t\t\t\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\t\t\t\tif(val.name) wb.Sheets[idx].CodeName = val.name;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0232: /* 'BrtBkHim' */\n\t\t\tcase 0x028C: /* 'BrtCsPageSetup' */\n\t\t\tcase 0x029D: /* 'BrtCsProtection' */\n\t\t\tcase 0x02A7: /* 'BrtCsProtectionIso' */\n\t\t\tcase 0x0227: /* 'BrtLegacyDrawing' */\n\t\t\tcase 0x0228: /* 'BrtLegacyDrawingHF' */\n\t\t\tcase 0x01DC: /* 'BrtMargins' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(R_n); break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); break;\n\n\t\t\tdefault:\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0) state.push(R_n);\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0) state.pop();\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n\t\t}\n\t}, opts);\n\n\tif(rels['!id'][s['!rel']]) s['!chart'] = rels['!id'][s['!rel']];\n\treturn s;\n}\nfunction write_cs_bin() {\n\tvar ba = buf_array();\n\twrite_record(ba, \"BrtBeginSheet\");\n\t/* [BrtCsProp] */\n\t/* CSVIEWS */\n\t/* [[BrtCsProtectionIso] BrtCsProtection] */\n\t/* [USERCSVIEWS] */\n\t/* [BrtMargins] */\n\t/* [BrtCsPageSetup] */\n\t/* [HEADERFOOTER] */\n\t/* BrtDrawing */\n\t/* [BrtLegacyDrawing] */\n\t/* [BrtLegacyDrawingHF] */\n\t/* [BrtBkHim] */\n\t/* [WEBPUBITEMS] */\n\t/* FRTCHARTSHEET */\n\twrite_record(ba, \"BrtEndSheet\");\n\treturn ba.end();\n}\n/* 18.2.28 (CT_WorkbookProtection) Defaults */\nvar WBPropsDef = [\n\t['allowRefreshQuery',           false, \"bool\"],\n\t['autoCompressPictures',        true,  \"bool\"],\n\t['backupFile',                  false, \"bool\"],\n\t['checkCompatibility',          false, \"bool\"],\n\t['CodeName',                    ''],\n\t['date1904',                    false, \"bool\"],\n\t['defaultThemeVersion',         0,      \"int\"],\n\t['filterPrivacy',               false, \"bool\"],\n\t['hidePivotFieldList',          false, \"bool\"],\n\t['promptedSolutions',           false, \"bool\"],\n\t['publishItems',                false, \"bool\"],\n\t['refreshAllConnections',       false, \"bool\"],\n\t['saveExternalLinkValues',      true,  \"bool\"],\n\t['showBorderUnselectedTables',  true,  \"bool\"],\n\t['showInkAnnotation',           true,  \"bool\"],\n\t['showObjects',                 'all'],\n\t['showPivotChartFilter',        false, \"bool\"],\n\t['updateLinks', 'userSet']\n];\n\n/* 18.2.30 (CT_BookView) Defaults */\nvar WBViewDef = [\n\t['activeTab',                   0,      \"int\"],\n\t['autoFilterDateGrouping',      true,  \"bool\"],\n\t['firstSheet',                  0,      \"int\"],\n\t['minimized',                   false, \"bool\"],\n\t['showHorizontalScroll',        true,  \"bool\"],\n\t['showSheetTabs',               true,  \"bool\"],\n\t['showVerticalScroll',          true,  \"bool\"],\n\t['tabRatio',                    600,    \"int\"],\n\t['visibility',                  'visible']\n\t//window{Height,Width}, {x,y}Window\n];\n\n/* 18.2.19 (CT_Sheet) Defaults */\nvar SheetDef = [\n\t//['state', 'visible']\n];\n\n/* 18.2.2  (CT_CalcPr) Defaults */\nvar CalcPrDef = [\n\t['calcCompleted', 'true'],\n\t['calcMode', 'auto'],\n\t['calcOnSave', 'true'],\n\t['concurrentCalc', 'true'],\n\t['fullCalcOnLoad', 'false'],\n\t['fullPrecision', 'true'],\n\t['iterate', 'false'],\n\t['iterateCount', '100'],\n\t['iterateDelta', '0.001'],\n\t['refMode', 'A1']\n];\n\n/* 18.2.3 (CT_CustomWorkbookView) Defaults */\n/*var CustomWBViewDef = [\n\t['autoUpdate', 'false'],\n\t['changesSavedWin', 'false'],\n\t['includeHiddenRowCol', 'true'],\n\t['includePrintSettings', 'true'],\n\t['maximized', 'false'],\n\t['minimized', 'false'],\n\t['onlySync', 'false'],\n\t['personalView', 'false'],\n\t['showComments', 'commIndicator'],\n\t['showFormulaBar', 'true'],\n\t['showHorizontalScroll', 'true'],\n\t['showObjects', 'all'],\n\t['showSheetTabs', 'true'],\n\t['showStatusbar', 'true'],\n\t['showVerticalScroll', 'true'],\n\t['tabRatio', '600'],\n\t['xWindow', '0'],\n\t['yWindow', '0']\n];*/\n\nfunction push_defaults_array(target, defaults) {\n\tfor(var j = 0; j != target.length; ++j) { var w = target[j];\n\t\tfor(var i=0; i != defaults.length; ++i) { var z = defaults[i];\n\t\t\tif(w[z[0]] == null) w[z[0]] = z[1];\n\t\t\telse switch(z[2]) {\n\t\t\tcase \"bool\": if(typeof w[z[0]] == \"string\") w[z[0]] = parsexmlbool(w[z[0]]); break;\n\t\t\tcase \"int\": if(typeof w[z[0]] == \"string\") w[z[0]] = parseInt(w[z[0]], 10); break;\n\t\t\t}\n\t\t}\n\t}\n}\nfunction push_defaults(target, defaults) {\n\tfor(var i = 0; i != defaults.length; ++i) { var z = defaults[i];\n\t\tif(target[z[0]] == null) target[z[0]] = z[1];\n\t\telse switch(z[2]) {\n\t\t\tcase \"bool\": if(typeof target[z[0]] == \"string\") target[z[0]] = parsexmlbool(target[z[0]]); break;\n\t\t\tcase \"int\": if(typeof target[z[0]] == \"string\") target[z[0]] = parseInt(target[z[0]], 10); break;\n\t\t}\n\t}\n}\n\nfunction parse_wb_defaults(wb) {\n\tpush_defaults(wb.WBProps, WBPropsDef);\n\tpush_defaults(wb.CalcPr, CalcPrDef);\n\n\tpush_defaults_array(wb.WBView, WBViewDef);\n\tpush_defaults_array(wb.Sheets, SheetDef);\n\n\t_ssfopts.date1904 = parsexmlbool(wb.WBProps.date1904);\n}\n\nfunction safe1904(wb) {\n\t/* TODO: store date1904 somewhere else */\n\tif(!wb.Workbook) return \"false\";\n\tif(!wb.Workbook.WBProps) return \"false\";\n\treturn parsexmlbool(wb.Workbook.WBProps.date1904) ? \"true\" : \"false\";\n}\n\nvar badchars = \"][*?\\/\\\\\".split(\"\");\nfunction check_ws_name(n, safe) {\n\tif(n.length > 31) { if(safe) return false; throw new Error(\"Sheet names cannot exceed 31 chars\"); }\n\tvar _good = true;\n\tbadchars.forEach(function(c) {\n\t\tif(n.indexOf(c) == -1) return;\n\t\tif(!safe) throw new Error(\"Sheet name cannot contain : \\\\ / ? * [ ]\");\n\t\t_good = false;\n\t});\n\treturn _good;\n}\nfunction check_wb_names(N, S, codes) {\n\tN.forEach(function(n,i) {\n\t\tcheck_ws_name(n);\n\t\tfor(var j = 0; j < i; ++j) if(n == N[j]) throw new Error(\"Duplicate Sheet Name: \" + n);\n\t\tif(codes) {\n\t\t\tvar cn = (S && S[i] && S[i].CodeName) || n;\n\t\t\tif(cn.charCodeAt(0) == 95 && cn.length > 22) throw new Error(\"Bad Code Name: Worksheet\" + cn);\n\t\t}\n\t});\n}\nfunction check_wb(wb) {\n\tif(!wb || !wb.SheetNames || !wb.Sheets) throw new Error(\"Invalid Workbook\");\n\tif(!wb.SheetNames.length) throw new Error(\"Workbook is empty\");\n\tvar Sheets = (wb.Workbook && wb.Workbook.Sheets) || [];\n\tcheck_wb_names(wb.SheetNames, Sheets, !!wb.vbaraw);\n\tfor(var i = 0; i < wb.SheetNames.length; ++i) check_ws(wb.Sheets[wb.SheetNames[i]], wb.SheetNames[i], i);\n\t/* TODO: validate workbook */\n}\n/* 18.2 Workbook */\nvar wbnsregex = /<\\w+:workbook/;\nfunction parse_wb_xml(data, opts) {\n\tif(!data) throw new Error(\"Could not find file\");\n\tvar wb = { AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, Names:[], xmlns: \"\" };\n\tvar pass = false, xmlns = \"xmlns\";\n\tvar dname = {}, dnstart = 0;\n\tdata.replace(tagregex, function xml_wb(x, idx) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\n\t\t\t/* 18.2.27 workbook CT_Workbook 1 */\n\t\t\tcase '<workbook':\n\t\t\t\tif(x.match(wbnsregex)) xmlns = \"xmlns\" + x.match(/<(\\w+):/)[1];\n\t\t\t\twb.xmlns = y[xmlns];\n\t\t\t\tbreak;\n\t\t\tcase '</workbook>': break;\n\n\t\t\t/* 18.2.13 fileVersion CT_FileVersion ? */\n\t\t\tcase '<fileVersion': delete y[0]; wb.AppVersion = y; break;\n\t\t\tcase '<fileVersion/>': case '</fileVersion>': break;\n\n\t\t\t/* 18.2.12 fileSharing CT_FileSharing ? */\n\t\t\tcase '<fileSharing': case '<fileSharing/>': break;\n\n\t\t\t/* 18.2.28 workbookPr CT_WorkbookPr ? */\n\t\t\tcase '<workbookPr':\n\t\t\tcase '<workbookPr/>':\n\t\t\t\tWBPropsDef.forEach(function(w) {\n\t\t\t\t\tif(y[w[0]] == null) return;\n\t\t\t\t\tswitch(w[2]) {\n\t\t\t\t\t\tcase \"bool\": wb.WBProps[w[0]] = parsexmlbool(y[w[0]]); break;\n\t\t\t\t\t\tcase \"int\": wb.WBProps[w[0]] = parseInt(y[w[0]], 10); break;\n\t\t\t\t\t\tdefault: wb.WBProps[w[0]] = y[w[0]];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif(y.codeName) wb.WBProps.CodeName = y.codeName;\n\t\t\t\tbreak;\n\t\t\tcase '</workbookPr>': break;\n\n\t\t\t/* 18.2.29 workbookProtection CT_WorkbookProtection ? */\n\t\t\tcase '<workbookProtection': break;\n\t\t\tcase '<workbookProtection/>': break;\n\n\t\t\t/* 18.2.1  bookViews CT_BookViews ? */\n\t\t\tcase '<bookViews': case '<bookViews>': case '</bookViews>': break;\n\t\t\t/* 18.2.30   workbookView CT_BookView + */\n\t\t\tcase '<workbookView': case '<workbookView/>': delete y[0]; wb.WBView.push(y); break;\n\t\t\tcase '</workbookView>': break;\n\n\t\t\t/* 18.2.20 sheets CT_Sheets 1 */\n\t\t\tcase '<sheets': case '<sheets>': case '</sheets>': break; // aggregate sheet\n\t\t\t/* 18.2.19   sheet CT_Sheet + */\n\t\t\tcase '<sheet':\n\t\t\t\tswitch(y.state) {\n\t\t\t\t\tcase \"hidden\": y.Hidden = 1; break;\n\t\t\t\t\tcase \"veryHidden\": y.Hidden = 2; break;\n\t\t\t\t\tdefault: y.Hidden = 0;\n\t\t\t\t}\n\t\t\t\tdelete y.state;\n\t\t\t\ty.name = unescapexml(utf8read(y.name));\n\t\t\t\tdelete y[0]; wb.Sheets.push(y); break;\n\t\t\tcase '</sheet>': break;\n\n\t\t\t/* 18.2.15 functionGroups CT_FunctionGroups ? */\n\t\t\tcase '<functionGroups': case '<functionGroups/>': break;\n\t\t\t/* 18.2.14   functionGroup CT_FunctionGroup + */\n\t\t\tcase '<functionGroup': break;\n\n\t\t\t/* 18.2.9  externalReferences CT_ExternalReferences ? */\n\t\t\tcase '<externalReferences': case '</externalReferences>': case '<externalReferences>': break;\n\t\t\t/* 18.2.8    externalReference CT_ExternalReference + */\n\t\t\tcase '<externalReference': break;\n\n\t\t\t/* 18.2.6  definedNames CT_DefinedNames ? */\n\t\t\tcase '<definedNames/>': break;\n\t\t\tcase '<definedNames>': case '<definedNames': pass=true; break;\n\t\t\tcase '</definedNames>': pass=false; break;\n\t\t\t/* 18.2.5    definedName CT_DefinedName + */\n\t\t\tcase '<definedName': {\n\t\t\t\tdname = {};\n\t\t\t\tdname.Name = utf8read(y.name);\n\t\t\t\tif(y.comment) dname.Comment = y.comment;\n\t\t\t\tif(y.localSheetId) dname.Sheet = +y.localSheetId;\n\t\t\t\tif(parsexmlbool(y.hidden||\"0\")) dname.Hidden = true;\n\t\t\t\tdnstart = idx + x.length;\n\t\t\t}\tbreak;\n\t\t\tcase '</definedName>': {\n\t\t\t\tdname.Ref = unescapexml(utf8read(data.slice(dnstart, idx)));\n\t\t\t\twb.Names.push(dname);\n\t\t\t} break;\n\t\t\tcase '<definedName/>': break;\n\n\t\t\t/* 18.2.2  calcPr CT_CalcPr ? */\n\t\t\tcase '<calcPr': delete y[0]; wb.CalcPr = y; break;\n\t\t\tcase '<calcPr/>': delete y[0]; wb.CalcPr = y; break;\n\t\t\tcase '</calcPr>': break;\n\n\t\t\t/* 18.2.16 oleSize CT_OleSize ? (ref required) */\n\t\t\tcase '<oleSize': break;\n\n\t\t\t/* 18.2.4  customWorkbookViews CT_CustomWorkbookViews ? */\n\t\t\tcase '<customWorkbookViews>': case '</customWorkbookViews>': case '<customWorkbookViews': break;\n\t\t\t/* 18.2.3    customWorkbookView CT_CustomWorkbookView + */\n\t\t\tcase '<customWorkbookView': case '</customWorkbookView>': break;\n\n\t\t\t/* 18.2.18 pivotCaches CT_PivotCaches ? */\n\t\t\tcase '<pivotCaches>': case '</pivotCaches>': case '<pivotCaches': break;\n\t\t\t/* 18.2.17 pivotCache CT_PivotCache ? */\n\t\t\tcase '<pivotCache': break;\n\n\t\t\t/* 18.2.21 smartTagPr CT_SmartTagPr ? */\n\t\t\tcase '<smartTagPr': case '<smartTagPr/>': break;\n\n\t\t\t/* 18.2.23 smartTagTypes CT_SmartTagTypes ? */\n\t\t\tcase '<smartTagTypes': case '<smartTagTypes>': case '</smartTagTypes>': break;\n\t\t\t/* 18.2.22   smartTagType CT_SmartTagType ? */\n\t\t\tcase '<smartTagType': break;\n\n\t\t\t/* 18.2.24 webPublishing CT_WebPublishing ? */\n\t\t\tcase '<webPublishing': case '<webPublishing/>': break;\n\n\t\t\t/* 18.2.11 fileRecoveryPr CT_FileRecoveryPr ? */\n\t\t\tcase '<fileRecoveryPr': case '<fileRecoveryPr/>': break;\n\n\t\t\t/* 18.2.26 webPublishObjects CT_WebPublishObjects ? */\n\t\t\tcase '<webPublishObjects>': case '<webPublishObjects': case '</webPublishObjects>': break;\n\t\t\t/* 18.2.25 webPublishObject CT_WebPublishObject ? */\n\t\t\tcase '<webPublishObject': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;\n\t\t\t/* 18.2.7    ext CT_Extension + */\n\t\t\tcase '<ext': pass=true; break; //TODO: check with versions of excel\n\t\t\tcase '</ext>': pass=false; break;\n\n\t\t\t/* Others */\n\t\t\tcase '<ArchID': break;\n\t\t\tcase '<AlternateContent':\n\t\t\tcase '<AlternateContent>': pass=true; break;\n\t\t\tcase '</AlternateContent>': pass=false; break;\n\n\t\t\t/* TODO */\n\t\t\tcase '<revisionPtr': break;\n\n\t\t\tdefault: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in workbook');\n\t\t}\n\t\treturn x;\n\t});\n\tif(XMLNS.main.indexOf(wb.xmlns) === -1) throw new Error(\"Unknown Namespace: \" + wb.xmlns);\n\n\tparse_wb_defaults(wb);\n\n\treturn wb;\n}\n\nvar WB_XML_ROOT = writextag('workbook', null, {\n\t'xmlns': XMLNS.main[0],\n\t//'xmlns:mx': XMLNS.mx,\n\t//'xmlns:s': XMLNS.main[0],\n\t'xmlns:r': XMLNS.r\n});\n\nfunction write_wb_xml(wb) {\n\tvar o = [XML_HEADER];\n\to[o.length] = WB_XML_ROOT;\n\n\tvar write_names = (wb.Workbook && (wb.Workbook.Names||[]).length > 0);\n\n\t/* fileVersion */\n\t/* fileSharing */\n\n\tvar workbookPr = ({codeName:\"ThisWorkbook\"});\n\tif(wb.Workbook && wb.Workbook.WBProps) {\n\t\tWBPropsDef.forEach(function(x) {\nif((wb.Workbook.WBProps[x[0]]) == null) return;\n\t\t\tif((wb.Workbook.WBProps[x[0]]) == x[1]) return;\n\t\t\tworkbookPr[x[0]] = (wb.Workbook.WBProps[x[0]]);\n\t\t});\nif(wb.Workbook.WBProps.CodeName) { workbookPr.codeName = wb.Workbook.WBProps.CodeName; delete workbookPr.CodeName; }\n\t}\n\to[o.length] = (writextag('workbookPr', null, workbookPr));\n\n\t/* workbookProtection */\n\n\tvar sheets = wb.Workbook && wb.Workbook.Sheets || [];\n\tvar i = 0;\n\n\t/* bookViews */\n\n\to[o.length] = \"<sheets>\";\n\tfor(i = 0; i != wb.SheetNames.length; ++i) {\n\t\tvar sht = ({name:escapexml(wb.SheetNames[i].slice(0,31))});\n\t\tsht.sheetId = \"\"+(i+1);\n\t\tsht[\"r:id\"] = \"rId\"+(i+1);\n\t\tif(sheets[i]) switch(sheets[i].Hidden) {\n\t\t\tcase 1: sht.state = \"hidden\"; break;\n\t\t\tcase 2: sht.state = \"veryHidden\"; break;\n\t\t}\n\t\to[o.length] = (writextag('sheet',null,sht));\n\t}\n\to[o.length] = \"</sheets>\";\n\n\t/* functionGroups */\n\t/* externalReferences */\n\n\tif(write_names) {\n\t\to[o.length] = \"<definedNames>\";\n\t\tif(wb.Workbook && wb.Workbook.Names) wb.Workbook.Names.forEach(function(n) {\n\t\t\tvar d = {name:n.Name};\n\t\t\tif(n.Comment) d.comment = n.Comment;\n\t\t\tif(n.Sheet != null) d.localSheetId = \"\"+n.Sheet;\n\t\t\tif(n.Hidden) d.hidden = \"1\";\n\t\t\tif(!n.Ref) return;\n\t\t\to[o.length] = writextag('definedName', String(n.Ref).replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\"), d);\n\t\t});\n\t\to[o.length] = \"</definedNames>\";\n\t}\n\n\t/* calcPr */\n\t/* oleSize */\n\t/* customWorkbookViews */\n\t/* pivotCaches */\n\t/* smartTagPr */\n\t/* smartTagTypes */\n\t/* webPublishing */\n\t/* fileRecoveryPr */\n\t/* webPublishObjects */\n\t/* extLst */\n\n\tif(o.length>2){ o[o.length] = '</workbook>'; o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.304 BrtBundleSh */\nfunction parse_BrtBundleSh(data, length) {\n\tvar z = {};\n\tz.Hidden = data.read_shift(4); //hsState ST_SheetState\n\tz.iTabID = data.read_shift(4);\n\tz.strRelID = parse_RelID(data,length-8);\n\tz.name = parse_XLWideString(data);\n\treturn z;\n}\nfunction write_BrtBundleSh(data, o) {\n\tif(!o) o = new_buf(127);\n\to.write_shift(4, data.Hidden);\n\to.write_shift(4, data.iTabID);\n\twrite_RelID(data.strRelID, o);\n\twrite_XLWideString(data.name.slice(0,31), o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.815 BrtWbProp */\nfunction parse_BrtWbProp(data, length) {\n\tvar o = ({});\n\tvar flags = data.read_shift(4);\n\to.defaultThemeVersion = data.read_shift(4);\n\tvar strName = (length > 8) ? parse_XLWideString(data) : \"\";\n\tif(strName.length > 0) o.CodeName = strName;\n\to.autoCompressPictures = !!(flags & 0x10000);\n\to.backupFile = !!(flags & 0x40);\n\to.checkCompatibility = !!(flags & 0x1000);\n\to.date1904 = !!(flags & 0x01);\n\to.filterPrivacy = !!(flags & 0x08);\n\to.hidePivotFieldList = !!(flags & 0x400);\n\to.promptedSolutions = !!(flags & 0x10);\n\to.publishItems = !!(flags & 0x800);\n\to.refreshAllConnections = !!(flags & 0x40000);\n\to.saveExternalLinkValues = !!(flags & 0x80);\n\to.showBorderUnselectedTables = !!(flags & 0x04);\n\to.showInkAnnotation = !!(flags & 0x20);\n\to.showObjects = [\"all\", \"placeholders\", \"none\"][(flags >> 13) & 0x03];\n\to.showPivotChartFilter = !!(flags & 0x8000);\n\to.updateLinks = [\"userSet\", \"never\", \"always\"][(flags >> 8) & 0x03];\n\treturn o;\n}\nfunction write_BrtWbProp(data, o) {\n\tif(!o) o = new_buf(72);\n\tvar flags = 0;\n\tif(data) {\n\t\t/* TODO: mirror parse_BrtWbProp fields */\n\t\tif(data.filterPrivacy) flags |= 0x08;\n\t}\n\to.write_shift(4, flags);\n\to.write_shift(4, 0);\n\twrite_XLSBCodeName(data && data.CodeName || \"ThisWorkbook\", o);\n\treturn o.slice(0, o.l);\n}\n\nfunction parse_BrtFRTArchID$(data, length) {\n\tvar o = {};\n\tdata.read_shift(4);\n\to.ArchID = data.read_shift(4);\n\tdata.l += length - 8;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.687 BrtName */\nfunction parse_BrtName(data, length, opts) {\n\tvar end = data.l + length;\n\tdata.l += 4; //var flags = data.read_shift(4);\n\tdata.l += 1; //var chKey = data.read_shift(1);\n\tvar itab = data.read_shift(4);\n\tvar name = parse_XLNameWideString(data);\n\tvar formula = parse_XLSBNameParsedFormula(data, 0, opts);\n\tvar comment = parse_XLNullableWideString(data);\n\t//if(0 /* fProc */) {\n\t\t// unusedstring1: XLNullableWideString\n\t\t// description: XLNullableWideString\n\t\t// helpTopic: XLNullableWideString\n\t\t// unusedstring2: XLNullableWideString\n\t//}\n\tdata.l = end;\n\tvar out = ({Name:name, Ptg:formula});\n\tif(itab < 0xFFFFFFF) out.Sheet = itab;\n\tif(comment) out.Comment = comment;\n\treturn out;\n}\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction parse_wb_bin(data, opts) {\n\tvar wb = { AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, xmlns: \"\" };\n\tvar state = [];\n\tvar pass = false;\n\n\tif(!opts) opts = {};\n\topts.biff = 12;\n\n\tvar Names = [];\n\tvar supbooks = ([[]]);\n\tsupbooks.SheetNames = [];\n\tsupbooks.XTI = [];\n\n\trecordhopper(data, function hopper_wb(val, R_n, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x009C: /* 'BrtBundleSh' */\n\t\t\t\tsupbooks.SheetNames.push(val.name);\n\t\t\t\twb.Sheets.push(val); break;\n\n\t\t\tcase 0x0099: /* 'BrtWbProp' */\n\t\t\t\twb.WBProps = val; break;\n\n\t\t\tcase 0x0027: /* 'BrtName' */\n\t\t\t\tif(val.Sheet != null) opts.SID = val.Sheet;\n\t\t\t\tval.Ref = stringify_formula(val.Ptg, null, null, supbooks, opts);\n\t\t\t\tdelete opts.SID;\n\t\t\t\tdelete val.Ptg;\n\t\t\t\tNames.push(val);\n\t\t\t\tbreak;\n\t\t\tcase 0x040C: /* 'BrtNameExt' */ break;\n\n\t\t\tcase 0x0165: /* 'BrtSupSelf' */\n\t\t\tcase 0x0166: /* 'BrtSupSame' */\n\t\t\tcase 0x0163: /* 'BrtSupBookSrc' */\n\t\t\tcase 0x029B: /* 'BrtSupAddin' */\n\t\t\t\tif(!supbooks[0].length) supbooks[0] = [RT, val];\n\t\t\t\telse supbooks.push([RT, val]);\n\t\t\t\tsupbooks[supbooks.length - 1].XTI = [];\n\t\t\t\tbreak;\n\t\t\tcase 0x016A: /* 'BrtExternSheet' */\n\t\t\t\tif(supbooks.length === 0) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\tsupbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val);\n\t\t\t\tsupbooks.XTI = supbooks.XTI.concat(val);\n\t\t\t\tbreak;\n\t\t\tcase 0x0169: /* 'BrtPlaceholderName' */\n\t\t\t\tbreak;\n\n\t\t\t/* case 'BrtModelTimeGroupingCalcCol' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\tcase 0x0C01: /* 'BrtRevisionPtr' */\n\t\t\tcase 0x0817: /* 'BrtAbsPath15' */\n\t\t\tcase 0x0216: /* 'BrtBookProtection' */\n\t\t\tcase 0x02A5: /* 'BrtBookProtectionIso' */\n\t\t\tcase 0x009E: /* 'BrtBookView' */\n\t\t\tcase 0x009D: /* 'BrtCalcProp' */\n\t\t\tcase 0x0262: /* 'BrtCrashRecErr' */\n\t\t\tcase 0x0802: /* 'BrtDecoupledPivotCacheID' */\n\t\t\tcase 0x009B: /* 'BrtFileRecover' */\n\t\t\tcase 0x0224: /* 'BrtFileSharing' */\n\t\t\tcase 0x02A4: /* 'BrtFileSharingIso' */\n\t\t\tcase 0x0080: /* 'BrtFileVersion' */\n\t\t\tcase 0x0299: /* 'BrtFnGroup' */\n\t\t\tcase 0x0850: /* 'BrtModelRelationship' */\n\t\t\tcase 0x084D: /* 'BrtModelTable' */\n\t\t\tcase 0x0225: /* 'BrtOleSize' */\n\t\t\tcase 0x0805: /* 'BrtPivotTableRef' */\n\t\t\tcase 0x0254: /* 'BrtSmartTagType' */\n\t\t\tcase 0x081C: /* 'BrtTableSlicerCacheID' */\n\t\t\tcase 0x081B: /* 'BrtTableSlicerCacheIDs' */\n\t\t\tcase 0x0822: /* 'BrtTimelineCachePivotCacheID' */\n\t\t\tcase 0x018D: /* 'BrtUserBookView' */\n\t\t\tcase 0x009A: /* 'BrtWbFactoid' */\n\t\t\tcase 0x045D: /* 'BrtWbProp14' */\n\t\t\tcase 0x0229: /* 'BrtWebOpt' */\n\t\t\tcase 0x082B: /* 'BrtWorkBookPr15' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tstate.push(R_n); pass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(R_n); pass = true; break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\n\t\t\tcase 0x0010: /* 'BrtFRTArchID$' */ break;\n\n\t\t\tdefault:\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\n\t\t\t\telse if(!pass || (opts.WTF && state[state.length-1] != \"BrtACBegin\" && state[state.length-1] != \"BrtFRTBegin\")) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n\t\t}\n\t}, opts);\n\n\tparse_wb_defaults(wb);\n\n\t// $FlowIgnore\n\twb.Names = Names;\n\n\t(wb).supbooks = supbooks;\n\treturn wb;\n}\n\nfunction write_BUNDLESHS(ba, wb) {\n\twrite_record(ba, \"BrtBeginBundleShs\");\n\tfor(var idx = 0; idx != wb.SheetNames.length; ++idx) {\n\t\tvar viz = wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx] && wb.Workbook.Sheets[idx].Hidden || 0;\n\t\tvar d = { Hidden: viz, iTabID: idx+1, strRelID: 'rId' + (idx+1), name: wb.SheetNames[idx] };\n\t\twrite_record(ba, \"BrtBundleSh\", write_BrtBundleSh(d));\n\t}\n\twrite_record(ba, \"BrtEndBundleShs\");\n}\n\n/* [MS-XLSB] 2.4.649 BrtFileVersion */\nfunction write_BrtFileVersion(data, o) {\n\tif(!o) o = new_buf(127);\n\tfor(var i = 0; i != 4; ++i) o.write_shift(4, 0);\n\twrite_XLWideString(\"SheetJS\", o);\n\twrite_XLWideString(XLSX.version, o);\n\twrite_XLWideString(XLSX.version, o);\n\twrite_XLWideString(\"7262\", o);\n\to.length = o.l;\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.301 BrtBookView */\nfunction write_BrtBookView(idx, o) {\n\tif(!o) o = new_buf(29);\n\to.write_shift(-4, 0);\n\to.write_shift(-4, 460);\n\to.write_shift(4,  28800);\n\to.write_shift(4,  17600);\n\to.write_shift(4,  500);\n\to.write_shift(4,  idx);\n\to.write_shift(4,  idx);\n\tvar flags = 0x78;\n\to.write_shift(1,  flags);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\nfunction write_BOOKVIEWS(ba, wb) {\n\t/* required if hidden tab appears before visible tab */\n\tif(!wb.Workbook || !wb.Workbook.Sheets) return;\n\tvar sheets = wb.Workbook.Sheets;\n\tvar i = 0, vistab = -1, hidden = -1;\n\tfor(; i < sheets.length; ++i) {\n\t\tif(!sheets[i] || !sheets[i].Hidden && vistab == -1) vistab = i;\n\t\telse if(sheets[i].Hidden == 1 && hidden == -1) hidden = i;\n\t}\n\tif(hidden > vistab) return;\n\twrite_record(ba, \"BrtBeginBookViews\");\n\twrite_record(ba, \"BrtBookView\", write_BrtBookView(vistab));\n\t/* 1*(BrtBookView *FRT) */\n\twrite_record(ba, \"BrtEndBookViews\");\n}\n\n/* [MS-XLSB] 2.4.305 BrtCalcProp */\n/*function write_BrtCalcProp(data, o) {\n\tif(!o) o = new_buf(26);\n\to.write_shift(4,0); // force recalc\n\to.write_shift(4,1);\n\to.write_shift(4,0);\n\twrite_Xnum(0, o);\n\to.write_shift(-4, 1023);\n\to.write_shift(1, 0x33);\n\to.write_shift(1, 0x00);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.4.646 BrtFileRecover */\n/*function write_BrtFileRecover(data, o) {\n\tif(!o) o = new_buf(1);\n\to.write_shift(1,0);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction write_wb_bin(wb, opts) {\n\tvar ba = buf_array();\n\twrite_record(ba, \"BrtBeginBook\");\n\twrite_record(ba, \"BrtFileVersion\", write_BrtFileVersion());\n\t/* [[BrtFileSharingIso] BrtFileSharing] */\n\twrite_record(ba, \"BrtWbProp\", write_BrtWbProp(wb.Workbook && wb.Workbook.WBProps || null));\n\t/* [ACABSPATH] */\n\t/* [[BrtBookProtectionIso] BrtBookProtection] */\n\twrite_BOOKVIEWS(ba, wb, opts);\n\twrite_BUNDLESHS(ba, wb, opts);\n\t/* [FNGROUP] */\n\t/* [EXTERNALS] */\n\t/* *BrtName */\n\t/* write_record(ba, \"BrtCalcProp\", write_BrtCalcProp()); */\n\t/* [BrtOleSize] */\n\t/* *(BrtUserBookView *FRT) */\n\t/* [PIVOTCACHEIDS] */\n\t/* [BrtWbFactoid] */\n\t/* [SMARTTAGTYPES] */\n\t/* [BrtWebOpt] */\n\t/* write_record(ba, \"BrtFileRecover\", write_BrtFileRecover()); */\n\t/* [WEBPUBITEMS] */\n\t/* [CRERRS] */\n\t/* FRTWORKBOOK */\n\twrite_record(ba, \"BrtEndBook\");\n\n\treturn ba.end();\n}\nfunction parse_wb(data, name, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_wb_bin((data), opts);\n\treturn parse_wb_xml((data), opts);\n}\n\nfunction parse_ws(data, name, idx, opts, rels, wb, themes, styles) {\n\tif(name.slice(-4)===\".bin\") return parse_ws_bin((data), opts, idx, rels, wb, themes, styles);\n\treturn parse_ws_xml((data), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_cs(data, name, idx, opts, rels, wb, themes, styles) {\n\tif(name.slice(-4)===\".bin\") return parse_cs_bin((data), opts, idx, rels, wb, themes, styles);\n\treturn parse_cs_xml((data), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_ms(data, name, idx, opts, rels, wb, themes, styles) {\n\tif(name.slice(-4)===\".bin\") return parse_ms_bin((data), opts, idx, rels, wb, themes, styles);\n\treturn parse_ms_xml((data), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_ds(data, name, idx, opts, rels, wb, themes, styles) {\n\tif(name.slice(-4)===\".bin\") return parse_ds_bin((data), opts, idx, rels, wb, themes, styles);\n\treturn parse_ds_xml((data), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_sty(data, name, themes, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_sty_bin((data), themes, opts);\n\treturn parse_sty_xml((data), themes, opts);\n}\n\nfunction parse_theme(data, name, opts) {\n\treturn parse_theme_xml(data, opts);\n}\n\nfunction parse_sst(data, name, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_sst_bin((data), opts);\n\treturn parse_sst_xml((data), opts);\n}\n\nfunction parse_cmnt(data, name, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_comments_bin((data), opts);\n\treturn parse_comments_xml((data), opts);\n}\n\nfunction parse_cc(data, name, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_cc_bin((data), name, opts);\n\treturn parse_cc_xml((data), name, opts);\n}\n\nfunction parse_xlink(data, name, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_xlink_bin((data), name, opts);\n\treturn parse_xlink_xml((data), name, opts);\n}\n\nfunction write_wb(wb, name, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_wb_bin : write_wb_xml)(wb, opts);\n}\n\nfunction write_ws(data, name, opts, wb, rels) {\n\treturn (name.slice(-4)===\".bin\" ? write_ws_bin : write_ws_xml)(data, opts, wb, rels);\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction write_cs(data, name, opts, wb, rels) {\n\treturn (name.slice(-4)===\".bin\" ? write_cs_bin : write_cs_xml)(data, opts, wb, rels);\n}\n\nfunction write_sty(data, name, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_sty_bin : write_sty_xml)(data, opts);\n}\n\nfunction write_sst(data, name, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_sst_bin : write_sst_xml)(data, opts);\n}\n\nfunction write_cmnt(data, name, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_comments_bin : write_comments_xml)(data, opts);\n}\n/*\nfunction write_cc(data, name:string, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_cc_bin : write_cc_xml)(data, opts);\n}\n*/\nvar attregexg2=/([\\w:]+)=((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:'))/g;\nvar attregex2=/([\\w:]+)=((?:\")(?:[^\"]*)(?:\")|(?:')(?:[^']*)(?:'))/;\nvar _chr = function(c) { return String.fromCharCode(c); };\nfunction xlml_parsexmltag(tag, skip_root) {\n\tvar words = tag.split(/\\s+/);\n\tvar z = ([]); if(!skip_root) z[0] = words[0];\n\tif(words.length === 1) return z;\n\tvar m = tag.match(attregexg2), y, j, w, i;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\ty = m[i].match(attregex2);\nif((j=y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);\n\t\telse {\n\t\t\tif(y[1].slice(0,6) === \"xmlns:\") w = \"xmlns\"+y[1].slice(6);\n\t\t\telse w = y[1].slice(j+1);\n\t\t\tz[w] = y[2].slice(1,y[2].length-1);\n\t\t}\n\t}\n\treturn z;\n}\nfunction xlml_parsexmltagobj(tag) {\n\tvar words = tag.split(/\\s+/);\n\tvar z = {};\n\tif(words.length === 1) return z;\n\tvar m = tag.match(attregexg2), y, j, w, i;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\ty = m[i].match(attregex2);\nif((j=y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);\n\t\telse {\n\t\t\tif(y[1].slice(0,6) === \"xmlns:\") w = \"xmlns\"+y[1].slice(6);\n\t\t\telse w = y[1].slice(j+1);\n\t\t\tz[w] = y[2].slice(1,y[2].length-1);\n\t\t}\n\t}\n\treturn z;\n}\n\n// ----\n\nfunction xlml_format(format, value) {\n\tvar fmt = XLMLFormatMap[format] || unescapexml(format);\n\tif(fmt === \"General\") return SSF._general(value);\n\treturn SSF.format(fmt, value);\n}\n\nfunction xlml_set_custprop(Custprops, key, cp, val) {\n\tvar oval = val;\n\tswitch((cp[0].match(/dt:dt=\"([\\w.]+)\"/)||[\"\",\"\"])[1]) {\n\t\tcase \"boolean\": oval = parsexmlbool(val); break;\n\t\tcase \"i2\": case \"int\": oval = parseInt(val, 10); break;\n\t\tcase \"r4\": case \"float\": oval = parseFloat(val); break;\n\t\tcase \"date\": case \"dateTime.tz\": oval = parseDate(val); break;\n\t\tcase \"i8\": case \"string\": case \"fixed\": case \"uuid\": case \"bin.base64\": break;\n\t\tdefault: throw new Error(\"bad custprop:\" + cp[0]);\n\t}\n\tCustprops[unescapexml(key)] = oval;\n}\n\nfunction safe_format_xlml(cell, nf, o) {\n\tif(cell.t === 'z') return;\n\tif(!o || o.cellText !== false) try {\n\t\tif(cell.t === 'e') { cell.w = cell.w || BErr[cell.v]; }\n\t\telse if(nf === \"General\") {\n\t\t\tif(cell.t === 'n') {\n\t\t\t\tif((cell.v|0) === cell.v) cell.w = SSF._general_int(cell.v);\n\t\t\t\telse cell.w = SSF._general_num(cell.v);\n\t\t\t}\n\t\t\telse cell.w = SSF._general(cell.v);\n\t\t}\n\t\telse cell.w = xlml_format(nf||\"General\", cell.v);\n\t} catch(e) { if(o.WTF) throw e; }\n\ttry {\n\t\tvar z = XLMLFormatMap[nf]||nf||\"General\";\n\t\tif(o.cellNF) cell.z = z;\n\t\tif(o.cellDates && cell.t == 'n' && SSF.is_date(z)) {\n\t\t\tvar _d = SSF.parse_date_code(cell.v); if(_d) { cell.t = 'd'; cell.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n\t\t}\n\t} catch(e) { if(o.WTF) throw e; }\n}\n\nfunction process_style_xlml(styles, stag, opts) {\n\tif(opts.cellStyles) {\n\t\tif(stag.Interior) {\n\t\t\tvar I = stag.Interior;\n\t\t\tif(I.Pattern) I.patternType = XLMLPatternTypeMap[I.Pattern] || I.Pattern;\n\t\t}\n\t}\n\tstyles[stag.ID] = stag;\n}\n\n/* TODO: there must exist some form of OSP-blessed spec */\nfunction parse_xlml_data(xml, ss, data, cell, base, styles, csty, row, arrayf, o) {\n\tvar nf = \"General\", sid = cell.StyleID, S = {}; o = o || {};\n\tvar interiors = [];\n\tvar i = 0;\n\tif(sid === undefined && row) sid = row.StyleID;\n\tif(sid === undefined && csty) sid = csty.StyleID;\n\twhile(styles[sid] !== undefined) {\n\t\tif(styles[sid].nf) nf = styles[sid].nf;\n\t\tif(styles[sid].Interior) interiors.push(styles[sid].Interior);\n\t\tif(!styles[sid].Parent) break;\n\t\tsid = styles[sid].Parent;\n\t}\n\tswitch(data.Type) {\n\t\tcase 'Boolean':\n\t\t\tcell.t = 'b';\n\t\t\tcell.v = parsexmlbool(xml);\n\t\t\tbreak;\n\t\tcase 'String':\n\t\t\tcell.t = 's'; cell.r = xlml_fixstr(unescapexml(xml));\n\t\t\tcell.v = xml.indexOf(\"<\") > -1 ? unescapexml(ss) : cell.r;\n\t\t\tbreak;\n\t\tcase 'DateTime':\n\t\t\tif(xml.slice(-1) != \"Z\") xml += \"Z\";\n\t\t\tcell.v = (parseDate(xml) - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n\t\t\tif(cell.v !== cell.v) cell.v = unescapexml(xml);\n\t\t\telse if(cell.v<60) cell.v = cell.v -1;\n\t\t\tif(!nf || nf == \"General\") nf = \"yyyy-mm-dd\";\n\t\t\t/* falls through */\n\t\tcase 'Number':\n\t\t\tif(cell.v === undefined) cell.v=+xml;\n\t\t\tif(!cell.t) cell.t = 'n';\n\t\t\tbreak;\n\t\tcase 'Error': cell.t = 'e'; cell.v = RBErr[xml]; if(o.cellText !== false) cell.w = xml; break;\n\t\tdefault: cell.t = 's'; cell.v = xlml_fixstr(ss||xml); break;\n\t}\n\tsafe_format_xlml(cell, nf, o);\n\tif(o.cellFormula !== false) {\n\t\tif(cell.Formula) {\n\t\t\tvar fstr = unescapexml(cell.Formula);\n\t\t\t/* strictly speaking, the leading = is required but some writers omit */\n\t\t\tif(fstr.charCodeAt(0) == 61 /* = */) fstr = fstr.slice(1);\n\t\t\tcell.f = rc_to_a1(fstr, base);\n\t\t\tdelete cell.Formula;\n\t\t\tif(cell.ArrayRange == \"RC\") cell.F = rc_to_a1(\"RC:RC\", base);\n\t\t\telse if(cell.ArrayRange) {\n\t\t\t\tcell.F = rc_to_a1(cell.ArrayRange, base);\n\t\t\t\tarrayf.push([safe_decode_range(cell.F), cell.F]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor(i = 0; i < arrayf.length; ++i)\n\t\t\t\tif(base.r >= arrayf[i][0].s.r && base.r <= arrayf[i][0].e.r)\n\t\t\t\t\tif(base.c >= arrayf[i][0].s.c && base.c <= arrayf[i][0].e.c)\n\t\t\t\t\t\tcell.F = arrayf[i][1];\n\t\t}\n\t}\n\tif(o.cellStyles) {\n\t\tinteriors.forEach(function(x) {\n\t\t\tif(!S.patternType && x.patternType) S.patternType = x.patternType;\n\t\t});\n\t\tcell.s = S;\n\t}\n\tif(cell.StyleID !== undefined) cell.ixfe = cell.StyleID;\n}\n\nfunction xlml_clean_comment(comment) {\n\tcomment.t = comment.v || \"\";\n\tcomment.t = comment.t.replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n\tcomment.v = comment.w = comment.ixfe = undefined;\n}\n\nfunction xlml_normalize(d) {\n\tif(has_buf && Buffer.isBuffer(d)) return d.toString('utf8');\n\tif(typeof d === 'string') return d;\n\t/* duktape */\n\tif(typeof Uint8Array !== 'undefined' && d instanceof Uint8Array) return utf8read(a2s(ab2a(d)));\n\tthrow new Error(\"Bad input format: expected Buffer or string\");\n}\n\n/* TODO: Everything */\n/* UOS uses CJK in tags */\nvar xlmlregex = /<(\\/?)([^\\s?>!\\/:]*:|)([^\\s?>:\\/]+)[^>]*>/mg;\n//var xlmlregex = /<(\\/?)([a-z0-9]*:|)(\\w+)[^>]*>/mg;\nfunction parse_xlml_xml(d, _opts) {\n\tvar opts = _opts || {};\n\tmake_ssf(SSF);\n\tvar str = debom(xlml_normalize(d));\n\tif(opts.type == 'binary' || opts.type == 'array' || opts.type == 'base64') {\n\t\tif(typeof cptable !== 'undefined') str = cptable.utils.decode(65001, char_codes(str));\n\t\telse str = utf8read(str);\n\t}\n\tvar opening = str.slice(0, 1024).toLowerCase(), ishtml = false;\n\tif(opening.indexOf(\"<?xml\") == -1) [\"html\", \"table\", \"head\", \"meta\", \"script\", \"style\", \"div\"].forEach(function(tag) { if(opening.indexOf(\"<\" + tag) >= 0) ishtml = true; });\n\tif(ishtml) return HTML_.to_workbook(str, opts);\n\tvar Rn;\n\tvar state = [], tmp;\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\tvar sheets = {}, sheetnames = [], cursheet = (opts.dense ? [] : {}), sheetname = \"\";\n\tvar table = {}, cell = ({}), row = {};// eslint-disable-line no-unused-vars\n\tvar dtag = xlml_parsexmltag('<Data ss:Type=\"String\">'), didx = 0;\n\tvar c = 0, r = 0;\n\tvar refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\tvar styles = {}, stag = {};\n\tvar ss = \"\", fidx = 0;\n\tvar merges = [];\n\tvar Props = {}, Custprops = {}, pidx = 0, cp = [];\n\tvar comments = [], comment = ({});\n\tvar cstys = [], csty, seencol = false;\n\tvar arrayf = [];\n\tvar rowinfo = [], rowobj = {}, cc = 0, rr = 0;\n\tvar Workbook = ({ Sheets:[], WBProps:{date1904:false} }), wsprops = {};\n\txlmlregex.lastIndex = 0;\n\tstr = str.replace(/<!--([\\s\\S]*?)-->/mg,\"\");\n\twhile((Rn = xlmlregex.exec(str))) switch(Rn[3]) {\n\t\tcase 'Data':\n\t\t\tif(state[state.length-1][1]) break;\n\t\t\tif(Rn[1]==='/') parse_xlml_data(str.slice(didx, Rn.index), ss, dtag, state[state.length-1][0]==\"Comment\"?comment:cell, {c:c,r:r}, styles, cstys[c], row, arrayf, opts);\n\t\t\telse { ss = \"\"; dtag = xlml_parsexmltag(Rn[0]); didx = Rn.index + Rn[0].length; }\n\t\t\tbreak;\n\t\tcase 'Cell':\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif(comments.length > 0) cell.c = comments;\n\t\t\t\tif((!opts.sheetRows || opts.sheetRows > r) && cell.v !== undefined) {\n\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\tif(!cursheet[r]) cursheet[r] = [];\n\t\t\t\t\t\tcursheet[r][c] = cell;\n\t\t\t\t\t} else cursheet[encode_col(c) + encode_row(r)] = cell;\n\t\t\t\t}\n\t\t\t\tif(cell.HRef) {\n\t\t\t\t\tcell.l = ({Target:cell.HRef});\n\t\t\t\t\tif(cell.HRefScreenTip) cell.l.Tooltip = cell.HRefScreenTip;\n\t\t\t\t\tdelete cell.HRef; delete cell.HRefScreenTip;\n\t\t\t\t}\n\t\t\t\tif(cell.MergeAcross || cell.MergeDown) {\n\t\t\t\t\tcc = c + (parseInt(cell.MergeAcross,10)|0);\n\t\t\t\t\trr = r + (parseInt(cell.MergeDown,10)|0);\n\t\t\t\t\tmerges.push({s:{c:c,r:r},e:{c:cc,r:rr}});\n\t\t\t\t}\n\t\t\t\tif(!opts.sheetStubs) { if(cell.MergeAcross) c = cc + 1; else ++c; }\n\t\t\t\telse if(cell.MergeAcross || cell.MergeDown) {\nfor(var cma = c; cma <= cc; ++cma) {\n\t\t\t\t\t\tfor(var cmd = r; cmd <= rr; ++cmd) {\n\t\t\t\t\t\t\tif(cma > c || cmd > r) {\n\t\t\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\t\t\tif(!cursheet[cmd]) cursheet[cmd] = [];\n\t\t\t\t\t\t\t\t\tcursheet[cmd][cma] = {t:'z'};\n\t\t\t\t\t\t\t\t} else cursheet[encode_col(cma) + encode_row(cmd)] = {t:'z'};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tc = cc + 1;\n\t\t\t\t}\n\t\t\t\telse ++c;\n\t\t\t} else {\n\t\t\t\tcell = xlml_parsexmltagobj(Rn[0]);\n\t\t\t\tif(cell.Index) c = +cell.Index - 1;\n\t\t\t\tif(c < refguess.s.c) refguess.s.c = c;\n\t\t\t\tif(c > refguess.e.c) refguess.e.c = c;\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") ++c;\n\t\t\t\tcomments = [];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'Row':\n\t\t\tif(Rn[1]==='/' || Rn[0].slice(-2) === \"/>\") {\n\t\t\t\tif(r < refguess.s.r) refguess.s.r = r;\n\t\t\t\tif(r > refguess.e.r) refguess.e.r = r;\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") {\n\t\t\t\t\trow = xlml_parsexmltag(Rn[0]);\n\t\t\t\t\tif(row.Index) r = +row.Index - 1;\n\t\t\t\t}\n\t\t\t\tc = 0; ++r;\n\t\t\t} else {\n\t\t\t\trow = xlml_parsexmltag(Rn[0]);\n\t\t\t\tif(row.Index) r = +row.Index - 1;\n\t\t\t\trowobj = {};\n\t\t\t\tif(row.AutoFitHeight == \"0\" || row.Height) {\n\t\t\t\t\trowobj.hpx = parseInt(row.Height, 10); rowobj.hpt = px2pt(rowobj.hpx);\n\t\t\t\t\trowinfo[r] = rowobj;\n\t\t\t\t}\n\t\t\t\tif(row.Hidden == \"1\") { rowobj.hidden = true; rowinfo[r] = rowobj; }\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'Worksheet': /* TODO: read range from FullRows/FullColumns */\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n\t\t\t\tsheetnames.push(sheetname);\n\t\t\t\tif(refguess.s.r <= refguess.e.r && refguess.s.c <= refguess.e.c) {\n\t\t\t\t\tcursheet[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\tif(opts.sheetRows && opts.sheetRows <= refguess.e.r) {\n\t\t\t\t\t\tcursheet[\"!fullref\"] = cursheet[\"!ref\"];\n\t\t\t\t\t\trefguess.e.r = opts.sheetRows - 1;\n\t\t\t\t\t\tcursheet[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(merges.length) cursheet[\"!merges\"] = merges;\n\t\t\t\tif(cstys.length > 0) cursheet[\"!cols\"] = cstys;\n\t\t\t\tif(rowinfo.length > 0) cursheet[\"!rows\"] = rowinfo;\n\t\t\t\tsheets[sheetname] = cursheet;\n\t\t\t} else {\n\t\t\t\trefguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\t\t\t\tr = c = 0;\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\ttmp = xlml_parsexmltag(Rn[0]);\n\t\t\t\tsheetname = unescapexml(tmp.Name);\n\t\t\t\tcursheet = (opts.dense ? [] : {});\n\t\t\t\tmerges = [];\n\t\t\t\tarrayf = [];\n\t\t\t\trowinfo = [];\n\t\t\t\twsprops = {name:sheetname, Hidden:0};\n\t\t\t\tWorkbook.Sheets.push(wsprops);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'Table':\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].slice(-2) == \"/>\") break;\n\t\t\telse {\n\t\t\t\ttable = xlml_parsexmltag(Rn[0]);\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\tcstys = []; seencol = false;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'Style':\n\t\t\tif(Rn[1]==='/') process_style_xlml(styles, stag, opts);\n\t\t\telse stag = xlml_parsexmltag(Rn[0]);\n\t\t\tbreak;\n\n\t\tcase 'NumberFormat':\n\t\t\tstag.nf = unescapexml(xlml_parsexmltag(Rn[0]).Format || \"General\");\n\t\t\tif(XLMLFormatMap[stag.nf]) stag.nf = XLMLFormatMap[stag.nf];\n\t\t\tfor(var ssfidx = 0; ssfidx != 0x188; ++ssfidx) if(SSF._table[ssfidx] == stag.nf) break;\n\t\t\tif(ssfidx == 0x188) for(ssfidx = 0x39; ssfidx != 0x188; ++ssfidx) if(SSF._table[ssfidx] == null) { SSF.load(stag.nf, ssfidx); break; }\n\t\t\tbreak;\n\n\t\tcase 'Column':\n\t\t\tif(state[state.length-1][0] !== 'Table') break;\n\t\t\tcsty = xlml_parsexmltag(Rn[0]);\n\t\t\tif(csty.Hidden) { csty.hidden = true; delete csty.Hidden; }\n\t\t\tif(csty.Width) csty.wpx = parseInt(csty.Width, 10);\n\t\t\tif(!seencol && csty.wpx > 10) {\n\t\t\t\tseencol = true; MDW = DEF_MDW; //find_mdw_wpx(csty.wpx);\n\t\t\t\tfor(var _col = 0; _col < cstys.length; ++_col) if(cstys[_col]) process_col(cstys[_col]);\n\t\t\t}\n\t\t\tif(seencol) process_col(csty);\n\t\t\tcstys[(csty.Index-1||cstys.length)] = csty;\n\t\t\tfor(var i = 0; i < +csty.Span; ++i) cstys[cstys.length] = dup(csty);\n\t\t\tbreak;\n\n\t\tcase 'NamedRange':\n\t\t\tif(!Workbook.Names) Workbook.Names = [];\n\t\t\tvar _NamedRange = parsexmltag(Rn[0]);\n\t\t\tvar _DefinedName = ({\n\t\t\t\tName: _NamedRange.Name,\n\t\t\t\tRef: rc_to_a1(_NamedRange.RefersTo.slice(1), {r:0, c:0})\n\t\t\t});\n\t\t\tif(Workbook.Sheets.length>0) _DefinedName.Sheet=Workbook.Sheets.length-1;\nWorkbook.Names.push(_DefinedName);\n\t\t\tbreak;\n\n\t\tcase 'NamedCell': break;\n\t\tcase 'B': break;\n\t\tcase 'I': break;\n\t\tcase 'U': break;\n\t\tcase 'S': break;\n\t\tcase 'Sub': break;\n\t\tcase 'Sup': break;\n\t\tcase 'Span': break;\n\t\tcase 'Border': break;\n\t\tcase 'Alignment': break;\n\t\tcase 'Borders': break;\n\t\tcase 'Font':\n\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\telse if(Rn[1]===\"/\") ss += str.slice(fidx, Rn.index);\n\t\t\telse fidx = Rn.index + Rn[0].length;\n\t\t\tbreak;\n\t\tcase 'Interior':\n\t\t\tif(!opts.cellStyles) break;\n\t\t\tstag.Interior = xlml_parsexmltag(Rn[0]);\n\t\t\tbreak;\n\t\tcase 'Protection': break;\n\n\t\tcase 'Author':\n\t\tcase 'Title':\n\t\tcase 'Description':\n\t\tcase 'Created':\n\t\tcase 'Keywords':\n\t\tcase 'Subject':\n\t\tcase 'Category':\n\t\tcase 'Company':\n\t\tcase 'LastAuthor':\n\t\tcase 'LastSaved':\n\t\tcase 'LastPrinted':\n\t\tcase 'Version':\n\t\tcase 'Revision':\n\t\tcase 'TotalTime':\n\t\tcase 'HyperlinkBase':\n\t\tcase 'Manager':\n\t\tcase 'ContentStatus':\n\t\tcase 'Identifier':\n\t\tcase 'Language':\n\t\tcase 'AppName':\n\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\telse if(Rn[1]===\"/\") xlml_set_prop(Props, Rn[3], str.slice(pidx, Rn.index));\n\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\tbreak;\n\t\tcase 'Paragraphs': break;\n\n\t\tcase 'Styles':\n\t\tcase 'Workbook':\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse state.push([Rn[3], false]);\n\t\t\tbreak;\n\n\t\tcase 'Comment':\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n\t\t\t\txlml_clean_comment(comment);\n\t\t\t\tcomments.push(comment);\n\t\t\t} else {\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\ttmp = xlml_parsexmltag(Rn[0]);\n\t\t\t\tcomment = ({a:tmp.Author});\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'AutoFilter':\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\tvar AutoFilter = xlml_parsexmltag(Rn[0]);\n\t\t\t\tcursheet['!autofilter'] = { ref:rc_to_a1(AutoFilter.Range).replace(/\\$/g,\"\") };\n\t\t\t\tstate.push([Rn[3], true]);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'Name': break;\n\n\t\tcase 'ComponentOptions':\n\t\tcase 'DocumentProperties':\n\t\tcase 'CustomDocumentProperties':\n\t\tcase 'OfficeDocumentSettings':\n\t\tcase 'PivotTable':\n\t\tcase 'PivotCache':\n\t\tcase 'Names':\n\t\tcase 'MapInfo':\n\t\tcase 'PageBreaks':\n\t\tcase 'QueryTable':\n\t\tcase 'DataValidation':\n\t\tcase 'Sorting':\n\t\tcase 'Schema':\n\t\tcase 'data':\n\t\tcase 'ConditionalFormatting':\n\t\tcase 'SmartTagType':\n\t\tcase 'SmartTags':\n\t\tcase 'ExcelWorkbook':\n\t\tcase 'WorkbookOptions':\n\t\tcase 'WorksheetOptions':\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t/* FODS file root is <office:document> */\n\t\t\tif(state.length == 0 && Rn[3] == \"document\") return parse_fods(str, opts);\n\t\t\t/* UOS file root is <uof:UOF> */\n\t\t\tif(state.length == 0 && Rn[3] == \"UOF\") return parse_fods(str, opts);\n\n\t\t\tvar seen = true;\n\t\t\tswitch(state[state.length-1][0]) {\n\t\t\t\t/* OfficeDocumentSettings */\n\t\t\t\tcase 'OfficeDocumentSettings': switch(Rn[3]) {\n\t\t\t\t\tcase 'AllowPNG': break;\n\t\t\t\t\tcase 'RemovePersonalInformation': break;\n\t\t\t\t\tcase 'DownloadComponents': break;\n\t\t\t\t\tcase 'LocationOfComponents': break;\n\t\t\t\t\tcase 'Colors': break;\n\t\t\t\t\tcase 'Color': break;\n\t\t\t\t\tcase 'Index': break;\n\t\t\t\t\tcase 'RGB': break;\n\t\t\t\t\tcase 'PixelsPerInch': break; // TODO: set PPI\n\t\t\t\t\tcase 'TargetScreenSize': break;\n\t\t\t\t\tcase 'ReadOnlyRecommended': break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* ComponentOptions */\n\t\t\t\tcase 'ComponentOptions': switch(Rn[3]) {\n\t\t\t\t\tcase 'Toolbar': break;\n\t\t\t\t\tcase 'HideOfficeLogo': break;\n\t\t\t\t\tcase 'SpreadsheetAutoFit': break;\n\t\t\t\t\tcase 'Label': break;\n\t\t\t\t\tcase 'Caption': break;\n\t\t\t\t\tcase 'MaxHeight': break;\n\t\t\t\t\tcase 'MaxWidth': break;\n\t\t\t\t\tcase 'NextSheetNumber': break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* ExcelWorkbook */\n\t\t\t\tcase 'ExcelWorkbook': switch(Rn[3]) {\n\t\t\t\t\tcase 'Date1904':\nWorkbook.WBProps.date1904 = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'WindowHeight': break;\n\t\t\t\t\tcase 'WindowWidth': break;\n\t\t\t\t\tcase 'WindowTopX': break;\n\t\t\t\t\tcase 'WindowTopY': break;\n\t\t\t\t\tcase 'TabRatio': break;\n\t\t\t\t\tcase 'ProtectStructure': break;\n\t\t\t\t\tcase 'ProtectWindows': break;\n\t\t\t\t\tcase 'ActiveSheet': break;\n\t\t\t\t\tcase 'DisplayInkNotes': break;\n\t\t\t\t\tcase 'FirstVisibleSheet': break;\n\t\t\t\t\tcase 'SupBook': break;\n\t\t\t\t\tcase 'SheetName': break;\n\t\t\t\t\tcase 'SheetIndex': break;\n\t\t\t\t\tcase 'SheetIndexFirst': break;\n\t\t\t\t\tcase 'SheetIndexLast': break;\n\t\t\t\t\tcase 'Dll': break;\n\t\t\t\t\tcase 'AcceptLabelsInFormulas': break;\n\t\t\t\t\tcase 'DoNotSaveLinkValues': break;\n\t\t\t\t\tcase 'Iteration': break;\n\t\t\t\t\tcase 'MaxIterations': break;\n\t\t\t\t\tcase 'MaxChange': break;\n\t\t\t\t\tcase 'Path': break;\n\t\t\t\t\tcase 'Xct': break;\n\t\t\t\t\tcase 'Count': break;\n\t\t\t\t\tcase 'SelectedSheets': break;\n\t\t\t\t\tcase 'Calculation': break;\n\t\t\t\t\tcase 'Uncalced': break;\n\t\t\t\t\tcase 'StartupPrompt': break;\n\t\t\t\t\tcase 'Crn': break;\n\t\t\t\t\tcase 'ExternName': break;\n\t\t\t\t\tcase 'Formula': break;\n\t\t\t\t\tcase 'ColFirst': break;\n\t\t\t\t\tcase 'ColLast': break;\n\t\t\t\t\tcase 'WantAdvise': break;\n\t\t\t\t\tcase 'Boolean': break;\n\t\t\t\t\tcase 'Error': break;\n\t\t\t\t\tcase 'Text': break;\n\t\t\t\t\tcase 'OLE': break;\n\t\t\t\t\tcase 'NoAutoRecover': break;\n\t\t\t\t\tcase 'PublishObjects': break;\n\t\t\t\t\tcase 'DoNotCalculateBeforeSave': break;\n\t\t\t\t\tcase 'Number': break;\n\t\t\t\t\tcase 'RefModeR1C1': break;\n\t\t\t\t\tcase 'EmbedSaveSmartTags': break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* WorkbookOptions */\n\t\t\t\tcase 'WorkbookOptions': switch(Rn[3]) {\n\t\t\t\t\tcase 'OWCVersion': break;\n\t\t\t\t\tcase 'Height': break;\n\t\t\t\t\tcase 'Width': break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* WorksheetOptions */\n\t\t\t\tcase 'WorksheetOptions': switch(Rn[3]) {\n\t\t\t\t\tcase 'Visible':\n\t\t\t\t\t\tif(Rn[0].slice(-2) === \"/>\"){/* empty */}\n\t\t\t\t\t\telse if(Rn[1]===\"/\") switch(str.slice(pidx, Rn.index)) {\n\t\t\t\t\t\t\tcase \"SheetHidden\": wsprops.Hidden = 1; break;\n\t\t\t\t\t\t\tcase \"SheetVeryHidden\": wsprops.Hidden = 2; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Header':\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');\n\t\t\t\t\t\tcursheet['!margins'].header = parsexmltag(Rn[0]).Margin;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Footer':\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');\n\t\t\t\t\t\tcursheet['!margins'].footer = parsexmltag(Rn[0]).Margin;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'PageMargins':\n\t\t\t\t\t\tvar pagemargins = parsexmltag(Rn[0]);\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={},'xlml');\n\t\t\t\t\t\tif(pagemargins.Top) cursheet['!margins'].top = pagemargins.Top;\n\t\t\t\t\t\tif(pagemargins.Left) cursheet['!margins'].left = pagemargins.Left;\n\t\t\t\t\t\tif(pagemargins.Right) cursheet['!margins'].right = pagemargins.Right;\n\t\t\t\t\t\tif(pagemargins.Bottom) cursheet['!margins'].bottom = pagemargins.Bottom;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DisplayRightToLeft':\n\t\t\t\t\t\tif(!Workbook.Views) Workbook.Views = [];\n\t\t\t\t\t\tif(!Workbook.Views[0]) Workbook.Views[0] = {};\n\t\t\t\t\t\tWorkbook.Views[0].RTL = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Unsynced': break;\n\t\t\t\t\tcase 'Print': break;\n\t\t\t\t\tcase 'Panes': break;\n\t\t\t\t\tcase 'Scale': break;\n\t\t\t\t\tcase 'Pane': break;\n\t\t\t\t\tcase 'Number': break;\n\t\t\t\t\tcase 'Layout': break;\n\t\t\t\t\tcase 'PageSetup': break;\n\t\t\t\t\tcase 'Selected': break;\n\t\t\t\t\tcase 'ProtectObjects': break;\n\t\t\t\t\tcase 'EnableSelection': break;\n\t\t\t\t\tcase 'ProtectScenarios': break;\n\t\t\t\t\tcase 'ValidPrinterInfo': break;\n\t\t\t\t\tcase 'HorizontalResolution': break;\n\t\t\t\t\tcase 'VerticalResolution': break;\n\t\t\t\t\tcase 'NumberofCopies': break;\n\t\t\t\t\tcase 'ActiveRow': break;\n\t\t\t\t\tcase 'ActiveCol': break;\n\t\t\t\t\tcase 'ActivePane': break;\n\t\t\t\t\tcase 'TopRowVisible': break;\n\t\t\t\t\tcase 'TopRowBottomPane': break;\n\t\t\t\t\tcase 'LeftColumnVisible': break;\n\t\t\t\t\tcase 'LeftColumnRightPane': break;\n\t\t\t\t\tcase 'FitToPage': break;\n\t\t\t\t\tcase 'RangeSelection': break;\n\t\t\t\t\tcase 'PaperSizeIndex': break;\n\t\t\t\t\tcase 'PageLayoutZoom': break;\n\t\t\t\t\tcase 'PageBreakZoom': break;\n\t\t\t\t\tcase 'FilterOn': break;\n\t\t\t\t\tcase 'DoNotDisplayGridlines': break;\n\t\t\t\t\tcase 'SplitHorizontal': break;\n\t\t\t\t\tcase 'SplitVertical': break;\n\t\t\t\t\tcase 'FreezePanes': break;\n\t\t\t\t\tcase 'FrozenNoSplit': break;\n\t\t\t\t\tcase 'FitWidth': break;\n\t\t\t\t\tcase 'FitHeight': break;\n\t\t\t\t\tcase 'CommentsLayout': break;\n\t\t\t\t\tcase 'Zoom': break;\n\t\t\t\t\tcase 'LeftToRight': break;\n\t\t\t\t\tcase 'Gridlines': break;\n\t\t\t\t\tcase 'AllowSort': break;\n\t\t\t\t\tcase 'AllowFilter': break;\n\t\t\t\t\tcase 'AllowInsertRows': break;\n\t\t\t\t\tcase 'AllowDeleteRows': break;\n\t\t\t\t\tcase 'AllowInsertCols': break;\n\t\t\t\t\tcase 'AllowDeleteCols': break;\n\t\t\t\t\tcase 'AllowInsertHyperlinks': break;\n\t\t\t\t\tcase 'AllowFormatCells': break;\n\t\t\t\t\tcase 'AllowSizeCols': break;\n\t\t\t\t\tcase 'AllowSizeRows': break;\n\t\t\t\t\tcase 'NoSummaryRowsBelowDetail': break;\n\t\t\t\t\tcase 'TabColorIndex': break;\n\t\t\t\t\tcase 'DoNotDisplayHeadings': break;\n\t\t\t\t\tcase 'ShowPageLayoutZoom': break;\n\t\t\t\t\tcase 'NoSummaryColumnsRightDetail': break;\n\t\t\t\t\tcase 'BlackAndWhite': break;\n\t\t\t\t\tcase 'DoNotDisplayZeros': break;\n\t\t\t\t\tcase 'DisplayPageBreak': break;\n\t\t\t\t\tcase 'RowColHeadings': break;\n\t\t\t\t\tcase 'DoNotDisplayOutline': break;\n\t\t\t\t\tcase 'NoOrientation': break;\n\t\t\t\t\tcase 'AllowUsePivotTables': break;\n\t\t\t\t\tcase 'ZeroHeight': break;\n\t\t\t\t\tcase 'ViewableRange': break;\n\t\t\t\t\tcase 'Selection': break;\n\t\t\t\t\tcase 'ProtectContents': break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* PivotTable */\n\t\t\t\tcase 'PivotTable': case 'PivotCache': switch(Rn[3]) {\n\t\t\t\t\tcase 'ImmediateItemsOnDrop': break;\n\t\t\t\t\tcase 'ShowPageMultipleItemLabel': break;\n\t\t\t\t\tcase 'CompactRowIndent': break;\n\t\t\t\t\tcase 'Location': break;\n\t\t\t\t\tcase 'PivotField': break;\n\t\t\t\t\tcase 'Orientation': break;\n\t\t\t\t\tcase 'LayoutForm': break;\n\t\t\t\t\tcase 'LayoutSubtotalLocation': break;\n\t\t\t\t\tcase 'LayoutCompactRow': break;\n\t\t\t\t\tcase 'Position': break;\n\t\t\t\t\tcase 'PivotItem': break;\n\t\t\t\t\tcase 'DataType': break;\n\t\t\t\t\tcase 'DataField': break;\n\t\t\t\t\tcase 'SourceName': break;\n\t\t\t\t\tcase 'ParentField': break;\n\t\t\t\t\tcase 'PTLineItems': break;\n\t\t\t\t\tcase 'PTLineItem': break;\n\t\t\t\t\tcase 'CountOfSameItems': break;\n\t\t\t\t\tcase 'Item': break;\n\t\t\t\t\tcase 'ItemType': break;\n\t\t\t\t\tcase 'PTSource': break;\n\t\t\t\t\tcase 'CacheIndex': break;\n\t\t\t\t\tcase 'ConsolidationReference': break;\n\t\t\t\t\tcase 'FileName': break;\n\t\t\t\t\tcase 'Reference': break;\n\t\t\t\t\tcase 'NoColumnGrand': break;\n\t\t\t\t\tcase 'NoRowGrand': break;\n\t\t\t\t\tcase 'BlankLineAfterItems': break;\n\t\t\t\t\tcase 'Hidden': break;\n\t\t\t\t\tcase 'Subtotal': break;\n\t\t\t\t\tcase 'BaseField': break;\n\t\t\t\t\tcase 'MapChildItems': break;\n\t\t\t\t\tcase 'Function': break;\n\t\t\t\t\tcase 'RefreshOnFileOpen': break;\n\t\t\t\t\tcase 'PrintSetTitles': break;\n\t\t\t\t\tcase 'MergeLabels': break;\n\t\t\t\t\tcase 'DefaultVersion': break;\n\t\t\t\t\tcase 'RefreshName': break;\n\t\t\t\t\tcase 'RefreshDate': break;\n\t\t\t\t\tcase 'RefreshDateCopy': break;\n\t\t\t\t\tcase 'VersionLastRefresh': break;\n\t\t\t\t\tcase 'VersionLastUpdate': break;\n\t\t\t\t\tcase 'VersionUpdateableMin': break;\n\t\t\t\t\tcase 'VersionRefreshableMin': break;\n\t\t\t\t\tcase 'Calculation': break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* PageBreaks */\n\t\t\t\tcase 'PageBreaks': switch(Rn[3]) {\n\t\t\t\t\tcase 'ColBreaks': break;\n\t\t\t\t\tcase 'ColBreak': break;\n\t\t\t\t\tcase 'RowBreaks': break;\n\t\t\t\t\tcase 'RowBreak': break;\n\t\t\t\t\tcase 'ColStart': break;\n\t\t\t\t\tcase 'ColEnd': break;\n\t\t\t\t\tcase 'RowEnd': break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* AutoFilter */\n\t\t\t\tcase 'AutoFilter': switch(Rn[3]) {\n\t\t\t\t\tcase 'AutoFilterColumn': break;\n\t\t\t\t\tcase 'AutoFilterCondition': break;\n\t\t\t\t\tcase 'AutoFilterAnd': break;\n\t\t\t\t\tcase 'AutoFilterOr': break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* QueryTable */\n\t\t\t\tcase 'QueryTable': switch(Rn[3]) {\n\t\t\t\t\tcase 'Id': break;\n\t\t\t\t\tcase 'AutoFormatFont': break;\n\t\t\t\t\tcase 'AutoFormatPattern': break;\n\t\t\t\t\tcase 'QuerySource': break;\n\t\t\t\t\tcase 'QueryType': break;\n\t\t\t\t\tcase 'EnableRedirections': break;\n\t\t\t\t\tcase 'RefreshedInXl9': break;\n\t\t\t\t\tcase 'URLString': break;\n\t\t\t\t\tcase 'HTMLTables': break;\n\t\t\t\t\tcase 'Connection': break;\n\t\t\t\t\tcase 'CommandText': break;\n\t\t\t\t\tcase 'RefreshInfo': break;\n\t\t\t\t\tcase 'NoTitles': break;\n\t\t\t\t\tcase 'NextId': break;\n\t\t\t\t\tcase 'ColumnInfo': break;\n\t\t\t\t\tcase 'OverwriteCells': break;\n\t\t\t\t\tcase 'DoNotPromptForFile': break;\n\t\t\t\t\tcase 'TextWizardSettings': break;\n\t\t\t\t\tcase 'Source': break;\n\t\t\t\t\tcase 'Number': break;\n\t\t\t\t\tcase 'Decimal': break;\n\t\t\t\t\tcase 'ThousandSeparator': break;\n\t\t\t\t\tcase 'TrailingMinusNumbers': break;\n\t\t\t\t\tcase 'FormatSettings': break;\n\t\t\t\t\tcase 'FieldType': break;\n\t\t\t\t\tcase 'Delimiters': break;\n\t\t\t\t\tcase 'Tab': break;\n\t\t\t\t\tcase 'Comma': break;\n\t\t\t\t\tcase 'AutoFormatName': break;\n\t\t\t\t\tcase 'VersionLastEdit': break;\n\t\t\t\t\tcase 'VersionLastRefresh': break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\tcase 'Sorting':\n\t\t\t\tcase 'ConditionalFormatting':\n\t\t\t\tcase 'DataValidation':\n\t\t\t\tswitch(Rn[3]) {\n\t\t\t\t\tcase 'Range': break;\n\t\t\t\t\tcase 'Type': break;\n\t\t\t\t\tcase 'Min': break;\n\t\t\t\t\tcase 'Max': break;\n\t\t\t\t\tcase 'Sort': break;\n\t\t\t\t\tcase 'Descending': break;\n\t\t\t\t\tcase 'Order': break;\n\t\t\t\t\tcase 'CaseSensitive': break;\n\t\t\t\t\tcase 'Value': break;\n\t\t\t\t\tcase 'ErrorStyle': break;\n\t\t\t\t\tcase 'ErrorMessage': break;\n\t\t\t\t\tcase 'ErrorTitle': break;\n\t\t\t\t\tcase 'CellRangeList': break;\n\t\t\t\t\tcase 'InputMessage': break;\n\t\t\t\t\tcase 'InputTitle': break;\n\t\t\t\t\tcase 'ComboHide': break;\n\t\t\t\t\tcase 'InputHide': break;\n\t\t\t\t\tcase 'Condition': break;\n\t\t\t\t\tcase 'Qualifier': break;\n\t\t\t\t\tcase 'UseBlank': break;\n\t\t\t\t\tcase 'Value1': break;\n\t\t\t\t\tcase 'Value2': break;\n\t\t\t\t\tcase 'Format': break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* MapInfo (schema) */\n\t\t\t\tcase 'MapInfo': case 'Schema': case 'data': switch(Rn[3]) {\n\t\t\t\t\tcase 'Map': break;\n\t\t\t\t\tcase 'Entry': break;\n\t\t\t\t\tcase 'Range': break;\n\t\t\t\t\tcase 'XPath': break;\n\t\t\t\t\tcase 'Field': break;\n\t\t\t\t\tcase 'XSDType': break;\n\t\t\t\t\tcase 'FilterOn': break;\n\t\t\t\t\tcase 'Aggregate': break;\n\t\t\t\t\tcase 'ElementType': break;\n\t\t\t\t\tcase 'AttributeType': break;\n\t\t\t\t/* These are from xsd (XML Schema Definition) */\n\t\t\t\t\tcase 'schema':\n\t\t\t\t\tcase 'element':\n\t\t\t\t\tcase 'complexType':\n\t\t\t\t\tcase 'datatype':\n\t\t\t\t\tcase 'all':\n\t\t\t\t\tcase 'attribute':\n\t\t\t\t\tcase 'extends': break;\n\n\t\t\t\t\tcase 'row': break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* SmartTags (can be anything) */\n\t\t\t\tcase 'SmartTags': break;\n\n\t\t\t\tdefault: seen = false; break;\n\t\t\t}\n\t\t\tif(seen) break;\n\t\t\t/* CustomDocumentProperties */\n\t\t\tif(!state[state.length-1][1]) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n\t\t\tif(state[state.length-1][0]==='CustomDocumentProperties') {\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\t\telse if(Rn[1]===\"/\") xlml_set_custprop(Custprops, Rn[3], cp, str.slice(pidx, Rn.index));\n\t\t\t\telse { cp = Rn; pidx = Rn.index + Rn[0].length; }\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(opts.WTF) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n\t}\n\tvar out = ({});\n\tif(!opts.bookSheets && !opts.bookProps) out.Sheets = sheets;\n\tout.SheetNames = sheetnames;\n\tout.Workbook = Workbook;\n\tout.SSF = SSF.get_table();\n\tout.Props = Props;\n\tout.Custprops = Custprops;\n\treturn out;\n}\n\nfunction parse_xlml(data, opts) {\n\tfix_read_opts(opts=opts||{});\n\tswitch(opts.type||\"base64\") {\n\t\tcase \"base64\": return parse_xlml_xml(Base64.decode(data), opts);\n\t\tcase \"binary\": case \"buffer\": case \"file\": return parse_xlml_xml(data, opts);\n\t\tcase \"array\": return parse_xlml_xml(a2s(data), opts);\n\t}\n}\n\n/* TODO */\nfunction write_props_xlml(wb, opts) {\n\tvar o = [];\n\t/* DocumentProperties */\n\tif(wb.Props) o.push(xlml_write_docprops(wb.Props, opts));\n\t/* CustomDocumentProperties */\n\tif(wb.Custprops) o.push(xlml_write_custprops(wb.Props, wb.Custprops, opts));\n\treturn o.join(\"\");\n}\n/* TODO */\nfunction write_wb_xlml() {\n\t/* OfficeDocumentSettings */\n\t/* ExcelWorkbook */\n\treturn \"\";\n}\n/* TODO */\nfunction write_sty_xlml(wb, opts) {\n\t/* Styles */\n\tvar styles = ['<Style ss:ID=\"Default\" ss:Name=\"Normal\"><NumberFormat/></Style>'];\n\topts.cellXfs.forEach(function(xf, id) {\n\t\tvar payload = [];\n\t\tpayload.push(writextag('NumberFormat', null, {\"ss:Format\": escapexml(SSF._table[xf.numFmtId])}));\n\t\tstyles.push(writextag('Style', payload.join(\"\"), {\"ss:ID\": \"s\" + (21+id)}));\n\t});\n\treturn writextag(\"Styles\", styles.join(\"\"));\n}\nfunction write_name_xlml(n) { return writextag(\"NamedRange\", null, {\"ss:Name\": n.Name, \"ss:RefersTo\":\"=\" + a1_to_rc(n.Ref, {r:0,c:0})}); }\nfunction write_names_xlml(wb) {\n\tif(!((wb||{}).Workbook||{}).Names) return \"\";\nvar names = wb.Workbook.Names;\n\tvar out = [];\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar n = names[i];\n\t\tif(n.Sheet != null) continue;\n\t\tif(n.Name.match(/^_xlfn\\./)) continue;\n\t\tout.push(write_name_xlml(n));\n\t}\n\treturn writextag(\"Names\", out.join(\"\"));\n}\nfunction write_ws_xlml_names(ws, opts, idx, wb) {\n\tif(!ws) return \"\";\n\tif(!((wb||{}).Workbook||{}).Names) return \"\";\nvar names = wb.Workbook.Names;\n\tvar out = [];\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar n = names[i];\n\t\tif(n.Sheet != idx) continue;\n\t\t/*switch(n.Name) {\n\t\t\tcase \"_\": continue;\n\t\t}*/\n\t\tif(n.Name.match(/^_xlfn\\./)) continue;\n\t\tout.push(write_name_xlml(n));\n\t}\n\treturn out.join(\"\");\n}\n/* WorksheetOptions */\nfunction write_ws_xlml_wsopts(ws, opts, idx, wb) {\n\tif(!ws) return \"\";\n\tvar o = [];\n\t/* NOTE: spec technically allows any order, but stick with implied order */\n\n\t/* FitToPage */\n\t/* DoNotDisplayColHeaders */\n\t/* DoNotDisplayRowHeaders */\n\t/* ViewableRange */\n\t/* Selection */\n\t/* GridlineColor */\n\t/* Name */\n\t/* ExcelWorksheetType */\n\t/* IntlMacro */\n\t/* Unsynced */\n\t/* Selected */\n\t/* CodeName */\n\n\tif(ws['!margins']) {\n\t\to.push(\"<PageSetup>\");\n\t\tif(ws['!margins'].header) o.push(writextag(\"Header\", null, {'x:Margin':ws['!margins'].header}));\n\t\tif(ws['!margins'].footer) o.push(writextag(\"Footer\", null, {'x:Margin':ws['!margins'].footer}));\n\t\to.push(writextag(\"PageMargins\", null, {\n\t\t\t'x:Bottom': ws['!margins'].bottom || \"0.75\",\n\t\t\t'x:Left': ws['!margins'].left || \"0.7\",\n\t\t\t'x:Right': ws['!margins'].right || \"0.7\",\n\t\t\t'x:Top': ws['!margins'].top || \"0.75\"\n\t\t}));\n\t\to.push(\"</PageSetup>\");\n\t}\n\n\t/* PageSetup */\n\t/* DisplayPageBreak */\n\t/* TransitionExpressionEvaluation */\n\t/* TransitionFormulaEntry */\n\t/* Print */\n\t/* Zoom */\n\t/* PageLayoutZoom */\n\t/* PageBreakZoom */\n\t/* ShowPageBreakZoom */\n\t/* DefaultRowHeight */\n\t/* DefaultColumnWidth */\n\t/* StandardWidth */\n\n\tif(wb && wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx]) {\n\t\t/* Visible */\n\t\tif(wb.Workbook.Sheets[idx].Hidden) o.push(writextag(\"Visible\", (wb.Workbook.Sheets[idx].Hidden == 1 ? \"SheetHidden\" : \"SheetVeryHidden\"), {}));\n\t\telse {\n\t\t\t/* Selected */\n\t\t\tfor(var i = 0; i < idx; ++i) if(wb.Workbook.Sheets[i] && !wb.Workbook.Sheets[i].Hidden) break;\n\t\t\tif(i == idx) o.push(\"<Selected/>\");\n\t\t}\n\t}\n\n\t/* LeftColumnVisible */\n\n\tif(((((wb||{}).Workbook||{}).Views||[])[0]||{}).RTL) o.push(\"<DisplayRightToLeft/>\");\n\n\t/* GridlineColorIndex */\n\t/* DisplayFormulas */\n\t/* DoNotDisplayGridlines */\n\t/* DoNotDisplayHeadings */\n\t/* DoNotDisplayOutline */\n\t/* ApplyAutomaticOutlineStyles */\n\t/* NoSummaryRowsBelowDetail */\n\t/* NoSummaryColumnsRightDetail */\n\t/* DoNotDisplayZeros */\n\t/* ActiveRow */\n\t/* ActiveColumn */\n\t/* FilterOn */\n\t/* RangeSelection */\n\t/* TopRowVisible */\n\t/* TopRowBottomPane */\n\t/* LeftColumnRightPane */\n\t/* ActivePane */\n\t/* SplitHorizontal */\n\t/* SplitVertical */\n\t/* FreezePanes */\n\t/* FrozenNoSplit */\n\t/* TabColorIndex */\n\t/* Panes */\n\n\t/* NOTE: Password not supported in XLML Format */\n\tif(ws['!protect']) {\n\t\to.push(writetag(\"ProtectContents\", \"True\"));\n\t\tif(ws['!protect'].objects) o.push(writetag(\"ProtectObjects\", \"True\"));\n\t\tif(ws['!protect'].scenarios) o.push(writetag(\"ProtectScenarios\", \"True\"));\n\t\tif(ws['!protect'].selectLockedCells != null && !ws['!protect'].selectLockedCells) o.push(writetag(\"EnableSelection\", \"NoSelection\"));\n\t\telse if(ws['!protect'].selectUnlockedCells != null && !ws['!protect'].selectUnlockedCells) o.push(writetag(\"EnableSelection\", \"UnlockedCells\"));\n\t[\n\t\t[ \"formatCells\", \"AllowFormatCells\" ],\n\t\t[ \"formatColumns\", \"AllowSizeCols\" ],\n\t\t[ \"formatRows\", \"AllowSizeRows\" ],\n\t\t[ \"insertColumns\", \"AllowInsertCols\" ],\n\t\t[ \"insertRows\", \"AllowInsertRows\" ],\n\t\t[ \"insertHyperlinks\", \"AllowInsertHyperlinks\" ],\n\t\t[ \"deleteColumns\", \"AllowDeleteCols\" ],\n\t\t[ \"deleteRows\", \"AllowDeleteRows\" ],\n\t\t[ \"sort\", \"AllowSort\" ],\n\t\t[ \"autoFilter\", \"AllowFilter\" ],\n\t\t[ \"pivotTables\", \"AllowUsePivotTables\" ]\n\t].forEach(function(x) { if(ws['!protect'][x[0]]) o.push(\"<\"+x[1]+\"/>\"); });\n\t}\n\n\tif(o.length == 0) return \"\";\n\treturn writextag(\"WorksheetOptions\", o.join(\"\"), {xmlns:XLMLNS.x});\n}\nfunction write_ws_xlml_comment(comments) {\n\treturn comments.map(function(c) {\n\t\t// TODO: formatted text\n\t\tvar t = xlml_unfixstr(c.t||\"\");\n\t\tvar d =writextag(\"ss:Data\", t, {\"xmlns\":\"http://www.w3.org/TR/REC-html40\"});\n\t\treturn writextag(\"Comment\", d, {\"ss:Author\":c.a});\n\t}).join(\"\");\n}\nfunction write_ws_xlml_cell(cell, ref, ws, opts, idx, wb, addr){\n\tif(!cell || (cell.v == undefined && cell.f == undefined)) return \"\";\n\n\tvar attr = {};\n\tif(cell.f) attr[\"ss:Formula\"] = \"=\" + escapexml(a1_to_rc(cell.f, addr));\n\tif(cell.F && cell.F.slice(0, ref.length) == ref) {\n\t\tvar end = decode_cell(cell.F.slice(ref.length + 1));\n\t\tattr[\"ss:ArrayRange\"] = \"RC:R\" + (end.r == addr.r ? \"\" : \"[\" + (end.r - addr.r) + \"]\") + \"C\" + (end.c == addr.c ? \"\" : \"[\" + (end.c - addr.c) + \"]\");\n\t}\n\n\tif(cell.l && cell.l.Target) {\n\t\tattr[\"ss:HRef\"] = escapexml(cell.l.Target);\n\t\tif(cell.l.Tooltip) attr[\"x:HRefScreenTip\"] = escapexml(cell.l.Tooltip);\n\t}\n\n\tif(ws['!merges']) {\n\t\tvar marr = ws['!merges'];\n\t\tfor(var mi = 0; mi != marr.length; ++mi) {\n\t\t\tif(marr[mi].s.c != addr.c || marr[mi].s.r != addr.r) continue;\n\t\t\tif(marr[mi].e.c > marr[mi].s.c) attr['ss:MergeAcross'] = marr[mi].e.c - marr[mi].s.c;\n\t\t\tif(marr[mi].e.r > marr[mi].s.r) attr['ss:MergeDown'] = marr[mi].e.r - marr[mi].s.r;\n\t\t}\n\t}\n\n\tvar t = \"\", p = \"\";\n\tswitch(cell.t) {\n\t\tcase 'z': return \"\";\n\t\tcase 'n': t = 'Number'; p = String(cell.v); break;\n\t\tcase 'b': t = 'Boolean'; p = (cell.v ? \"1\" : \"0\"); break;\n\t\tcase 'e': t = 'Error'; p = BErr[cell.v]; break;\n\t\tcase 'd': t = 'DateTime'; p = new Date(cell.v).toISOString(); if(cell.z == null) cell.z = cell.z || SSF._table[14]; break;\n\t\tcase 's': t = 'String'; p = escapexlml(cell.v||\"\"); break;\n\t}\n\t/* TODO: cell style */\n\tvar os = get_cell_style(opts.cellXfs, cell, opts);\n\tattr[\"ss:StyleID\"] = \"s\" + (21+os);\n\tattr[\"ss:Index\"] = addr.c + 1;\n\tvar _v = (cell.v != null ? p : \"\");\n\tvar m = '<Data ss:Type=\"' + t + '\">' + _v + '</Data>';\n\n\tif((cell.c||[]).length > 0) m += write_ws_xlml_comment(cell.c);\n\n\treturn writextag(\"Cell\", m, attr);\n}\nfunction write_ws_xlml_row(R, row) {\n\tvar o = '<Row ss:Index=\"' + (R+1) + '\"';\n\tif(row) {\n\t\tif(row.hpt && !row.hpx) row.hpx = pt2px(row.hpt);\n\t\tif(row.hpx) o += ' ss:AutoFitHeight=\"0\" ss:Height=\"' + row.hpx + '\"';\n\t\tif(row.hidden) o += ' ss:Hidden=\"1\"';\n\t}\n\treturn o + '>';\n}\n/* TODO */\nfunction write_ws_xlml_table(ws, opts, idx, wb) {\n\tif(!ws['!ref']) return \"\";\n\tvar range = safe_decode_range(ws['!ref']);\n\tvar marr = ws['!merges'] || [], mi = 0;\n\tvar o = [];\n\tif(ws['!cols']) ws['!cols'].forEach(function(n, i) {\n\t\tprocess_col(n);\n\t\tvar w = !!n.width;\n\t\tvar p = col_obj_w(i, n);\n\t\tvar k = {\"ss:Index\":i+1};\n\t\tif(w) k['ss:Width'] = width2px(p.width);\n\t\tif(n.hidden) k['ss:Hidden']=\"1\";\n\t\to.push(writextag(\"Column\",null,k));\n\t});\n\tvar dense = Array.isArray(ws);\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\tvar row = [write_ws_xlml_row(R, (ws['!rows']||[])[R])];\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tvar skip = false;\n\t\t\tfor(mi = 0; mi != marr.length; ++mi) {\n\t\t\t\tif(marr[mi].s.c > C) continue;\n\t\t\t\tif(marr[mi].s.r > R) continue;\n\t\t\t\tif(marr[mi].e.c < C) continue;\n\t\t\t\tif(marr[mi].e.r < R) continue;\n\t\t\t\tif(marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(skip) continue;\n\t\t\tvar addr = {r:R,c:C};\n\t\t\tvar ref = encode_cell(addr), cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\trow.push(write_ws_xlml_cell(cell, ref, ws, opts, idx, wb, addr));\n\t\t}\n\t\trow.push(\"</Row>\");\n\t\tif(row.length > 2) o.push(row.join(\"\"));\n\t}\n\treturn o.join(\"\");\n}\nfunction write_ws_xlml(idx, opts, wb) {\n\tvar o = [];\n\tvar s = wb.SheetNames[idx];\n\tvar ws = wb.Sheets[s];\n\n\tvar t = ws ? write_ws_xlml_names(ws, opts, idx, wb) : \"\";\n\tif(t.length > 0) o.push(\"<Names>\" + t + \"</Names>\");\n\n\t/* Table */\n\tt = ws ? write_ws_xlml_table(ws, opts, idx, wb) : \"\";\n\tif(t.length > 0) o.push(\"<Table>\" + t + \"</Table>\");\n\n\t/* WorksheetOptions */\n\to.push(write_ws_xlml_wsopts(ws, opts, idx, wb));\n\n\treturn o.join(\"\");\n}\nfunction write_xlml(wb, opts) {\n\tif(!opts) opts = {};\n\tif(!wb.SSF) wb.SSF = SSF.get_table();\n\tif(wb.SSF) {\n\t\tmake_ssf(SSF); SSF.load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n\t\topts.ssf = wb.SSF;\n\t\topts.cellXfs = [];\n\t\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\t}\n\tvar d = [];\n\td.push(write_props_xlml(wb, opts));\n\td.push(write_wb_xlml(wb, opts));\n\td.push(\"\");\n\td.push(\"\");\n\tfor(var i = 0; i < wb.SheetNames.length; ++i)\n\t\td.push(writextag(\"Worksheet\", write_ws_xlml(i, opts, wb), {\"ss:Name\":escapexml(wb.SheetNames[i])}));\n\td[2] = write_sty_xlml(wb, opts);\n\td[3] = write_names_xlml(wb, opts);\n\treturn XML_HEADER + writextag(\"Workbook\", d.join(\"\"), {\n\t\t'xmlns':      XLMLNS.ss,\n\t\t'xmlns:o':    XLMLNS.o,\n\t\t'xmlns:x':    XLMLNS.x,\n\t\t'xmlns:ss':   XLMLNS.ss,\n\t\t'xmlns:dt':   XLMLNS.dt,\n\t\t'xmlns:html': XLMLNS.html\n\t});\n}\n/* [MS-OLEDS] 2.3.8 CompObjStream */\nfunction parse_compobj(obj) {\n\tvar v = {};\n\tvar o = obj.content;\n/* [MS-OLEDS] 2.3.7 CompObjHeader -- All fields MUST be ignored */\n\to.l = 28;\n\n\tv.AnsiUserType = o.read_shift(0, \"lpstr-ansi\");\n\tv.AnsiClipboardFormat = parse_ClipboardFormatOrAnsiString(o);\n\n\tif(o.length - o.l <= 4) return v;\n\n\tvar m = o.read_shift(4);\n\tif(m == 0 || m > 40) return v;\n\to.l-=4; v.Reserved1 = o.read_shift(0, \"lpstr-ansi\");\n\n\tif(o.length - o.l <= 4) return v;\n\tm = o.read_shift(4);\n\tif(m !== 0x71b239f4) return v;\n\tv.UnicodeClipboardFormat = parse_ClipboardFormatOrUnicodeString(o);\n\n\tm = o.read_shift(4);\n\tif(m == 0 || m > 40) return v;\n\to.l-=4; v.Reserved2 = o.read_shift(0, \"lpwstr\");\n}\n\n/*\n\tContinue logic for:\n\t- 2.4.58 Continue\n\t- 2.4.59 ContinueBigName\n\t- 2.4.60 ContinueFrt\n\t- 2.4.61 ContinueFrt11\n\t- 2.4.62 ContinueFrt12\n*/\nfunction slurp(R, blob, length, opts) {\n\tvar l = length;\n\tvar bufs = [];\n\tvar d = blob.slice(blob.l,blob.l+l);\n\tif(opts && opts.enc && opts.enc.insitu) switch(R.n) {\n\tcase 'BOF': case 'FilePass': case 'FileLock': case 'InterfaceHdr': case 'RRDInfo': case 'RRDHead': case 'UsrExcl': break;\n\tdefault:\n\t\tif(d.length === 0) break;\n\t\topts.enc.insitu(d);\n\t}\n\tbufs.push(d);\n\tblob.l += l;\n\tvar next = (XLSRecordEnum[__readUInt16LE(blob,blob.l)]);\n\tvar start = 0;\n\twhile(next != null && next.n.slice(0,8) === 'Continue') {\n\t\tl = __readUInt16LE(blob,blob.l+2);\n\t\tstart = blob.l + 4;\n\t\tif(next.n == 'ContinueFrt') start += 4;\n\t\telse if(next.n.slice(0,11) == 'ContinueFrt') start += 12;\n\t\tbufs.push(blob.slice(start,blob.l+4+l));\n\t\tblob.l += 4+l;\n\t\tnext = (XLSRecordEnum[__readUInt16LE(blob, blob.l)]);\n\t}\n\tvar b = (bconcat(bufs));\n\tprep_blob(b, 0);\n\tvar ll = 0; b.lens = [];\n\tfor(var j = 0; j < bufs.length; ++j) { b.lens.push(ll); ll += bufs[j].length; }\n\treturn R.f(b, b.length, opts);\n}\n\nfunction safe_format_xf(p, opts, date1904) {\n\tif(p.t === 'z') return;\n\tif(!p.XF) return;\n\tvar fmtid = 0;\n\ttry {\n\t\tfmtid = p.z || p.XF.numFmtId || 0;\n\t\tif(opts.cellNF) p.z = SSF._table[fmtid];\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(!opts || opts.cellText !== false) try {\n\t\tif(p.t === 'e') { p.w = p.w || BErr[p.v]; }\n\t\telse if(fmtid === 0 || fmtid == \"General\") {\n\t\t\tif(p.t === 'n') {\n\t\t\t\tif((p.v|0) === p.v) p.w = SSF._general_int(p.v);\n\t\t\t\telse p.w = SSF._general_num(p.v);\n\t\t\t}\n\t\t\telse p.w = SSF._general(p.v);\n\t\t}\n\t\telse p.w = SSF.format(fmtid,p.v, {date1904:!!date1904});\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(opts.cellDates && fmtid && p.t == 'n' && SSF.is_date(SSF._table[fmtid] || String(fmtid))) {\n\t\tvar _d = SSF.parse_date_code(p.v); if(_d) { p.t = 'd'; p.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n\t}\n}\n\nfunction make_cell(val, ixfe, t) {\n\treturn ({v:val, ixfe:ixfe, t:t});\n}\n\n// 2.3.2\nfunction parse_workbook(blob, options) {\n\tvar wb = ({opts:{}});\n\tvar Sheets = {};\n\tif(DENSE != null && options.dense == null) options.dense = DENSE;\n\tvar out = ((options.dense ? [] : {}));\n\tvar Directory = {};\n\tvar range = ({});\n\tvar last_formula = null;\n\tvar sst = ([]);\n\tvar cur_sheet = \"\";\n\tvar Preamble = {};\n\tvar lastcell, last_cell = \"\", cc, cmnt, rngC, rngR;\n\tvar sharedf = {};\n\tvar arrayf = [];\n\tvar temp_val;\n\tvar country;\n\tvar cell_valid = true;\n\tvar XFs = []; /* XF records */\n\tvar palette = [];\n\tvar Workbook = ({ Sheets:[], WBProps:{date1904:false}, Views:[{}] }), wsprops = {};\n\tvar get_rgb = function getrgb(icv) {\n\t\tif(icv < 8) return XLSIcv[icv];\n\t\tif(icv < 64) return palette[icv-8] || XLSIcv[icv];\n\t\treturn XLSIcv[icv];\n\t};\n\tvar process_cell_style = function pcs(cell, line, options) {\n\t\tvar xfd = line.XF.data;\n\t\tif(!xfd || !xfd.patternType || !options || !options.cellStyles) return;\n\t\tline.s = ({});\n\t\tline.s.patternType = xfd.patternType;\n\t\tvar t;\n\t\tif((t = rgb2Hex(get_rgb(xfd.icvFore)))) { line.s.fgColor = {rgb:t}; }\n\t\tif((t = rgb2Hex(get_rgb(xfd.icvBack)))) { line.s.bgColor = {rgb:t}; }\n\t};\n\tvar addcell = function addcell(cell, line, options) {\n\t\tif(file_depth > 1) return;\n\t\tif(options.sheetRows && cell.r >= options.sheetRows) cell_valid = false;\n\t\tif(!cell_valid) return;\n\t\tif(options.cellStyles && line.XF && line.XF.data) process_cell_style(cell, line, options);\n\t\tdelete line.ixfe; delete line.XF;\n\t\tlastcell = cell;\n\t\tlast_cell = encode_cell(cell);\n\t\tif(!range || !range.s || !range.e) range = {s:{r:0,c:0},e:{r:0,c:0}};\n\t\tif(cell.r < range.s.r) range.s.r = cell.r;\n\t\tif(cell.c < range.s.c) range.s.c = cell.c;\n\t\tif(cell.r + 1 > range.e.r) range.e.r = cell.r + 1;\n\t\tif(cell.c + 1 > range.e.c) range.e.c = cell.c + 1;\n\t\tif(options.cellFormula && line.f) {\n\t\t\tfor(var afi = 0; afi < arrayf.length; ++afi) {\n\t\t\t\tif(arrayf[afi][0].s.c > cell.c || arrayf[afi][0].s.r > cell.r) continue;\n\t\t\t\tif(arrayf[afi][0].e.c < cell.c || arrayf[afi][0].e.r < cell.r) continue;\n\t\t\t\tline.F = encode_range(arrayf[afi][0]);\n\t\t\t\tif(arrayf[afi][0].s.c != cell.c || arrayf[afi][0].s.r != cell.r) delete line.f;\n\t\t\t\tif(line.f) line.f = \"\" + stringify_formula(arrayf[afi][1], range, cell, supbooks, opts);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tif(options.dense) {\n\t\t\t\tif(!out[cell.r]) out[cell.r] = [];\n\t\t\t\tout[cell.r][cell.c] = line;\n\t\t\t} else out[last_cell] = line;\n\t\t}\n\t};\n\tvar opts = ({\n\t\tenc: false, // encrypted\n\t\tsbcch: 0, // cch in the preceding SupBook\n\t\tsnames: [], // sheetnames\n\t\tsharedf: sharedf, // shared formulae by address\n\t\tarrayf: arrayf, // array formulae array\n\t\trrtabid: [], // RRTabId\n\t\tlastuser: \"\", // Last User from WriteAccess\n\t\tbiff: 8, // BIFF version\n\t\tcodepage: 0, // CP from CodePage record\n\t\twinlocked: 0, // fLockWn from WinProtect\n\t\tcellStyles: !!options && !!options.cellStyles,\n\t\tWTF: !!options && !!options.wtf\n\t});\n\tif(options.password) opts.password = options.password;\n\tvar themes;\n\tvar merges = [];\n\tvar objects = [];\n\tvar colinfo = [], rowinfo = [];\n\t// eslint-disable-next-line no-unused-vars\n\tvar defwidth = 0, defheight = 0; // twips / MDW respectively\n\tvar seencol = false;\n\tvar supbooks = ([]); // 1-indexed, will hold extern names\n\tsupbooks.SheetNames = opts.snames;\n\tsupbooks.sharedf = opts.sharedf;\n\tsupbooks.arrayf = opts.arrayf;\n\tsupbooks.names = [];\n\tsupbooks.XTI = [];\n\tvar last_Rn = '';\n\tvar file_depth = 0; /* TODO: make a real stack */\n\tvar BIFF2Fmt = 0, BIFF2FmtTable = [];\n\tvar FilterDatabases = []; /* TODO: sort out supbooks and process elsewhere */\n\tvar last_lbl;\n\n\t/* explicit override for some broken writers */\n\topts.codepage = 1200;\n\tset_cp(1200);\n\tvar seen_codepage = false;\n\twhile(blob.l < blob.length - 1) {\n\t\tvar s = blob.l;\n\t\tvar RecordType = blob.read_shift(2);\n\t\tif(RecordType === 0 && last_Rn === 'EOF') break;\n\t\tvar length = (blob.l === blob.length ? 0 : blob.read_shift(2));\n\t\tvar R = XLSRecordEnum[RecordType];\n\t\t//console.log(RecordType.toString(16), RecordType, R, blob.l, length, blob.length);\n\t\t//if(!R) console.log(blob.slice(blob.l, blob.l + length));\n\t\tif(R && R.f) {\n\t\t\tif(options.bookSheets) {\n\t\t\t\tif(last_Rn === 'BoundSheet8' && R.n !== 'BoundSheet8') break;\n\t\t\t}\n\t\t\tlast_Rn = R.n;\n\t\t\tif(R.r === 2 || R.r == 12) {\n\t\t\t\tvar rt = blob.read_shift(2); length -= 2;\n\t\t\t\tif(!opts.enc && rt !== RecordType && (((rt&0xFF)<<8)|(rt>>8)) !== RecordType) throw new Error(\"rt mismatch: \" + rt + \"!=\" + RecordType);\n\t\t\t\tif(R.r == 12){ blob.l += 10; length -= 10; } // skip FRT\n\t\t\t}\n\t\t\t//console.error(R,blob.l,length,blob.length);\n\t\t\tvar val;\n\t\t\tif(R.n === 'EOF') val = R.f(blob, length, opts);\n\t\t\telse val = slurp(R, blob, length, opts);\n\t\t\tvar Rn = R.n;\n\t\t\tif(file_depth == 0 && Rn != 'BOF') continue;\n\t\t\t/* nested switch statements to workaround V8 128 limit */\n\t\t\tswitch(Rn) {\n\t\t\t\t/* Workbook Options */\n\t\t\t\tcase 'Date1904':\nwb.opts.Date1904 = Workbook.WBProps.date1904 = val; break;\n\t\t\t\tcase 'WriteProtect': wb.opts.WriteProtect = true; break;\n\t\t\t\tcase 'FilePass':\n\t\t\t\t\tif(!opts.enc) blob.l = 0;\n\t\t\t\t\topts.enc = val;\n\t\t\t\t\tif(!options.password) throw new Error(\"File is password-protected\");\n\t\t\t\t\tif(val.valid == null) throw new Error(\"Encryption scheme unsupported\");\n\t\t\t\t\tif(!val.valid) throw new Error(\"Password is incorrect\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'WriteAccess': opts.lastuser = val; break;\n\t\t\t\tcase 'FileSharing': break; //TODO\n\t\t\t\tcase 'CodePage':\n\t\t\t\t\t/* overrides based on test cases */\n\t\t\t\t\tswitch(val) {\n\t\t\t\t\t\tcase 0x5212: val =  1200; break;\n\t\t\t\t\t\tcase 0x8000: val = 10000; break;\n\t\t\t\t\t\tcase 0x8001: val =  1252; break;\n\t\t\t\t\t}\n\t\t\t\t\tset_cp(opts.codepage = val);\n\t\t\t\t\tseen_codepage = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'RRTabId': opts.rrtabid = val; break;\n\t\t\t\tcase 'WinProtect': opts.winlocked = val; break;\n\t\t\t\tcase 'Template': break; // TODO\n\t\t\t\tcase 'BookBool': break; // TODO\n\t\t\t\tcase 'UsesELFs': break;\n\t\t\t\tcase 'MTRSettings': break;\n\t\t\t\tcase 'RefreshAll':\n\t\t\t\tcase 'CalcCount':\n\t\t\t\tcase 'CalcDelta':\n\t\t\t\tcase 'CalcIter':\n\t\t\t\tcase 'CalcMode':\n\t\t\t\tcase 'CalcPrecision':\n\t\t\t\tcase 'CalcSaveRecalc':\n\t\t\t\t\twb.opts[Rn] = val; break;\n\t\t\t\tcase 'CalcRefMode': opts.CalcRefMode = val; break; // TODO: implement R1C1\n\t\t\t\tcase 'Uncalced': break;\n\t\t\t\tcase 'ForceFullCalculation': wb.opts.FullCalc = val; break;\n\t\t\t\tcase 'WsBool':\n\t\t\t\t\tif(val.fDialog) out[\"!type\"] = \"dialog\";\n\t\t\t\t\tbreak; // TODO\n\t\t\t\tcase 'XF':\n\t\t\t\t\tXFs.push(val); break;\n\t\t\t\tcase 'ExtSST': break; // TODO\n\t\t\t\tcase 'BookExt': break; // TODO\n\t\t\t\tcase 'RichTextStream': break;\n\t\t\t\tcase 'BkHim': break;\n\n\t\t\t\tcase 'SupBook':\n\t\t\t\t\tsupbooks.push([val]);\n\t\t\t\t\tsupbooks[supbooks.length-1].XTI = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ExternName':\n\t\t\t\t\tsupbooks[supbooks.length-1].push(val);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Index': break; // TODO\n\t\t\t\tcase 'Lbl':\n\t\t\t\t\tlast_lbl = ({\n\t\t\t\t\t\tName: val.Name,\n\t\t\t\t\t\tRef: stringify_formula(val.rgce,range,null,supbooks,opts)\n\t\t\t\t\t});\n\t\t\t\t\tif(val.itab > 0) last_lbl.Sheet = val.itab - 1;\n\t\t\t\t\tsupbooks.names.push(last_lbl);\n\t\t\t\t\tif(!supbooks[0]) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\t\tsupbooks[supbooks.length-1].push(val);\n\t\t\t\t\tif(val.Name == \"_xlnm._FilterDatabase\" && val.itab > 0)\n\t\t\t\t\t\tif(val.rgce && val.rgce[0] && val.rgce[0][0] && val.rgce[0][0][0] == 'PtgArea3d')\n\t\t\t\t\t\t\tFilterDatabases[val.itab - 1] = { ref: encode_range(val.rgce[0][0][1][2]) };\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ExternCount': opts.ExternCount = val; break;\n\t\t\t\tcase 'ExternSheet':\n\t\t\t\t\tif(supbooks.length == 0) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\t\tsupbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val); supbooks.XTI = supbooks.XTI.concat(val); break;\n\t\t\t\tcase 'NameCmt':\n\t\t\t\t\t/* TODO: search for correct name */\n\t\t\t\t\tif(opts.biff < 8) break;\n\t\t\t\t\tif(last_lbl != null) last_lbl.Comment = val[1];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Protect': out[\"!protect\"] = val; break; /* for sheet or book */\n\t\t\t\tcase 'Password': if(val !== 0 && opts.WTF) console.error(\"Password verifier: \" + val); break;\n\t\t\t\tcase 'Prot4Rev': case 'Prot4RevPass': break; /*TODO: Revision Control*/\n\n\t\t\t\tcase 'BoundSheet8': {\n\t\t\t\t\tDirectory[val.pos] = val;\n\t\t\t\t\topts.snames.push(val.name);\n\t\t\t\t} break;\n\t\t\t\tcase 'EOF': {\n\t\t\t\t\tif(--file_depth) break;\n\t\t\t\t\tif(range.e) {\n\t\t\t\t\t\tif(range.e.r > 0 && range.e.c > 0) {\n\t\t\t\t\t\t\trange.e.r--; range.e.c--;\n\t\t\t\t\t\t\tout[\"!ref\"] = encode_range(range);\n\t\t\t\t\t\t\tif(options.sheetRows && options.sheetRows <= range.e.r) {\n\t\t\t\t\t\t\t\tvar tmpri = range.e.r;\n\t\t\t\t\t\t\t\trange.e.r = options.sheetRows - 1;\n\t\t\t\t\t\t\t\tout[\"!fullref\"] = out[\"!ref\"];\n\t\t\t\t\t\t\t\tout[\"!ref\"] = encode_range(range);\n\t\t\t\t\t\t\t\trange.e.r = tmpri;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trange.e.r++; range.e.c++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(merges.length > 0) out[\"!merges\"] = merges;\n\t\t\t\t\t\tif(objects.length > 0) out[\"!objects\"] = objects;\n\t\t\t\t\t\tif(colinfo.length > 0) out[\"!cols\"] = colinfo;\n\t\t\t\t\t\tif(rowinfo.length > 0) out[\"!rows\"] = rowinfo;\n\t\t\t\t\t\tWorkbook.Sheets.push(wsprops);\n\t\t\t\t\t}\n\t\t\t\t\tif(cur_sheet === \"\") Preamble = out; else Sheets[cur_sheet] = out;\n\t\t\t\t\tout = ((options.dense ? [] : {}));\n\t\t\t\t} break;\n\t\t\t\tcase 'BOF': {\n\t\t\t\t\tif(opts.biff === 8) opts.biff = {\n0x0009:2,\n0x0209:3,\n0x0409:4\n\t\t\t\t\t}[RecordType] || {\n0x0200:2,\n0x0300:3,\n0x0400:4,\n0x0500:5,\n0x0600:8,\n0x0002:2,\n0x0007:2\n\t\t\t\t\t}[val.BIFFVer] || 8;\n\t\t\t\t\tif(opts.biff == 8 && val.BIFFVer == 0 && val.dt == 16) opts.biff = 2;\n\t\t\t\t\tif(file_depth++) break;\n\t\t\t\t\tcell_valid = true;\n\t\t\t\t\tout = ((options.dense ? [] : {}));\n\n\t\t\t\t\tif(opts.biff < 8 && !seen_codepage) { seen_codepage = true; set_cp(opts.codepage = options.codepage || 1252); }\n\t\t\t\t\tif(opts.biff < 5) {\n\t\t\t\t\t\tif(cur_sheet === \"\") cur_sheet = \"Sheet1\";\n\t\t\t\t\t\trange = {s:{r:0,c:0},e:{r:0,c:0}};\n\t\t\t\t\t\t/* fake BoundSheet8 */\n\t\t\t\t\t\tvar fakebs8 = {pos: blob.l - length, name:cur_sheet};\n\t\t\t\t\t\tDirectory[fakebs8.pos] = fakebs8;\n\t\t\t\t\t\topts.snames.push(cur_sheet);\n\t\t\t\t\t}\n\t\t\t\t\telse cur_sheet = (Directory[s] || {name:\"\"}).name;\n\t\t\t\t\tif(val.dt == 0x20) out[\"!type\"] = \"chart\";\n\t\t\t\t\tif(val.dt == 0x40) out[\"!type\"] = \"macro\";\n\t\t\t\t\tmerges = [];\n\t\t\t\t\tobjects = [];\n\t\t\t\t\topts.arrayf = arrayf = [];\n\t\t\t\t\tcolinfo = []; rowinfo = [];\n\t\t\t\t\tdefwidth = defheight = 0;\n\t\t\t\t\tseencol = false;\n\t\t\t\t\twsprops = {Hidden:(Directory[s]||{hs:0}).hs, name:cur_sheet };\n\t\t\t\t} break;\n\n\t\t\t\tcase 'Number': case 'BIFF2NUM': case 'BIFF2INT': {\n\t\t\t\t\tif(out[\"!type\"] == \"chart\") if(options.dense ? (out[val.r]||[])[val.c]: out[encode_cell({c:val.c, r:val.r})]) ++val.c;\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe]||{}, v:val.val, t:'n'});\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 'BoolErr': {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.val, t:val.t});\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 'RK': {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.rknum, t:'n'});\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 'MulRk': {\n\t\t\t\t\tfor(var j = val.c; j <= val.C; ++j) {\n\t\t\t\t\t\tvar ixfe = val.rkrec[j-val.c][0];\n\t\t\t\t\t\ttemp_val= ({ixfe:ixfe, XF:XFs[ixfe], v:val.rkrec[j-val.c][1], t:'n'});\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell({c:j, r:val.r}, temp_val, options);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 'Formula': {\n\t\t\t\t\tif(val.val == 'String') { last_formula = val; break; }\n\t\t\t\t\ttemp_val = make_cell(val.val, val.cell.ixfe, val.tt);\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(options.cellFormula) {\n\t\t\t\t\t\tvar _f = val.formula;\n\t\t\t\t\t\tif(_f && _f[0] && _f[0][0] && _f[0][0][0] == 'PtgExp') {\n\t\t\t\t\t\t\tvar _fr = _f[0][0][1][0], _fc = _f[0][0][1][1];\n\t\t\t\t\t\t\tvar _fe = encode_cell({r:_fr, c:_fc});\n\t\t\t\t\t\t\tif(sharedf[_fe]) temp_val.f = \"\"+stringify_formula(val.formula,range,val.cell,supbooks, opts);\n\t\t\t\t\t\t\telse temp_val.F = ((options.dense ? (out[_fr]||[])[_fc]: out[_fe]) || {}).F;\n\t\t\t\t\t\t} else temp_val.f = \"\"+stringify_formula(val.formula,range,val.cell,supbooks, opts);\n\t\t\t\t\t}\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell(val.cell, temp_val, options);\n\t\t\t\t\tlast_formula = val;\n\t\t\t\t} break;\n\t\t\t\tcase 'String': {\n\t\t\t\t\tif(last_formula) { /* technically always true */\n\t\t\t\t\t\tlast_formula.val = val;\n\t\t\t\t\t\ttemp_val = make_cell(val, last_formula.cell.ixfe, 's');\n\t\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\t\tif(options.cellFormula) {\n\t\t\t\t\t\t\ttemp_val.f = \"\"+stringify_formula(last_formula.formula, range, last_formula.cell, supbooks, opts);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell(last_formula.cell, temp_val, options);\n\t\t\t\t\t\tlast_formula = null;\n\t\t\t\t\t} else throw new Error(\"String record expects Formula\");\n\t\t\t\t} break;\n\t\t\t\tcase 'Array': {\n\t\t\t\t\tarrayf.push(val);\n\t\t\t\t\tvar _arraystart = encode_cell(val[0].s);\n\t\t\t\t\tcc = options.dense ? (out[val[0].s.r]||[])[val[0].s.c] : out[_arraystart];\n\t\t\t\t\tif(options.cellFormula && cc) {\n\t\t\t\t\t\tif(!last_formula) break; /* technically unreachable */\n\t\t\t\t\t\tif(!_arraystart || !cc) break;\n\t\t\t\t\t\tcc.f = \"\"+stringify_formula(val[1], range, val[0], supbooks, opts);\n\t\t\t\t\t\tcc.F = encode_range(val[0]);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 'ShrFmla': {\n\t\t\t\t\tif(!cell_valid) break;\n\t\t\t\t\tif(!options.cellFormula) break;\n\t\t\t\t\tif(last_cell) {\n\t\t\t\t\t\t/* TODO: capture range */\n\t\t\t\t\t\tif(!last_formula) break; /* technically unreachable */\n\t\t\t\t\t\tsharedf[encode_cell(last_formula.cell)]= val[0];\n\t\t\t\t\t\tcc = options.dense ? (out[last_formula.cell.r]||[])[last_formula.cell.c] : out[encode_cell(last_formula.cell)];\n\t\t\t\t\t\t(cc||{}).f = \"\"+stringify_formula(val[0], range, lastcell, supbooks, opts);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 'LabelSst':\n\t\t\t\t\ttemp_val=make_cell(sst[val.isst].t, val.ixfe, 's');\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Blank': if(options.sheetStubs) {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], t:'z'});\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 'MulBlank': if(options.sheetStubs) {\n\t\t\t\t\tfor(var _j = val.c; _j <= val.C; ++_j) {\n\t\t\t\t\t\tvar _ixfe = val.ixfe[_j-val.c];\n\t\t\t\t\t\ttemp_val= ({ixfe:_ixfe, XF:XFs[_ixfe], t:'z'});\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell({c:_j, r:val.r}, temp_val, options);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 'RString':\n\t\t\t\tcase 'Label': case 'BIFF2STR':\n\t\t\t\t\ttemp_val=make_cell(val.val, val.ixfe, 's');\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Dimensions': {\n\t\t\t\t\tif(file_depth === 1) range = val; /* TODO: stack */\n\t\t\t\t} break;\n\t\t\t\tcase 'SST': {\n\t\t\t\t\tsst = val;\n\t\t\t\t} break;\n\t\t\t\tcase 'Format': { /* val = [id, fmt] */\n\t\t\t\t\tif(opts.biff == 4) {\n\t\t\t\t\t\tBIFF2FmtTable[BIFF2Fmt++] = val[1];\n\t\t\t\t\t\tfor(var b4idx = 0; b4idx < BIFF2Fmt + 163; ++b4idx) if(SSF._table[b4idx] == val[1]) break;\n\t\t\t\t\t\tif(b4idx >= 163) SSF.load(val[1], BIFF2Fmt + 163);\n\t\t\t\t\t}\n\t\t\t\t\telse SSF.load(val[1], val[0]);\n\t\t\t\t} break;\n\t\t\t\tcase 'BIFF2FORMAT': {\n\t\t\t\t\tBIFF2FmtTable[BIFF2Fmt++] = val;\n\t\t\t\t\tfor(var b2idx = 0; b2idx < BIFF2Fmt + 163; ++b2idx) if(SSF._table[b2idx] == val) break;\n\t\t\t\t\tif(b2idx >= 163) SSF.load(val, BIFF2Fmt + 163);\n\t\t\t\t} break;\n\n\t\t\t\tcase 'MergeCells': merges = merges.concat(val); break;\n\n\t\t\t\tcase 'Obj': objects[val.cmo[0]] = opts.lastobj = val; break;\n\t\t\t\tcase 'TxO': opts.lastobj.TxO = val; break;\n\t\t\t\tcase 'ImData': opts.lastobj.ImData = val; break;\n\n\t\t\t\tcase 'HLink': {\n\t\t\t\t\tfor(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)\n\t\t\t\t\t\tfor(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n\t\t\t\t\t\t\tcc = options.dense ? (out[rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];\n\t\t\t\t\t\t\tif(cc) cc.l = val[1];\n\t\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 'HLinkTooltip': {\n\t\t\t\t\tfor(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)\n\t\t\t\t\t\tfor(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n\t\t\t\t\t\t\tcc = options.dense ? (out[rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];\n\t\t\t\t\t\t\tif(cc && cc.l) cc.l.Tooltip = val[1];\n\t\t\t\t\t\t\t}\n\t\t\t\t} break;\n\n\t\t\t\t/* Comments */\n\t\t\t\tcase 'Note': {\n\t\t\t\t\tif(opts.biff <= 5 && opts.biff >= 2) break; /* TODO: BIFF5 */\n\t\t\t\t\tcc = options.dense ? (out[val[0].r]||[])[val[0].c] : out[encode_cell(val[0])];\n\t\t\t\t\tvar noteobj = objects[val[2]];\n\t\t\t\t\tif(!cc) break;\n\t\t\t\t\tif(!cc.c) cc.c = [];\n\t\t\t\t\tcmnt = {a:val[1],t:noteobj.TxO.t};\n\t\t\t\t\tcc.c.push(cmnt);\n\t\t\t\t} break;\n\n\t\t\t\tdefault: switch(R.n) { /* nested */\n\t\t\t\tcase 'ClrtClient': break;\n\t\t\t\tcase 'XFExt': update_xfext(XFs[val.ixfe], val.ext); break;\n\n\t\t\t\tcase 'DefColWidth': defwidth = val; break;\n\t\t\t\tcase 'DefaultRowHeight': defheight = val[1]; break; // TODO: flags\n\n\t\t\t\tcase 'ColInfo': {\n\t\t\t\t\tif(!opts.cellStyles) break;\n\t\t\t\t\twhile(val.e >= val.s) {\n\t\t\t\t\t\tcolinfo[val.e--] = { width: val.w/256 };\n\t\t\t\t\t\tif(!seencol) { seencol = true; find_mdw_colw(val.w/256); }\n\t\t\t\t\t\tprocess_col(colinfo[val.e+1]);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 'Row': {\n\t\t\t\t\tvar rowobj = {};\n\t\t\t\t\tif(val.level != null) { rowinfo[val.r] = rowobj; rowobj.level = val.level; }\n\t\t\t\t\tif(val.hidden) { rowinfo[val.r] = rowobj; rowobj.hidden = true; }\n\t\t\t\t\tif(val.hpt) {\n\t\t\t\t\t\trowinfo[val.r] = rowobj;\n\t\t\t\t\t\trowobj.hpt = val.hpt; rowobj.hpx = pt2px(val.hpt);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\n\t\t\t\tcase 'LeftMargin':\n\t\t\t\tcase 'RightMargin':\n\t\t\t\tcase 'TopMargin':\n\t\t\t\tcase 'BottomMargin':\n\t\t\t\t\tif(!out['!margins']) default_margins(out['!margins'] = {});\n\t\t\t\t\tout['!margins'][Rn.slice(0,-6).toLowerCase()] = val;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Setup': // TODO\n\t\t\t\t\tif(!out['!margins']) default_margins(out['!margins'] = {});\n\t\t\t\t\tout['!margins'].header = val.header;\n\t\t\t\t\tout['!margins'].footer = val.footer;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Window2': // TODO\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tif(val.RTL) Workbook.Views[0].RTL = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Header': break; // TODO\n\t\t\t\tcase 'Footer': break; // TODO\n\t\t\t\tcase 'HCenter': break; // TODO\n\t\t\t\tcase 'VCenter': break; // TODO\n\t\t\t\tcase 'Pls': break; // TODO\n\t\t\t\tcase 'GCW': break;\n\t\t\t\tcase 'LHRecord': break;\n\t\t\t\tcase 'DBCell': break; // TODO\n\t\t\t\tcase 'EntExU2': break; // TODO\n\t\t\t\tcase 'SxView': break; // TODO\n\t\t\t\tcase 'Sxvd': break; // TODO\n\t\t\t\tcase 'SXVI': break; // TODO\n\t\t\t\tcase 'SXVDEx': break; // TODO\n\t\t\t\tcase 'SxIvd': break; // TODO\n\t\t\t\tcase 'SXString': break; // TODO\n\t\t\t\tcase 'Sync': break;\n\t\t\t\tcase 'Addin': break;\n\t\t\t\tcase 'SXDI': break; // TODO\n\t\t\t\tcase 'SXLI': break; // TODO\n\t\t\t\tcase 'SXEx': break; // TODO\n\t\t\t\tcase 'QsiSXTag': break; // TODO\n\t\t\t\tcase 'Selection': break;\n\t\t\t\tcase 'Feat': break;\n\t\t\t\tcase 'FeatHdr': case 'FeatHdr11': break;\n\t\t\t\tcase 'Feature11': case 'Feature12': case 'List12': break;\n\t\t\t\tcase 'Country': country = val; break;\n\t\t\t\tcase 'RecalcId': break;\n\t\t\t\tcase 'DxGCol': break; // TODO: htmlify\n\t\t\t\tcase 'Fbi': case 'Fbi2': case 'GelFrame': break;\n\t\t\t\tcase 'Font': break; // TODO\n\t\t\t\tcase 'XFCRC': break; // TODO\n\t\t\t\tcase 'Style': break; // TODO\n\t\t\t\tcase 'StyleExt': break; // TODO\n\t\t\t\tcase 'Palette': palette = val; break;\n\t\t\t\tcase 'Theme': themes = val; break;\n\t\t\t\t/* Protection */\n\t\t\t\tcase 'ScenarioProtect': break;\n\t\t\t\tcase 'ObjProtect': break;\n\n\t\t\t\t/* Conditional Formatting */\n\t\t\t\tcase 'CondFmt12': break;\n\n\t\t\t\t/* Table */\n\t\t\t\tcase 'Table': break; // TODO\n\t\t\t\tcase 'TableStyles': break; // TODO\n\t\t\t\tcase 'TableStyle': break; // TODO\n\t\t\t\tcase 'TableStyleElement': break; // TODO\n\n\t\t\t\t/* PivotTable */\n\t\t\t\tcase 'SXStreamID': break; // TODO\n\t\t\t\tcase 'SXVS': break; // TODO\n\t\t\t\tcase 'DConRef': break; // TODO\n\t\t\t\tcase 'SXAddl': break; // TODO\n\t\t\t\tcase 'DConBin': break; // TODO\n\t\t\t\tcase 'DConName': break; // TODO\n\t\t\t\tcase 'SXPI': break; // TODO\n\t\t\t\tcase 'SxFormat': break; // TODO\n\t\t\t\tcase 'SxSelect': break; // TODO\n\t\t\t\tcase 'SxRule': break; // TODO\n\t\t\t\tcase 'SxFilt': break; // TODO\n\t\t\t\tcase 'SxItm': break; // TODO\n\t\t\t\tcase 'SxDXF': break; // TODO\n\n\t\t\t\t/* Scenario Manager */\n\t\t\t\tcase 'ScenMan': break;\n\n\t\t\t\t/* Data Consolidation */\n\t\t\t\tcase 'DCon': break;\n\n\t\t\t\t/* Watched Cell */\n\t\t\t\tcase 'CellWatch': break;\n\n\t\t\t\t/* Print Settings */\n\t\t\t\tcase 'PrintRowCol': break;\n\t\t\t\tcase 'PrintGrid': break;\n\t\t\t\tcase 'PrintSize': break;\n\n\t\t\t\tcase 'XCT': break;\n\t\t\t\tcase 'CRN': break;\n\n\t\t\t\tcase 'Scl': {\n\t\t\t\t\t//console.log(\"Zoom Level:\", val[0]/val[1],val);\n\t\t\t\t} break;\n\t\t\t\tcase 'SheetExt': {\n\t\t\t\t\t/* empty */\n\t\t\t\t} break;\n\t\t\t\tcase 'SheetExtOptional': {\n\t\t\t\t\t/* empty */\n\t\t\t\t} break;\n\n\t\t\t\t/* VBA */\n\t\t\t\tcase 'ObNoMacros': {\n\t\t\t\t\t/* empty */\n\t\t\t\t} break;\n\t\t\t\tcase 'ObProj': {\n\t\t\t\t\t/* empty */\n\t\t\t\t} break;\n\t\t\t\tcase 'CodeName': {\nif(!cur_sheet) Workbook.WBProps.CodeName = val || \"ThisWorkbook\";\n\t\t\t\t\telse wsprops.CodeName = val || wsprops.name;\n\t\t\t\t} break;\n\t\t\t\tcase 'GUIDTypeLib': {\n\t\t\t\t\t/* empty */\n\t\t\t\t} break;\n\n\t\t\t\tcase 'WOpt': break; // TODO: WTF?\n\t\t\t\tcase 'PhoneticInfo': break;\n\n\t\t\t\tcase 'OleObjectSize': break;\n\n\t\t\t\t/* Differential Formatting */\n\t\t\t\tcase 'DXF': case 'DXFN': case 'DXFN12': case 'DXFN12List': case 'DXFN12NoCB': break;\n\n\t\t\t\t/* Data Validation */\n\t\t\t\tcase 'Dv': case 'DVal': break;\n\n\t\t\t\t/* Data Series */\n\t\t\t\tcase 'BRAI': case 'Series': case 'SeriesText': break;\n\n\t\t\t\t/* Data Connection */\n\t\t\t\tcase 'DConn': break;\n\t\t\t\tcase 'DbOrParamQry': break;\n\t\t\t\tcase 'DBQueryExt': break;\n\n\t\t\t\tcase 'OleDbConn': break;\n\t\t\t\tcase 'ExtString': break;\n\n\t\t\t\t/* Formatting */\n\t\t\t\tcase 'IFmtRecord': break;\n\t\t\t\tcase 'CondFmt': case 'CF': case 'CF12': case 'CFEx': break;\n\n\t\t\t\t/* Explicitly Ignored */\n\t\t\t\tcase 'Excel9File': break;\n\t\t\t\tcase 'Units': break;\n\t\t\t\tcase 'InterfaceHdr': case 'Mms': case 'InterfaceEnd': case 'DSF': break;\n\t\t\t\tcase 'BuiltInFnGroupCount': /* 2.4.30 0x0E or 0x10 but excel 2011 generates 0x11? */ break;\n\t\t\t\t/* View Stuff */\n\t\t\t\tcase 'Window1': case 'HideObj': case 'GridSet': case 'Guts':\n\t\t\t\tcase 'UserBView': case 'UserSViewBegin': case 'UserSViewEnd':\n\t\t\t\tcase 'Pane': break;\n\t\t\t\tdefault: switch(R.n) { /* nested */\n\t\t\t\t/* Chart */\n\t\t\t\tcase 'Dat':\n\t\t\t\tcase 'Begin': case 'End':\n\t\t\t\tcase 'StartBlock': case 'EndBlock':\n\t\t\t\tcase 'Frame': case 'Area':\n\t\t\t\tcase 'Axis': case 'AxisLine': case 'Tick': break;\n\t\t\t\tcase 'AxesUsed':\n\t\t\t\tcase 'CrtLayout12': case 'CrtLayout12A': case 'CrtLink': case 'CrtLine': case 'CrtMlFrt': case 'CrtMlFrtContinue': break;\n\t\t\t\tcase 'LineFormat': case 'AreaFormat':\n\t\t\t\tcase 'Chart': case 'Chart3d': case 'Chart3DBarShape': case 'ChartFormat': case 'ChartFrtInfo': break;\n\t\t\t\tcase 'PlotArea': case 'PlotGrowth': break;\n\t\t\t\tcase 'SeriesList': case 'SerParent': case 'SerAuxTrend': break;\n\t\t\t\tcase 'DataFormat': case 'SerToCrt': case 'FontX': break;\n\t\t\t\tcase 'CatSerRange': case 'AxcExt': case 'SerFmt': break;\n\t\t\t\tcase 'ShtProps': break;\n\t\t\t\tcase 'DefaultText': case 'Text': case 'CatLab': break;\n\t\t\t\tcase 'DataLabExtContents': break;\n\t\t\t\tcase 'Legend': case 'LegendException': break;\n\t\t\t\tcase 'Pie': case 'Scatter': break;\n\t\t\t\tcase 'PieFormat': case 'MarkerFormat': break;\n\t\t\t\tcase 'StartObject': case 'EndObject': break;\n\t\t\t\tcase 'AlRuns': case 'ObjectLink': break;\n\t\t\t\tcase 'SIIndex': break;\n\t\t\t\tcase 'AttachedLabel': case 'YMult': break;\n\n\t\t\t\t/* Chart Group */\n\t\t\t\tcase 'Line': case 'Bar': break;\n\t\t\t\tcase 'Surf': break;\n\n\t\t\t\t/* Axis Group */\n\t\t\t\tcase 'AxisParent': break;\n\t\t\t\tcase 'Pos': break;\n\t\t\t\tcase 'ValueRange': break;\n\n\t\t\t\t/* Pivot Chart */\n\t\t\t\tcase 'SXViewEx9': break; // TODO\n\t\t\t\tcase 'SXViewLink': break;\n\t\t\t\tcase 'PivotChartBits': break;\n\t\t\t\tcase 'SBaseRef': break;\n\t\t\t\tcase 'TextPropsStream': break;\n\n\t\t\t\t/* Chart Misc */\n\t\t\t\tcase 'LnExt': break;\n\t\t\t\tcase 'MkrExt': break;\n\t\t\t\tcase 'CrtCoopt': break;\n\n\t\t\t\t/* Query Table */\n\t\t\t\tcase 'Qsi': case 'Qsif': case 'Qsir': case 'QsiSXTag': break;\n\t\t\t\tcase 'TxtQry': break;\n\n\t\t\t\t/* Filter */\n\t\t\t\tcase 'FilterMode': break;\n\t\t\t\tcase 'AutoFilter': case 'AutoFilterInfo': break;\n\t\t\t\tcase 'AutoFilter12': break;\n\t\t\t\tcase 'DropDownObjIds': break;\n\t\t\t\tcase 'Sort': break;\n\t\t\t\tcase 'SortData': break;\n\n\t\t\t\t/* Drawing */\n\t\t\t\tcase 'ShapePropsStream': break;\n\t\t\t\tcase 'MsoDrawing': case 'MsoDrawingGroup': case 'MsoDrawingSelection': break;\n\t\t\t\t/* Pub Stuff */\n\t\t\t\tcase 'WebPub': case 'AutoWebPub': break;\n\n\t\t\t\t/* Print Stuff */\n\t\t\t\tcase 'HeaderFooter': case 'HFPicture': case 'PLV':\n\t\t\t\tcase 'HorizontalPageBreaks': case 'VerticalPageBreaks': break;\n\t\t\t\t/* Behavioral */\n\t\t\t\tcase 'Backup': case 'CompressPictures': case 'Compat12': break;\n\n\t\t\t\t/* Should not Happen */\n\t\t\t\tcase 'Continue': case 'ContinueFrt12': break;\n\n\t\t\t\t/* Future Records */\n\t\t\t\tcase 'FrtFontList': case 'FrtWrapper': break;\n\n\t\t\t\tdefault: switch(R.n) { /* nested */\n\t\t\t\t/* BIFF5 records */\n\t\t\t\tcase 'TabIdConf': case 'Radar': case 'RadarArea': case 'DropBar': case 'Intl': case 'CoordList': case 'SerAuxErrBar': break;\n\n\t\t\t\t/* BIFF2-4 records */\n\t\t\t\tcase 'BIFF2FONTCLR': case 'BIFF2FMTCNT': case 'BIFF2FONTXTRA': break;\n\t\t\t\tcase 'BIFF2XF': case 'BIFF3XF': case 'BIFF4XF': break;\n\t\t\t\tcase 'BIFF4FMTCNT': case 'BIFF2ROW': case 'BIFF2WINDOW2': break;\n\n\t\t\t\t/* Miscellaneous */\n\t\t\t\tcase 'SCENARIO': case 'DConBin': case 'PicF': case 'DataLabExt':\n\t\t\t\tcase 'Lel': case 'BopPop': case 'BopPopCustom': case 'RealTimeData':\n\t\t\t\tcase 'Name': break;\n\t\t\t\tcase 'LHNGraph': case 'FnGroupName': case 'AddMenu': case 'LPr': break;\n\t\t\t\tcase 'ListObj': case 'ListField': break;\n\t\t\t\tcase 'RRSort': break;\n\t\t\t\tcase 'BigName': break;\n\t\t\t\tcase 'ToolbarHdr': case 'ToolbarEnd': break;\n\t\t\t\tcase 'DDEObjName': break;\n\t\t\t\tcase 'FRTArchId$': break;\n\t\t\t\tdefault: if(options.WTF) throw 'Unrecognized Record ' + R.n;\n\t\t\t}}}}\n\t\t} else blob.l += length;\n\t}\n\twb.SheetNames=keys(Directory).sort(function(a,b) { return Number(a) - Number(b); }).map(function(x){return Directory[x].name;});\n\tif(!options.bookSheets) wb.Sheets=Sheets;\n\tif(wb.Sheets) FilterDatabases.forEach(function(r,i) { wb.Sheets[wb.SheetNames[i]]['!autofilter'] = r; });\n\twb.Preamble=Preamble;\n\twb.Strings = sst;\n\twb.SSF = SSF.get_table();\n\tif(opts.enc) wb.Encryption = opts.enc;\n\tif(themes) wb.Themes = themes;\n\twb.Metadata = {};\n\tif(country !== undefined) wb.Metadata.Country = country;\n\tif(supbooks.names.length > 0) Workbook.Names = supbooks.names;\n\twb.Workbook = Workbook;\n\treturn wb;\n}\n\n/* TODO: split props*/\nvar PSCLSID = {\n\tSI: \"e0859ff2f94f6810ab9108002b27b3d9\",\n\tDSI: \"02d5cdd59c2e1b10939708002b2cf9ae\",\n\tUDI: \"05d5cdd59c2e1b10939708002b2cf9ae\"\n};\nfunction parse_xls_props(cfb, props, o) {\n\t/* [MS-OSHARED] 2.3.3.2.2 Document Summary Information Property Set */\n\tvar DSI = CFB.find(cfb, '!DocumentSummaryInformation');\n\tif(DSI && DSI.size > 0) try {\n\t\tvar DocSummary = parse_PropertySetStream(DSI, DocSummaryPIDDSI, PSCLSID.DSI);\n\t\tfor(var d in DocSummary) props[d] = DocSummary[d];\n\t} catch(e) {if(o.WTF) throw e;/* empty */}\n\n\t/* [MS-OSHARED] 2.3.3.2.1 Summary Information Property Set*/\n\tvar SI = CFB.find(cfb, '!SummaryInformation');\n\tif(SI && SI.size > 0) try {\n\t\tvar Summary = parse_PropertySetStream(SI, SummaryPIDSI, PSCLSID.SI);\n\t\tfor(var s in Summary) if(props[s] == null) props[s] = Summary[s];\n\t} catch(e) {if(o.WTF) throw e;/* empty */}\n\n\tif(props.HeadingPairs && props.TitlesOfParts) {\n\t\tload_props_pairs(props.HeadingPairs, props.TitlesOfParts, props, o);\n\t\tdelete props.HeadingPairs; delete props.TitlesOfParts;\n\t}\n}\nfunction write_xls_props(wb, cfb) {\n\tvar DSEntries = [], SEntries = [], CEntries = [];\n\tvar i = 0, Keys;\n\tif(wb.Props) {\n\t\tKeys = keys(wb.Props);\n\t\t// $FlowIgnore\n\t\tfor(i = 0; i < Keys.length; ++i) (DocSummaryRE.hasOwnProperty(Keys[i]) ? DSEntries : SummaryRE.hasOwnProperty(Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Props[Keys[i]]]);\n\t}\n\tif(wb.Custprops) {\n\t\tKeys = keys(wb.Custprops);\n\t\t// $FlowIgnore\n\t\tfor(i = 0; i < Keys.length; ++i) if(!(wb.Props||{}).hasOwnProperty(Keys[i])) (DocSummaryRE.hasOwnProperty(Keys[i]) ? DSEntries : SummaryRE.hasOwnProperty(Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Custprops[Keys[i]]]);\n\t}\n\tvar CEntries2 = [];\n\tfor(i = 0; i < CEntries.length; ++i) {\n\t\tif(XLSPSSkip.indexOf(CEntries[i][0]) > -1) continue;\n\t\tif(CEntries[i][1] == null) continue;\n\t\tCEntries2.push(CEntries[i]);\n\t}\n\tif(SEntries.length) CFB.utils.cfb_add(cfb, \"/\\u0005SummaryInformation\", write_PropertySetStream(SEntries, PSCLSID.SI, SummaryRE, SummaryPIDSI));\n\tif(DSEntries.length || CEntries2.length) CFB.utils.cfb_add(cfb, \"/\\u0005DocumentSummaryInformation\", write_PropertySetStream(DSEntries, PSCLSID.DSI, DocSummaryRE, DocSummaryPIDDSI, CEntries2.length ? CEntries2 : null, PSCLSID.UDI));\n}\n\nfunction parse_xlscfb(cfb, options) {\nif(!options) options = {};\nfix_read_opts(options);\nreset_cp();\nif(options.codepage) set_ansi(options.codepage);\nvar CompObj, WB;\nif(cfb.FullPaths) {\n\tif(CFB.find(cfb, '/encryption')) throw new Error(\"File is password-protected\");\n\tCompObj = CFB.find(cfb, '!CompObj');\n\tWB = CFB.find(cfb, '/Workbook') || CFB.find(cfb, '/Book');\n} else {\n\tswitch(options.type) {\n\t\tcase 'base64': cfb = s2a(Base64.decode(cfb)); break;\n\t\tcase 'binary': cfb = s2a(cfb); break;\n\t\tcase 'buffer': break;\n\t\tcase 'array': if(!Array.isArray(cfb)) cfb = Array.prototype.slice.call(cfb); break;\n\t}\n\tprep_blob(cfb, 0);\n\tWB = ({content: cfb});\n}\nvar WorkbookP;\n\nvar _data;\nif(CompObj) parse_compobj(CompObj);\nif(options.bookProps && !options.bookSheets) WorkbookP = ({});\nelse {\n\tvar T = has_buf ? 'buffer' : 'array';\n\tif(WB && WB.content) WorkbookP = parse_workbook(WB.content, options);\n\t/* Quattro Pro 7-8 */\n\telse if((_data=CFB.find(cfb, 'PerfectOffice_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n\t/* Quattro Pro 9 */\n\telse if((_data=CFB.find(cfb, 'NativeContent_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n\telse throw new Error(\"Cannot find Workbook stream\");\n\tif(options.bookVBA && cfb.FullPaths && CFB.find(cfb, '/_VBA_PROJECT_CUR/VBA/dir')) WorkbookP.vbaraw = make_vba_xls(cfb);\n}\n\nvar props = {};\nif(cfb.FullPaths) parse_xls_props(cfb, props, options);\n\nWorkbookP.Props = WorkbookP.Custprops = props; /* TODO: split up properties */\nif(options.bookFiles) WorkbookP.cfb = cfb;\n/*WorkbookP.CompObjP = CompObjP; // TODO: storage? */\nreturn WorkbookP;\n}\n\n\nfunction write_xlscfb(wb, opts) {\n\tvar o = opts || {};\n\tvar cfb = CFB.utils.cfb_new({root:\"R\"});\n\tvar wbpath = \"/Workbook\";\n\tswitch(o.bookType || \"xls\") {\n\t\tcase \"xls\": o.bookType = \"biff8\";\n\t\t/* falls through */\n\t\tcase \"xla\": if(!o.bookType) o.bookType = \"xla\";\n\t\t/* falls through */\n\t\tcase \"biff8\": wbpath = \"/Workbook\"; o.biff = 8; break;\n\t\tcase \"biff5\": wbpath = \"/Book\"; o.biff = 5; break;\n\t\tdefault: throw new Error(\"invalid type \" + o.bookType + \" for XLS CFB\");\n\t}\n\tCFB.utils.cfb_add(cfb, wbpath, write_biff_buf(wb, o));\n\tif(o.biff == 8 && (wb.Props || wb.Custprops)) write_xls_props(wb, cfb);\n\t// TODO: SI, DSI, CO\n\tif(o.biff == 8 && wb.vbaraw) fill_vba_xls(cfb, CFB.read(wb.vbaraw, {type: typeof wb.vbaraw == \"string\" ? \"binary\" : \"buffer\"}));\n\treturn cfb;\n}\n/* [MS-XLSB] 2.3 Record Enumeration */\nvar XLSBRecordEnum = {\n0x0000: { n:\"BrtRowHdr\", f:parse_BrtRowHdr },\n0x0001: { n:\"BrtCellBlank\", f:parse_BrtCellBlank },\n0x0002: { n:\"BrtCellRk\", f:parse_BrtCellRk },\n0x0003: { n:\"BrtCellError\", f:parse_BrtCellError },\n0x0004: { n:\"BrtCellBool\", f:parse_BrtCellBool },\n0x0005: { n:\"BrtCellReal\", f:parse_BrtCellReal },\n0x0006: { n:\"BrtCellSt\", f:parse_BrtCellSt },\n0x0007: { n:\"BrtCellIsst\", f:parse_BrtCellIsst },\n0x0008: { n:\"BrtFmlaString\", f:parse_BrtFmlaString },\n0x0009: { n:\"BrtFmlaNum\", f:parse_BrtFmlaNum },\n0x000A: { n:\"BrtFmlaBool\", f:parse_BrtFmlaBool },\n0x000B: { n:\"BrtFmlaError\", f:parse_BrtFmlaError },\n0x0010: { n:\"BrtFRTArchID$\", f:parse_BrtFRTArchID$ },\n0x0013: { n:\"BrtSSTItem\", f:parse_RichStr },\n0x0014: { n:\"BrtPCDIMissing\" },\n0x0015: { n:\"BrtPCDINumber\" },\n0x0016: { n:\"BrtPCDIBoolean\" },\n0x0017: { n:\"BrtPCDIError\" },\n0x0018: { n:\"BrtPCDIString\" },\n0x0019: { n:\"BrtPCDIDatetime\" },\n0x001A: { n:\"BrtPCDIIndex\" },\n0x001B: { n:\"BrtPCDIAMissing\" },\n0x001C: { n:\"BrtPCDIANumber\" },\n0x001D: { n:\"BrtPCDIABoolean\" },\n0x001E: { n:\"BrtPCDIAError\" },\n0x001F: { n:\"BrtPCDIAString\" },\n0x0020: { n:\"BrtPCDIADatetime\" },\n0x0021: { n:\"BrtPCRRecord\" },\n0x0022: { n:\"BrtPCRRecordDt\" },\n0x0023: { n:\"BrtFRTBegin\" },\n0x0024: { n:\"BrtFRTEnd\" },\n0x0025: { n:\"BrtACBegin\" },\n0x0026: { n:\"BrtACEnd\" },\n0x0027: { n:\"BrtName\", f:parse_BrtName },\n0x0028: { n:\"BrtIndexRowBlock\" },\n0x002A: { n:\"BrtIndexBlock\" },\n0x002B: { n:\"BrtFont\", f:parse_BrtFont },\n0x002C: { n:\"BrtFmt\", f:parse_BrtFmt },\n0x002D: { n:\"BrtFill\", f:parse_BrtFill },\n0x002E: { n:\"BrtBorder\", f:parse_BrtBorder },\n0x002F: { n:\"BrtXF\", f:parse_BrtXF },\n0x0030: { n:\"BrtStyle\" },\n0x0031: { n:\"BrtCellMeta\" },\n0x0032: { n:\"BrtValueMeta\" },\n0x0033: { n:\"BrtMdb\" },\n0x0034: { n:\"BrtBeginFmd\" },\n0x0035: { n:\"BrtEndFmd\" },\n0x0036: { n:\"BrtBeginMdx\" },\n0x0037: { n:\"BrtEndMdx\" },\n0x0038: { n:\"BrtBeginMdxTuple\" },\n0x0039: { n:\"BrtEndMdxTuple\" },\n0x003A: { n:\"BrtMdxMbrIstr\" },\n0x003B: { n:\"BrtStr\" },\n0x003C: { n:\"BrtColInfo\", f:parse_ColInfo },\n0x003E: { n:\"BrtCellRString\" },\n0x003F: { n:\"BrtCalcChainItem$\", f:parse_BrtCalcChainItem$ },\n0x0040: { n:\"BrtDVal\" },\n0x0041: { n:\"BrtSxvcellNum\" },\n0x0042: { n:\"BrtSxvcellStr\" },\n0x0043: { n:\"BrtSxvcellBool\" },\n0x0044: { n:\"BrtSxvcellErr\" },\n0x0045: { n:\"BrtSxvcellDate\" },\n0x0046: { n:\"BrtSxvcellNil\" },\n0x0080: { n:\"BrtFileVersion\" },\n0x0081: { n:\"BrtBeginSheet\" },\n0x0082: { n:\"BrtEndSheet\" },\n0x0083: { n:\"BrtBeginBook\", f:parsenoop, p:0 },\n0x0084: { n:\"BrtEndBook\" },\n0x0085: { n:\"BrtBeginWsViews\" },\n0x0086: { n:\"BrtEndWsViews\" },\n0x0087: { n:\"BrtBeginBookViews\" },\n0x0088: { n:\"BrtEndBookViews\" },\n0x0089: { n:\"BrtBeginWsView\", f:parse_BrtBeginWsView },\n0x008A: { n:\"BrtEndWsView\" },\n0x008B: { n:\"BrtBeginCsViews\" },\n0x008C: { n:\"BrtEndCsViews\" },\n0x008D: { n:\"BrtBeginCsView\" },\n0x008E: { n:\"BrtEndCsView\" },\n0x008F: { n:\"BrtBeginBundleShs\" },\n0x0090: { n:\"BrtEndBundleShs\" },\n0x0091: { n:\"BrtBeginSheetData\" },\n0x0092: { n:\"BrtEndSheetData\" },\n0x0093: { n:\"BrtWsProp\", f:parse_BrtWsProp },\n0x0094: { n:\"BrtWsDim\", f:parse_BrtWsDim, p:16 },\n0x0097: { n:\"BrtPane\" },\n0x0098: { n:\"BrtSel\" },\n0x0099: { n:\"BrtWbProp\", f:parse_BrtWbProp },\n0x009A: { n:\"BrtWbFactoid\" },\n0x009B: { n:\"BrtFileRecover\" },\n0x009C: { n:\"BrtBundleSh\", f:parse_BrtBundleSh },\n0x009D: { n:\"BrtCalcProp\" },\n0x009E: { n:\"BrtBookView\" },\n0x009F: { n:\"BrtBeginSst\", f:parse_BrtBeginSst },\n0x00A0: { n:\"BrtEndSst\" },\n0x00A1: { n:\"BrtBeginAFilter\", f:parse_UncheckedRfX },\n0x00A2: { n:\"BrtEndAFilter\" },\n0x00A3: { n:\"BrtBeginFilterColumn\" },\n0x00A4: { n:\"BrtEndFilterColumn\" },\n0x00A5: { n:\"BrtBeginFilters\" },\n0x00A6: { n:\"BrtEndFilters\" },\n0x00A7: { n:\"BrtFilter\" },\n0x00A8: { n:\"BrtColorFilter\" },\n0x00A9: { n:\"BrtIconFilter\" },\n0x00AA: { n:\"BrtTop10Filter\" },\n0x00AB: { n:\"BrtDynamicFilter\" },\n0x00AC: { n:\"BrtBeginCustomFilters\" },\n0x00AD: { n:\"BrtEndCustomFilters\" },\n0x00AE: { n:\"BrtCustomFilter\" },\n0x00AF: { n:\"BrtAFilterDateGroupItem\" },\n0x00B0: { n:\"BrtMergeCell\", f:parse_BrtMergeCell },\n0x00B1: { n:\"BrtBeginMergeCells\" },\n0x00B2: { n:\"BrtEndMergeCells\" },\n0x00B3: { n:\"BrtBeginPivotCacheDef\" },\n0x00B4: { n:\"BrtEndPivotCacheDef\" },\n0x00B5: { n:\"BrtBeginPCDFields\" },\n0x00B6: { n:\"BrtEndPCDFields\" },\n0x00B7: { n:\"BrtBeginPCDField\" },\n0x00B8: { n:\"BrtEndPCDField\" },\n0x00B9: { n:\"BrtBeginPCDSource\" },\n0x00BA: { n:\"BrtEndPCDSource\" },\n0x00BB: { n:\"BrtBeginPCDSRange\" },\n0x00BC: { n:\"BrtEndPCDSRange\" },\n0x00BD: { n:\"BrtBeginPCDFAtbl\" },\n0x00BE: { n:\"BrtEndPCDFAtbl\" },\n0x00BF: { n:\"BrtBeginPCDIRun\" },\n0x00C0: { n:\"BrtEndPCDIRun\" },\n0x00C1: { n:\"BrtBeginPivotCacheRecords\" },\n0x00C2: { n:\"BrtEndPivotCacheRecords\" },\n0x00C3: { n:\"BrtBeginPCDHierarchies\" },\n0x00C4: { n:\"BrtEndPCDHierarchies\" },\n0x00C5: { n:\"BrtBeginPCDHierarchy\" },\n0x00C6: { n:\"BrtEndPCDHierarchy\" },\n0x00C7: { n:\"BrtBeginPCDHFieldsUsage\" },\n0x00C8: { n:\"BrtEndPCDHFieldsUsage\" },\n0x00C9: { n:\"BrtBeginExtConnection\" },\n0x00CA: { n:\"BrtEndExtConnection\" },\n0x00CB: { n:\"BrtBeginECDbProps\" },\n0x00CC: { n:\"BrtEndECDbProps\" },\n0x00CD: { n:\"BrtBeginECOlapProps\" },\n0x00CE: { n:\"BrtEndECOlapProps\" },\n0x00CF: { n:\"BrtBeginPCDSConsol\" },\n0x00D0: { n:\"BrtEndPCDSConsol\" },\n0x00D1: { n:\"BrtBeginPCDSCPages\" },\n0x00D2: { n:\"BrtEndPCDSCPages\" },\n0x00D3: { n:\"BrtBeginPCDSCPage\" },\n0x00D4: { n:\"BrtEndPCDSCPage\" },\n0x00D5: { n:\"BrtBeginPCDSCPItem\" },\n0x00D6: { n:\"BrtEndPCDSCPItem\" },\n0x00D7: { n:\"BrtBeginPCDSCSets\" },\n0x00D8: { n:\"BrtEndPCDSCSets\" },\n0x00D9: { n:\"BrtBeginPCDSCSet\" },\n0x00DA: { n:\"BrtEndPCDSCSet\" },\n0x00DB: { n:\"BrtBeginPCDFGroup\" },\n0x00DC: { n:\"BrtEndPCDFGroup\" },\n0x00DD: { n:\"BrtBeginPCDFGItems\" },\n0x00DE: { n:\"BrtEndPCDFGItems\" },\n0x00DF: { n:\"BrtBeginPCDFGRange\" },\n0x00E0: { n:\"BrtEndPCDFGRange\" },\n0x00E1: { n:\"BrtBeginPCDFGDiscrete\" },\n0x00E2: { n:\"BrtEndPCDFGDiscrete\" },\n0x00E3: { n:\"BrtBeginPCDSDTupleCache\" },\n0x00E4: { n:\"BrtEndPCDSDTupleCache\" },\n0x00E5: { n:\"BrtBeginPCDSDTCEntries\" },\n0x00E6: { n:\"BrtEndPCDSDTCEntries\" },\n0x00E7: { n:\"BrtBeginPCDSDTCEMembers\" },\n0x00E8: { n:\"BrtEndPCDSDTCEMembers\" },\n0x00E9: { n:\"BrtBeginPCDSDTCEMember\" },\n0x00EA: { n:\"BrtEndPCDSDTCEMember\" },\n0x00EB: { n:\"BrtBeginPCDSDTCQueries\" },\n0x00EC: { n:\"BrtEndPCDSDTCQueries\" },\n0x00ED: { n:\"BrtBeginPCDSDTCQuery\" },\n0x00EE: { n:\"BrtEndPCDSDTCQuery\" },\n0x00EF: { n:\"BrtBeginPCDSDTCSets\" },\n0x00F0: { n:\"BrtEndPCDSDTCSets\" },\n0x00F1: { n:\"BrtBeginPCDSDTCSet\" },\n0x00F2: { n:\"BrtEndPCDSDTCSet\" },\n0x00F3: { n:\"BrtBeginPCDCalcItems\" },\n0x00F4: { n:\"BrtEndPCDCalcItems\" },\n0x00F5: { n:\"BrtBeginPCDCalcItem\" },\n0x00F6: { n:\"BrtEndPCDCalcItem\" },\n0x00F7: { n:\"BrtBeginPRule\" },\n0x00F8: { n:\"BrtEndPRule\" },\n0x00F9: { n:\"BrtBeginPRFilters\" },\n0x00FA: { n:\"BrtEndPRFilters\" },\n0x00FB: { n:\"BrtBeginPRFilter\" },\n0x00FC: { n:\"BrtEndPRFilter\" },\n0x00FD: { n:\"BrtBeginPNames\" },\n0x00FE: { n:\"BrtEndPNames\" },\n0x00FF: { n:\"BrtBeginPName\" },\n0x0100: { n:\"BrtEndPName\" },\n0x0101: { n:\"BrtBeginPNPairs\" },\n0x0102: { n:\"BrtEndPNPairs\" },\n0x0103: { n:\"BrtBeginPNPair\" },\n0x0104: { n:\"BrtEndPNPair\" },\n0x0105: { n:\"BrtBeginECWebProps\" },\n0x0106: { n:\"BrtEndECWebProps\" },\n0x0107: { n:\"BrtBeginEcWpTables\" },\n0x0108: { n:\"BrtEndECWPTables\" },\n0x0109: { n:\"BrtBeginECParams\" },\n0x010A: { n:\"BrtEndECParams\" },\n0x010B: { n:\"BrtBeginECParam\" },\n0x010C: { n:\"BrtEndECParam\" },\n0x010D: { n:\"BrtBeginPCDKPIs\" },\n0x010E: { n:\"BrtEndPCDKPIs\" },\n0x010F: { n:\"BrtBeginPCDKPI\" },\n0x0110: { n:\"BrtEndPCDKPI\" },\n0x0111: { n:\"BrtBeginDims\" },\n0x0112: { n:\"BrtEndDims\" },\n0x0113: { n:\"BrtBeginDim\" },\n0x0114: { n:\"BrtEndDim\" },\n0x0115: { n:\"BrtIndexPartEnd\" },\n0x0116: { n:\"BrtBeginStyleSheet\" },\n0x0117: { n:\"BrtEndStyleSheet\" },\n0x0118: { n:\"BrtBeginSXView\" },\n0x0119: { n:\"BrtEndSXVI\" },\n0x011A: { n:\"BrtBeginSXVI\" },\n0x011B: { n:\"BrtBeginSXVIs\" },\n0x011C: { n:\"BrtEndSXVIs\" },\n0x011D: { n:\"BrtBeginSXVD\" },\n0x011E: { n:\"BrtEndSXVD\" },\n0x011F: { n:\"BrtBeginSXVDs\" },\n0x0120: { n:\"BrtEndSXVDs\" },\n0x0121: { n:\"BrtBeginSXPI\" },\n0x0122: { n:\"BrtEndSXPI\" },\n0x0123: { n:\"BrtBeginSXPIs\" },\n0x0124: { n:\"BrtEndSXPIs\" },\n0x0125: { n:\"BrtBeginSXDI\" },\n0x0126: { n:\"BrtEndSXDI\" },\n0x0127: { n:\"BrtBeginSXDIs\" },\n0x0128: { n:\"BrtEndSXDIs\" },\n0x0129: { n:\"BrtBeginSXLI\" },\n0x012A: { n:\"BrtEndSXLI\" },\n0x012B: { n:\"BrtBeginSXLIRws\" },\n0x012C: { n:\"BrtEndSXLIRws\" },\n0x012D: { n:\"BrtBeginSXLICols\" },\n0x012E: { n:\"BrtEndSXLICols\" },\n0x012F: { n:\"BrtBeginSXFormat\" },\n0x0130: { n:\"BrtEndSXFormat\" },\n0x0131: { n:\"BrtBeginSXFormats\" },\n0x0132: { n:\"BrtEndSxFormats\" },\n0x0133: { n:\"BrtBeginSxSelect\" },\n0x0134: { n:\"BrtEndSxSelect\" },\n0x0135: { n:\"BrtBeginISXVDRws\" },\n0x0136: { n:\"BrtEndISXVDRws\" },\n0x0137: { n:\"BrtBeginISXVDCols\" },\n0x0138: { n:\"BrtEndISXVDCols\" },\n0x0139: { n:\"BrtEndSXLocation\" },\n0x013A: { n:\"BrtBeginSXLocation\" },\n0x013B: { n:\"BrtEndSXView\" },\n0x013C: { n:\"BrtBeginSXTHs\" },\n0x013D: { n:\"BrtEndSXTHs\" },\n0x013E: { n:\"BrtBeginSXTH\" },\n0x013F: { n:\"BrtEndSXTH\" },\n0x0140: { n:\"BrtBeginISXTHRws\" },\n0x0141: { n:\"BrtEndISXTHRws\" },\n0x0142: { n:\"BrtBeginISXTHCols\" },\n0x0143: { n:\"BrtEndISXTHCols\" },\n0x0144: { n:\"BrtBeginSXTDMPS\" },\n0x0145: { n:\"BrtEndSXTDMPs\" },\n0x0146: { n:\"BrtBeginSXTDMP\" },\n0x0147: { n:\"BrtEndSXTDMP\" },\n0x0148: { n:\"BrtBeginSXTHItems\" },\n0x0149: { n:\"BrtEndSXTHItems\" },\n0x014A: { n:\"BrtBeginSXTHItem\" },\n0x014B: { n:\"BrtEndSXTHItem\" },\n0x014C: { n:\"BrtBeginMetadata\" },\n0x014D: { n:\"BrtEndMetadata\" },\n0x014E: { n:\"BrtBeginEsmdtinfo\" },\n0x014F: { n:\"BrtMdtinfo\" },\n0x0150: { n:\"BrtEndEsmdtinfo\" },\n0x0151: { n:\"BrtBeginEsmdb\" },\n0x0152: { n:\"BrtEndEsmdb\" },\n0x0153: { n:\"BrtBeginEsfmd\" },\n0x0154: { n:\"BrtEndEsfmd\" },\n0x0155: { n:\"BrtBeginSingleCells\" },\n0x0156: { n:\"BrtEndSingleCells\" },\n0x0157: { n:\"BrtBeginList\" },\n0x0158: { n:\"BrtEndList\" },\n0x0159: { n:\"BrtBeginListCols\" },\n0x015A: { n:\"BrtEndListCols\" },\n0x015B: { n:\"BrtBeginListCol\" },\n0x015C: { n:\"BrtEndListCol\" },\n0x015D: { n:\"BrtBeginListXmlCPr\" },\n0x015E: { n:\"BrtEndListXmlCPr\" },\n0x015F: { n:\"BrtListCCFmla\" },\n0x0160: { n:\"BrtListTrFmla\" },\n0x0161: { n:\"BrtBeginExternals\" },\n0x0162: { n:\"BrtEndExternals\" },\n0x0163: { n:\"BrtSupBookSrc\", f:parse_RelID},\n0x0165: { n:\"BrtSupSelf\" },\n0x0166: { n:\"BrtSupSame\" },\n0x0167: { n:\"BrtSupTabs\" },\n0x0168: { n:\"BrtBeginSupBook\" },\n0x0169: { n:\"BrtPlaceholderName\" },\n0x016A: { n:\"BrtExternSheet\", f:parse_ExternSheet },\n0x016B: { n:\"BrtExternTableStart\" },\n0x016C: { n:\"BrtExternTableEnd\" },\n0x016E: { n:\"BrtExternRowHdr\" },\n0x016F: { n:\"BrtExternCellBlank\" },\n0x0170: { n:\"BrtExternCellReal\" },\n0x0171: { n:\"BrtExternCellBool\" },\n0x0172: { n:\"BrtExternCellError\" },\n0x0173: { n:\"BrtExternCellString\" },\n0x0174: { n:\"BrtBeginEsmdx\" },\n0x0175: { n:\"BrtEndEsmdx\" },\n0x0176: { n:\"BrtBeginMdxSet\" },\n0x0177: { n:\"BrtEndMdxSet\" },\n0x0178: { n:\"BrtBeginMdxMbrProp\" },\n0x0179: { n:\"BrtEndMdxMbrProp\" },\n0x017A: { n:\"BrtBeginMdxKPI\" },\n0x017B: { n:\"BrtEndMdxKPI\" },\n0x017C: { n:\"BrtBeginEsstr\" },\n0x017D: { n:\"BrtEndEsstr\" },\n0x017E: { n:\"BrtBeginPRFItem\" },\n0x017F: { n:\"BrtEndPRFItem\" },\n0x0180: { n:\"BrtBeginPivotCacheIDs\" },\n0x0181: { n:\"BrtEndPivotCacheIDs\" },\n0x0182: { n:\"BrtBeginPivotCacheID\" },\n0x0183: { n:\"BrtEndPivotCacheID\" },\n0x0184: { n:\"BrtBeginISXVIs\" },\n0x0185: { n:\"BrtEndISXVIs\" },\n0x0186: { n:\"BrtBeginColInfos\" },\n0x0187: { n:\"BrtEndColInfos\" },\n0x0188: { n:\"BrtBeginRwBrk\" },\n0x0189: { n:\"BrtEndRwBrk\" },\n0x018A: { n:\"BrtBeginColBrk\" },\n0x018B: { n:\"BrtEndColBrk\" },\n0x018C: { n:\"BrtBrk\" },\n0x018D: { n:\"BrtUserBookView\" },\n0x018E: { n:\"BrtInfo\" },\n0x018F: { n:\"BrtCUsr\" },\n0x0190: { n:\"BrtUsr\" },\n0x0191: { n:\"BrtBeginUsers\" },\n0x0193: { n:\"BrtEOF\" },\n0x0194: { n:\"BrtUCR\" },\n0x0195: { n:\"BrtRRInsDel\" },\n0x0196: { n:\"BrtRREndInsDel\" },\n0x0197: { n:\"BrtRRMove\" },\n0x0198: { n:\"BrtRREndMove\" },\n0x0199: { n:\"BrtRRChgCell\" },\n0x019A: { n:\"BrtRREndChgCell\" },\n0x019B: { n:\"BrtRRHeader\" },\n0x019C: { n:\"BrtRRUserView\" },\n0x019D: { n:\"BrtRRRenSheet\" },\n0x019E: { n:\"BrtRRInsertSh\" },\n0x019F: { n:\"BrtRRDefName\" },\n0x01A0: { n:\"BrtRRNote\" },\n0x01A1: { n:\"BrtRRConflict\" },\n0x01A2: { n:\"BrtRRTQSIF\" },\n0x01A3: { n:\"BrtRRFormat\" },\n0x01A4: { n:\"BrtRREndFormat\" },\n0x01A5: { n:\"BrtRRAutoFmt\" },\n0x01A6: { n:\"BrtBeginUserShViews\" },\n0x01A7: { n:\"BrtBeginUserShView\" },\n0x01A8: { n:\"BrtEndUserShView\" },\n0x01A9: { n:\"BrtEndUserShViews\" },\n0x01AA: { n:\"BrtArrFmla\", f:parse_BrtArrFmla },\n0x01AB: { n:\"BrtShrFmla\", f:parse_BrtShrFmla },\n0x01AC: { n:\"BrtTable\" },\n0x01AD: { n:\"BrtBeginExtConnections\" },\n0x01AE: { n:\"BrtEndExtConnections\" },\n0x01AF: { n:\"BrtBeginPCDCalcMems\" },\n0x01B0: { n:\"BrtEndPCDCalcMems\" },\n0x01B1: { n:\"BrtBeginPCDCalcMem\" },\n0x01B2: { n:\"BrtEndPCDCalcMem\" },\n0x01B3: { n:\"BrtBeginPCDHGLevels\" },\n0x01B4: { n:\"BrtEndPCDHGLevels\" },\n0x01B5: { n:\"BrtBeginPCDHGLevel\" },\n0x01B6: { n:\"BrtEndPCDHGLevel\" },\n0x01B7: { n:\"BrtBeginPCDHGLGroups\" },\n0x01B8: { n:\"BrtEndPCDHGLGroups\" },\n0x01B9: { n:\"BrtBeginPCDHGLGroup\" },\n0x01BA: { n:\"BrtEndPCDHGLGroup\" },\n0x01BB: { n:\"BrtBeginPCDHGLGMembers\" },\n0x01BC: { n:\"BrtEndPCDHGLGMembers\" },\n0x01BD: { n:\"BrtBeginPCDHGLGMember\" },\n0x01BE: { n:\"BrtEndPCDHGLGMember\" },\n0x01BF: { n:\"BrtBeginQSI\" },\n0x01C0: { n:\"BrtEndQSI\" },\n0x01C1: { n:\"BrtBeginQSIR\" },\n0x01C2: { n:\"BrtEndQSIR\" },\n0x01C3: { n:\"BrtBeginDeletedNames\" },\n0x01C4: { n:\"BrtEndDeletedNames\" },\n0x01C5: { n:\"BrtBeginDeletedName\" },\n0x01C6: { n:\"BrtEndDeletedName\" },\n0x01C7: { n:\"BrtBeginQSIFs\" },\n0x01C8: { n:\"BrtEndQSIFs\" },\n0x01C9: { n:\"BrtBeginQSIF\" },\n0x01CA: { n:\"BrtEndQSIF\" },\n0x01CB: { n:\"BrtBeginAutoSortScope\" },\n0x01CC: { n:\"BrtEndAutoSortScope\" },\n0x01CD: { n:\"BrtBeginConditionalFormatting\" },\n0x01CE: { n:\"BrtEndConditionalFormatting\" },\n0x01CF: { n:\"BrtBeginCFRule\" },\n0x01D0: { n:\"BrtEndCFRule\" },\n0x01D1: { n:\"BrtBeginIconSet\" },\n0x01D2: { n:\"BrtEndIconSet\" },\n0x01D3: { n:\"BrtBeginDatabar\" },\n0x01D4: { n:\"BrtEndDatabar\" },\n0x01D5: { n:\"BrtBeginColorScale\" },\n0x01D6: { n:\"BrtEndColorScale\" },\n0x01D7: { n:\"BrtCFVO\" },\n0x01D8: { n:\"BrtExternValueMeta\" },\n0x01D9: { n:\"BrtBeginColorPalette\" },\n0x01DA: { n:\"BrtEndColorPalette\" },\n0x01DB: { n:\"BrtIndexedColor\" },\n0x01DC: { n:\"BrtMargins\", f:parse_BrtMargins },\n0x01DD: { n:\"BrtPrintOptions\" },\n0x01DE: { n:\"BrtPageSetup\" },\n0x01DF: { n:\"BrtBeginHeaderFooter\" },\n0x01E0: { n:\"BrtEndHeaderFooter\" },\n0x01E1: { n:\"BrtBeginSXCrtFormat\" },\n0x01E2: { n:\"BrtEndSXCrtFormat\" },\n0x01E3: { n:\"BrtBeginSXCrtFormats\" },\n0x01E4: { n:\"BrtEndSXCrtFormats\" },\n0x01E5: { n:\"BrtWsFmtInfo\", f:parse_BrtWsFmtInfo },\n0x01E6: { n:\"BrtBeginMgs\" },\n0x01E7: { n:\"BrtEndMGs\" },\n0x01E8: { n:\"BrtBeginMGMaps\" },\n0x01E9: { n:\"BrtEndMGMaps\" },\n0x01EA: { n:\"BrtBeginMG\" },\n0x01EB: { n:\"BrtEndMG\" },\n0x01EC: { n:\"BrtBeginMap\" },\n0x01ED: { n:\"BrtEndMap\" },\n0x01EE: { n:\"BrtHLink\", f:parse_BrtHLink },\n0x01EF: { n:\"BrtBeginDCon\" },\n0x01F0: { n:\"BrtEndDCon\" },\n0x01F1: { n:\"BrtBeginDRefs\" },\n0x01F2: { n:\"BrtEndDRefs\" },\n0x01F3: { n:\"BrtDRef\" },\n0x01F4: { n:\"BrtBeginScenMan\" },\n0x01F5: { n:\"BrtEndScenMan\" },\n0x01F6: { n:\"BrtBeginSct\" },\n0x01F7: { n:\"BrtEndSct\" },\n0x01F8: { n:\"BrtSlc\" },\n0x01F9: { n:\"BrtBeginDXFs\" },\n0x01FA: { n:\"BrtEndDXFs\" },\n0x01FB: { n:\"BrtDXF\" },\n0x01FC: { n:\"BrtBeginTableStyles\" },\n0x01FD: { n:\"BrtEndTableStyles\" },\n0x01FE: { n:\"BrtBeginTableStyle\" },\n0x01FF: { n:\"BrtEndTableStyle\" },\n0x0200: { n:\"BrtTableStyleElement\" },\n0x0201: { n:\"BrtTableStyleClient\" },\n0x0202: { n:\"BrtBeginVolDeps\" },\n0x0203: { n:\"BrtEndVolDeps\" },\n0x0204: { n:\"BrtBeginVolType\" },\n0x0205: { n:\"BrtEndVolType\" },\n0x0206: { n:\"BrtBeginVolMain\" },\n0x0207: { n:\"BrtEndVolMain\" },\n0x0208: { n:\"BrtBeginVolTopic\" },\n0x0209: { n:\"BrtEndVolTopic\" },\n0x020A: { n:\"BrtVolSubtopic\" },\n0x020B: { n:\"BrtVolRef\" },\n0x020C: { n:\"BrtVolNum\" },\n0x020D: { n:\"BrtVolErr\" },\n0x020E: { n:\"BrtVolStr\" },\n0x020F: { n:\"BrtVolBool\" },\n0x0210: { n:\"BrtBeginCalcChain$\" },\n0x0211: { n:\"BrtEndCalcChain$\" },\n0x0212: { n:\"BrtBeginSortState\" },\n0x0213: { n:\"BrtEndSortState\" },\n0x0214: { n:\"BrtBeginSortCond\" },\n0x0215: { n:\"BrtEndSortCond\" },\n0x0216: { n:\"BrtBookProtection\" },\n0x0217: { n:\"BrtSheetProtection\" },\n0x0218: { n:\"BrtRangeProtection\" },\n0x0219: { n:\"BrtPhoneticInfo\" },\n0x021A: { n:\"BrtBeginECTxtWiz\" },\n0x021B: { n:\"BrtEndECTxtWiz\" },\n0x021C: { n:\"BrtBeginECTWFldInfoLst\" },\n0x021D: { n:\"BrtEndECTWFldInfoLst\" },\n0x021E: { n:\"BrtBeginECTwFldInfo\" },\n0x0224: { n:\"BrtFileSharing\" },\n0x0225: { n:\"BrtOleSize\" },\n0x0226: { n:\"BrtDrawing\", f:parse_RelID },\n0x0227: { n:\"BrtLegacyDrawing\" },\n0x0228: { n:\"BrtLegacyDrawingHF\" },\n0x0229: { n:\"BrtWebOpt\" },\n0x022A: { n:\"BrtBeginWebPubItems\" },\n0x022B: { n:\"BrtEndWebPubItems\" },\n0x022C: { n:\"BrtBeginWebPubItem\" },\n0x022D: { n:\"BrtEndWebPubItem\" },\n0x022E: { n:\"BrtBeginSXCondFmt\" },\n0x022F: { n:\"BrtEndSXCondFmt\" },\n0x0230: { n:\"BrtBeginSXCondFmts\" },\n0x0231: { n:\"BrtEndSXCondFmts\" },\n0x0232: { n:\"BrtBkHim\" },\n0x0234: { n:\"BrtColor\" },\n0x0235: { n:\"BrtBeginIndexedColors\" },\n0x0236: { n:\"BrtEndIndexedColors\" },\n0x0239: { n:\"BrtBeginMRUColors\" },\n0x023A: { n:\"BrtEndMRUColors\" },\n0x023C: { n:\"BrtMRUColor\" },\n0x023D: { n:\"BrtBeginDVals\" },\n0x023E: { n:\"BrtEndDVals\" },\n0x0241: { n:\"BrtSupNameStart\" },\n0x0242: { n:\"BrtSupNameValueStart\" },\n0x0243: { n:\"BrtSupNameValueEnd\" },\n0x0244: { n:\"BrtSupNameNum\" },\n0x0245: { n:\"BrtSupNameErr\" },\n0x0246: { n:\"BrtSupNameSt\" },\n0x0247: { n:\"BrtSupNameNil\" },\n0x0248: { n:\"BrtSupNameBool\" },\n0x0249: { n:\"BrtSupNameFmla\" },\n0x024A: { n:\"BrtSupNameBits\" },\n0x024B: { n:\"BrtSupNameEnd\" },\n0x024C: { n:\"BrtEndSupBook\" },\n0x024D: { n:\"BrtCellSmartTagProperty\" },\n0x024E: { n:\"BrtBeginCellSmartTag\" },\n0x024F: { n:\"BrtEndCellSmartTag\" },\n0x0250: { n:\"BrtBeginCellSmartTags\" },\n0x0251: { n:\"BrtEndCellSmartTags\" },\n0x0252: { n:\"BrtBeginSmartTags\" },\n0x0253: { n:\"BrtEndSmartTags\" },\n0x0254: { n:\"BrtSmartTagType\" },\n0x0255: { n:\"BrtBeginSmartTagTypes\" },\n0x0256: { n:\"BrtEndSmartTagTypes\" },\n0x0257: { n:\"BrtBeginSXFilters\" },\n0x0258: { n:\"BrtEndSXFilters\" },\n0x0259: { n:\"BrtBeginSXFILTER\" },\n0x025A: { n:\"BrtEndSXFilter\" },\n0x025B: { n:\"BrtBeginFills\" },\n0x025C: { n:\"BrtEndFills\" },\n0x025D: { n:\"BrtBeginCellWatches\" },\n0x025E: { n:\"BrtEndCellWatches\" },\n0x025F: { n:\"BrtCellWatch\" },\n0x0260: { n:\"BrtBeginCRErrs\" },\n0x0261: { n:\"BrtEndCRErrs\" },\n0x0262: { n:\"BrtCrashRecErr\" },\n0x0263: { n:\"BrtBeginFonts\" },\n0x0264: { n:\"BrtEndFonts\" },\n0x0265: { n:\"BrtBeginBorders\" },\n0x0266: { n:\"BrtEndBorders\" },\n0x0267: { n:\"BrtBeginFmts\" },\n0x0268: { n:\"BrtEndFmts\" },\n0x0269: { n:\"BrtBeginCellXFs\" },\n0x026A: { n:\"BrtEndCellXFs\" },\n0x026B: { n:\"BrtBeginStyles\" },\n0x026C: { n:\"BrtEndStyles\" },\n0x0271: { n:\"BrtBigName\" },\n0x0272: { n:\"BrtBeginCellStyleXFs\" },\n0x0273: { n:\"BrtEndCellStyleXFs\" },\n0x0274: { n:\"BrtBeginComments\" },\n0x0275: { n:\"BrtEndComments\" },\n0x0276: { n:\"BrtBeginCommentAuthors\" },\n0x0277: { n:\"BrtEndCommentAuthors\" },\n0x0278: { n:\"BrtCommentAuthor\", f:parse_BrtCommentAuthor },\n0x0279: { n:\"BrtBeginCommentList\" },\n0x027A: { n:\"BrtEndCommentList\" },\n0x027B: { n:\"BrtBeginComment\", f:parse_BrtBeginComment},\n0x027C: { n:\"BrtEndComment\" },\n0x027D: { n:\"BrtCommentText\", f:parse_BrtCommentText },\n0x027E: { n:\"BrtBeginOleObjects\" },\n0x027F: { n:\"BrtOleObject\" },\n0x0280: { n:\"BrtEndOleObjects\" },\n0x0281: { n:\"BrtBeginSxrules\" },\n0x0282: { n:\"BrtEndSxRules\" },\n0x0283: { n:\"BrtBeginActiveXControls\" },\n0x0284: { n:\"BrtActiveX\" },\n0x0285: { n:\"BrtEndActiveXControls\" },\n0x0286: { n:\"BrtBeginPCDSDTCEMembersSortBy\" },\n0x0288: { n:\"BrtBeginCellIgnoreECs\" },\n0x0289: { n:\"BrtCellIgnoreEC\" },\n0x028A: { n:\"BrtEndCellIgnoreECs\" },\n0x028B: { n:\"BrtCsProp\", f:parse_BrtCsProp },\n0x028C: { n:\"BrtCsPageSetup\" },\n0x028D: { n:\"BrtBeginUserCsViews\" },\n0x028E: { n:\"BrtEndUserCsViews\" },\n0x028F: { n:\"BrtBeginUserCsView\" },\n0x0290: { n:\"BrtEndUserCsView\" },\n0x0291: { n:\"BrtBeginPcdSFCIEntries\" },\n0x0292: { n:\"BrtEndPCDSFCIEntries\" },\n0x0293: { n:\"BrtPCDSFCIEntry\" },\n0x0294: { n:\"BrtBeginListParts\" },\n0x0295: { n:\"BrtListPart\" },\n0x0296: { n:\"BrtEndListParts\" },\n0x0297: { n:\"BrtSheetCalcProp\" },\n0x0298: { n:\"BrtBeginFnGroup\" },\n0x0299: { n:\"BrtFnGroup\" },\n0x029A: { n:\"BrtEndFnGroup\" },\n0x029B: { n:\"BrtSupAddin\" },\n0x029C: { n:\"BrtSXTDMPOrder\" },\n0x029D: { n:\"BrtCsProtection\" },\n0x029F: { n:\"BrtBeginWsSortMap\" },\n0x02A0: { n:\"BrtEndWsSortMap\" },\n0x02A1: { n:\"BrtBeginRRSort\" },\n0x02A2: { n:\"BrtEndRRSort\" },\n0x02A3: { n:\"BrtRRSortItem\" },\n0x02A4: { n:\"BrtFileSharingIso\" },\n0x02A5: { n:\"BrtBookProtectionIso\" },\n0x02A6: { n:\"BrtSheetProtectionIso\" },\n0x02A7: { n:\"BrtCsProtectionIso\" },\n0x02A8: { n:\"BrtRangeProtectionIso\" },\n0x0400: { n:\"BrtRwDescent\" },\n0x0401: { n:\"BrtKnownFonts\" },\n0x0402: { n:\"BrtBeginSXTupleSet\" },\n0x0403: { n:\"BrtEndSXTupleSet\" },\n0x0404: { n:\"BrtBeginSXTupleSetHeader\" },\n0x0405: { n:\"BrtEndSXTupleSetHeader\" },\n0x0406: { n:\"BrtSXTupleSetHeaderItem\" },\n0x0407: { n:\"BrtBeginSXTupleSetData\" },\n0x0408: { n:\"BrtEndSXTupleSetData\" },\n0x0409: { n:\"BrtBeginSXTupleSetRow\" },\n0x040A: { n:\"BrtEndSXTupleSetRow\" },\n0x040B: { n:\"BrtSXTupleSetRowItem\" },\n0x040C: { n:\"BrtNameExt\" },\n0x040D: { n:\"BrtPCDH14\" },\n0x040E: { n:\"BrtBeginPCDCalcMem14\" },\n0x040F: { n:\"BrtEndPCDCalcMem14\" },\n0x0410: { n:\"BrtSXTH14\" },\n0x0411: { n:\"BrtBeginSparklineGroup\" },\n0x0412: { n:\"BrtEndSparklineGroup\" },\n0x0413: { n:\"BrtSparkline\" },\n0x0414: { n:\"BrtSXDI14\" },\n0x0415: { n:\"BrtWsFmtInfoEx14\" },\n0x0416: { n:\"BrtBeginConditionalFormatting14\" },\n0x0417: { n:\"BrtEndConditionalFormatting14\" },\n0x0418: { n:\"BrtBeginCFRule14\" },\n0x0419: { n:\"BrtEndCFRule14\" },\n0x041A: { n:\"BrtCFVO14\" },\n0x041B: { n:\"BrtBeginDatabar14\" },\n0x041C: { n:\"BrtBeginIconSet14\" },\n0x041D: { n:\"BrtDVal14\" },\n0x041E: { n:\"BrtBeginDVals14\" },\n0x041F: { n:\"BrtColor14\" },\n0x0420: { n:\"BrtBeginSparklines\" },\n0x0421: { n:\"BrtEndSparklines\" },\n0x0422: { n:\"BrtBeginSparklineGroups\" },\n0x0423: { n:\"BrtEndSparklineGroups\" },\n0x0425: { n:\"BrtSXVD14\" },\n0x0426: { n:\"BrtBeginSXView14\" },\n0x0427: { n:\"BrtEndSXView14\" },\n0x0428: { n:\"BrtBeginSXView16\" },\n0x0429: { n:\"BrtEndSXView16\" },\n0x042A: { n:\"BrtBeginPCD14\" },\n0x042B: { n:\"BrtEndPCD14\" },\n0x042C: { n:\"BrtBeginExtConn14\" },\n0x042D: { n:\"BrtEndExtConn14\" },\n0x042E: { n:\"BrtBeginSlicerCacheIDs\" },\n0x042F: { n:\"BrtEndSlicerCacheIDs\" },\n0x0430: { n:\"BrtBeginSlicerCacheID\" },\n0x0431: { n:\"BrtEndSlicerCacheID\" },\n0x0433: { n:\"BrtBeginSlicerCache\" },\n0x0434: { n:\"BrtEndSlicerCache\" },\n0x0435: { n:\"BrtBeginSlicerCacheDef\" },\n0x0436: { n:\"BrtEndSlicerCacheDef\" },\n0x0437: { n:\"BrtBeginSlicersEx\" },\n0x0438: { n:\"BrtEndSlicersEx\" },\n0x0439: { n:\"BrtBeginSlicerEx\" },\n0x043A: { n:\"BrtEndSlicerEx\" },\n0x043B: { n:\"BrtBeginSlicer\" },\n0x043C: { n:\"BrtEndSlicer\" },\n0x043D: { n:\"BrtSlicerCachePivotTables\" },\n0x043E: { n:\"BrtBeginSlicerCacheOlapImpl\" },\n0x043F: { n:\"BrtEndSlicerCacheOlapImpl\" },\n0x0440: { n:\"BrtBeginSlicerCacheLevelsData\" },\n0x0441: { n:\"BrtEndSlicerCacheLevelsData\" },\n0x0442: { n:\"BrtBeginSlicerCacheLevelData\" },\n0x0443: { n:\"BrtEndSlicerCacheLevelData\" },\n0x0444: { n:\"BrtBeginSlicerCacheSiRanges\" },\n0x0445: { n:\"BrtEndSlicerCacheSiRanges\" },\n0x0446: { n:\"BrtBeginSlicerCacheSiRange\" },\n0x0447: { n:\"BrtEndSlicerCacheSiRange\" },\n0x0448: { n:\"BrtSlicerCacheOlapItem\" },\n0x0449: { n:\"BrtBeginSlicerCacheSelections\" },\n0x044A: { n:\"BrtSlicerCacheSelection\" },\n0x044B: { n:\"BrtEndSlicerCacheSelections\" },\n0x044C: { n:\"BrtBeginSlicerCacheNative\" },\n0x044D: { n:\"BrtEndSlicerCacheNative\" },\n0x044E: { n:\"BrtSlicerCacheNativeItem\" },\n0x044F: { n:\"BrtRangeProtection14\" },\n0x0450: { n:\"BrtRangeProtectionIso14\" },\n0x0451: { n:\"BrtCellIgnoreEC14\" },\n0x0457: { n:\"BrtList14\" },\n0x0458: { n:\"BrtCFIcon\" },\n0x0459: { n:\"BrtBeginSlicerCachesPivotCacheIDs\" },\n0x045A: { n:\"BrtEndSlicerCachesPivotCacheIDs\" },\n0x045B: { n:\"BrtBeginSlicers\" },\n0x045C: { n:\"BrtEndSlicers\" },\n0x045D: { n:\"BrtWbProp14\" },\n0x045E: { n:\"BrtBeginSXEdit\" },\n0x045F: { n:\"BrtEndSXEdit\" },\n0x0460: { n:\"BrtBeginSXEdits\" },\n0x0461: { n:\"BrtEndSXEdits\" },\n0x0462: { n:\"BrtBeginSXChange\" },\n0x0463: { n:\"BrtEndSXChange\" },\n0x0464: { n:\"BrtBeginSXChanges\" },\n0x0465: { n:\"BrtEndSXChanges\" },\n0x0466: { n:\"BrtSXTupleItems\" },\n0x0468: { n:\"BrtBeginSlicerStyle\" },\n0x0469: { n:\"BrtEndSlicerStyle\" },\n0x046A: { n:\"BrtSlicerStyleElement\" },\n0x046B: { n:\"BrtBeginStyleSheetExt14\" },\n0x046C: { n:\"BrtEndStyleSheetExt14\" },\n0x046D: { n:\"BrtBeginSlicerCachesPivotCacheID\" },\n0x046E: { n:\"BrtEndSlicerCachesPivotCacheID\" },\n0x046F: { n:\"BrtBeginConditionalFormattings\" },\n0x0470: { n:\"BrtEndConditionalFormattings\" },\n0x0471: { n:\"BrtBeginPCDCalcMemExt\" },\n0x0472: { n:\"BrtEndPCDCalcMemExt\" },\n0x0473: { n:\"BrtBeginPCDCalcMemsExt\" },\n0x0474: { n:\"BrtEndPCDCalcMemsExt\" },\n0x0475: { n:\"BrtPCDField14\" },\n0x0476: { n:\"BrtBeginSlicerStyles\" },\n0x0477: { n:\"BrtEndSlicerStyles\" },\n0x0478: { n:\"BrtBeginSlicerStyleElements\" },\n0x0479: { n:\"BrtEndSlicerStyleElements\" },\n0x047A: { n:\"BrtCFRuleExt\" },\n0x047B: { n:\"BrtBeginSXCondFmt14\" },\n0x047C: { n:\"BrtEndSXCondFmt14\" },\n0x047D: { n:\"BrtBeginSXCondFmts14\" },\n0x047E: { n:\"BrtEndSXCondFmts14\" },\n0x0480: { n:\"BrtBeginSortCond14\" },\n0x0481: { n:\"BrtEndSortCond14\" },\n0x0482: { n:\"BrtEndDVals14\" },\n0x0483: { n:\"BrtEndIconSet14\" },\n0x0484: { n:\"BrtEndDatabar14\" },\n0x0485: { n:\"BrtBeginColorScale14\" },\n0x0486: { n:\"BrtEndColorScale14\" },\n0x0487: { n:\"BrtBeginSxrules14\" },\n0x0488: { n:\"BrtEndSxrules14\" },\n0x0489: { n:\"BrtBeginPRule14\" },\n0x048A: { n:\"BrtEndPRule14\" },\n0x048B: { n:\"BrtBeginPRFilters14\" },\n0x048C: { n:\"BrtEndPRFilters14\" },\n0x048D: { n:\"BrtBeginPRFilter14\" },\n0x048E: { n:\"BrtEndPRFilter14\" },\n0x048F: { n:\"BrtBeginPRFItem14\" },\n0x0490: { n:\"BrtEndPRFItem14\" },\n0x0491: { n:\"BrtBeginCellIgnoreECs14\" },\n0x0492: { n:\"BrtEndCellIgnoreECs14\" },\n0x0493: { n:\"BrtDxf14\" },\n0x0494: { n:\"BrtBeginDxF14s\" },\n0x0495: { n:\"BrtEndDxf14s\" },\n0x0499: { n:\"BrtFilter14\" },\n0x049A: { n:\"BrtBeginCustomFilters14\" },\n0x049C: { n:\"BrtCustomFilter14\" },\n0x049D: { n:\"BrtIconFilter14\" },\n0x049E: { n:\"BrtPivotCacheConnectionName\" },\n0x0800: { n:\"BrtBeginDecoupledPivotCacheIDs\" },\n0x0801: { n:\"BrtEndDecoupledPivotCacheIDs\" },\n0x0802: { n:\"BrtDecoupledPivotCacheID\" },\n0x0803: { n:\"BrtBeginPivotTableRefs\" },\n0x0804: { n:\"BrtEndPivotTableRefs\" },\n0x0805: { n:\"BrtPivotTableRef\" },\n0x0806: { n:\"BrtSlicerCacheBookPivotTables\" },\n0x0807: { n:\"BrtBeginSxvcells\" },\n0x0808: { n:\"BrtEndSxvcells\" },\n0x0809: { n:\"BrtBeginSxRow\" },\n0x080A: { n:\"BrtEndSxRow\" },\n0x080C: { n:\"BrtPcdCalcMem15\" },\n0x0813: { n:\"BrtQsi15\" },\n0x0814: { n:\"BrtBeginWebExtensions\" },\n0x0815: { n:\"BrtEndWebExtensions\" },\n0x0816: { n:\"BrtWebExtension\" },\n0x0817: { n:\"BrtAbsPath15\" },\n0x0818: { n:\"BrtBeginPivotTableUISettings\" },\n0x0819: { n:\"BrtEndPivotTableUISettings\" },\n0x081B: { n:\"BrtTableSlicerCacheIDs\" },\n0x081C: { n:\"BrtTableSlicerCacheID\" },\n0x081D: { n:\"BrtBeginTableSlicerCache\" },\n0x081E: { n:\"BrtEndTableSlicerCache\" },\n0x081F: { n:\"BrtSxFilter15\" },\n0x0820: { n:\"BrtBeginTimelineCachePivotCacheIDs\" },\n0x0821: { n:\"BrtEndTimelineCachePivotCacheIDs\" },\n0x0822: { n:\"BrtTimelineCachePivotCacheID\" },\n0x0823: { n:\"BrtBeginTimelineCacheIDs\" },\n0x0824: { n:\"BrtEndTimelineCacheIDs\" },\n0x0825: { n:\"BrtBeginTimelineCacheID\" },\n0x0826: { n:\"BrtEndTimelineCacheID\" },\n0x0827: { n:\"BrtBeginTimelinesEx\" },\n0x0828: { n:\"BrtEndTimelinesEx\" },\n0x0829: { n:\"BrtBeginTimelineEx\" },\n0x082A: { n:\"BrtEndTimelineEx\" },\n0x082B: { n:\"BrtWorkBookPr15\" },\n0x082C: { n:\"BrtPCDH15\" },\n0x082D: { n:\"BrtBeginTimelineStyle\" },\n0x082E: { n:\"BrtEndTimelineStyle\" },\n0x082F: { n:\"BrtTimelineStyleElement\" },\n0x0830: { n:\"BrtBeginTimelineStylesheetExt15\" },\n0x0831: { n:\"BrtEndTimelineStylesheetExt15\" },\n0x0832: { n:\"BrtBeginTimelineStyles\" },\n0x0833: { n:\"BrtEndTimelineStyles\" },\n0x0834: { n:\"BrtBeginTimelineStyleElements\" },\n0x0835: { n:\"BrtEndTimelineStyleElements\" },\n0x0836: { n:\"BrtDxf15\" },\n0x0837: { n:\"BrtBeginDxfs15\" },\n0x0838: { n:\"brtEndDxfs15\" },\n0x0839: { n:\"BrtSlicerCacheHideItemsWithNoData\" },\n0x083A: { n:\"BrtBeginItemUniqueNames\" },\n0x083B: { n:\"BrtEndItemUniqueNames\" },\n0x083C: { n:\"BrtItemUniqueName\" },\n0x083D: { n:\"BrtBeginExtConn15\" },\n0x083E: { n:\"BrtEndExtConn15\" },\n0x083F: { n:\"BrtBeginOledbPr15\" },\n0x0840: { n:\"BrtEndOledbPr15\" },\n0x0841: { n:\"BrtBeginDataFeedPr15\" },\n0x0842: { n:\"BrtEndDataFeedPr15\" },\n0x0843: { n:\"BrtTextPr15\" },\n0x0844: { n:\"BrtRangePr15\" },\n0x0845: { n:\"BrtDbCommand15\" },\n0x0846: { n:\"BrtBeginDbTables15\" },\n0x0847: { n:\"BrtEndDbTables15\" },\n0x0848: { n:\"BrtDbTable15\" },\n0x0849: { n:\"BrtBeginDataModel\" },\n0x084A: { n:\"BrtEndDataModel\" },\n0x084B: { n:\"BrtBeginModelTables\" },\n0x084C: { n:\"BrtEndModelTables\" },\n0x084D: { n:\"BrtModelTable\" },\n0x084E: { n:\"BrtBeginModelRelationships\" },\n0x084F: { n:\"BrtEndModelRelationships\" },\n0x0850: { n:\"BrtModelRelationship\" },\n0x0851: { n:\"BrtBeginECTxtWiz15\" },\n0x0852: { n:\"BrtEndECTxtWiz15\" },\n0x0853: { n:\"BrtBeginECTWFldInfoLst15\" },\n0x0854: { n:\"BrtEndECTWFldInfoLst15\" },\n0x0855: { n:\"BrtBeginECTWFldInfo15\" },\n0x0856: { n:\"BrtFieldListActiveItem\" },\n0x0857: { n:\"BrtPivotCacheIdVersion\" },\n0x0858: { n:\"BrtSXDI15\" },\n0x0859: { n:\"BrtBeginModelTimeGroupings\" },\n0x085A: { n:\"BrtEndModelTimeGroupings\" },\n0x085B: { n:\"BrtBeginModelTimeGrouping\" },\n0x085C: { n:\"BrtEndModelTimeGrouping\" },\n0x085D: { n:\"BrtModelTimeGroupingCalcCol\" },\n0x0C00: { n:\"BrtUid\" },\n0x0C01: { n:\"BrtRevisionPtr\" },\n0x13e7: { n:\"BrtBeginCalcFeatures\" },\n0x13e8: { n:\"BrtEndCalcFeatures\" },\n0x13e9: { n:\"BrtCalcFeature\" },\n0xFFFF: { n:\"\" }\n};\n\nvar XLSBRE = evert_key(XLSBRecordEnum, 'n');\n\n/* [MS-XLS] 2.3 Record Enumeration */\nvar XLSRecordEnum = {\n0x0003: { n:\"BIFF2NUM\", f:parse_BIFF2NUM },\n0x0004: { n:\"BIFF2STR\", f:parse_BIFF2STR },\n0x0006: { n:\"Formula\", f:parse_Formula },\n0x0009: { n:'BOF', f:parse_BOF },\n0x000a: { n:'EOF', f:parsenoop2 },\n0x000c: { n:\"CalcCount\", f:parseuint16 },\n0x000d: { n:\"CalcMode\", f:parseuint16 },\n0x000e: { n:\"CalcPrecision\", f:parsebool },\n0x000f: { n:\"CalcRefMode\", f:parsebool },\n0x0010: { n:\"CalcDelta\", f:parse_Xnum },\n0x0011: { n:\"CalcIter\", f:parsebool },\n0x0012: { n:\"Protect\", f:parsebool },\n0x0013: { n:\"Password\", f:parseuint16 },\n0x0014: { n:\"Header\", f:parse_XLHeaderFooter },\n0x0015: { n:\"Footer\", f:parse_XLHeaderFooter },\n0x0017: { n:\"ExternSheet\", f:parse_ExternSheet },\n0x0018: { n:\"Lbl\", f:parse_Lbl },\n0x0019: { n:\"WinProtect\", f:parsebool },\n0x001a: { n:\"VerticalPageBreaks\" },\n0x001b: { n:\"HorizontalPageBreaks\" },\n0x001c: { n:\"Note\", f:parse_Note },\n0x001d: { n:\"Selection\" },\n0x0022: { n:\"Date1904\", f:parsebool },\n0x0023: { n:\"ExternName\", f:parse_ExternName },\n0x0026: { n:\"LeftMargin\", f:parse_Xnum },\n0x0027: { n:\"RightMargin\", f:parse_Xnum },\n0x0028: { n:\"TopMargin\", f:parse_Xnum },\n0x0029: { n:\"BottomMargin\", f:parse_Xnum },\n0x002a: { n:\"PrintRowCol\", f:parsebool },\n0x002b: { n:\"PrintGrid\", f:parsebool },\n0x002f: { n:\"FilePass\", f:parse_FilePass },\n0x0031: { n:\"Font\", f:parse_Font },\n0x0033: { n:\"PrintSize\", f:parseuint16 },\n0x003c: { n:\"Continue\" },\n0x003d: { n:\"Window1\", f:parse_Window1 },\n0x0040: { n:\"Backup\", f:parsebool },\n0x0041: { n:\"Pane\" },\n0x0042: { n:'CodePage', f:parseuint16 },\n0x004d: { n:\"Pls\" },\n0x0050: { n:\"DCon\" },\n0x0051: { n:\"DConRef\" },\n0x0052: { n:\"DConName\" },\n0x0055: { n:\"DefColWidth\", f:parseuint16 },\n0x0059: { n:\"XCT\" },\n0x005a: { n:\"CRN\" },\n0x005b: { n:\"FileSharing\" },\n0x005c: { n:'WriteAccess', f:parse_WriteAccess },\n0x005d: { n:\"Obj\", f:parse_Obj },\n0x005e: { n:\"Uncalced\" },\n0x005f: { n:\"CalcSaveRecalc\", f:parsebool },\n0x0060: { n:\"Template\" },\n0x0061: { n:\"Intl\" },\n0x0063: { n:\"ObjProtect\", f:parsebool },\n0x007d: { n:\"ColInfo\", f:parse_ColInfo },\n0x0080: { n:\"Guts\", f:parse_Guts },\n0x0081: { n:\"WsBool\", f:parse_WsBool },\n0x0082: { n:\"GridSet\", f:parseuint16 },\n0x0083: { n:\"HCenter\", f:parsebool },\n0x0084: { n:\"VCenter\", f:parsebool },\n0x0085: { n:'BoundSheet8', f:parse_BoundSheet8 },\n0x0086: { n:\"WriteProtect\" },\n0x008c: { n:\"Country\", f:parse_Country },\n0x008d: { n:\"HideObj\", f:parseuint16 },\n0x0090: { n:\"Sort\" },\n0x0092: { n:\"Palette\", f:parse_Palette },\n0x0097: { n:\"Sync\" },\n0x0098: { n:\"LPr\" },\n0x0099: { n:\"DxGCol\" },\n0x009a: { n:\"FnGroupName\" },\n0x009b: { n:\"FilterMode\" },\n0x009c: { n:\"BuiltInFnGroupCount\", f:parseuint16 },\n0x009d: { n:\"AutoFilterInfo\" },\n0x009e: { n:\"AutoFilter\" },\n0x00a0: { n:\"Scl\", f:parse_Scl },\n0x00a1: { n:\"Setup\", f:parse_Setup },\n0x00ae: { n:\"ScenMan\" },\n0x00af: { n:\"SCENARIO\" },\n0x00b0: { n:\"SxView\" },\n0x00b1: { n:\"Sxvd\" },\n0x00b2: { n:\"SXVI\" },\n0x00b4: { n:\"SxIvd\" },\n0x00b5: { n:\"SXLI\" },\n0x00b6: { n:\"SXPI\" },\n0x00b8: { n:\"DocRoute\" },\n0x00b9: { n:\"RecipName\" },\n0x00bd: { n:\"MulRk\", f:parse_MulRk },\n0x00be: { n:\"MulBlank\", f:parse_MulBlank },\n0x00c1: { n:'Mms', f:parsenoop2 },\n0x00c5: { n:\"SXDI\" },\n0x00c6: { n:\"SXDB\" },\n0x00c7: { n:\"SXFDB\" },\n0x00c8: { n:\"SXDBB\" },\n0x00c9: { n:\"SXNum\" },\n0x00ca: { n:\"SxBool\", f:parsebool },\n0x00cb: { n:\"SxErr\" },\n0x00cc: { n:\"SXInt\" },\n0x00cd: { n:\"SXString\" },\n0x00ce: { n:\"SXDtr\" },\n0x00cf: { n:\"SxNil\" },\n0x00d0: { n:\"SXTbl\" },\n0x00d1: { n:\"SXTBRGIITM\" },\n0x00d2: { n:\"SxTbpg\" },\n0x00d3: { n:\"ObProj\" },\n0x00d5: { n:\"SXStreamID\" },\n0x00d7: { n:\"DBCell\" },\n0x00d8: { n:\"SXRng\" },\n0x00d9: { n:\"SxIsxoper\" },\n0x00da: { n:\"BookBool\", f:parseuint16 },\n0x00dc: { n:\"DbOrParamQry\" },\n0x00dd: { n:\"ScenarioProtect\", f:parsebool },\n0x00de: { n:\"OleObjectSize\" },\n0x00e0: { n:\"XF\", f:parse_XF },\n0x00e1: { n:'InterfaceHdr', f:parse_InterfaceHdr },\n0x00e2: { n:'InterfaceEnd', f:parsenoop2 },\n0x00e3: { n:\"SXVS\" },\n0x00e5: { n:\"MergeCells\", f:parse_MergeCells },\n0x00e9: { n:\"BkHim\" },\n0x00eb: { n:\"MsoDrawingGroup\" },\n0x00ec: { n:\"MsoDrawing\" },\n0x00ed: { n:\"MsoDrawingSelection\" },\n0x00ef: { n:\"PhoneticInfo\" },\n0x00f0: { n:\"SxRule\" },\n0x00f1: { n:\"SXEx\" },\n0x00f2: { n:\"SxFilt\" },\n0x00f4: { n:\"SxDXF\" },\n0x00f5: { n:\"SxItm\" },\n0x00f6: { n:\"SxName\" },\n0x00f7: { n:\"SxSelect\" },\n0x00f8: { n:\"SXPair\" },\n0x00f9: { n:\"SxFmla\" },\n0x00fb: { n:\"SxFormat\" },\n0x00fc: { n:\"SST\", f:parse_SST },\n0x00fd: { n:\"LabelSst\", f:parse_LabelSst },\n0x00ff: { n:\"ExtSST\", f:parse_ExtSST },\n0x0100: { n:\"SXVDEx\" },\n0x0103: { n:\"SXFormula\" },\n0x0122: { n:\"SXDBEx\" },\n0x0137: { n:\"RRDInsDel\" },\n0x0138: { n:\"RRDHead\" },\n0x013b: { n:\"RRDChgCell\" },\n0x013d: { n:\"RRTabId\", f:parseuint16a },\n0x013e: { n:\"RRDRenSheet\" },\n0x013f: { n:\"RRSort\" },\n0x0140: { n:\"RRDMove\" },\n0x014a: { n:\"RRFormat\" },\n0x014b: { n:\"RRAutoFmt\" },\n0x014d: { n:\"RRInsertSh\" },\n0x014e: { n:\"RRDMoveBegin\" },\n0x014f: { n:\"RRDMoveEnd\" },\n0x0150: { n:\"RRDInsDelBegin\" },\n0x0151: { n:\"RRDInsDelEnd\" },\n0x0152: { n:\"RRDConflict\" },\n0x0153: { n:\"RRDDefName\" },\n0x0154: { n:\"RRDRstEtxp\" },\n0x015f: { n:\"LRng\" },\n0x0160: { n:\"UsesELFs\", f:parsebool },\n0x0161: { n:\"DSF\", f:parsenoop2 },\n0x0191: { n:\"CUsr\" },\n0x0192: { n:\"CbUsr\" },\n0x0193: { n:\"UsrInfo\" },\n0x0194: { n:\"UsrExcl\" },\n0x0195: { n:\"FileLock\" },\n0x0196: { n:\"RRDInfo\" },\n0x0197: { n:\"BCUsrs\" },\n0x0198: { n:\"UsrChk\" },\n0x01a9: { n:\"UserBView\" },\n0x01aa: { n:\"UserSViewBegin\" },\n0x01ab: { n:\"UserSViewEnd\" },\n0x01ac: { n:\"RRDUserView\" },\n0x01ad: { n:\"Qsi\" },\n0x01ae: { n:\"SupBook\", f:parse_SupBook },\n0x01af: { n:\"Prot4Rev\", f:parsebool },\n0x01b0: { n:\"CondFmt\" },\n0x01b1: { n:\"CF\" },\n0x01b2: { n:\"DVal\" },\n0x01b5: { n:\"DConBin\" },\n0x01b6: { n:\"TxO\", f:parse_TxO },\n0x01b7: { n:\"RefreshAll\", f:parsebool },\n0x01b8: { n:\"HLink\", f:parse_HLink },\n0x01b9: { n:\"Lel\" },\n0x01ba: { n:\"CodeName\", f:parse_XLUnicodeString },\n0x01bb: { n:\"SXFDBType\" },\n0x01bc: { n:\"Prot4RevPass\", f:parseuint16 },\n0x01bd: { n:\"ObNoMacros\" },\n0x01be: { n:\"Dv\" },\n0x01c0: { n:\"Excel9File\", f:parsenoop2 },\n0x01c1: { n:\"RecalcId\", f:parse_RecalcId, r:2},\n0x01c2: { n:\"EntExU2\", f:parsenoop2 },\n0x0200: { n:\"Dimensions\", f:parse_Dimensions },\n0x0201: { n:\"Blank\", f:parse_Blank },\n0x0203: { n:\"Number\", f:parse_Number },\n0x0204: { n:\"Label\", f:parse_Label },\n0x0205: { n:\"BoolErr\", f:parse_BoolErr },\n0x0206: { n:\"Formula\", f:parse_Formula },\n0x0207: { n:\"String\", f:parse_String },\n0x0208: { n:'Row', f:parse_Row },\n0x020b: { n:\"Index\" },\n0x0221: { n:\"Array\", f:parse_Array },\n0x0225: { n:\"DefaultRowHeight\", f:parse_DefaultRowHeight },\n0x0236: { n:\"Table\" },\n0x023e: { n:\"Window2\", f:parse_Window2 },\n0x027e: { n:\"RK\", f:parse_RK },\n0x0293: { n:\"Style\" },\n0x0406: { n:\"Formula\", f:parse_Formula },\n0x0418: { n:\"BigName\" },\n0x041e: { n:\"Format\", f:parse_Format },\n0x043c: { n:\"ContinueBigName\" },\n0x04bc: { n:\"ShrFmla\", f:parse_ShrFmla },\n0x0800: { n:\"HLinkTooltip\", f:parse_HLinkTooltip },\n0x0801: { n:\"WebPub\" },\n0x0802: { n:\"QsiSXTag\" },\n0x0803: { n:\"DBQueryExt\" },\n0x0804: { n:\"ExtString\" },\n0x0805: { n:\"TxtQry\" },\n0x0806: { n:\"Qsir\" },\n0x0807: { n:\"Qsif\" },\n0x0808: { n:\"RRDTQSIF\" },\n0x0809: { n:'BOF', f:parse_BOF },\n0x080a: { n:\"OleDbConn\" },\n0x080b: { n:\"WOpt\" },\n0x080c: { n:\"SXViewEx\" },\n0x080d: { n:\"SXTH\" },\n0x080e: { n:\"SXPIEx\" },\n0x080f: { n:\"SXVDTEx\" },\n0x0810: { n:\"SXViewEx9\" },\n0x0812: { n:\"ContinueFrt\" },\n0x0813: { n:\"RealTimeData\" },\n0x0850: { n:\"ChartFrtInfo\" },\n0x0851: { n:\"FrtWrapper\" },\n0x0852: { n:\"StartBlock\" },\n0x0853: { n:\"EndBlock\" },\n0x0854: { n:\"StartObject\" },\n0x0855: { n:\"EndObject\" },\n0x0856: { n:\"CatLab\" },\n0x0857: { n:\"YMult\" },\n0x0858: { n:\"SXViewLink\" },\n0x0859: { n:\"PivotChartBits\" },\n0x085a: { n:\"FrtFontList\" },\n0x0862: { n:\"SheetExt\" },\n0x0863: { n:\"BookExt\", r:12},\n0x0864: { n:\"SXAddl\" },\n0x0865: { n:\"CrErr\" },\n0x0866: { n:\"HFPicture\" },\n0x0867: { n:'FeatHdr', f:parsenoop2 },\n0x0868: { n:\"Feat\" },\n0x086a: { n:\"DataLabExt\" },\n0x086b: { n:\"DataLabExtContents\" },\n0x086c: { n:\"CellWatch\" },\n0x0871: { n:\"FeatHdr11\" },\n0x0872: { n:\"Feature11\" },\n0x0874: { n:\"DropDownObjIds\" },\n0x0875: { n:\"ContinueFrt11\" },\n0x0876: { n:\"DConn\" },\n0x0877: { n:\"List12\" },\n0x0878: { n:\"Feature12\" },\n0x0879: { n:\"CondFmt12\" },\n0x087a: { n:\"CF12\" },\n0x087b: { n:\"CFEx\" },\n0x087c: { n:\"XFCRC\", f:parse_XFCRC, r:12 },\n0x087d: { n:\"XFExt\", f:parse_XFExt, r:12 },\n0x087e: { n:\"AutoFilter12\" },\n0x087f: { n:\"ContinueFrt12\" },\n0x0884: { n:\"MDTInfo\" },\n0x0885: { n:\"MDXStr\" },\n0x0886: { n:\"MDXTuple\" },\n0x0887: { n:\"MDXSet\" },\n0x0888: { n:\"MDXProp\" },\n0x0889: { n:\"MDXKPI\" },\n0x088a: { n:\"MDB\" },\n0x088b: { n:\"PLV\" },\n0x088c: { n:\"Compat12\", f:parsebool, r:12 },\n0x088d: { n:\"DXF\" },\n0x088e: { n:\"TableStyles\", r:12 },\n0x088f: { n:\"TableStyle\" },\n0x0890: { n:\"TableStyleElement\" },\n0x0892: { n:\"StyleExt\" },\n0x0893: { n:\"NamePublish\" },\n0x0894: { n:\"NameCmt\", f:parse_NameCmt, r:12 },\n0x0895: { n:\"SortData\" },\n0x0896: { n:\"Theme\", f:parse_Theme, r:12 },\n0x0897: { n:\"GUIDTypeLib\" },\n0x0898: { n:\"FnGrp12\" },\n0x0899: { n:\"NameFnGrp12\" },\n0x089a: { n:\"MTRSettings\", f:parse_MTRSettings, r:12 },\n0x089b: { n:\"CompressPictures\", f:parsenoop2 },\n0x089c: { n:\"HeaderFooter\" },\n0x089d: { n:\"CrtLayout12\" },\n0x089e: { n:\"CrtMlFrt\" },\n0x089f: { n:\"CrtMlFrtContinue\" },\n0x08a3: { n:\"ForceFullCalculation\", f:parse_ForceFullCalculation },\n0x08a4: { n:\"ShapePropsStream\" },\n0x08a5: { n:\"TextPropsStream\" },\n0x08a6: { n:\"RichTextStream\" },\n0x08a7: { n:\"CrtLayout12A\" },\n0x1001: { n:\"Units\" },\n0x1002: { n:\"Chart\" },\n0x1003: { n:\"Series\" },\n0x1006: { n:\"DataFormat\" },\n0x1007: { n:\"LineFormat\" },\n0x1009: { n:\"MarkerFormat\" },\n0x100a: { n:\"AreaFormat\" },\n0x100b: { n:\"PieFormat\" },\n0x100c: { n:\"AttachedLabel\" },\n0x100d: { n:\"SeriesText\" },\n0x1014: { n:\"ChartFormat\" },\n0x1015: { n:\"Legend\" },\n0x1016: { n:\"SeriesList\" },\n0x1017: { n:\"Bar\" },\n0x1018: { n:\"Line\" },\n0x1019: { n:\"Pie\" },\n0x101a: { n:\"Area\" },\n0x101b: { n:\"Scatter\" },\n0x101c: { n:\"CrtLine\" },\n0x101d: { n:\"Axis\" },\n0x101e: { n:\"Tick\" },\n0x101f: { n:\"ValueRange\" },\n0x1020: { n:\"CatSerRange\" },\n0x1021: { n:\"AxisLine\" },\n0x1022: { n:\"CrtLink\" },\n0x1024: { n:\"DefaultText\" },\n0x1025: { n:\"Text\" },\n0x1026: { n:\"FontX\", f:parseuint16 },\n0x1027: { n:\"ObjectLink\" },\n0x1032: { n:\"Frame\" },\n0x1033: { n:\"Begin\" },\n0x1034: { n:\"End\" },\n0x1035: { n:\"PlotArea\" },\n0x103a: { n:\"Chart3d\" },\n0x103c: { n:\"PicF\" },\n0x103d: { n:\"DropBar\" },\n0x103e: { n:\"Radar\" },\n0x103f: { n:\"Surf\" },\n0x1040: { n:\"RadarArea\" },\n0x1041: { n:\"AxisParent\" },\n0x1043: { n:\"LegendException\" },\n0x1044: { n:\"ShtProps\", f:parse_ShtProps },\n0x1045: { n:\"SerToCrt\" },\n0x1046: { n:\"AxesUsed\" },\n0x1048: { n:\"SBaseRef\" },\n0x104a: { n:\"SerParent\" },\n0x104b: { n:\"SerAuxTrend\" },\n0x104e: { n:\"IFmtRecord\" },\n0x104f: { n:\"Pos\" },\n0x1050: { n:\"AlRuns\" },\n0x1051: { n:\"BRAI\" },\n0x105b: { n:\"SerAuxErrBar\" },\n0x105c: { n:\"ClrtClient\", f:parse_ClrtClient },\n0x105d: { n:\"SerFmt\" },\n0x105f: { n:\"Chart3DBarShape\" },\n0x1060: { n:\"Fbi\" },\n0x1061: { n:\"BopPop\" },\n0x1062: { n:\"AxcExt\" },\n0x1063: { n:\"Dat\" },\n0x1064: { n:\"PlotGrowth\" },\n0x1065: { n:\"SIIndex\" },\n0x1066: { n:\"GelFrame\" },\n0x1067: { n:\"BopPopCustom\" },\n0x1068: { n:\"Fbi2\" },\n\n0x0000: { n:\"Dimensions\", f:parse_Dimensions },\n0x0002: { n:\"BIFF2INT\", f:parse_BIFF2INT },\n0x0005: { n:\"BoolErr\", f:parse_BoolErr },\n0x0007: { n:\"String\", f:parse_BIFF2STRING },\n0x0008: { n:\"BIFF2ROW\" },\n0x000b: { n:\"Index\" },\n0x0016: { n:\"ExternCount\", f:parseuint16 },\n0x001e: { n:\"BIFF2FORMAT\", f:parse_BIFF2Format },\n0x001f: { n:\"BIFF2FMTCNT\" }, /* 16-bit cnt of BIFF2FORMAT records */\n0x0020: { n:\"BIFF2COLINFO\" },\n0x0021: { n:\"Array\", f:parse_Array },\n0x0025: { n:\"DefaultRowHeight\", f:parse_DefaultRowHeight },\n0x0032: { n:\"BIFF2FONTXTRA\", f:parse_BIFF2FONTXTRA },\n0x0034: { n:\"DDEObjName\" },\n0x003e: { n:\"BIFF2WINDOW2\" },\n0x0043: { n:\"BIFF2XF\" },\n0x0045: { n:\"BIFF2FONTCLR\" },\n0x0056: { n:\"BIFF4FMTCNT\" }, /* 16-bit cnt, similar to BIFF2 */\n0x007e: { n:\"RK\" }, /* Not necessarily same as 0x027e */\n0x007f: { n:\"ImData\", f:parse_ImData },\n0x0087: { n:\"Addin\" },\n0x0088: { n:\"Edg\" },\n0x0089: { n:\"Pub\" },\n0x0091: { n:\"Sub\" },\n0x0094: { n:\"LHRecord\" },\n0x0095: { n:\"LHNGraph\" },\n0x0096: { n:\"Sound\" },\n0x00a9: { n:\"CoordList\" },\n0x00ab: { n:\"GCW\" },\n0x00bc: { n:\"ShrFmla\" }, /* Not necessarily same as 0x04bc */\n0x00bf: { n:\"ToolbarHdr\" },\n0x00c0: { n:\"ToolbarEnd\" },\n0x00c2: { n:\"AddMenu\" },\n0x00c3: { n:\"DelMenu\" },\n0x00d6: { n:\"RString\", f:parse_RString },\n0x00df: { n:\"UDDesc\" },\n0x00ea: { n:\"TabIdConf\" },\n0x0162: { n:\"XL5Modify\" },\n0x01a5: { n:\"FileSharing2\" },\n0x0209: { n:'BOF', f:parse_BOF },\n0x0218: { n:\"Lbl\", f:parse_Lbl },\n0x0223: { n:\"ExternName\", f:parse_ExternName },\n0x0231: { n:\"Font\" },\n0x0243: { n:\"BIFF3XF\" },\n0x0409: { n:'BOF', f:parse_BOF },\n0x0443: { n:\"BIFF4XF\" },\n0x086d: { n:\"FeatInfo\" },\n0x0873: { n:\"FeatInfo11\" },\n0x0881: { n:\"SXAddl12\" },\n0x08c0: { n:\"AutoWebPub\" },\n0x08c1: { n:\"ListObj\" },\n0x08c2: { n:\"ListField\" },\n0x08c3: { n:\"ListDV\" },\n0x08c4: { n:\"ListCondFmt\" },\n0x08c5: { n:\"ListCF\" },\n0x08c6: { n:\"FMQry\" },\n0x08c7: { n:\"FMSQry\" },\n0x08c8: { n:\"PLV\" },\n0x08c9: { n:\"LnExt\" },\n0x08ca: { n:\"MkrExt\" },\n0x08cb: { n:\"CrtCoopt\" },\n0x08d6: { n:\"FRTArchId$\", r:12 },\n\n0x7262: {}\n};\n\nvar XLSRE = evert_key(XLSRecordEnum, 'n');\nfunction write_biff_rec(ba, type, payload, length) {\n\tvar t = +type || +XLSRE[type];\n\tif(isNaN(t)) return;\n\tvar len = length || (payload||[]).length || 0;\n\tvar o = ba.next(4);\n\to.write_shift(2, t);\n\to.write_shift(2, len);\n\tif(len > 0 && is_buf(payload)) ba.push(payload);\n}\n\nfunction write_BIFF2Cell(out, r, c) {\n\tif(!out) out = new_buf(7);\n\tout.write_shift(2, r);\n\tout.write_shift(2, c);\n\tout.write_shift(2, 0);\n\tout.write_shift(1, 0);\n\treturn out;\n}\n\nfunction write_BIFF2BERR(r, c, val, t) {\n\tvar out = new_buf(9);\n\twrite_BIFF2Cell(out, r, c);\n\tif(t == 'e') { out.write_shift(1, val); out.write_shift(1, 1); }\n\telse { out.write_shift(1, val?1:0); out.write_shift(1, 0); }\n\treturn out;\n}\n\n/* TODO: codepage, large strings */\nfunction write_BIFF2LABEL(r, c, val) {\n\tvar out = new_buf(8 + 2*val.length);\n\twrite_BIFF2Cell(out, r, c);\n\tout.write_shift(1, val.length);\n\tout.write_shift(val.length, val, 'sbcs');\n\treturn out.l < out.length ? out.slice(0, out.l) : out;\n}\n\nfunction write_ws_biff2_cell(ba, cell, R, C) {\n\tif(cell.v != null) switch(cell.t) {\n\t\tcase 'd': case 'n':\n\t\t\tvar v = cell.t == 'd' ? datenum(parseDate(cell.v)) : cell.v;\n\t\t\tif((v == (v|0)) && (v >= 0) && (v < 65536))\n\t\t\t\twrite_biff_rec(ba, 0x0002, write_BIFF2INT(R, C, v));\n\t\t\telse\n\t\t\t\twrite_biff_rec(ba, 0x0003, write_BIFF2NUM(R,C, v));\n\t\t\treturn;\n\t\tcase 'b': case 'e': write_biff_rec(ba, 0x0005, write_BIFF2BERR(R, C, cell.v, cell.t)); return;\n\t\t/* TODO: codepage, sst */\n\t\tcase 's': case 'str':\n\t\t\twrite_biff_rec(ba, 0x0004, write_BIFF2LABEL(R, C, cell.v));\n\t\t\treturn;\n\t}\n\twrite_biff_rec(ba, 0x0001, write_BIFF2Cell(null, R, C));\n}\n\nfunction write_ws_biff2(ba, ws, idx, opts) {\n\tvar dense = Array.isArray(ws);\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\"), ref, rr = \"\", cols = [];\n\tif(range.e.c > 0xFF || range.e.r > 0x3FFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n\t\trange.e.c = Math.min(range.e.c, 0xFF);\n\t\trange.e.r = Math.min(range.e.c, 0x3FFF);\n\t\tref = encode_range(range);\n\t}\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\trr = encode_row(R);\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\tref = cols[C] + rr;\n\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\tif(!cell) continue;\n\t\t\t/* write cell */\n\t\t\twrite_ws_biff2_cell(ba, cell, R, C, opts);\n\t\t}\n\t}\n}\n\n/* Based on test files */\nfunction write_biff2_buf(wb, opts) {\n\tvar o = opts || {};\n\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\tvar ba = buf_array();\n\tvar idx = 0;\n\tfor(var i=0;i<wb.SheetNames.length;++i) if(wb.SheetNames[i] == o.sheet) idx=i;\n\tif(idx == 0 && !!o.sheet && wb.SheetNames[0] != o.sheet) throw new Error(\"Sheet not found: \" + o.sheet);\n\twrite_biff_rec(ba, 0x0009, write_BOF(wb, 0x10, o));\n\t/* ... */\n\twrite_ws_biff2(ba, wb.Sheets[wb.SheetNames[idx]], idx, o, wb);\n\t/* ... */\n\twrite_biff_rec(ba, 0x000A);\n\treturn ba.end();\n}\n\nfunction write_FONTS_biff8(ba, data, opts) {\n\twrite_biff_rec(ba, \"Font\", write_Font({\n\t\tsz:12,\n\t\tcolor: {theme:1},\n\t\tname: \"Arial\",\n\t\tfamily: 2,\n\t\tscheme: \"minor\"\n\t}, opts));\n}\n\n\nfunction write_FMTS_biff8(ba, NF, opts) {\n\tif(!NF) return;\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\nfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) write_biff_rec(ba, \"Format\", write_Format(i, NF[i], opts));\n\t});\n}\n\nfunction write_FEAT(ba, ws) {\n\t/* [MS-XLS] 2.4.112 */\n\tvar o = new_buf(19);\n\to.write_shift(4, 0x867); o.write_shift(4, 0); o.write_shift(4, 0);\n\to.write_shift(2, 3); o.write_shift(1, 1); o.write_shift(4, 0);\n\twrite_biff_rec(ba, \"FeatHdr\", o);\n\t/* [MS-XLS] 2.4.111 */\n\to = new_buf(39);\n\to.write_shift(4, 0x868); o.write_shift(4, 0); o.write_shift(4, 0);\n\to.write_shift(2, 3); o.write_shift(1, 0); o.write_shift(4, 0);\n\to.write_shift(2, 1); o.write_shift(4, 4); o.write_shift(2, 0);\n\twrite_Ref8U(safe_decode_range(ws['!ref']||\"A1\"), o);\n\to.write_shift(4, 4);\n\twrite_biff_rec(ba, \"Feat\", o);\n}\n\nfunction write_CELLXFS_biff8(ba, opts) {\n\tfor(var i = 0; i < 16; ++i) write_biff_rec(ba, \"XF\", write_XF({numFmtId:0, style:true}, 0, opts));\n\topts.cellXfs.forEach(function(c) {\n\t\twrite_biff_rec(ba, \"XF\", write_XF(c, 0, opts));\n\t});\n}\n\nfunction write_ws_biff8_hlinks(ba, ws) {\n\tfor(var R=0; R<ws['!links'].length; ++R) {\n\t\tvar HL = ws['!links'][R];\n\t\twrite_biff_rec(ba, \"HLink\", write_HLink(HL));\n\t\tif(HL[1].Tooltip) write_biff_rec(ba, \"HLinkTooltip\", write_HLinkTooltip(HL));\n\t}\n\tdelete ws['!links'];\n}\n\nfunction write_ws_biff8_cell(ba, cell, R, C, opts) {\n\tvar os = 16 + get_cell_style(opts.cellXfs, cell, opts);\n\tif(cell.v != null) switch(cell.t) {\n\t\tcase 'd': case 'n':\n\t\t\tvar v = cell.t == 'd' ? datenum(parseDate(cell.v)) : cell.v;\n\t\t\t/* TODO: emit RK as appropriate */\n\t\t\twrite_biff_rec(ba, \"Number\", write_Number(R, C, v, os, opts));\n\t\t\treturn;\n\t\tcase 'b': case 'e': write_biff_rec(ba, 0x0205, write_BoolErr(R, C, cell.v, os, opts, cell.t)); return;\n\t\t/* TODO: codepage, sst */\n\t\tcase 's': case 'str':\n\t\t\twrite_biff_rec(ba, \"Label\", write_Label(R, C, cell.v, os, opts));\n\t\t\treturn;\n\t}\n\twrite_biff_rec(ba, \"Blank\", write_XLSCell(R, C, os));\n}\n\n/* [MS-XLS] 2.1.7.20.5 */\nfunction write_ws_biff8(idx, opts, wb) {\n\tvar ba = buf_array();\n\tvar s = wb.SheetNames[idx], ws = wb.Sheets[s] || {};\n\tvar _WB = ((wb||{}).Workbook||{});\n\tvar _sheet = ((_WB.Sheets||[])[idx]||{});\n\tvar dense = Array.isArray(ws);\n\tvar b8 = opts.biff == 8;\n\tvar ref, rr = \"\", cols = [];\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\");\n\tvar MAX_ROWS = b8 ? 65536 : 16384;\n\tif(range.e.c > 0xFF || range.e.r >= MAX_ROWS) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n\t\trange.e.c = Math.min(range.e.c, 0xFF);\n\t\trange.e.r = Math.min(range.e.c, MAX_ROWS-1);\n\t}\n\n\twrite_biff_rec(ba, 0x0809, write_BOF(wb, 0x10, opts));\n\t/* ... */\n\twrite_biff_rec(ba, \"CalcMode\", writeuint16(1));\n\twrite_biff_rec(ba, \"CalcCount\", writeuint16(100));\n\twrite_biff_rec(ba, \"CalcRefMode\", writebool(true));\n\twrite_biff_rec(ba, \"CalcIter\", writebool(false));\n\twrite_biff_rec(ba, \"CalcDelta\", write_Xnum(0.001));\n\twrite_biff_rec(ba, \"CalcSaveRecalc\", writebool(true));\n\twrite_biff_rec(ba, \"PrintRowCol\", writebool(false));\n\twrite_biff_rec(ba, \"PrintGrid\", writebool(false));\n\twrite_biff_rec(ba, \"GridSet\", writeuint16(1));\n\twrite_biff_rec(ba, \"Guts\", write_Guts([0,0]));\n\t/* ... */\n\twrite_biff_rec(ba, \"HCenter\", writebool(false));\n\twrite_biff_rec(ba, \"VCenter\", writebool(false));\n\t/* ... */\n\twrite_biff_rec(ba, 0x200, write_Dimensions(range, opts));\n\t/* ... */\n\n\tif(b8) ws['!links'] = [];\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\trr = encode_row(R);\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\tref = cols[C] + rr;\n\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\n\t\t\tif(!cell) continue;\n\t\t\t/* write cell */\n\t\t\twrite_ws_biff8_cell(ba, cell, R, C, opts);\n\t\t\tif(b8 && cell.l) ws['!links'].push([ref, cell.l]);\n\t\t}\n\t}\n\tvar cname = _sheet.CodeName || _sheet.name || s;\n\t/* ... */\n\tif(b8 && _WB.Views) write_biff_rec(ba, \"Window2\", write_Window2(_WB.Views[0]));\n\t/* ... */\n\tif(b8 && (ws['!merges']||[]).length) write_biff_rec(ba, \"MergeCells\", write_MergeCells(ws['!merges']));\n\t/* ... */\n\tif(b8) write_ws_biff8_hlinks(ba, ws);\n\t/* ... */\n\twrite_biff_rec(ba, \"CodeName\", write_XLUnicodeString(cname, opts));\n\t/* ... */\n\tif(b8) write_FEAT(ba, ws);\n\t/* ... */\n\twrite_biff_rec(ba, \"EOF\");\n\treturn ba.end();\n}\n\n/* [MS-XLS] 2.1.7.20.3 */\nfunction write_biff8_global(wb, bufs, opts) {\n\tvar A = buf_array();\n\tvar _WB = ((wb||{}).Workbook||{});\n\tvar _sheets = (_WB.Sheets||[]);\n\tvar _wb = _WB.WBProps||{};\n\tvar b8 = opts.biff == 8, b5 = opts.biff == 5;\n\twrite_biff_rec(A, 0x0809, write_BOF(wb, 0x05, opts));\n\tif(opts.bookType == \"xla\") write_biff_rec(A, \"Addin\");\n\twrite_biff_rec(A, \"InterfaceHdr\", b8 ? writeuint16(0x04b0) : null);\n\twrite_biff_rec(A, \"Mms\", writezeroes(2));\n\tif(b5) write_biff_rec(A, \"ToolbarHdr\");\n\tif(b5) write_biff_rec(A, \"ToolbarEnd\");\n\twrite_biff_rec(A, \"InterfaceEnd\");\n\twrite_biff_rec(A, \"WriteAccess\", write_WriteAccess(\"SheetJS\", opts));\n\twrite_biff_rec(A, \"CodePage\", writeuint16(b8 ? 0x04b0 : 0x04E4));\n\tif(b8) write_biff_rec(A, \"DSF\", writeuint16(0));\n\tif(b8) write_biff_rec(A, \"Excel9File\");\n\twrite_biff_rec(A, \"RRTabId\", write_RRTabId(wb.SheetNames.length));\n\tif(b8 && wb.vbaraw) {\n\t\twrite_biff_rec(A, \"ObProj\");\n\t\tvar cname = _wb.CodeName || \"ThisWorkbook\";\n\t\twrite_biff_rec(A, \"CodeName\", write_XLUnicodeString(cname, opts));\n\t}\n\twrite_biff_rec(A, \"BuiltInFnGroupCount\", writeuint16(0x11));\n\twrite_biff_rec(A, \"WinProtect\", writebool(false));\n\twrite_biff_rec(A, \"Protect\", writebool(false));\n\twrite_biff_rec(A, \"Password\", writeuint16(0));\n\tif(b8) write_biff_rec(A, \"Prot4Rev\", writebool(false));\n\tif(b8) write_biff_rec(A, \"Prot4RevPass\", writeuint16(0));\n\twrite_biff_rec(A, \"Window1\", write_Window1(opts));\n\twrite_biff_rec(A, \"Backup\", writebool(false));\n\twrite_biff_rec(A, \"HideObj\", writeuint16(0));\n\twrite_biff_rec(A, \"Date1904\", writebool(safe1904(wb)==\"true\"));\n\twrite_biff_rec(A, \"CalcPrecision\", writebool(true));\n\tif(b8) write_biff_rec(A, \"RefreshAll\", writebool(false));\n\twrite_biff_rec(A, \"BookBool\", writeuint16(0));\n\t/* ... */\n\twrite_FONTS_biff8(A, wb, opts);\n\twrite_FMTS_biff8(A, wb.SSF, opts);\n\twrite_CELLXFS_biff8(A, opts);\n\t/* ... */\n\tif(b8) write_biff_rec(A, \"UsesELFs\", writebool(false));\n\tvar a = A.end();\n\n\tvar C = buf_array();\n\tif(b8) write_biff_rec(C, \"Country\", write_Country());\n\t/* BIFF8: [SST *Continue] ExtSST */\n\twrite_biff_rec(C, \"EOF\");\n\tvar c = C.end();\n\n\tvar B = buf_array();\n\tvar blen = 0, j = 0;\n\tfor(j = 0; j < wb.SheetNames.length; ++j) blen += (b8 ? 12 : 11) + (b8 ? 2 : 1) * wb.SheetNames[j].length;\n\tvar start = a.length + blen + c.length;\n\tfor(j = 0; j < wb.SheetNames.length; ++j) {\n\t\tvar _sheet = _sheets[j] || ({});\n\t\twrite_biff_rec(B, \"BoundSheet8\", write_BoundSheet8({pos:start, hs:_sheet.Hidden||0, dt:0, name:wb.SheetNames[j]}, opts));\n\t\tstart += bufs[j].length;\n\t}\n\t/* 1*BoundSheet8 */\n\tvar b = B.end();\n\tif(blen != b.length) throw new Error(\"BS8 \" + blen + \" != \" + b.length);\n\n\tvar out = [];\n\tif(a.length) out.push(a);\n\tif(b.length) out.push(b);\n\tif(c.length) out.push(c);\n\treturn __toBuffer([out]);\n}\n\n/* [MS-XLS] 2.1.7.20 Workbook Stream */\nfunction write_biff8_buf(wb, opts) {\n\tvar o = opts || {};\n\tvar bufs = [];\n\n\tif(wb && !wb.SSF) {\n\t\twb.SSF = SSF.get_table();\n\t}\n\tif(wb && wb.SSF) {\n\t\tmake_ssf(SSF); SSF.load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\to.revssf = evert_num(wb.SSF); o.revssf[wb.SSF[65535]] = 0;\n\t\to.ssf = wb.SSF;\n\t}\n\to.cellXfs = [];\n\to.Strings = []; o.Strings.Count = 0; o.Strings.Unique = 0;\n\tget_cell_style(o.cellXfs, {}, {revssf:{\"General\":0}});\n\n\tfor(var i = 0; i < wb.SheetNames.length; ++i) bufs[bufs.length] = write_ws_biff8(i, o, wb);\n\tbufs.unshift(write_biff8_global(wb, bufs, o));\n\treturn __toBuffer([bufs]);\n}\n\nfunction write_biff_buf(wb, opts) {\n\tvar o = opts || {};\n\tswitch(o.biff || 2) {\n\t\tcase 8: case 5: return write_biff8_buf(wb, opts);\n\t\tcase 4: case 3: case 2: return write_biff2_buf(wb, opts);\n\t}\n\tthrow new Error(\"invalid type \" + o.bookType + \" for BIFF\");\n}\n/* note: browser DOM element cannot see mso- style attrs, must parse */\nvar HTML_ = (function() {\n\tfunction html_to_sheet(str, _opts) {\n\t\tvar opts = _opts || {};\n\t\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\t\tvar ws = opts.dense ? ([]) : ({});\n\t\tvar mtch = str.match(/<table/i);\n\t\tif(!mtch) throw new Error(\"Invalid HTML: could not find <table>\");\n\t\tvar mtch2 = str.match(/<\\/table/i);\n\t\tvar i = mtch.index, j = mtch2 && mtch2.index || str.length;\n\t\tvar rows = split_regex(str.slice(i, j), /(:?<tr[^>]*>)/i, \"<tr>\");\n\t\tvar R = -1, C = 0, RS = 0, CS = 0;\n\t\tvar range = {s:{r:10000000, c:10000000},e:{r:0,c:0}};\n\t\tvar merges = [];\n\t\tfor(i = 0; i < rows.length; ++i) {\n\t\t\tvar row = rows[i].trim();\n\t\t\tvar hd = row.slice(0,3).toLowerCase();\n\t\t\tif(hd == \"<tr\") { ++R; if(opts.sheetRows && opts.sheetRows <= R) { --R; break; } C = 0; continue; }\n\t\t\tif(hd != \"<td\" && hd != \"<th\") continue;\n\t\t\tvar cells = row.split(/<\\/t[dh]>/i);\n\t\t\tfor(j = 0; j < cells.length; ++j) {\n\t\t\t\tvar cell = cells[j].trim();\n\t\t\t\tif(!cell.match(/<t[dh]/i)) continue;\n\t\t\t\tvar m = cell, cc = 0;\n\t\t\t\t/* TODO: parse styles etc */\n\t\t\t\twhile(m.charAt(0) == \"<\" && (cc = m.indexOf(\">\")) > -1) m = m.slice(cc+1);\n\t\t\t\tvar tag = parsexmltag(cell.slice(0, cell.indexOf(\">\")));\n\t\t\t\tCS = tag.colspan ? +tag.colspan : 1;\n\t\t\t\tif((RS = +tag.rowspan)>1 || CS>1) merges.push({s:{r:R,c:C},e:{r:R + (RS||1) - 1, c:C + CS - 1}});\n\t\t\t\tvar _t = tag.t || \"\";\n\t\t\t\t/* TODO: generate stub cells */\n\t\t\t\tif(!m.length) { C += CS; continue; }\n\t\t\t\tm = htmldecode(m);\n\t\t\t\tif(range.s.r > R) range.s.r = R; if(range.e.r < R) range.e.r = R;\n\t\t\t\tif(range.s.c > C) range.s.c = C; if(range.e.c < C) range.e.c = C;\n\t\t\t\tif(!m.length) continue;\n\t\t\t\tvar o = {t:'s', v:m};\n\t\t\t\tif(opts.raw || !m.trim().length || _t == 's'){}\n\t\t\t\telse if(m === 'TRUE') o = {t:'b', v:true};\n\t\t\t\telse if(m === 'FALSE') o = {t:'b', v:false};\n\t\t\t\telse if(!isNaN(fuzzynum(m))) o = {t:'n', v:fuzzynum(m)};\n\t\t\t\telse if(!isNaN(fuzzydate(m).getDate())) {\n\t\t\t\t\to = ({t:'d', v:parseDate(m)});\n\t\t\t\t\tif(!opts.cellDates) o = ({t:'n', v:datenum(o.v)});\n\t\t\t\t\to.z = opts.dateNF || SSF._table[14];\n\t\t\t\t}\n\t\t\t\tif(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = o; }\n\t\t\t\telse ws[encode_cell({r:R, c:C})] = o;\n\t\t\t\tC += CS;\n\t\t\t}\n\t\t}\n\t\tws['!ref'] = encode_range(range);\n\t\treturn ws;\n\t}\n\tfunction html_to_book(str, opts) {\n\t\treturn sheet_to_workbook(html_to_sheet(str, opts), opts);\n\t}\n\tfunction make_html_row(ws, r, R, o) {\n\t\tvar M = (ws['!merges'] ||[]);\n\t\tvar oo = [];\n\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\tvar RS = 0, CS = 0;\n\t\t\tfor(var j = 0; j < M.length; ++j) {\n\t\t\t\tif(M[j].s.r > R || M[j].s.c > C) continue;\n\t\t\t\tif(M[j].e.r < R || M[j].e.c < C) continue;\n\t\t\t\tif(M[j].s.r < R || M[j].s.c < C) { RS = -1; break; }\n\t\t\t\tRS = M[j].e.r - M[j].s.r + 1; CS = M[j].e.c - M[j].s.c + 1; break;\n\t\t\t}\n\t\t\tif(RS < 0) continue;\n\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\tvar cell = o.dense ? (ws[R]||[])[C] : ws[coord];\n\t\t\tvar sp = {};\n\t\t\tif(RS > 1) sp.rowspan = RS;\n\t\t\tif(CS > 1) sp.colspan = CS;\n\t\t\t/* TODO: html entities */\n\t\t\tvar w = (cell && cell.v != null) && (cell.h || escapehtml(cell.w || (format_cell(cell), cell.w) || \"\")) || \"\";\n\t\t\tsp.t = cell && cell.t || 'z';\n\t\t\tif(o.editable) w = '<span contenteditable=\"true\">' + w + '</span>';\n\t\t\tsp.id = \"sjs-\" + coord;\n\t\t\too.push(writextag('td', w, sp));\n\t\t}\n\t\tvar preamble = \"<tr>\";\n\t\treturn preamble + oo.join(\"\") + \"</tr>\";\n\t}\n\tfunction make_html_preamble(ws, R, o) {\n\t\tvar out = [];\n\t\treturn out.join(\"\") + '<table' + (o && o.id ? ' id=\"' + o.id + '\"' : \"\") + '>';\n\t}\n\tvar _BEGIN = '<html><head><meta charset=\"utf-8\"/><title>SheetJS Table Export</title></head><body>';\n\tvar _END = '</body></html>';\n\tfunction sheet_to_html(ws, opts/*, wb:?Workbook*/) {\n\t\tvar o = opts || {};\n\t\tvar header = o.header != null ? o.header : _BEGIN;\n\t\tvar footer = o.footer != null ? o.footer : _END;\n\t\tvar out = [header];\n\t\tvar r = decode_range(ws['!ref']);\n\t\to.dense = Array.isArray(ws);\n\t\tout.push(make_html_preamble(ws, r, o));\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) out.push(make_html_row(ws, r, R, o));\n\t\tout.push(\"</table>\" + footer);\n\t\treturn out.join(\"\");\n\t}\n\n\treturn {\n\t\tto_workbook: html_to_book,\n\t\tto_sheet: html_to_sheet,\n\t\t_row: make_html_row,\n\t\tBEGIN: _BEGIN,\n\t\tEND: _END,\n\t\t_preamble: make_html_preamble,\n\t\tfrom_sheet: sheet_to_html\n\t};\n})();\n\nfunction parse_dom_table(table, _opts) {\n\tvar opts = _opts || {};\n\tif(DENSE != null) opts.dense = DENSE;\n\tvar ws = opts.dense ? ([]) : ({});\n\tvar rows = table.getElementsByTagName('tr');\n\tvar sheetRows = opts.sheetRows || 10000000;\n\tvar range = {s:{r:0,c:0},e:{r:0,c:0}};\n\tvar merges = [], midx = 0;\n\tvar rowinfo = [];\n\tvar _R = 0, R = 0, _C, C, RS, CS;\n\tfor(; _R < rows.length && R < sheetRows; ++_R) {\n\t\tvar row = rows[_R];\n\t\tif (is_dom_element_hidden(row)) {\n\t\t\tif (opts.display) continue;\n\t\t\trowinfo[R] = {hidden: true};\n\t\t}\n\t\tvar elts = (row.children);\n\t\tfor(_C = C = 0; _C < elts.length; ++_C) {\n\t\t\tvar elt = elts[_C];\n\t\t\tif (opts.display && is_dom_element_hidden(elt)) continue;\n\t\t\tvar v = htmldecode(elt.innerHTML);\n\t\t\tfor(midx = 0; midx < merges.length; ++midx) {\n\t\t\t\tvar m = merges[midx];\n\t\t\t\tif(m.s.c == C && m.s.r <= R && R <= m.e.r) { C = m.e.c+1; midx = -1; }\n\t\t\t}\n\t\t\t/* TODO: figure out how to extract nonstandard mso- style */\n\t\t\tCS = +elt.getAttribute(\"colspan\") || 1;\n\t\t\tif((RS = +elt.getAttribute(\"rowspan\"))>0 || CS>1) merges.push({s:{r:R,c:C},e:{r:R + (RS||1) - 1, c:C + CS - 1}});\n\t\t\tvar o = {t:'s', v:v};\n\t\t\tvar _t = elt.getAttribute(\"t\") || \"\";\n\t\t\tif(v != null) {\n\t\t\t\tif(v.length == 0) o.t = _t || 'z';\n\t\t\t\telse if(opts.raw || v.trim().length == 0 || _t == \"s\"){}\n\t\t\t\telse if(v === 'TRUE') o = {t:'b', v:true};\n\t\t\t\telse if(v === 'FALSE') o = {t:'b', v:false};\n\t\t\t\telse if(!isNaN(fuzzynum(v))) o = {t:'n', v:fuzzynum(v)};\n\t\t\t\telse if(!isNaN(fuzzydate(v).getDate())) {\n\t\t\t\t\to = ({t:'d', v:parseDate(v)});\n\t\t\t\t\tif(!opts.cellDates) o = ({t:'n', v:datenum(o.v)});\n\t\t\t\t\to.z = opts.dateNF || SSF._table[14];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = o; }\n\t\t\telse ws[encode_cell({c:C, r:R})] = o;\n\t\t\tif(range.e.c < C) range.e.c = C;\n\t\t\tC += CS;\n\t\t}\n\t\t++R;\n\t}\n\tif(merges.length) ws['!merges'] = merges;\n\tif(rowinfo.length) ws['!rows'] = rowinfo;\n\trange.e.r = R - 1;\n\tws['!ref'] = encode_range(range);\n\tif(R >= sheetRows) ws['!fullref'] = encode_range((range.e.r = rows.length-_R+R-1,range)); // We can count the real number of rows to parse but we don't to improve the performance\n\treturn ws;\n}\n\nfunction table_to_book(table, opts) {\n\treturn sheet_to_workbook(parse_dom_table(table, opts), opts);\n}\n\nfunction is_dom_element_hidden(element) {\n\tvar display = '';\n\tvar get_computed_style = get_get_computed_style_function(element);\n\tif(get_computed_style) display = get_computed_style(element).getPropertyValue('display');\n\tif(!display) display = element.style.display; // Fallback for cases when getComputedStyle is not available (e.g. an old browser or some Node.js environments) or doesn't work (e.g. if the element is not inserted to a document)\n\treturn display === 'none';\n}\n\n/* global getComputedStyle */\nfunction get_get_computed_style_function(element) {\n\t// The proper getComputedStyle implementation is the one defined in the element window\n\tif(element.ownerDocument.defaultView && typeof element.ownerDocument.defaultView.getComputedStyle === 'function') return element.ownerDocument.defaultView.getComputedStyle;\n\t// If it is not available, try to get one from the global namespace\n\tif(typeof getComputedStyle === 'function') return getComputedStyle;\n\treturn null;\n}\n/* OpenDocument */\nvar parse_content_xml = (function() {\n\n\tvar parse_text_p = function(text) {\n\t\t/* 6.1.2 White Space Characters */\n\t\tvar fixed = text\n\t\t\t.replace(/[\\t\\r\\n]/g, \" \").trim().replace(/ +/g, \" \")\n\t\t\t.replace(/<text:s\\/>/g,\" \")\n\t\t\t.replace(/<text:s text:c=\"(\\d+)\"\\/>/g, function($$,$1) { return Array(parseInt($1,10)+1).join(\" \"); })\n\t\t\t.replace(/<text:tab[^>]*\\/>/g,\"\\t\")\n\t\t\t.replace(/<text:line-break\\/>/g,\"\\n\");\n\t\tvar v = unescapexml(fixed.replace(/<[^>]*>/g,\"\"));\n\n\t\treturn [v];\n\t};\n\n\tvar number_formats = {\n\t\t/* ods name: [short ssf fmt, long ssf fmt] */\n\t\tday:           [\"d\",   \"dd\"],\n\t\tmonth:         [\"m\",   \"mm\"],\n\t\tyear:          [\"y\",   \"yy\"],\n\t\thours:         [\"h\",   \"hh\"],\n\t\tminutes:       [\"m\",   \"mm\"],\n\t\tseconds:       [\"s\",   \"ss\"],\n\t\t\"am-pm\":       [\"A/P\", \"AM/PM\"],\n\t\t\"day-of-week\": [\"ddd\", \"dddd\"],\n\t\tera:           [\"e\",   \"ee\"],\n\t\t/* there is no native representation of LO \"Q\" format */\n\t\tquarter:       [\"\\\\Qm\", \"m\\\\\\\"th quarter\\\"\"]\n\t};\n\n\treturn function pcx(d, _opts) {\n\t\tvar opts = _opts || {};\n\t\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\t\tvar str = xlml_normalize(d);\n\t\tvar state = [], tmp;\n\t\tvar tag;\n\t\tvar NFtag = {name:\"\"}, NF = \"\", pidx = 0;\n\t\tvar sheetag;\n\t\tvar rowtag;\n\t\tvar Sheets = {}, SheetNames = [];\n\t\tvar ws = opts.dense ? ([]) : ({});\n\t\tvar Rn, q;\n\t\tvar ctag = ({value:\"\"});\n\t\tvar textp = \"\", textpidx = 0, textptag;\n\t\tvar textR = [];\n\t\tvar R = -1, C = -1, range = {s: {r:1000000,c:10000000}, e: {r:0, c:0}};\n\t\tvar row_ol = 0;\n\t\tvar number_format_map = {};\n\t\tvar merges = [], mrange = {}, mR = 0, mC = 0;\n\t\tvar rowinfo = [], rowpeat = 1, colpeat = 1;\n\t\tvar arrayf = [];\n\t\tvar WB = {Names:[]};\n\t\tvar atag = ({});\n\t\tvar _Ref = [\"\", \"\"];\n\t\tvar comments = [], comment = ({});\n\t\tvar creator = \"\", creatoridx = 0;\n\t\tvar isstub = false, intable = false;\n\t\tvar i = 0;\n\t\txlmlregex.lastIndex = 0;\n\t\tstr = str.replace(/<!--([\\s\\S]*?)-->/mg,\"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm,\"\");\n\t\twhile((Rn = xlmlregex.exec(str))) switch((Rn[3]=Rn[3].replace(/_.*$/,\"\"))) {\n\n\t\t\tcase 'table': case '工作表': // 9.1.2 <table:table>\n\t\t\t\tif(Rn[1]==='/') {\n\t\t\t\t\tif(range.e.c >= range.s.c && range.e.r >= range.s.r) ws['!ref'] = encode_range(range);\n\t\t\t\t\tif(opts.sheetRows > 0 && opts.sheetRows <= range.e.r) {\n\t\t\t\t\t\tws['!fullref'] = ws['!ref'];\n\t\t\t\t\t\trange.e.r = opts.sheetRows - 1;\n\t\t\t\t\t\tws['!ref'] = encode_range(range);\n\t\t\t\t\t}\n\t\t\t\t\tif(merges.length) ws['!merges'] = merges;\n\t\t\t\t\tif(rowinfo.length) ws[\"!rows\"] = rowinfo;\n\t\t\t\t\tsheetag.name = sheetag['名称'] || sheetag.name;\n\t\t\t\t\tif(typeof JSON !== 'undefined') JSON.stringify(sheetag);\n\t\t\t\t\tSheetNames.push(sheetag.name);\n\t\t\t\t\tSheets[sheetag.name] = ws;\n\t\t\t\t\tintable = false;\n\t\t\t\t}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\t\tsheetag = parsexmltag(Rn[0], false);\n\t\t\t\t\tR = C = -1;\n\t\t\t\t\trange.s.r = range.s.c = 10000000; range.e.r = range.e.c = 0;\n\t\t\t\t\tws = opts.dense ? ([]) : ({}); merges = [];\n\t\t\t\t\trowinfo = [];\n\t\t\t\t\tintable = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'table-row-group': // 9.1.9 <table:table-row-group>\n\t\t\t\tif(Rn[1] === \"/\") --row_ol; else ++row_ol;\n\t\t\t\tbreak;\n\t\t\tcase 'table-row': case '行': // 9.1.3 <table:table-row>\n\t\t\t\tif(Rn[1] === '/') { R+=rowpeat; rowpeat = 1; break; }\n\t\t\t\trowtag = parsexmltag(Rn[0], false);\n\t\t\t\tif(rowtag['行号']) R = rowtag['行号'] - 1; else if(R == -1) R = 0;\n\t\t\t\trowpeat = +rowtag['number-rows-repeated'] || 1;\n\t\t\t\t/* TODO: remove magic */\n\t\t\t\tif(rowpeat < 10) for(i = 0; i < rowpeat; ++i) if(row_ol > 0) rowinfo[R + i] = {level: row_ol};\n\t\t\t\tC = -1; break;\n\t\t\tcase 'covered-table-cell': // 9.1.5 <table:covered-table-cell>\n\t\t\t\tif(Rn[1] !== '/') ++C;\n\t\t\t\tif(opts.sheetStubs) {\n\t\t\t\t\tif(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = {t:'z'}; }\n\t\t\t\t\telse ws[encode_cell({r:R,c:C})] = {t:'z'};\n\t\t\t\t}\n\t\t\t\ttextp = \"\"; textR = [];\n\t\t\t\tbreak; /* stub */\n\t\t\tcase 'table-cell': case '数据':\n\t\t\t\tif(Rn[0].charAt(Rn[0].length-2) === '/') {\n\t\t\t\t\t++C;\n\t\t\t\t\tctag = parsexmltag(Rn[0], false);\n\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\tq = ({t:'z', v:null});\n\t\t\t\t\tif(ctag.formula && opts.cellFormula != false) q.f = ods_to_csf_formula(unescapexml(ctag.formula));\n\t\t\t\t\tif((ctag['数据类型'] || ctag['value-type']) == \"string\") {\n\t\t\t\t\t\tq.t = \"s\"; q.v = unescapexml(ctag['string-value'] || \"\");\n\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\tif(!ws[R]) ws[R] = [];\n\t\t\t\t\t\t\tws[R][C] = q;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tws[encode_cell({r:R,c:C})] = q;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tC+= colpeat-1;\n\t\t\t\t} else if(Rn[1]!=='/') {\n\t\t\t\t\t++C;\n\t\t\t\t\tcolpeat = 1;\n\t\t\t\t\tvar rptR = rowpeat ? R + rowpeat - 1 : R;\n\t\t\t\t\tif(C > range.e.c) range.e.c = C;\n\t\t\t\t\tif(C < range.s.c) range.s.c = C;\n\t\t\t\t\tif(R < range.s.r) range.s.r = R;\n\t\t\t\t\tif(rptR > range.e.r) range.e.r = rptR;\n\t\t\t\t\tctag = parsexmltag(Rn[0], false);\n\t\t\t\t\tcomments = []; comment = ({});\n\t\t\t\t\tq = ({t:ctag['数据类型'] || ctag['value-type'], v:null});\n\t\t\t\t\tif(opts.cellFormula) {\n\t\t\t\t\t\tif(ctag.formula) ctag.formula = unescapexml(ctag.formula);\n\t\t\t\t\t\tif(ctag['number-matrix-columns-spanned'] && ctag['number-matrix-rows-spanned']) {\n\t\t\t\t\t\t\tmR = parseInt(ctag['number-matrix-rows-spanned'],10) || 0;\n\t\t\t\t\t\t\tmC = parseInt(ctag['number-matrix-columns-spanned'],10) || 0;\n\t\t\t\t\t\t\tmrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};\n\t\t\t\t\t\t\tq.F = encode_range(mrange);\n\t\t\t\t\t\t\tarrayf.push([mrange, q.F]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(ctag.formula) q.f = ods_to_csf_formula(ctag.formula);\n\t\t\t\t\t\telse for(i = 0; i < arrayf.length; ++i)\n\t\t\t\t\t\t\tif(R >= arrayf[i][0].s.r && R <= arrayf[i][0].e.r)\n\t\t\t\t\t\t\t\tif(C >= arrayf[i][0].s.c && C <= arrayf[i][0].e.c)\n\t\t\t\t\t\t\t\t\tq.F = arrayf[i][1];\n\t\t\t\t\t}\n\t\t\t\t\tif(ctag['number-columns-spanned'] || ctag['number-rows-spanned']) {\n\t\t\t\t\t\tmR = parseInt(ctag['number-rows-spanned'],10) || 0;\n\t\t\t\t\t\tmC = parseInt(ctag['number-columns-spanned'],10) || 0;\n\t\t\t\t\t\tmrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};\n\t\t\t\t\t\tmerges.push(mrange);\n\t\t\t\t\t}\n\n\t\t\t\t\t/* 19.675.2 table:number-columns-repeated */\n\t\t\t\t\tif(ctag['number-columns-repeated']) colpeat = parseInt(ctag['number-columns-repeated'], 10);\n\n\t\t\t\t\t/* 19.385 office:value-type */\n\t\t\t\t\tswitch(q.t) {\n\t\t\t\t\t\tcase 'boolean': q.t = 'b'; q.v = parsexmlbool(ctag['boolean-value']); break;\n\t\t\t\t\t\tcase 'float': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'percentage': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'currency': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'date': q.t = 'd'; q.v = parseDate(ctag['date-value']);\n\t\t\t\t\t\t\tif(!opts.cellDates) { q.t = 'n'; q.v = datenum(q.v); }\n\t\t\t\t\t\t\tq.z = 'm/d/yy'; break;\n\t\t\t\t\t\tcase 'time': q.t = 'n'; q.v = parse_isodur(ctag['time-value'])/86400; break;\n\t\t\t\t\t\tcase 'number': q.t = 'n'; q.v = parseFloat(ctag['数据数值']); break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif(q.t === 'string' || q.t === 'text' || !q.t) {\n\t\t\t\t\t\t\t\tq.t = 's';\n\t\t\t\t\t\t\t\tif(ctag['string-value'] != null) { textp = unescapexml(ctag['string-value']); textR = []; }\n\t\t\t\t\t\t\t} else throw new Error('Unsupported value type ' + q.t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tisstub = false;\n\t\t\t\t\tif(q.t === 's') {\n\t\t\t\t\t\tq.v = textp || '';\n\t\t\t\t\t\tif(textR.length) q.R = textR;\n\t\t\t\t\t\tisstub = textpidx == 0;\n\t\t\t\t\t}\n\t\t\t\t\tif(atag.Target) q.l = atag;\n\t\t\t\t\tif(comments.length > 0) { q.c = comments; comments = []; }\n\t\t\t\t\tif(textp && opts.cellText !== false) q.w = textp;\n\t\t\t\t\tif(!isstub || opts.sheetStubs) {\n\t\t\t\t\t\tif(!(opts.sheetRows && opts.sheetRows <= R)) {\n\t\t\t\t\t\t\tfor(var rpt = 0; rpt < rowpeat; ++rpt) {\n\t\t\t\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\t\t\tif(!ws[R + rpt]) ws[R + rpt] = [];\n\t\t\t\t\t\t\t\t\tws[R + rpt][C] = rpt == 0 ? q : dup(q);\n\t\t\t\t\t\t\t\t\twhile(--colpeat > 0) ws[R + rpt][C + colpeat] = dup(q);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tws[encode_cell({r:R + rpt,c:C})] = q;\n\t\t\t\t\t\t\t\t\twhile(--colpeat > 0) ws[encode_cell({r:R + rpt,c:C + colpeat})] = dup(q);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(range.e.c <= C) range.e.c = C;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\tC += colpeat-1; colpeat = 0;\n\t\t\t\t\tq = {};\n\t\t\t\t\ttextp = \"\"; textR = [];\n\t\t\t\t}\n\t\t\t\tatag = ({});\n\t\t\t\tbreak; // 9.1.4 <table:table-cell>\n\n\t\t\t/* pure state */\n\t\t\tcase 'document': // TODO: <office:document> is the root for FODS\n\t\t\tcase 'document-content': case '电子表格文档': // 3.1.3.2 <office:document-content>\n\t\t\tcase 'spreadsheet': case '主体': // 3.7 <office:spreadsheet>\n\t\t\tcase 'scripts': // 3.12 <office:scripts>\n\t\t\tcase 'styles': // TODO <office:styles>\n\t\t\tcase 'font-face-decls': // 3.14 <office:font-face-decls>\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\t\tbreak;\n\n\t\t\tcase 'annotation': // 14.1 <office:annotation>\n\t\t\t\tif(Rn[1]==='/'){\n\t\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;\n\t\t\t\t\tcomment.t = textp;\n\t\t\t\t\tif(textR.length) comment.R = textR;\n\t\t\t\t\tcomment.a = creator;\n\t\t\t\t\tcomments.push(comment);\n\t\t\t\t}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {state.push([Rn[3], false]);}\n\t\t\t\tcreator = \"\"; creatoridx = 0;\n\t\t\t\ttextp = \"\"; textpidx = 0; textR = [];\n\t\t\t\tbreak;\n\n\t\t\tcase 'creator': // 4.3.2.7 <dc:creator>\n\t\t\t\tif(Rn[1]==='/') { creator = str.slice(creatoridx,Rn.index); }\n\t\t\t\telse creatoridx = Rn.index + Rn[0].length;\n\t\t\t\tbreak;\n\n\t\t\t/* ignore state */\n\t\t\tcase 'meta': case '元数据': // TODO: <office:meta> <uof:元数据> FODS/UOF\n\t\t\tcase 'settings': // TODO: <office:settings>\n\t\t\tcase 'config-item-set': // TODO: <office:config-item-set>\n\t\t\tcase 'config-item-map-indexed': // TODO: <office:config-item-map-indexed>\n\t\t\tcase 'config-item-map-entry': // TODO: <office:config-item-map-entry>\n\t\t\tcase 'config-item-map-named': // TODO: <office:config-item-map-entry>\n\t\t\tcase 'shapes': // 9.2.8 <table:shapes>\n\t\t\tcase 'frame': // 10.4.2 <draw:frame>\n\t\t\tcase 'text-box': // 10.4.3 <draw:text-box>\n\t\t\tcase 'image': // 10.4.4 <draw:image>\n\t\t\tcase 'data-pilot-tables': // 9.6.2 <table:data-pilot-tables>\n\t\t\tcase 'list-style': // 16.30 <text:list-style>\n\t\t\tcase 'form': // 13.13 <form:form>\n\t\t\tcase 'dde-links': // 9.8 <table:dde-links>\n\t\t\tcase 'event-listeners': // TODO\n\t\t\tcase 'chart': // TODO\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], false]);\n\t\t\t\ttextp = \"\"; textpidx = 0; textR = [];\n\t\t\t\tbreak;\n\n\t\t\tcase 'scientific-number': // TODO: <number:scientific-number>\n\t\t\t\tbreak;\n\t\t\tcase 'currency-symbol': // TODO: <number:currency-symbol>\n\t\t\t\tbreak;\n\t\t\tcase 'currency-style': // TODO: <number:currency-style>\n\t\t\t\tbreak;\n\t\t\tcase 'number-style': // 16.27.2 <number:number-style>\n\t\t\tcase 'percentage-style': // 16.27.9 <number:percentage-style>\n\t\t\tcase 'date-style': // 16.27.10 <number:date-style>\n\t\t\tcase 'time-style': // 16.27.18 <number:time-style>\n\t\t\t\tif(Rn[1]==='/'){\n\t\t\t\t\tnumber_format_map[NFtag.name] = NF;\n\t\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;\n\t\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\t\tNF = \"\";\n\t\t\t\t\tNFtag = parsexmltag(Rn[0], false);\n\t\t\t\t\tstate.push([Rn[3], true]);\n\t\t\t\t} break;\n\n\t\t\tcase 'script': break; // 3.13 <office:script>\n\t\t\tcase 'libraries': break; // TODO: <ooo:libraries>\n\t\t\tcase 'automatic-styles': break; // 3.15.3 <office:automatic-styles>\n\t\t\tcase 'master-styles': break; // TODO: <office:master-styles>\n\n\t\t\tcase 'default-style': // TODO: <style:default-style>\n\t\t\tcase 'page-layout': break; // TODO: <style:page-layout>\n\t\t\tcase 'style': // 16.2 <style:style>\n\t\t\t\tbreak;\n\t\t\tcase 'map': break; // 16.3 <style:map>\n\t\t\tcase 'font-face': break; // 16.21 <style:font-face>\n\n\t\t\tcase 'paragraph-properties': break; // 17.6 <style:paragraph-properties>\n\t\t\tcase 'table-properties': break; // 17.15 <style:table-properties>\n\t\t\tcase 'table-column-properties': break; // 17.16 <style:table-column-properties>\n\t\t\tcase 'table-row-properties': break; // 17.17 <style:table-row-properties>\n\t\t\tcase 'table-cell-properties': break; // 17.18 <style:table-cell-properties>\n\n\t\t\tcase 'number': // 16.27.3 <number:number>\n\t\t\t\tswitch(state[state.length-1][0]) {\n\t\t\t\t\tcase 'time-style':\n\t\t\t\t\tcase 'date-style':\n\t\t\t\t\t\ttag = parsexmltag(Rn[0], false);\n\t\t\t\t\t\tNF += number_formats[Rn[3]][tag.style==='long'?1:0]; break;\n\t\t\t\t} break;\n\n\t\t\tcase 'fraction': break; // TODO 16.27.6 <number:fraction>\n\n\t\t\tcase 'day': // 16.27.11 <number:day>\n\t\t\tcase 'month': // 16.27.12 <number:month>\n\t\t\tcase 'year': // 16.27.13 <number:year>\n\t\t\tcase 'era': // 16.27.14 <number:era>\n\t\t\tcase 'day-of-week': // 16.27.15 <number:day-of-week>\n\t\t\tcase 'week-of-year': // 16.27.16 <number:week-of-year>\n\t\t\tcase 'quarter': // 16.27.17 <number:quarter>\n\t\t\tcase 'hours': // 16.27.19 <number:hours>\n\t\t\tcase 'minutes': // 16.27.20 <number:minutes>\n\t\t\tcase 'seconds': // 16.27.21 <number:seconds>\n\t\t\tcase 'am-pm': // 16.27.22 <number:am-pm>\n\t\t\t\tswitch(state[state.length-1][0]) {\n\t\t\t\t\tcase 'time-style':\n\t\t\t\t\tcase 'date-style':\n\t\t\t\t\t\ttag = parsexmltag(Rn[0], false);\n\t\t\t\t\t\tNF += number_formats[Rn[3]][tag.style==='long'?1:0]; break;\n\t\t\t\t} break;\n\n\t\t\tcase 'boolean-style': break; // 16.27.23 <number:boolean-style>\n\t\t\tcase 'boolean': break; // 16.27.24 <number:boolean>\n\t\t\tcase 'text-style': break; // 16.27.25 <number:text-style>\n\t\t\tcase 'text': // 16.27.26 <number:text>\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\t\telse if(Rn[1]===\"/\") switch(state[state.length-1][0]) {\n\t\t\t\t\tcase 'number-style':\n\t\t\t\t\tcase 'date-style':\n\t\t\t\t\tcase 'time-style':\n\t\t\t\t\t\tNF += str.slice(pidx, Rn.index);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\t\tbreak;\n\n\t\t\tcase 'named-range': // 9.4.12 <table:named-range>\n\t\t\t\ttag = parsexmltag(Rn[0], false);\n\t\t\t\t_Ref = ods_to_csf_3D(tag['cell-range-address']);\n\t\t\t\tvar nrange = ({Name:tag.name, Ref:_Ref[0] + '!' + _Ref[1]});\n\t\t\t\tif(intable) nrange.Sheet = SheetNames.length;\n\t\t\t\tWB.Names.push(nrange);\n\t\t\t\tbreak;\n\n\t\t\tcase 'text-content': break; // 16.27.27 <number:text-content>\n\t\t\tcase 'text-properties': break; // 16.27.27 <style:text-properties>\n\t\t\tcase 'embedded-text': break; // 16.27.4 <number:embedded-text>\n\n\t\t\tcase 'body': case '电子表格': break; // 3.3 16.9.6 19.726.3\n\n\t\t\tcase 'forms': break; // 12.25.2 13.2\n\t\t\tcase 'table-column': break; // 9.1.6 <table:table-column>\n\t\t\tcase 'table-header-rows': break; // 9.1.7 <table:table-header-rows>\n\t\t\tcase 'table-rows': break; // 9.1.12 <table:table-rows>\n\t\t\t/* TODO: outline levels */\n\t\t\tcase 'table-column-group': break; // 9.1.10 <table:table-column-group>\n\t\t\tcase 'table-header-columns': break; // 9.1.11 <table:table-header-columns>\n\t\t\tcase 'table-columns': break; // 9.1.12 <table:table-columns>\n\n\t\t\tcase 'null-date': break; // 9.4.2 <table:null-date> TODO: date1904\n\n\t\t\tcase 'graphic-properties': break; // 17.21 <style:graphic-properties>\n\t\t\tcase 'calculation-settings': break; // 9.4.1 <table:calculation-settings>\n\t\t\tcase 'named-expressions': break; // 9.4.11 <table:named-expressions>\n\t\t\tcase 'label-range': break; // 9.4.9 <table:label-range>\n\t\t\tcase 'label-ranges': break; // 9.4.10 <table:label-ranges>\n\t\t\tcase 'named-expression': break; // 9.4.13 <table:named-expression>\n\t\t\tcase 'sort': break; // 9.4.19 <table:sort>\n\t\t\tcase 'sort-by': break; // 9.4.20 <table:sort-by>\n\t\t\tcase 'sort-groups': break; // 9.4.22 <table:sort-groups>\n\n\t\t\tcase 'tab': break; // 6.1.4 <text:tab>\n\t\t\tcase 'line-break': break; // 6.1.5 <text:line-break>\n\t\t\tcase 'span': break; // 6.1.7 <text:span>\n\t\t\tcase 'p': case '文本串': // 5.1.3 <text:p>\n\t\t\t\tif(Rn[1]==='/' && (!ctag || !ctag['string-value'])) {\n\t\t\t\t\tvar ptp = parse_text_p(str.slice(textpidx,Rn.index), textptag);\n\t\t\t\t\ttextp = (textp.length > 0 ? textp + \"\\n\" : \"\") + ptp[0];\n\t\t\t\t} else { textptag = parsexmltag(Rn[0], false); textpidx = Rn.index + Rn[0].length; }\n\t\t\t\tbreak; // <text:p>\n\t\t\tcase 's': break; // <text:s>\n\n\t\t\tcase 'database-range': // 9.4.15 <table:database-range>\n\t\t\t\tif(Rn[1]==='/') break;\n\t\t\t\ttry {\n\t\t\t\t\t_Ref = ods_to_csf_3D(parsexmltag(Rn[0])['target-range-address']);\n\t\t\t\t\tSheets[_Ref[0]]['!autofilter'] = { ref:_Ref[1] };\n\t\t\t\t} catch(e) {/* empty */}\n\t\t\t\tbreak;\n\n\t\t\tcase 'date': break; // <*:date>\n\n\t\t\tcase 'object': break; // 10.4.6.2 <draw:object>\n\t\t\tcase 'title': case '标题': break; // <*:title> OR <uof:标题>\n\t\t\tcase 'desc': break; // <*:desc>\n\t\t\tcase 'binary-data': break; // 10.4.5 TODO: b64 blob\n\n\t\t\t/* 9.2 Advanced Tables */\n\t\t\tcase 'table-source': break; // 9.2.6\n\t\t\tcase 'scenario': break; // 9.2.6\n\n\t\t\tcase 'iteration': break; // 9.4.3 <table:iteration>\n\t\t\tcase 'content-validations': break; // 9.4.4 <table:\n\t\t\tcase 'content-validation': break; // 9.4.5 <table:\n\t\t\tcase 'help-message': break; // 9.4.6 <table:\n\t\t\tcase 'error-message': break; // 9.4.7 <table:\n\t\t\tcase 'database-ranges': break; // 9.4.14 <table:database-ranges>\n\t\t\tcase 'filter': break; // 9.5.2 <table:filter>\n\t\t\tcase 'filter-and': break; // 9.5.3 <table:filter-and>\n\t\t\tcase 'filter-or': break; // 9.5.4 <table:filter-or>\n\t\t\tcase 'filter-condition': break; // 9.5.5 <table:filter-condition>\n\n\t\t\tcase 'list-level-style-bullet': break; // 16.31 <text:\n\t\t\tcase 'list-level-style-number': break; // 16.32 <text:\n\t\t\tcase 'list-level-properties': break; // 17.19 <style:\n\n\t\t\t/* 7.3 Document Fields */\n\t\t\tcase 'sender-firstname': // 7.3.6.2\n\t\t\tcase 'sender-lastname': // 7.3.6.3\n\t\t\tcase 'sender-initials': // 7.3.6.4\n\t\t\tcase 'sender-title': // 7.3.6.5\n\t\t\tcase 'sender-position': // 7.3.6.6\n\t\t\tcase 'sender-email': // 7.3.6.7\n\t\t\tcase 'sender-phone-private': // 7.3.6.8\n\t\t\tcase 'sender-fax': // 7.3.6.9\n\t\t\tcase 'sender-company': // 7.3.6.10\n\t\t\tcase 'sender-phone-work': // 7.3.6.11\n\t\t\tcase 'sender-street': // 7.3.6.12\n\t\t\tcase 'sender-city': // 7.3.6.13\n\t\t\tcase 'sender-postal-code': // 7.3.6.14\n\t\t\tcase 'sender-country': // 7.3.6.15\n\t\t\tcase 'sender-state-or-province': // 7.3.6.16\n\t\t\tcase 'author-name': // 7.3.7.1\n\t\t\tcase 'author-initials': // 7.3.7.2\n\t\t\tcase 'chapter': // 7.3.8\n\t\t\tcase 'file-name': // 7.3.9\n\t\t\tcase 'template-name': // 7.3.9\n\t\t\tcase 'sheet-name': // 7.3.9\n\t\t\t\tbreak;\n\n\t\t\tcase 'event-listener':\n\t\t\t\tbreak;\n\t\t\t/* TODO: FODS Properties */\n\t\t\tcase 'initial-creator':\n\t\t\tcase 'creation-date':\n\t\t\tcase 'print-date':\n\t\t\tcase 'generator':\n\t\t\tcase 'document-statistic':\n\t\t\tcase 'user-defined':\n\t\t\tcase 'editing-duration':\n\t\t\tcase 'editing-cycles':\n\t\t\t\tbreak;\n\n\t\t\t/* TODO: FODS Config */\n\t\t\tcase 'config-item':\n\t\t\t\tbreak;\n\n\t\t\t/* TODO: style tokens */\n\t\t\tcase 'page-number': break; // TODO <text:page-number>\n\t\t\tcase 'page-count': break; // TODO <text:page-count>\n\t\t\tcase 'time': break; // TODO <text:time>\n\n\t\t\t/* 9.3 Advanced Table Cells */\n\t\t\tcase 'cell-range-source': break; // 9.3.1 <table:\n\t\t\tcase 'detective': break; // 9.3.2 <table:\n\t\t\tcase 'operation': break; // 9.3.3 <table:\n\t\t\tcase 'highlighted-range': break; // 9.3.4 <table:\n\n\t\t\t/* 9.6 Data Pilot Tables <table: */\n\t\t\tcase 'data-pilot-table': // 9.6.3\n\t\t\tcase 'source-cell-range': // 9.6.5\n\t\t\tcase 'source-service': // 9.6.6\n\t\t\tcase 'data-pilot-field': // 9.6.7\n\t\t\tcase 'data-pilot-level': // 9.6.8\n\t\t\tcase 'data-pilot-subtotals': // 9.6.9\n\t\t\tcase 'data-pilot-subtotal': // 9.6.10\n\t\t\tcase 'data-pilot-members': // 9.6.11\n\t\t\tcase 'data-pilot-member': // 9.6.12\n\t\t\tcase 'data-pilot-display-info': // 9.6.13\n\t\t\tcase 'data-pilot-sort-info': // 9.6.14\n\t\t\tcase 'data-pilot-layout-info': // 9.6.15\n\t\t\tcase 'data-pilot-field-reference': // 9.6.16\n\t\t\tcase 'data-pilot-groups': // 9.6.17\n\t\t\tcase 'data-pilot-group': // 9.6.18\n\t\t\tcase 'data-pilot-group-member': // 9.6.19\n\t\t\t\tbreak;\n\n\t\t\t/* 10.3 Drawing Shapes */\n\t\t\tcase 'rect': // 10.3.2\n\t\t\t\tbreak;\n\n\t\t\t/* 14.6 DDE Connections */\n\t\t\tcase 'dde-connection-decls': // 14.6.2 <text:\n\t\t\tcase 'dde-connection-decl': // 14.6.3 <text:\n\t\t\tcase 'dde-link': // 14.6.4 <table:\n\t\t\tcase 'dde-source': // 14.6.5 <office:\n\t\t\t\tbreak;\n\n\t\t\tcase 'properties': break; // 13.7 <form:properties>\n\t\t\tcase 'property': break; // 13.8 <form:property>\n\n\t\t\tcase 'a': // 6.1.8 hyperlink\n\t\t\t\tif(Rn[1]!== '/') {\n\t\t\t\t\tatag = parsexmltag(Rn[0], false);\n\t\t\t\t\tif(!atag.href) break;\n\t\t\t\t\tatag.Target = atag.href; delete atag.href;\n\t\t\t\t\tif(atag.Target.charAt(0) == \"#\" && atag.Target.indexOf(\".\") > -1) {\n\t\t\t\t\t\t_Ref = ods_to_csf_3D(atag.Target.slice(1));\n\t\t\t\t\t\tatag.Target = \"#\" + _Ref[0] + \"!\" + _Ref[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t/* non-standard */\n\t\t\tcase 'table-protection': break;\n\t\t\tcase 'data-pilot-grand-total': break; // <table:\n\t\t\tcase 'office-document-common-attrs': break; // bare\n\t\t\tdefault: switch(Rn[2]) {\n\t\t\t\tcase 'dc:':       // TODO: properties\n\t\t\t\tcase 'calcext:':  // ignore undocumented extensions\n\t\t\t\tcase 'loext:':    // ignore undocumented extensions\n\t\t\t\tcase 'ooo:':      // ignore undocumented extensions\n\t\t\t\tcase 'chartooo:': // ignore undocumented extensions\n\t\t\t\tcase 'draw:':     // TODO: drawing\n\t\t\t\tcase 'style:':    // TODO: styles\n\t\t\t\tcase 'chart:':    // TODO: charts\n\t\t\t\tcase 'form:':     // TODO: forms\n\t\t\t\tcase 'uof:':      // TODO: uof\n\t\t\t\tcase '表:':       // TODO: uof\n\t\t\t\tcase '字:':       // TODO: uof\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: if(opts.WTF) throw new Error(Rn);\n\t\t\t}\n\t\t}\n\t\tvar out = ({\n\t\t\tSheets: Sheets,\n\t\t\tSheetNames: SheetNames,\n\t\t\tWorkbook: WB\n\t\t});\n\t\tif(opts.bookSheets) delete out.Sheets;\n\t\treturn out;\n\t};\n})();\n\nfunction parse_ods(zip, opts) {\n\topts = opts || ({});\n\tvar ods = !!safegetzipfile(zip, 'objectdata');\n\tif(ods) parse_manifest(getzipdata(zip, 'META-INF/manifest.xml'), opts);\n\tvar content = getzipstr(zip, 'content.xml');\n\tif(!content) throw new Error(\"Missing content.xml in \" + (ods ? \"ODS\" : \"UOF\")+ \" file\");\n\tvar wb = parse_content_xml(ods ? content : utf8read(content), opts);\n\tif(safegetzipfile(zip, 'meta.xml')) wb.Props = parse_core_props(getzipdata(zip, 'meta.xml'));\n\treturn wb;\n}\nfunction parse_fods(data, opts) {\n\treturn parse_content_xml(data, opts);\n}\n\n/* OpenDocument */\nvar write_styles_ods = (function() {\n\tvar payload = '<office:document-styles ' + wxt_helper({\n\t\t'xmlns:office':   \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n\t\t'xmlns:table':    \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n\t\t'xmlns:style':    \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n\t\t'xmlns:text':     \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n\t\t'xmlns:draw':     \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n\t\t'xmlns:fo':       \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n\t\t'xmlns:xlink':    \"http://www.w3.org/1999/xlink\",\n\t\t'xmlns:dc':       \"http://purl.org/dc/elements/1.1/\",\n\t\t'xmlns:number':   \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n\t\t'xmlns:svg':      \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n\t\t'xmlns:of':       \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n\t\t'office:version': \"1.2\"\n\t}) + '></office:document-styles>';\n\treturn function wso() {\n\t\treturn XML_HEADER + payload;\n\t};\n})();\nvar write_content_ods = (function() {\n\t/* 6.1.2 White Space Characters */\n\tvar write_text_p = function(text) {\n\t\treturn escapexml(text)\n\t\t\t.replace(/  +/g, function($$){return '<text:s text:c=\"'+$$.length+'\"/>';})\n\t\t\t.replace(/\\t/g, \"<text:tab/>\")\n\t\t\t.replace(/\\n/g, \"<text:line-break/>\")\n\t\t\t.replace(/^ /, \"<text:s/>\").replace(/ $/, \"<text:s/>\");\n\t};\n\n\tvar null_cell_xml = '          <table:table-cell />\\n';\n\tvar covered_cell_xml = '          <table:covered-table-cell/>\\n';\n\tvar write_ws = function(ws, wb, i) {\n\t\t/* Section 9 Tables */\n\t\tvar o = [];\n\t\to.push('      <table:table table:name=\"' + escapexml(wb.SheetNames[i]) + '\">\\n');\n\t\tvar R=0,C=0, range = decode_range(ws['!ref']);\n\t\tvar marr = ws['!merges'] || [], mi = 0;\n\t\tvar dense = Array.isArray(ws);\n\t\tfor(R = 0; R < range.s.r; ++R) o.push('        <table:table-row></table:table-row>\\n');\n\t\tfor(; R <= range.e.r; ++R) {\n\t\t\to.push('        <table:table-row>\\n');\n\t\t\tfor(C=0; C < range.s.c; ++C) o.push(null_cell_xml);\n\t\t\tfor(; C <= range.e.c; ++C) {\n\t\t\t\tvar skip = false, ct = {}, textp = \"\";\n\t\t\t\tfor(mi = 0; mi != marr.length; ++mi) {\n\t\t\t\t\tif(marr[mi].s.c > C) continue;\n\t\t\t\t\tif(marr[mi].s.r > R) continue;\n\t\t\t\t\tif(marr[mi].e.c < C) continue;\n\t\t\t\t\tif(marr[mi].e.r < R) continue;\n\t\t\t\t\tif(marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n\t\t\t\t\tct['table:number-columns-spanned'] = (marr[mi].e.c - marr[mi].s.c + 1);\n\t\t\t\t\tct['table:number-rows-spanned'] =    (marr[mi].e.r - marr[mi].s.r + 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(skip) { o.push(covered_cell_xml); continue; }\n\t\t\t\tvar ref = encode_cell({r:R, c:C}), cell = dense ? (ws[R]||[])[C]: ws[ref];\n\t\t\t\tif(cell && cell.f) {\n\t\t\t\t\tct['table:formula'] = escapexml(csf_to_ods_formula(cell.f));\n\t\t\t\t\tif(cell.F) {\n\t\t\t\t\t\tif(cell.F.slice(0, ref.length) == ref) {\n\t\t\t\t\t\t\tvar _Fref = decode_range(cell.F);\n\t\t\t\t\t\t\tct['table:number-matrix-columns-spanned'] = (_Fref.e.c - _Fref.s.c + 1);\n\t\t\t\t\t\t\tct['table:number-matrix-rows-spanned'] =    (_Fref.e.r - _Fref.s.r + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!cell) { o.push(null_cell_xml); continue; }\n\t\t\t\tswitch(cell.t) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\ttextp = (cell.v ? 'TRUE' : 'FALSE');\n\t\t\t\t\t\tct['office:value-type'] = \"boolean\";\n\t\t\t\t\t\tct['office:boolean-value'] = (cell.v ? 'true' : 'false');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\ttextp = (cell.w||String(cell.v||0));\n\t\t\t\t\t\tct['office:value-type'] = \"float\";\n\t\t\t\t\t\tct['office:value'] = (cell.v||0);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 's': case 'str':\n\t\t\t\t\t\ttextp = cell.v;\n\t\t\t\t\t\tct['office:value-type'] = \"string\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\ttextp = (cell.w||(parseDate(cell.v).toISOString()));\n\t\t\t\t\t\tct['office:value-type'] = \"date\";\n\t\t\t\t\t\tct['office:date-value'] = (parseDate(cell.v).toISOString());\n\t\t\t\t\t\tct['table:style-name'] = \"ce1\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t//case 'e':\n\t\t\t\t\tdefault: o.push(null_cell_xml); continue;\n\t\t\t\t}\n\t\t\t\tvar text_p = write_text_p(textp);\n\t\t\t\tif(cell.l && cell.l.Target) {\n\t\t\t\t\tvar _tgt = cell.l.Target; _tgt = _tgt.charAt(0) == \"#\" ? \"#\" + csf_to_ods_3D(_tgt.slice(1)) : _tgt;\n\t\t\t\t\ttext_p = writextag('text:a', text_p, {'xlink:href': _tgt});\n\t\t\t\t}\n\t\t\t\to.push('          ' + writextag('table:table-cell', writextag('text:p', text_p, {}), ct) + '\\n');\n\t\t\t}\n\t\t\to.push('        </table:table-row>\\n');\n\t\t}\n\t\to.push('      </table:table>\\n');\n\t\treturn o.join(\"\");\n\t};\n\n\tvar write_automatic_styles_ods = function(o) {\n\t\to.push(' <office:automatic-styles>\\n');\n\t\to.push('  <number:date-style style:name=\"N37\" number:automatic-order=\"true\">\\n');\n\t\to.push('   <number:month number:style=\"long\"/>\\n');\n\t\to.push('   <number:text>/</number:text>\\n');\n\t\to.push('   <number:day number:style=\"long\"/>\\n');\n\t\to.push('   <number:text>/</number:text>\\n');\n\t\to.push('   <number:year/>\\n');\n\t\to.push('  </number:date-style>\\n');\n\t\to.push('  <style:style style:name=\"ce1\" style:family=\"table-cell\" style:parent-style-name=\"Default\" style:data-style-name=\"N37\"/>\\n');\n\t\to.push(' </office:automatic-styles>\\n');\n\t};\n\n\treturn function wcx(wb, opts) {\n\t\tvar o = [XML_HEADER];\n\t\t/* 3.1.3.2 */\n\t\tvar attr = wxt_helper({\n\t\t\t'xmlns:office':       \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n\t\t\t'xmlns:table':        \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n\t\t\t'xmlns:style':        \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n\t\t\t'xmlns:text':         \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n\t\t\t'xmlns:draw':         \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n\t\t\t'xmlns:fo':           \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n\t\t\t'xmlns:xlink':        \"http://www.w3.org/1999/xlink\",\n\t\t\t'xmlns:dc':           \"http://purl.org/dc/elements/1.1/\",\n\t\t\t'xmlns:meta':         \"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\",\n\t\t\t'xmlns:number':       \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n\t\t\t'xmlns:presentation': \"urn:oasis:names:tc:opendocument:xmlns:presentation:1.0\",\n\t\t\t'xmlns:svg':          \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n\t\t\t'xmlns:chart':        \"urn:oasis:names:tc:opendocument:xmlns:chart:1.0\",\n\t\t\t'xmlns:dr3d':         \"urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0\",\n\t\t\t'xmlns:math':         \"http://www.w3.org/1998/Math/MathML\",\n\t\t\t'xmlns:form':         \"urn:oasis:names:tc:opendocument:xmlns:form:1.0\",\n\t\t\t'xmlns:script':       \"urn:oasis:names:tc:opendocument:xmlns:script:1.0\",\n\t\t\t'xmlns:ooo':          \"http://openoffice.org/2004/office\",\n\t\t\t'xmlns:ooow':         \"http://openoffice.org/2004/writer\",\n\t\t\t'xmlns:oooc':         \"http://openoffice.org/2004/calc\",\n\t\t\t'xmlns:dom':          \"http://www.w3.org/2001/xml-events\",\n\t\t\t'xmlns:xforms':       \"http://www.w3.org/2002/xforms\",\n\t\t\t'xmlns:xsd':          \"http://www.w3.org/2001/XMLSchema\",\n\t\t\t'xmlns:xsi':          \"http://www.w3.org/2001/XMLSchema-instance\",\n\t\t\t'xmlns:sheet':        \"urn:oasis:names:tc:opendocument:sh33tjs:1.0\",\n\t\t\t'xmlns:rpt':          \"http://openoffice.org/2005/report\",\n\t\t\t'xmlns:of':           \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n\t\t\t'xmlns:xhtml':        \"http://www.w3.org/1999/xhtml\",\n\t\t\t'xmlns:grddl':        \"http://www.w3.org/2003/g/data-view#\",\n\t\t\t'xmlns:tableooo':     \"http://openoffice.org/2009/table\",\n\t\t\t'xmlns:drawooo':      \"http://openoffice.org/2010/draw\",\n\t\t\t'xmlns:calcext':      \"urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0\",\n\t\t\t'xmlns:loext':        \"urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0\",\n\t\t\t'xmlns:field':        \"urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0\",\n\t\t\t'xmlns:formx':        \"urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0\",\n\t\t\t'xmlns:css3t':        \"http://www.w3.org/TR/css3-text/\",\n\t\t\t'office:version':     \"1.2\"\n\t\t});\n\n\t\tvar fods = wxt_helper({\n\t\t\t'xmlns:config':    \"urn:oasis:names:tc:opendocument:xmlns:config:1.0\",\n\t\t\t'office:mimetype': \"application/vnd.oasis.opendocument.spreadsheet\"\n\t\t});\n\n\t\tif(opts.bookType == \"fods\") o.push('<office:document' + attr + fods + '>\\n');\n\t\telse o.push('<office:document-content' + attr  + '>\\n');\n\t\twrite_automatic_styles_ods(o);\n\t\to.push('  <office:body>\\n');\n\t\to.push('    <office:spreadsheet>\\n');\n\t\tfor(var i = 0; i != wb.SheetNames.length; ++i) o.push(write_ws(wb.Sheets[wb.SheetNames[i]], wb, i, opts));\n\t\to.push('    </office:spreadsheet>\\n');\n\t\to.push('  </office:body>\\n');\n\t\tif(opts.bookType == \"fods\") o.push('</office:document>');\n\t\telse o.push('</office:document-content>');\n\t\treturn o.join(\"\");\n\t};\n})();\n\nfunction write_ods(wb, opts) {\n\tif(opts.bookType == \"fods\") return write_content_ods(wb, opts);\n\nvar zip = new jszip();\n\tvar f = \"\";\n\n\tvar manifest = [];\n\tvar rdf = [];\n\n\t/* Part 3 Section 3.3 MIME Media Type */\n\tf = \"mimetype\";\n\tzip.file(f, \"application/vnd.oasis.opendocument.spreadsheet\");\n\n\t/* Part 1 Section 2.2 Documents */\n\tf = \"content.xml\";\n\tzip.file(f, write_content_ods(wb, opts));\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"ContentFile\"]);\n\n\t/* TODO: these are hard-coded styles to satiate excel */\n\tf = \"styles.xml\";\n\tzip.file(f, write_styles_ods(wb, opts));\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"StylesFile\"]);\n\n\t/* TODO: this is hard-coded to satiate excel */\n\tf = \"meta.xml\";\n\tzip.file(f, write_meta_ods());\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"MetadataFile\"]);\n\n\t/* Part 3 Section 6 Metadata Manifest File */\n\tf = \"manifest.rdf\";\n\tzip.file(f, write_rdf(rdf/*, opts*/));\n\tmanifest.push([f, \"application/rdf+xml\"]);\n\n\t/* Part 3 Section 4 Manifest File */\n\tf = \"META-INF/manifest.xml\";\n\tzip.file(f, write_manifest(manifest/*, opts*/));\n\n\treturn zip;\n}\n\nfunction write_sheet_index(wb, sheet) {\n\tif(!sheet) return 0;\n\tvar idx = wb.SheetNames.indexOf(sheet);\n\tif(idx == -1) throw new Error(\"Sheet not found: \" + sheet);\n\treturn idx;\n}\n\nfunction write_obj_str(factory) {\n\treturn function write_str(wb, o) {\n\t\tvar idx = write_sheet_index(wb, o.sheet);\n\t\treturn factory.from_sheet(wb.Sheets[wb.SheetNames[idx]], o, wb);\n\t};\n}\n\nvar write_htm_str = write_obj_str(HTML_);\nvar write_csv_str = write_obj_str({from_sheet:sheet_to_csv});\nvar write_slk_str = write_obj_str(SYLK);\nvar write_dif_str = write_obj_str(DIF);\nvar write_prn_str = write_obj_str(PRN);\nvar write_rtf_str = write_obj_str(RTF);\nvar write_txt_str = write_obj_str({from_sheet:sheet_to_txt});\nvar write_dbf_buf = write_obj_str(DBF);\nvar write_eth_str = write_obj_str(ETH);\n\nfunction fix_opts_func(defaults) {\n\treturn function fix_opts(opts) {\n\t\tfor(var i = 0; i != defaults.length; ++i) {\n\t\t\tvar d = defaults[i];\n\t\t\tif(opts[d[0]] === undefined) opts[d[0]] = d[1];\n\t\t\tif(d[2] === 'n') opts[d[0]] = Number(opts[d[0]]);\n\t\t}\n\t};\n}\n\nvar fix_read_opts = fix_opts_func([\n\t['cellNF', false], /* emit cell number format string as .z */\n\t['cellHTML', true], /* emit html string as .h */\n\t['cellFormula', true], /* emit formulae as .f */\n\t['cellStyles', false], /* emits style/theme as .s */\n\t['cellText', true], /* emit formatted text as .w */\n\t['cellDates', false], /* emit date cells with type `d` */\n\n\t['sheetStubs', false], /* emit empty cells */\n\t['sheetRows', 0, 'n'], /* read n rows (0 = read all rows) */\n\n\t['bookDeps', false], /* parse calculation chains */\n\t['bookSheets', false], /* only try to get sheet names (no Sheets) */\n\t['bookProps', false], /* only try to get properties (no Sheets) */\n\t['bookFiles', false], /* include raw file structure (keys, files, cfb) */\n\t['bookVBA', false], /* include vba raw data (vbaraw) */\n\n\t['password',''], /* password */\n\t['WTF', false] /* WTF mode (throws errors) */\n]);\n\n\nvar fix_write_opts = fix_opts_func([\n\t['cellDates', false], /* write date cells with type `d` */\n\n\t['bookSST', false], /* Generate Shared String Table */\n\n\t['bookType', 'xlsx'], /* Type of workbook (xlsx/m/b) */\n\n\t['compression', false], /* Use file compression */\n\n\t['WTF', false] /* WTF mode (throws errors) */\n]);\nfunction get_sheet_type(n) {\n\tif(RELS.WS.indexOf(n) > -1) return \"sheet\";\n\tif(RELS.CS && n == RELS.CS) return \"chart\";\n\tif(RELS.DS && n == RELS.DS) return \"dialog\";\n\tif(RELS.MS && n == RELS.MS) return \"macro\";\n\treturn (n && n.length) ? n : \"sheet\";\n}\nfunction safe_parse_wbrels(wbrels, sheets) {\n\tif(!wbrels) return 0;\n\ttry {\n\t\twbrels = sheets.map(function pwbr(w) { if(!w.id) w.id = w.strRelID; return [w.name, wbrels['!id'][w.id].Target, get_sheet_type(wbrels['!id'][w.id].Type)]; });\n\t} catch(e) { return null; }\n\treturn !wbrels || wbrels.length === 0 ? null : wbrels;\n}\n\nfunction safe_parse_sheet(zip, path, relsPath, sheet, idx, sheetRels, sheets, stype, opts, wb, themes, styles) {\n\ttry {\n\t\tsheetRels[sheet]=parse_rels(getzipstr(zip, relsPath, true), path);\n\t\tvar data = getzipdata(zip, path);\n\t\tvar _ws;\n\t\tswitch(stype) {\n\t\t\tcase 'sheet':  _ws = parse_ws(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t\tcase 'chart':  _ws = parse_cs(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n\t\t\t\tif(!_ws || !_ws['!chart']) break;\n\t\t\t\tvar dfile = resolve_path(_ws['!chart'].Target, path);\n\t\t\t\tvar drelsp = get_rels_path(dfile);\n\t\t\t\tvar draw = parse_drawing(getzipstr(zip, dfile, true), parse_rels(getzipstr(zip, drelsp, true), dfile));\n\t\t\t\tvar chartp = resolve_path(draw, dfile);\n\t\t\t\tvar crelsp = get_rels_path(chartp);\n\t\t\t\t_ws = parse_chart(getzipstr(zip, chartp, true), chartp, opts, parse_rels(getzipstr(zip, crelsp, true), chartp), wb, _ws);\n\t\t\t\tbreak;\n\t\t\tcase 'macro':  _ws = parse_ms(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t\tcase 'dialog': _ws = parse_ds(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t}\n\t\tsheets[sheet] = _ws;\n\t} catch(e) { if(opts.WTF) throw e; }\n}\n\nfunction strip_front_slash(x) { return x.charAt(0) == '/' ? x.slice(1) : x; }\n\nfunction parse_zip(zip, opts) {\n\tmake_ssf(SSF);\n\topts = opts || {};\n\tfix_read_opts(opts);\n\n\t/* OpenDocument Part 3 Section 2.2.1 OpenDocument Package */\n\tif(safegetzipfile(zip, 'META-INF/manifest.xml')) return parse_ods(zip, opts);\n\t/* UOC */\n\tif(safegetzipfile(zip, 'objectdata.xml')) return parse_ods(zip, opts);\n\t/* Numbers */\n\tif(safegetzipfile(zip, 'Index/Document.iwa')) throw new Error('Unsupported NUMBERS file');\n\n\tvar entries = zipentries(zip);\n\tvar dir = parse_ct((getzipstr(zip, '[Content_Types].xml')));\n\tvar xlsb = false;\n\tvar sheets, binname;\n\tif(dir.workbooks.length === 0) {\n\t\tbinname = \"xl/workbook.xml\";\n\t\tif(getzipdata(zip,binname, true)) dir.workbooks.push(binname);\n\t}\n\tif(dir.workbooks.length === 0) {\n\t\tbinname = \"xl/workbook.bin\";\n\t\tif(!getzipdata(zip,binname,true)) throw new Error(\"Could not find workbook\");\n\t\tdir.workbooks.push(binname);\n\t\txlsb = true;\n\t}\n\tif(dir.workbooks[0].slice(-3) == \"bin\") xlsb = true;\n\n\tvar themes = ({});\n\tvar styles = ({});\n\tif(!opts.bookSheets && !opts.bookProps) {\n\t\tstrs = [];\n\t\tif(dir.sst) try { strs=parse_sst(getzipdata(zip, strip_front_slash(dir.sst)), dir.sst, opts); } catch(e) { if(opts.WTF) throw e; }\n\n\t\tif(opts.cellStyles && dir.themes.length) themes = parse_theme(getzipstr(zip, dir.themes[0].replace(/^\\//,''), true)||\"\",dir.themes[0], opts);\n\n\t\tif(dir.style) styles = parse_sty(getzipdata(zip, strip_front_slash(dir.style)), dir.style, themes, opts);\n\t}\n\n\t/*var externbooks = */dir.links.map(function(link) {\n\t\treturn parse_xlink(getzipdata(zip, strip_front_slash(link)), link, opts);\n\t});\n\n\tvar wb = parse_wb(getzipdata(zip, strip_front_slash(dir.workbooks[0])), dir.workbooks[0], opts);\n\n\tvar props = {}, propdata = \"\";\n\n\tif(dir.coreprops.length) {\n\t\tpropdata = getzipdata(zip, strip_front_slash(dir.coreprops[0]), true);\n\t\tif(propdata) props = parse_core_props(propdata);\n\t\tif(dir.extprops.length !== 0) {\n\t\t\tpropdata = getzipdata(zip, strip_front_slash(dir.extprops[0]), true);\n\t\t\tif(propdata) parse_ext_props(propdata, props, opts);\n\t\t}\n\t}\n\n\tvar custprops = {};\n\tif(!opts.bookSheets || opts.bookProps) {\n\t\tif (dir.custprops.length !== 0) {\n\t\t\tpropdata = getzipstr(zip, strip_front_slash(dir.custprops[0]), true);\n\t\t\tif(propdata) custprops = parse_cust_props(propdata, opts);\n\t\t}\n\t}\n\n\tvar out = ({});\n\tif(opts.bookSheets || opts.bookProps) {\n\t\tif(wb.Sheets) sheets = wb.Sheets.map(function pluck(x){ return x.name; });\n\t\telse if(props.Worksheets && props.SheetNames.length > 0) sheets=props.SheetNames;\n\t\tif(opts.bookProps) { out.Props = props; out.Custprops = custprops; }\n\t\tif(opts.bookSheets && typeof sheets !== 'undefined') out.SheetNames = sheets;\n\t\tif(opts.bookSheets ? out.SheetNames : opts.bookProps) return out;\n\t}\n\tsheets = {};\n\n\tvar deps = {};\n\tif(opts.bookDeps && dir.calcchain) deps=parse_cc(getzipdata(zip, strip_front_slash(dir.calcchain)),dir.calcchain,opts);\n\n\tvar i=0;\n\tvar sheetRels = ({});\n\tvar path, relsPath;\n\n\t{\n\t\tvar wbsheets = wb.Sheets;\n\t\tprops.Worksheets = wbsheets.length;\n\t\tprops.SheetNames = [];\n\t\tfor(var j = 0; j != wbsheets.length; ++j) {\n\t\t\tprops.SheetNames[j] = wbsheets[j].name;\n\t\t}\n\t}\n\n\tvar wbext = xlsb ? \"bin\" : \"xml\";\n\tvar wbrelsi = dir.workbooks[0].lastIndexOf(\"/\");\n\tvar wbrelsfile = (dir.workbooks[0].slice(0, wbrelsi+1) + \"_rels/\" + dir.workbooks[0].slice(wbrelsi+1) + \".rels\").replace(/^\\//,\"\");\n\tif(!safegetzipfile(zip, wbrelsfile)) wbrelsfile = 'xl/_rels/workbook.' + wbext + '.rels';\n\tvar wbrels = parse_rels(getzipstr(zip, wbrelsfile, true), wbrelsfile);\n\tif(wbrels) wbrels = safe_parse_wbrels(wbrels, wb.Sheets);\n\n\t/* Numbers iOS hack */\n\tvar nmode = (getzipdata(zip,\"xl/worksheets/sheet.xml\",true))?1:0;\n\tfor(i = 0; i != props.Worksheets; ++i) {\n\t\tvar stype = \"sheet\";\n\t\tif(wbrels && wbrels[i]) {\n\t\t\tpath = 'xl/' + (wbrels[i][1]).replace(/[\\/]?xl\\//, \"\");\n\t\t\tif(!safegetzipfile(zip, path)) path = wbrels[i][1];\n\t\t\tif(!safegetzipfile(zip, path)) path = wbrelsfile.replace(/_rels\\/.*$/,\"\") + wbrels[i][1];\n\t\t\tstype = wbrels[i][2];\n\t\t} else {\n\t\t\tpath = 'xl/worksheets/sheet'+(i+1-nmode)+\".\" + wbext;\n\t\t\tpath = path.replace(/sheet0\\./,\"sheet.\");\n\t\t}\n\t\trelsPath = path.replace(/^(.*)(\\/)([^\\/]*)$/, \"$1/_rels/$3.rels\");\n\t\tsafe_parse_sheet(zip, path, relsPath, props.SheetNames[i], i, sheetRels, sheets, stype, opts, wb, themes, styles);\n\t}\n\n\tif(dir.comments) parse_comments(zip, dir.comments, sheets, sheetRels, opts);\n\n\tout = ({\n\t\tDirectory: dir,\n\t\tWorkbook: wb,\n\t\tProps: props,\n\t\tCustprops: custprops,\n\t\tDeps: deps,\n\t\tSheets: sheets,\n\t\tSheetNames: props.SheetNames,\n\t\tStrings: strs,\n\t\tStyles: styles,\n\t\tThemes: themes,\n\t\tSSF: SSF.get_table()\n\t});\n\tif(opts.bookFiles) {\n\t\tout.keys = entries;\n\t\tout.files = zip.files;\n\t}\n\tif(opts.bookVBA) {\n\t\tif(dir.vba.length > 0) out.vbaraw = getzipdata(zip,strip_front_slash(dir.vba[0]),true);\n\t\telse if(dir.defaults && dir.defaults.bin === CT_VBA) out.vbaraw = getzipdata(zip, 'xl/vbaProject.bin',true);\n\t}\n\treturn out;\n}\n\n/* [MS-OFFCRYPTO] 2.1.1 */\nfunction parse_xlsxcfb(cfb, _opts) {\n\tvar opts = _opts || {};\n\tvar f = 'Workbook', data = CFB.find(cfb, f);\n\ttry {\n\tf = '/!DataSpaces/Version';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\t/*var version = */parse_DataSpaceVersionInfo(data.content);\n\n\t/* 2.3.4.1 */\n\tf = '/!DataSpaces/DataSpaceMap';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar dsm = parse_DataSpaceMap(data.content);\n\tif(dsm.length !== 1 || dsm[0].comps.length !== 1 || dsm[0].comps[0].t !== 0 || dsm[0].name !== \"StrongEncryptionDataSpace\" || dsm[0].comps[0].v !== \"EncryptedPackage\")\n\t\tthrow new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n\t/* 2.3.4.2 */\n\tf = '/!DataSpaces/DataSpaceInfo/StrongEncryptionDataSpace';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar seds = parse_DataSpaceDefinition(data.content);\n\tif(seds.length != 1 || seds[0] != \"StrongEncryptionTransform\")\n\t\tthrow new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n\t/* 2.3.4.3 */\n\tf = '/!DataSpaces/TransformInfo/StrongEncryptionTransform/!Primary';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\t/*var hdr = */parse_Primary(data.content);\n\t} catch(e) {}\n\n\tf = '/EncryptionInfo';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar einfo = parse_EncryptionInfo(data.content);\n\n\t/* 2.3.4.4 */\n\tf = '/EncryptedPackage';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\n/*global decrypt_agile */\nif(einfo[0] == 0x04 && typeof decrypt_agile !== 'undefined') return decrypt_agile(einfo[1], data.content, opts.password || \"\", opts);\n/*global decrypt_std76 */\nif(einfo[0] == 0x02 && typeof decrypt_std76 !== 'undefined') return decrypt_std76(einfo[1], data.content, opts.password || \"\", opts);\n\tthrow new Error(\"File is password-protected\");\n}\n\nfunction write_zip(wb, opts) {\n\t_shapeid = 1024;\n\tif(opts.bookType == \"ods\") return write_ods(wb, opts);\n\tif(wb && !wb.SSF) {\n\t\twb.SSF = SSF.get_table();\n\t}\n\tif(wb && wb.SSF) {\n\t\tmake_ssf(SSF); SSF.load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n\t\topts.ssf = wb.SSF;\n\t}\n\topts.rels = {}; opts.wbrels = {};\n\topts.Strings = []; opts.Strings.Count = 0; opts.Strings.Unique = 0;\n\tif(browser_has_Map) opts.revStrings = new Map();\n\telse { opts.revStrings = {}; opts.revStrings.foo = []; delete opts.revStrings.foo; }\n\tvar wbext = opts.bookType == \"xlsb\" ? \"bin\" : \"xml\";\n\tvar vbafmt = VBAFMTS.indexOf(opts.bookType) > -1;\n\tvar ct = new_ct();\n\tfix_write_opts(opts = opts || {});\nvar zip = new jszip();\n\tvar f = \"\", rId = 0;\n\n\topts.cellXfs = [];\n\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\n\tif(!wb.Props) wb.Props = {};\n\n\tf = \"docProps/core.xml\";\n\tzip.file(f, write_core_props(wb.Props, opts));\n\tct.coreprops.push(f);\n\tadd_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\nf = \"docProps/app.xml\";\n\tif(wb.Props && wb.Props.SheetNames){/* empty */}\n\telse if(!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;\n\telse {\n\t\tvar _sn = [];\n\t\tfor(var _i = 0; _i < wb.SheetNames.length; ++_i)\n\t\t\tif((wb.Workbook.Sheets[_i]||{}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n\t\twb.Props.SheetNames = _sn;\n\t}\n\twb.Props.Worksheets = wb.Props.SheetNames.length;\n\tzip.file(f, write_ext_props(wb.Props, opts));\n\tct.extprops.push(f);\n\tadd_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n\n\tif(wb.Custprops !== wb.Props && keys(wb.Custprops||{}).length > 0) {\n\t\tf = \"docProps/custom.xml\";\n\t\tzip.file(f, write_cust_props(wb.Custprops, opts));\n\t\tct.custprops.push(f);\n\t\tadd_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n\t}\n\n\tfor(rId=1;rId <= wb.SheetNames.length; ++rId) {\n\t\tvar wsrels = {'!id':{}};\n\t\tvar ws = wb.Sheets[wb.SheetNames[rId-1]];\n\t\tvar _type = (ws || {})[\"!type\"] || \"sheet\";\n\t\tswitch(_type) {\n\t\tcase \"chart\": /*\n\t\t\tf = \"xl/chartsheets/sheet\" + rId + \".\" + wbext;\n\t\t\tzip.file(f, write_cs(rId-1, f, opts, wb, wsrels));\n\t\t\tct.charts.push(f);\n\t\t\tadd_rels(wsrels, -1, \"chartsheets/sheet\" + rId + \".\" + wbext, RELS.CS);\n\t\t\tbreak; */\n\t\t\t/* falls through */\n\t\tdefault:\n\t\t\tf = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n\t\t\tzip.file(f, write_ws(rId-1, f, opts, wb, wsrels));\n\t\t\tct.sheets.push(f);\n\t\t\tadd_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n\t\t}\n\n\t\tif(ws) {\n\t\t\tvar comments = ws['!comments'];\n\t\t\tvar need_vml = false;\n\t\t\tif(comments && comments.length > 0) {\n\t\t\t\tvar cf = \"xl/comments\" + rId + \".\" + wbext;\n\t\t\t\tzip.file(cf, write_cmnt(comments, cf, opts));\n\t\t\t\tct.comments.push(cf);\n\t\t\t\tadd_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n\t\t\t\tneed_vml = true;\n\t\t\t}\n\t\t\tif(ws['!legacy']) {\n\t\t\t\tif(need_vml) zip.file(\"xl/drawings/vmlDrawing\" + (rId) + \".vml\", write_comments_vml(rId, ws['!comments']));\n\t\t\t}\n\t\t\tdelete ws['!comments'];\n\t\t\tdelete ws['!legacy'];\n\t\t}\n\n\t\tif(wsrels['!id'].rId1) zip.file(get_rels_path(f), write_rels(wsrels));\n\t}\n\n\tif(opts.Strings != null && opts.Strings.length > 0) {\n\t\tf = \"xl/sharedStrings.\" + wbext;\n\t\tzip.file(f, write_sst(opts.Strings, f, opts));\n\t\tct.strs.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n\t}\n\n\tf = \"xl/workbook.\" + wbext;\n\tzip.file(f, write_wb(wb, f, opts));\n\tct.workbooks.push(f);\n\tadd_rels(opts.rels, 1, f, RELS.WB);\n\n\t/* TODO: something more intelligent with themes */\n\n\tf = \"xl/theme/theme1.xml\";\n\tzip.file(f, write_theme(wb.Themes, opts));\n\tct.themes.push(f);\n\tadd_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n\t/* TODO: something more intelligent with styles */\n\n\tf = \"xl/styles.\" + wbext;\n\tzip.file(f, write_sty(wb, f, opts));\n\tct.styles.push(f);\n\tadd_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n\n\tif(wb.vbaraw && vbafmt) {\n\t\tf = \"xl/vbaProject.bin\";\n\t\tzip.file(f, wb.vbaraw);\n\t\tct.vba.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n\t}\n\n\tzip.file(\"[Content_Types].xml\", write_ct(ct, opts));\n\tzip.file('_rels/.rels', write_rels(opts.rels));\n\tzip.file('xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n\n\tdelete opts.revssf; delete opts.ssf;\n\treturn zip;\n}\nfunction firstbyte(f,o) {\n\tvar x = \"\";\n\tswitch((o||{}).type || \"base64\") {\n\t\tcase 'buffer': return [f[0], f[1], f[2], f[3]];\n\t\tcase 'base64': x = Base64.decode(f.slice(0,24)); break;\n\t\tcase 'binary': x = f; break;\n\t\tcase 'array':  return [f[0], f[1], f[2], f[3]];\n\t\tdefault: throw new Error(\"Unrecognized type \" + (o && o.type || \"undefined\"));\n\t}\n\treturn [x.charCodeAt(0), x.charCodeAt(1), x.charCodeAt(2), x.charCodeAt(3)];\n}\n\nfunction read_cfb(cfb, opts) {\n\tif(CFB.find(cfb, \"EncryptedPackage\")) return parse_xlsxcfb(cfb, opts);\n\treturn parse_xlscfb(cfb, opts);\n}\n\nfunction read_zip(data, opts) {\nvar zip, d = data;\n\tvar o = opts||{};\n\tif(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? \"buffer\" : \"base64\";\n\tswitch(o.type) {\n\t\tcase \"base64\": zip = new jszip(d, { base64:true }); break;\n\t\tcase \"binary\": case \"array\": zip = new jszip(d, { base64:false }); break;\n\t\tcase \"buffer\": zip = new jszip(d); break;\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\treturn parse_zip(zip, o);\n}\n\nfunction read_plaintext(data, o) {\n\tvar i = 0;\n\tmain: while(i < data.length) switch(data.charCodeAt(i)) {\n\t\tcase 0x0A: case 0x0D: case 0x20: ++i; break;\n\t\tcase 0x3C: return parse_xlml(data.slice(i),o);\n\t\tdefault: break main;\n\t}\n\treturn PRN.to_workbook(data, o);\n}\n\nfunction read_plaintext_raw(data, o) {\n\tvar str = \"\", bytes = firstbyte(data, o);\n\tswitch(o.type) {\n\t\tcase 'base64': str = Base64.decode(data); break;\n\t\tcase 'binary': str = data; break;\n\t\tcase 'buffer': str = data.toString('binary'); break;\n\t\tcase 'array': str = cc2str(data); break;\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\tif(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str);\n\treturn read_plaintext(str, o);\n}\n\nfunction read_utf16(data, o) {\n\tvar d = data;\n\tif(o.type == 'base64') d = Base64.decode(d);\n\td = cptable.utils.decode(1200, d.slice(2), 'str');\n\to.type = \"binary\";\n\treturn read_plaintext(d, o);\n}\n\nfunction bstrify(data) {\n\treturn !data.match(/[^\\x00-\\x7F]/) ? data : utf8write(data);\n}\n\nfunction read_prn(data, d, o, str) {\n\tif(str) { o.type = \"string\"; return PRN.to_workbook(data, o); }\n\treturn PRN.to_workbook(d, o);\n}\n\nfunction readSync(data, opts) {\n\treset_cp();\n\tif(typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) return readSync(new Uint8Array(data), opts);\n\tvar d = data, n = [0,0,0,0], str = false;\n\tvar o = opts||{};\n\t_ssfopts = {};\n\tif(o.dateNF) _ssfopts.dateNF = o.dateNF;\n\tif(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? \"buffer\" : \"base64\";\n\tif(o.type == \"file\") { o.type = has_buf ? \"buffer\" : \"binary\"; d = read_binary(data); }\n\tif(o.type == \"string\") { str = true; o.type = \"binary\"; o.codepage = 65001; d = bstrify(data); }\n\tif(o.type == 'array' && typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && typeof ArrayBuffer !== 'undefined') {\n\t\t// $FlowIgnore\n\t\tvar ab=new ArrayBuffer(3), vu=new Uint8Array(ab); vu.foo=\"bar\";\n\t\t// $FlowIgnore\n\t\tif(!vu.foo) {o=dup(o); o.type='array'; return readSync(ab2a(d), o);}\n\t}\n\tswitch((n = firstbyte(d, o))[0]) {\n\t\tcase 0xD0: return read_cfb(CFB.read(d, o), o);\n\t\tcase 0x09: return parse_xlscfb(d, o);\n\t\tcase 0x3C: return parse_xlml(d, o);\n\t\tcase 0x49: if(n[1] === 0x44) return read_wb_ID(d, o); break;\n\t\tcase 0x54: if(n[1] === 0x41 && n[2] === 0x42 && n[3] === 0x4C) return DIF.to_workbook(d, o); break;\n\t\tcase 0x50: return (n[1] === 0x4B && n[2] < 0x09 && n[3] < 0x09) ? read_zip(d, o) : read_prn(data, d, o, str);\n\t\tcase 0xEF: return n[3] === 0x3C ? parse_xlml(d, o) : read_prn(data, d, o, str);\n\t\tcase 0xFF: if(n[1] === 0xFE) { return read_utf16(d, o); } break;\n\t\tcase 0x00: if(n[1] === 0x00 && n[2] >= 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o); break;\n\t\tcase 0x03: case 0x83: case 0x8B: case 0x8C: return DBF.to_workbook(d, o);\n\t\tcase 0x7B: if(n[1] === 0x5C && n[2] === 0x72 && n[3] === 0x74) return RTF.to_workbook(d, o); break;\n\t\tcase 0x0A: case 0x0D: case 0x20: return read_plaintext_raw(d, o);\n\t}\n\tif(n[2] <= 12 && n[3] <= 31) return DBF.to_workbook(d, o);\n\treturn read_prn(data, d, o, str);\n}\n\nfunction readFileSync(filename, opts) {\n\tvar o = opts||{}; o.type = 'file';\n\treturn readSync(filename, o);\n}\nfunction write_cfb_ctr(cfb, o) {\n\tswitch(o.type) {\n\t\tcase \"base64\": case \"binary\": break;\n\t\tcase \"buffer\": case \"array\": o.type = \"\"; break;\n\t\tcase \"file\": return write_dl(o.file, CFB.write(cfb, {type:has_buf ? 'buffer' : \"\"}));\n\t\tcase \"string\": throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\treturn CFB.write(cfb, o);\n}\n\n/*global encrypt_agile */\nfunction write_zip_type(wb, opts) {\n\tvar o = opts||{};\n\tvar z = write_zip(wb, o);\n\tvar oopts = {};\n\tif(o.compression) oopts.compression = 'DEFLATE';\n\tif(o.password) oopts.type = has_buf ? \"nodebuffer\" : \"string\";\n\telse switch(o.type) {\n\t\tcase \"base64\": oopts.type = \"base64\"; break;\n\t\tcase \"binary\": oopts.type = \"string\"; break;\n\t\tcase \"string\": throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n\t\tcase \"buffer\":\n\t\tcase \"file\": oopts.type = has_buf ? \"nodebuffer\" : \"string\"; break;\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\tvar out = z.generate(oopts);\n\tif(o.password && typeof encrypt_agile !== 'undefined') return write_cfb_ctr(encrypt_agile(out, o.password), o);\n\tif(o.type === \"file\") return write_dl(o.file, out);\n\treturn o.type == \"string\" ? utf8read(out) : out;\n}\n\nfunction write_cfb_type(wb, opts) {\n\tvar o = opts||{};\n\tvar cfb = write_xlscfb(wb, o);\n\treturn write_cfb_ctr(cfb, o);\n}\n\nfunction write_string_type(out, opts, bom) {\n\tif(!bom) bom = \"\";\n\tvar o = bom + out;\n\tswitch(opts.type) {\n\t\tcase \"base64\": return Base64.encode(utf8write(o));\n\t\tcase \"binary\": return utf8write(o);\n\t\tcase \"string\": return out;\n\t\tcase \"file\": return write_dl(opts.file, o, 'utf8');\n\t\tcase \"buffer\": {\n\t\t\t// $FlowIgnore\n\t\t\tif(has_buf) return Buffer_from(o, 'utf8');\n\t\t\telse return write_string_type(o, {type:'binary'}).split(\"\").map(function(c) { return c.charCodeAt(0); });\n\t\t}\n\t}\n\tthrow new Error(\"Unrecognized type \" + opts.type);\n}\n\nfunction write_stxt_type(out, opts) {\n\tswitch(opts.type) {\n\t\tcase \"base64\": return Base64.encode(out);\n\t\tcase \"binary\": return out;\n\t\tcase \"string\": return out; /* override in sheet_to_txt */\n\t\tcase \"file\": return write_dl(opts.file, out, 'binary');\n\t\tcase \"buffer\": {\n\t\t\t// $FlowIgnore\n\t\t\tif(has_buf) return Buffer_from(out, 'binary');\n\t\t\telse return out.split(\"\").map(function(c) { return c.charCodeAt(0); });\n\t\t}\n\t}\n\tthrow new Error(\"Unrecognized type \" + opts.type);\n}\n\n/* TODO: test consistency */\nfunction write_binary_type(out, opts) {\n\tswitch(opts.type) {\n\t\tcase \"string\":\n\t\tcase \"base64\":\n\t\tcase \"binary\":\n\t\t\tvar bstr = \"\";\n\t\t\t// $FlowIgnore\n\t\t\tfor(var i = 0; i < out.length; ++i) bstr += String.fromCharCode(out[i]);\n\t\t\treturn opts.type == 'base64' ? Base64.encode(bstr) : opts.type == 'string' ? utf8read(bstr) : bstr;\n\t\tcase \"file\": return write_dl(opts.file, out);\n\t\tcase \"buffer\": return out;\n\t\tdefault: throw new Error(\"Unrecognized type \" + opts.type);\n\t}\n}\n\nfunction writeSync(wb, opts) {\n\tcheck_wb(wb);\n\tvar o = opts||{};\n\tif(o.type == \"array\") { o.type = \"binary\"; var out = (writeSync(wb, o)); o.type = \"array\"; return s2ab(out); }\n\tswitch(o.bookType || 'xlsb') {\n\t\tcase 'xml':\n\t\tcase 'xlml': return write_string_type(write_xlml(wb, o), o);\n\t\tcase 'slk':\n\t\tcase 'sylk': return write_string_type(write_slk_str(wb, o), o);\n\t\tcase 'htm':\n\t\tcase 'html': return write_string_type(write_htm_str(wb, o), o);\n\t\tcase 'txt': return write_stxt_type(write_txt_str(wb, o), o);\n\t\tcase 'csv': return write_string_type(write_csv_str(wb, o), o, \"\\ufeff\");\n\t\tcase 'dif': return write_string_type(write_dif_str(wb, o), o);\n\t\tcase 'dbf': return write_binary_type(write_dbf_buf(wb, o), o);\n\t\tcase 'prn': return write_string_type(write_prn_str(wb, o), o);\n\t\tcase 'rtf': return write_string_type(write_rtf_str(wb, o), o);\n\t\tcase 'eth': return write_string_type(write_eth_str(wb, o), o);\n\t\tcase 'fods': return write_string_type(write_ods(wb, o), o);\n\t\tcase 'biff2': if(!o.biff) o.biff = 2; /* falls through */\n\t\tcase 'biff3': if(!o.biff) o.biff = 3; /* falls through */\n\t\tcase 'biff4': if(!o.biff) o.biff = 4; return write_binary_type(write_biff_buf(wb, o), o);\n\t\tcase 'biff5': if(!o.biff) o.biff = 5; /* falls through */\n\t\tcase 'biff8':\n\t\tcase 'xla':\n\t\tcase 'xls': if(!o.biff) o.biff = 8; return write_cfb_type(wb, o);\n\t\tcase 'xlsx':\n\t\tcase 'xlsm':\n\t\tcase 'xlam':\n\t\tcase 'xlsb':\n\t\tcase 'ods': return write_zip_type(wb, o);\n\t\tdefault: throw new Error (\"Unrecognized bookType |\" + o.bookType + \"|\");\n\t}\n}\n\nfunction resolve_book_type(o) {\n\tif(o.bookType) return;\n\tvar _BT = {\n\t\t\"xls\": \"biff8\",\n\t\t\"htm\": \"html\",\n\t\t\"slk\": \"sylk\",\n\t\t\"socialcalc\": \"eth\",\n\t\t\"Sh33tJS\": \"WTF\"\n\t};\n\tvar ext = o.file.slice(o.file.lastIndexOf(\".\")).toLowerCase();\n\tif(ext.match(/^\\.[a-z]+$/)) o.bookType = ext.slice(1);\n\to.bookType = _BT[o.bookType] || o.bookType;\n}\n\nfunction writeFileSync(wb, filename, opts) {\n\tvar o = opts||{}; o.type = 'file';\n\to.file = filename;\n\tresolve_book_type(o);\n\treturn writeSync(wb, o);\n}\n\nfunction writeFileAsync(filename, wb, opts, cb) {\n\tvar o = opts||{}; o.type = 'file';\n\to.file = filename;\n\tresolve_book_type(o);\n\to.type = 'buffer';\n\tvar _cb = cb; if(!(_cb instanceof Function)) _cb = (opts);\n\treturn _fs.writeFile(filename, writeSync(wb, o), _cb);\n}\nfunction make_json_row(sheet, r, R, cols, header, hdr, dense, o) {\n\tvar rr = encode_row(R);\n\tvar defval = o.defval, raw = o.raw || !o.hasOwnProperty(\"raw\");\n\tvar isempty = true;\n\tvar row = (header === 1) ? [] : {};\n\tif(header !== 1) {\n\t\tif(Object.defineProperty) try { Object.defineProperty(row, '__rowNum__', {value:R, enumerable:false}); } catch(e) { row.__rowNum__ = R; }\n\t\telse row.__rowNum__ = R;\n\t}\n\tif(!dense || sheet[R]) for (var C = r.s.c; C <= r.e.c; ++C) {\n\t\tvar val = dense ? sheet[R][C] : sheet[cols[C] + rr];\n\t\tif(val === undefined || val.t === undefined) {\n\t\t\tif(defval === undefined) continue;\n\t\t\tif(hdr[C] != null) { row[hdr[C]] = defval; }\n\t\t\tcontinue;\n\t\t}\n\t\tvar v = val.v;\n\t\tswitch(val.t){\n\t\t\tcase 'z': if(v == null) break; continue;\n\t\t\tcase 'e': v = void 0; break;\n\t\t\tcase 's': case 'd': case 'b': case 'n': break;\n\t\t\tdefault: throw new Error('unrecognized type ' + val.t);\n\t\t}\n\t\tif(hdr[C] != null) {\n\t\t\tif(v == null) {\n\t\t\t\tif(defval !== undefined) row[hdr[C]] = defval;\n\t\t\t\telse if(raw && v === null) row[hdr[C]] = null;\n\t\t\t\telse continue;\n\t\t\t} else {\n\t\t\t\trow[hdr[C]] = raw ? v : format_cell(val,v,o);\n\t\t\t}\n\t\t\tif(v != null) isempty = false;\n\t\t}\n\t}\n\treturn { row: row, isempty: isempty };\n}\n\n\nfunction sheet_to_json(sheet, opts) {\n\tif(sheet == null || sheet[\"!ref\"] == null) return [];\n\tvar val = {t:'n',v:0}, header = 0, offset = 1, hdr = [], v=0, vv=\"\";\n\tvar r = {s:{r:0,c:0},e:{r:0,c:0}};\n\tvar o = opts || {};\n\tvar range = o.range != null ? o.range : sheet[\"!ref\"];\n\tif(o.header === 1) header = 1;\n\telse if(o.header === \"A\") header = 2;\n\telse if(Array.isArray(o.header)) header = 3;\n\tswitch(typeof range) {\n\t\tcase 'string': r = safe_decode_range(range); break;\n\t\tcase 'number': r = safe_decode_range(sheet[\"!ref\"]); r.s.r = range; break;\n\t\tdefault: r = range;\n\t}\n\tif(header > 0) offset = 0;\n\tvar rr = encode_row(r.s.r);\n\tvar cols = [];\n\tvar out = [];\n\tvar outi = 0, counter = 0;\n\tvar dense = Array.isArray(sheet);\n\tvar R = r.s.r, C = 0, CC = 0;\n\tif(dense && !sheet[R]) sheet[R] = [];\n\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\tcols[C] = encode_col(C);\n\t\tval = dense ? sheet[R][C] : sheet[cols[C] + rr];\n\t\tswitch(header) {\n\t\t\tcase 1: hdr[C] = C - r.s.c; break;\n\t\t\tcase 2: hdr[C] = cols[C]; break;\n\t\t\tcase 3: hdr[C] = o.header[C - r.s.c]; break;\n\t\t\tdefault:\n\t\t\t\tif(val == null) val = {w: \"__EMPTY\", t: \"s\"};\n\t\t\t\tvv = v = format_cell(val, null, o);\n\t\t\t\tcounter = 0;\n\t\t\t\tfor(CC = 0; CC < hdr.length; ++CC) if(hdr[CC] == vv) vv = v + \"_\" + (++counter);\n\t\t\t\thdr[C] = vv;\n\t\t}\n\t}\n\tfor (R = r.s.r + offset; R <= r.e.r; ++R) {\n\t\tvar row = make_json_row(sheet, r, R, cols, header, hdr, dense, o);\n\t\tif((row.isempty === false) || (header === 1 ? o.blankrows !== false : !!o.blankrows)) out[outi++] = row.row;\n\t}\n\tout.length = outi;\n\treturn out;\n}\n\nvar qreg = /\"/g;\nfunction make_csv_row(sheet, r, R, cols, fs, rs, FS, o) {\n\tvar isempty = true;\n\tvar row = [], txt = \"\", rr = encode_row(R);\n\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\tif (!cols[C]) continue;\n\t\tvar val = o.dense ? (sheet[R]||[])[C]: sheet[cols[C] + rr];\n\t\tif(val == null) txt = \"\";\n\t\telse if(val.v != null) {\n\t\t\tisempty = false;\n\t\t\ttxt = ''+format_cell(val, null, o);\n\t\t\tfor(var i = 0, cc = 0; i !== txt.length; ++i) if((cc = txt.charCodeAt(i)) === fs || cc === rs || cc === 34) {txt = \"\\\"\" + txt.replace(qreg, '\"\"') + \"\\\"\"; break; }\n\t\t\tif(txt == \"ID\") txt = '\"ID\"';\n\t\t} else if(val.f != null && !val.F) {\n\t\t\tisempty = false;\n\t\t\ttxt = '=' + val.f; if(txt.indexOf(\",\") >= 0) txt = '\"' + txt.replace(qreg, '\"\"') + '\"';\n\t\t} else txt = \"\";\n\t\t/* NOTE: Excel CSV does not support array formulae */\n\t\trow.push(txt);\n\t}\n\tif(o.blankrows === false && isempty) return null;\n\treturn row.join(FS);\n}\n\nfunction sheet_to_csv(sheet, opts) {\n\tvar out = [];\n\tvar o = opts == null ? {} : opts;\n\tif(sheet == null || sheet[\"!ref\"] == null) return \"\";\n\tvar r = safe_decode_range(sheet[\"!ref\"]);\n\tvar FS = o.FS !== undefined ? o.FS : \",\", fs = FS.charCodeAt(0);\n\tvar RS = o.RS !== undefined ? o.RS : \"\\n\", rs = RS.charCodeAt(0);\n\tvar endregex = new RegExp((FS==\"|\" ? \"\\\\|\" : FS)+\"+$\");\n\tvar row = \"\", cols = [];\n\to.dense = Array.isArray(sheet);\n\tvar colinfo = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(var C = r.s.c; C <= r.e.c; ++C) if (!((colinfo[C]||{}).hidden)) cols[C] = encode_col(C);\n\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\tif ((rowinfo[R]||{}).hidden) continue;\n\t\trow = make_csv_row(sheet, r, R, cols, fs, rs, FS, o);\n\t\tif(row == null) { continue; }\n\t\tif(o.strip) row = row.replace(endregex,\"\");\n\t\tout.push(row + RS);\n\t}\n\tdelete o.dense;\n\treturn out.join(\"\");\n}\n\nfunction sheet_to_txt(sheet, opts) {\n\tif(!opts) opts = {}; opts.FS = \"\\t\"; opts.RS = \"\\n\";\n\tvar s = sheet_to_csv(sheet, opts);\n\tif(typeof cptable == 'undefined' || opts.type == 'string') return s;\n\tvar o = cptable.utils.encode(1200, s, 'str');\n\treturn String.fromCharCode(255) + String.fromCharCode(254) + o;\n}\n\nfunction sheet_to_formulae(sheet) {\n\tvar y = \"\", x, val=\"\";\n\tif(sheet == null || sheet[\"!ref\"] == null) return [];\n\tvar r = safe_decode_range(sheet['!ref']), rr = \"\", cols = [], C;\n\tvar cmds = [];\n\tvar dense = Array.isArray(sheet);\n\tfor(C = r.s.c; C <= r.e.c; ++C) cols[C] = encode_col(C);\n\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\trr = encode_row(R);\n\t\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\t\ty = cols[C] + rr;\n\t\t\tx = dense ? (sheet[R]||[])[C] : sheet[y];\n\t\t\tval = \"\";\n\t\t\tif(x === undefined) continue;\n\t\t\telse if(x.F != null) {\n\t\t\t\ty = x.F;\n\t\t\t\tif(!x.f) continue;\n\t\t\t\tval = x.f;\n\t\t\t\tif(y.indexOf(\":\") == -1) y = y + \":\" + y;\n\t\t\t}\n\t\t\tif(x.f != null) val = x.f;\n\t\t\telse if(x.t == 'z') continue;\n\t\t\telse if(x.t == 'n' && x.v != null) val = \"\" + x.v;\n\t\t\telse if(x.t == 'b') val = x.v ? \"TRUE\" : \"FALSE\";\n\t\t\telse if(x.w !== undefined) val = \"'\" + x.w;\n\t\t\telse if(x.v === undefined) continue;\n\t\t\telse if(x.t == 's') val = \"'\" + x.v;\n\t\t\telse val = \"\"+x.v;\n\t\t\tcmds[cmds.length] = y + \"=\" + val;\n\t\t}\n\t}\n\treturn cmds;\n}\n\nfunction sheet_add_json(_ws, js, opts) {\n\tvar o = opts || {};\n\tvar offset = +!o.skipHeader;\n\tvar ws = _ws || ({});\n\tvar _R = 0, _C = 0;\n\tif(ws && o.origin != null) {\n\t\tif(typeof o.origin == 'number') _R = o.origin;\n\t\telse {\n\t\t\tvar _origin = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n\t\t\t_R = _origin.r; _C = _origin.c;\n\t\t}\n\t}\n\tvar cell;\n\tvar range = ({s: {c:0, r:0}, e: {c:_C, r:_R + js.length - 1 + offset}});\n\tif(ws['!ref']) {\n\t\tvar _range = safe_decode_range(ws['!ref']);\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\n\t\tif(_R == -1) { _R = range.e.r + 1; range.e.r = _R + js.length - 1 + offset; }\n\t}\n\tvar hdr = o.header || [], C = 0;\n\n\tjs.forEach(function (JS, R) {\n\t\tkeys(JS).forEach(function(k) {\n\t\t\tif((C=hdr.indexOf(k)) == -1) hdr[C=hdr.length] = k;\n\t\t\tvar v = JS[k];\n\t\t\tvar t = 'z';\n\t\t\tvar z = \"\";\n\t\t\tif(v && typeof v === 'object' && !(v instanceof Date)){\n\t\t\t\tws[encode_cell({c:_C + C,r:_R + R + offset})] = v;\n\t\t\t} else {\n\t\t\t\tif(typeof v == 'number') t = 'n';\n\t\t\t\telse if(typeof v == 'boolean') t = 'b';\n\t\t\t\telse if(typeof v == 'string') t = 's';\n\t\t\t\telse if(v instanceof Date) {\n\t\t\t\t\tt = 'd';\n\t\t\t\t\tif(!o.cellDates) { t = 'n'; v = datenum(v); }\n\t\t\t\t\tz = o.dateNF || SSF._table[14];\n\t\t\t\t}\n\t\t\t\tws[encode_cell({c:_C + C,r:_R + R + offset})] = cell = ({t:t, v:v});\n\t\t\t\tif(z) cell.z = z;\n\t\t\t}\n\t\t});\n\t});\n\trange.e.c = Math.max(range.e.c, _C + hdr.length - 1);\n\tvar __R = encode_row(_R);\n\tif(offset) for(C = 0; C < hdr.length; ++C) ws[encode_col(C + _C) + __R] = {t:'s', v:hdr[C]};\n\tws['!ref'] = encode_range(range);\n\treturn ws;\n}\nfunction json_to_sheet(js, opts) { return sheet_add_json(null, js, opts); }\n\nvar utils = {\n\tencode_col: encode_col,\n\tencode_row: encode_row,\n\tencode_cell: encode_cell,\n\tencode_range: encode_range,\n\tdecode_col: decode_col,\n\tdecode_row: decode_row,\n\tsplit_cell: split_cell,\n\tdecode_cell: decode_cell,\n\tdecode_range: decode_range,\n\tformat_cell: format_cell,\n\tget_formulae: sheet_to_formulae,\n\tmake_csv: sheet_to_csv,\n\tmake_json: sheet_to_json,\n\tmake_formulae: sheet_to_formulae,\n\tsheet_add_aoa: sheet_add_aoa,\n\tsheet_add_json: sheet_add_json,\n\taoa_to_sheet: aoa_to_sheet,\n\tjson_to_sheet: json_to_sheet,\n\ttable_to_sheet: parse_dom_table,\n\ttable_to_book: table_to_book,\n\tsheet_to_csv: sheet_to_csv,\n\tsheet_to_txt: sheet_to_txt,\n\tsheet_to_json: sheet_to_json,\n\tsheet_to_html: HTML_.from_sheet,\n\tsheet_to_dif: DIF.from_sheet,\n\tsheet_to_slk: SYLK.from_sheet,\n\tsheet_to_eth: ETH.from_sheet,\n\tsheet_to_formulae: sheet_to_formulae,\n\tsheet_to_row_object_array: sheet_to_json\n};\n\n(function(utils) {\nutils.consts = utils.consts || {};\nfunction add_consts(R/*Array<any>*/) { R.forEach(function(a){ utils.consts[a[0]] = a[1]; }); }\n\nfunction get_default(x, y, z) { return x[y] != null ? x[y] : (x[y] = z); }\n\n/* get cell, creating a stub if necessary */\nfunction ws_get_cell_stub(ws, R, C) {\n\t/* A1 cell address */\n\tif(typeof R == \"string\") return ws[R] || (ws[R] = {t:'z'});\n\t/* cell address object */\n\tif(typeof R != \"number\") return ws_get_cell_stub(ws, encode_cell(R));\n\t/* R and C are 0-based indices */\n\treturn ws_get_cell_stub(ws, encode_cell({r:R,c:C||0}));\n}\n\n/* find sheet index for given name / validate index */\nfunction wb_sheet_idx(wb, sh) {\n\tif(typeof sh == \"number\") {\n\t\tif(sh >= 0 && wb.SheetNames.length > sh) return sh;\n\t\tthrow new Error(\"Cannot find sheet # \" + sh);\n\t} else if(typeof sh == \"string\") {\n\t\tvar idx = wb.SheetNames.indexOf(sh);\n\t\tif(idx > -1) return idx;\n\t\tthrow new Error(\"Cannot find sheet name |\" + sh + \"|\");\n\t} else throw new Error(\"Cannot find sheet |\" + sh + \"|\");\n}\n\n/* simple blank workbook object */\nutils.book_new = function() {\n\treturn { SheetNames: [], Sheets: {} };\n};\n\n/* add a worksheet to the end of a given workbook */\nutils.book_append_sheet = function(wb, ws, name) {\n\tif(!name) for(var i = 1; i <= 0xFFFF; ++i) if(wb.SheetNames.indexOf(name = \"Sheet\" + i) == -1) break;\n\tif(!name) throw new Error(\"Too many worksheets\");\n\tcheck_ws_name(name);\n\tif(wb.SheetNames.indexOf(name) >= 0) throw new Error(\"Worksheet with name |\" + name + \"| already exists!\");\n\n\twb.SheetNames.push(name);\n\twb.Sheets[name] = ws;\n};\n\n/* set sheet visibility (visible/hidden/very hidden) */\nutils.book_set_sheet_visibility = function(wb, sh, vis) {\n\tget_default(wb,\"Workbook\",{});\n\tget_default(wb.Workbook,\"Sheets\",[]);\n\n\tvar idx = wb_sheet_idx(wb, sh);\n\t// $FlowIgnore\n\tget_default(wb.Workbook.Sheets,idx, {});\n\n\tswitch(vis) {\n\t\tcase 0: case 1: case 2: break;\n\t\tdefault: throw new Error(\"Bad sheet visibility setting \" + vis);\n\t}\n\t// $FlowIgnore\n\twb.Workbook.Sheets[idx].Hidden = vis;\n};\nadd_consts([\n\t[\"SHEET_VISIBLE\", 0],\n\t[\"SHEET_HIDDEN\", 1],\n\t[\"SHEET_VERY_HIDDEN\", 2]\n]);\n\n/* set number format */\nutils.cell_set_number_format = function(cell, fmt) {\n\tcell.z = fmt;\n\treturn cell;\n};\n\n/* set cell hyperlink */\nutils.cell_set_hyperlink = function(cell, target, tooltip) {\n\tif(!target) {\n\t\tdelete cell.l;\n\t} else {\n\t\tcell.l = ({ Target: target });\n\t\tif(tooltip) cell.l.Tooltip = tooltip;\n\t}\n\treturn cell;\n};\nutils.cell_set_internal_link = function(cell, range, tooltip) { return utils.cell_set_hyperlink(cell, \"#\" + range, tooltip); };\n\n/* add to cell comments */\nutils.cell_add_comment = function(cell, text, author) {\n\tif(!cell.c) cell.c = [];\n\tcell.c.push({t:text, a:author||\"SheetJS\"});\n};\n\n/* set array formula and flush related cells */\nutils.sheet_set_array_formula = function(ws, range, formula) {\n\tvar rng = typeof range != \"string\" ? range : safe_decode_range(range);\n\tvar rngstr = typeof range == \"string\" ? range : encode_range(range);\n\tfor(var R = rng.s.r; R <= rng.e.r; ++R) for(var C = rng.s.c; C <= rng.e.c; ++C) {\n\t\tvar cell = ws_get_cell_stub(ws, R, C);\n\t\tcell.t = 'n';\n\t\tcell.F = rngstr;\n\t\tdelete cell.v;\n\t\tif(R == rng.s.r && C == rng.s.c) cell.f = formula;\n\t}\n\treturn ws;\n};\n\nreturn utils;\n})(utils);\n\nif(has_buf && typeof require != 'undefined') (function() {\n\tvar Readable = require('stream').Readable;\n\n\tvar write_csv_stream = function(sheet, opts) {\n\t\tvar stream = Readable();\n\t\tvar o = opts == null ? {} : opts;\n\t\tif(sheet == null || sheet[\"!ref\"] == null) { stream.push(null); return stream; }\n\t\tvar r = safe_decode_range(sheet[\"!ref\"]);\n\t\tvar FS = o.FS !== undefined ? o.FS : \",\", fs = FS.charCodeAt(0);\n\t\tvar RS = o.RS !== undefined ? o.RS : \"\\n\", rs = RS.charCodeAt(0);\n\t\tvar endregex = new RegExp((FS==\"|\" ? \"\\\\|\" : FS)+\"+$\");\n\t\tvar row = \"\", cols = [];\n\t\to.dense = Array.isArray(sheet);\n\t\tvar colinfo = o.skipHidden && sheet[\"!cols\"] || [];\n\t\tvar rowinfo = o.skipHidden && sheet[\"!rows\"] || [];\n\t\tfor(var C = r.s.c; C <= r.e.c; ++C) if (!((colinfo[C]||{}).hidden)) cols[C] = encode_col(C);\n\t\tvar R = r.s.r;\n\t\tvar BOM = false;\n\t\tstream._read = function() {\n\t\t\tif(!BOM) { BOM = true; return stream.push(\"\\uFEFF\"); }\n\t\t\tif(R > r.e.r) return stream.push(null);\n\t\t\twhile(R <= r.e.r) {\n\t\t\t\t++R;\n\t\t\t\tif ((rowinfo[R-1]||{}).hidden) continue;\n\t\t\t\trow = make_csv_row(sheet, r, R-1, cols, fs, rs, FS, o);\n\t\t\t\tif(row != null) {\n\t\t\t\t\tif(o.strip) row = row.replace(endregex,\"\");\n\t\t\t\t\tstream.push(row + RS);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn stream;\n\t};\n\n\tvar write_html_stream = function(ws, opts) {\n\t\tvar stream = Readable();\n\n\t\tvar o = opts || {};\n\t\tvar header = o.header != null ? o.header : HTML_.BEGIN;\n\t\tvar footer = o.footer != null ? o.footer : HTML_.END;\n\t\tstream.push(header);\n\t\tvar r = decode_range(ws['!ref']);\n\t\to.dense = Array.isArray(ws);\n\t\tstream.push(HTML_._preamble(ws, r, o));\n\t\tvar R = r.s.r;\n\t\tvar end = false;\n\t\tstream._read = function() {\n\t\t\tif(R > r.e.r) {\n\t\t\t\tif(!end) { end = true; stream.push(\"</table>\" + footer); }\n\t\t\t\treturn stream.push(null);\n\t\t\t}\n\t\t\twhile(R <= r.e.r) {\n\t\t\t\tstream.push(HTML_._row(ws, r, R, o));\n\t\t\t\t++R;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\t\treturn stream;\n\t};\n\n\tvar write_json_stream = function(sheet, opts) {\n\t\tvar stream = Readable({objectMode:true});\n\n\t\tif(sheet == null || sheet[\"!ref\"] == null) { stream.push(null); return stream; }\n\t\tvar val = {t:'n',v:0}, header = 0, offset = 1, hdr = [], v=0, vv=\"\";\n\t\tvar r = {s:{r:0,c:0},e:{r:0,c:0}};\n\t\tvar o = opts || {};\n\t\tvar range = o.range != null ? o.range : sheet[\"!ref\"];\n\t\tif(o.header === 1) header = 1;\n\t\telse if(o.header === \"A\") header = 2;\n\t\telse if(Array.isArray(o.header)) header = 3;\n\t\tswitch(typeof range) {\n\t\t\tcase 'string': r = safe_decode_range(range); break;\n\t\t\tcase 'number': r = safe_decode_range(sheet[\"!ref\"]); r.s.r = range; break;\n\t\t\tdefault: r = range;\n\t\t}\n\t\tif(header > 0) offset = 0;\n\t\tvar rr = encode_row(r.s.r);\n\t\tvar cols = [];\n\t\tvar counter = 0;\n\t\tvar dense = Array.isArray(sheet);\n\t\tvar R = r.s.r, C = 0, CC = 0;\n\t\tif(dense && !sheet[R]) sheet[R] = [];\n\t\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\t\tcols[C] = encode_col(C);\n\t\t\tval = dense ? sheet[R][C] : sheet[cols[C] + rr];\n\t\t\tswitch(header) {\n\t\t\t\tcase 1: hdr[C] = C - r.s.c; break;\n\t\t\t\tcase 2: hdr[C] = cols[C]; break;\n\t\t\t\tcase 3: hdr[C] = o.header[C - r.s.c]; break;\n\t\t\t\tdefault:\n\t\t\t\t\tif(val == null) val = {w: \"__EMPTY\", t: \"s\"};\n\t\t\t\t\tvv = v = format_cell(val, null, o);\n\t\t\t\t\tcounter = 0;\n\t\t\t\t\tfor(CC = 0; CC < hdr.length; ++CC) if(hdr[CC] == vv) vv = v + \"_\" + (++counter);\n\t\t\t\t\thdr[C] = vv;\n\t\t\t}\n\t\t}\n\t\tR = r.s.r + offset;\n\t\tstream._read = function() {\n\t\t\tif(R > r.e.r) return stream.push(null);\n\t\t\twhile(R <= r.e.r) {\n\t\t\t\t//if ((rowinfo[R-1]||{}).hidden) continue;\n\t\t\t\tvar row = make_json_row(sheet, r, R, cols, header, hdr, dense, o);\n\t\t\t\t++R;\n\t\t\t\tif((row.isempty === false) || (header === 1 ? o.blankrows !== false : !!o.blankrows)) {\n\t\t\t\t\tstream.push(row.row);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn stream;\n\t};\n\n\tXLSX.stream = {\n\t\tto_json: write_json_stream,\n\t\tto_html: write_html_stream,\n\t\tto_csv: write_csv_stream\n\t};\n})();\n\nXLSX.parse_xlscfb = parse_xlscfb;\nXLSX.parse_ods = parse_ods;\nXLSX.parse_fods = parse_fods;\nXLSX.write_ods = write_ods;\nXLSX.parse_zip = parse_zip;\nXLSX.read = readSync; //xlsread\nXLSX.readFile = readFileSync; //readFile\nXLSX.readFileSync = readFileSync;\nXLSX.write = writeSync;\nXLSX.writeFile = writeFileSync;\nXLSX.writeFileSync = writeFileSync;\nXLSX.writeFileAsync = writeFileAsync;\nXLSX.utils = utils;\nXLSX.SSF = SSF;\nXLSX.CFB = CFB;\n}\n/*global define */\nif(typeof exports !== 'undefined') make_xlsx_lib(exports);\nelse if(typeof module !== 'undefined' && module.exports) make_xlsx_lib(module.exports);\nelse if(typeof define === 'function' && define.amd) define('xlsx', function() { if(!XLSX.version) make_xlsx_lib(XLSX); return XLSX; });\nelse make_xlsx_lib(XLSX);\n/*exported XLS, ODS */\nvar XLS = XLSX, ODS = XLSX;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/* cputils.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ft=javascript: */\n/*jshint newcap: false */\n(function(root, factory) {\n  /*jshint ignore:start */\n  /*eslint-disable */\n  \"use strict\";\n  if(typeof cptable === \"undefined\") {\n    if(typeof require !== \"undefined\"){\n      var cpt = require('./cptable');\n      if (typeof module !== 'undefined' && module.exports && typeof DO_NOT_EXPORT_CODEPAGE === 'undefined') module.exports = factory(cpt);\n      else root.cptable = factory(cpt);\n    } else throw new Error(\"cptable not found\");\n  } else cptable = factory(cptable);\n  /*eslint-enable */\n  /*jshint ignore:end */\n}(this, function(cpt){\n  \"use strict\";\n  /*global module, Buffer */\n  var magic = {\n    \"1200\":\"utf16le\",\n    \"1201\":\"utf16be\",\n    \"12000\":\"utf32le\",\n    \"12001\":\"utf32be\",\n    \"16969\":\"utf64le\",\n    \"20127\":\"ascii\",\n    \"65000\":\"utf7\",\n    \"65001\":\"utf8\"\n  };\n\n  var sbcs_cache = [874,1250,1251,1252,1253,1254,1255,1256,10000];\n  var dbcs_cache = [932,936,949,950];\n  var magic_cache = [65001];\n  var magic_decode = {};\n  var magic_encode = {};\n  var cpdcache = {};\n  var cpecache = {};\n\n  var sfcc = function sfcc(x) { return String.fromCharCode(x); };\n  var cca = function cca(x) { return x.charCodeAt(0); };\n\n  var has_buf = (typeof Buffer !== 'undefined');\n  var Buffer_from = function(){};\n  if(has_buf) {\n    var nbfs = !Buffer.from;\n    if(!nbfs) try { Buffer.from(\"foo\", \"utf8\"); } catch(e) { nbfs = true; }\n    Buffer_from = nbfs ? function(buf, enc) { return (enc) ? new Buffer(buf, enc) : new Buffer(buf); } : Buffer.from.bind(Buffer);\n    // $FlowIgnore\n    if(!Buffer.allocUnsafe) Buffer.allocUnsafe = function(n) { return new Buffer(n); };\n\n    var mdl = 1024, mdb = Buffer.allocUnsafe(mdl);\n    var make_EE = function make_EE(E){\n      var EE = Buffer.allocUnsafe(65536);\n      for(var i = 0; i < 65536;++i) EE[i] = 0;\n      var keys = Object.keys(E), len = keys.length;\n      for(var ee = 0, e = keys[ee]; ee < len; ++ee) {\n        if(!(e = keys[ee])) continue;\n        EE[e.charCodeAt(0)] = E[e];\n      }\n      return EE;\n    };\n    var sbcs_encode = function make_sbcs_encode(cp) {\n      var EE = make_EE(cpt[cp].enc);\n      return function sbcs_e(data, ofmt) {\n        var len = data.length;\n        var out, i=0, j=0, D=0, w=0;\n        if(typeof data === 'string') {\n          out = Buffer.allocUnsafe(len);\n          for(i = 0; i < len; ++i) out[i] = EE[data.charCodeAt(i)];\n        } else if(Buffer.isBuffer(data)) {\n          out = Buffer.allocUnsafe(2*len);\n          j = 0;\n          for(i = 0; i < len; ++i) {\n            D = data[i];\n            if(D < 128) out[j++] = EE[D];\n            else if(D < 224) { out[j++] = EE[((D&31)<<6)+(data[i+1]&63)]; ++i; }\n            else if(D < 240) { out[j++] = EE[((D&15)<<12)+((data[i+1]&63)<<6)+(data[i+2]&63)]; i+=2; }\n            else {\n              w = ((D&7)<<18)+((data[i+1]&63)<<12)+((data[i+2]&63)<<6)+(data[i+3]&63); i+=3;\n              if(w < 65536) out[j++] = EE[w];\n              else { w -= 65536; out[j++] = EE[0xD800 + ((w>>10)&1023)]; out[j++] = EE[0xDC00 + (w&1023)]; }\n            }\n          }\n          out = out.slice(0,j);\n        } else {\n          out = Buffer.allocUnsafe(len);\n          for(i = 0; i < len; ++i) out[i] = EE[data[i].charCodeAt(0)];\n        }\n        if(!ofmt || ofmt === 'buf') return out;\n        if(ofmt !== 'arr') return out.toString('binary');\n        return [].slice.call(out);\n      };\n    };\n    var sbcs_decode = function make_sbcs_decode(cp) {\n      var D = cpt[cp].dec;\n      var DD = Buffer.allocUnsafe(131072), d=0, c=\"\";\n      for(d=0;d<D.length;++d) {\n        if(!(c=D[d])) continue;\n        var w = c.charCodeAt(0);\n        DD[2*d] = w&255; DD[2*d+1] = w>>8;\n      }\n      return function sbcs_d(data) {\n        var len = data.length, i=0, j=0;\n        if(2 * len > mdl) { mdl = 2 * len; mdb = Buffer.allocUnsafe(mdl); }\n        if(Buffer.isBuffer(data)) {\n          for(i = 0; i < len; i++) {\n            j = 2*data[i];\n            mdb[2*i] = DD[j]; mdb[2*i+1] = DD[j+1];\n          }\n        } else if(typeof data === \"string\") {\n          for(i = 0; i < len; i++) {\n            j = 2*data.charCodeAt(i);\n            mdb[2*i] = DD[j]; mdb[2*i+1] = DD[j+1];\n          }\n        } else {\n          for(i = 0; i < len; i++) {\n            j = 2*data[i];\n            mdb[2*i] = DD[j]; mdb[2*i+1] = DD[j+1];\n          }\n        }\n        return mdb.slice(0, 2 * len).toString('ucs2');\n      };\n    };\n    var dbcs_encode = function make_dbcs_encode(cp) {\n      var E = cpt[cp].enc;\n      var EE = Buffer.allocUnsafe(131072);\n      for(var i = 0; i < 131072; ++i) EE[i] = 0;\n      var keys = Object.keys(E);\n      for(var ee = 0, e = keys[ee]; ee < keys.length; ++ee) {\n        if(!(e = keys[ee])) continue;\n        var f = e.charCodeAt(0);\n        EE[2*f] = E[e] & 255; EE[2*f+1] = E[e]>>8;\n      }\n      return function dbcs_e(data, ofmt) {\n        var len = data.length, out = Buffer.allocUnsafe(2*len), i=0, j=0, jj=0, k=0, D=0;\n        if(typeof data === 'string') {\n          for(i = k = 0; i < len; ++i) {\n            j = data.charCodeAt(i)*2;\n            out[k++] = EE[j+1] || EE[j]; if(EE[j+1] > 0) out[k++] = EE[j];\n          }\n          out = out.slice(0,k);\n        } else if(Buffer.isBuffer(data)) {\n          for(i = k = 0; i < len; ++i) {\n            D = data[i];\n            if(D < 128) j = D;\n            else if(D < 224) { j = ((D&31)<<6)+(data[i+1]&63); ++i; }\n            else if(D < 240) { j = ((D&15)<<12)+((data[i+1]&63)<<6)+(data[i+2]&63); i+=2; }\n            else { j = ((D&7)<<18)+((data[i+1]&63)<<12)+((data[i+2]&63)<<6)+(data[i+3]&63); i+=3; }\n            if(j<65536) { j*=2; out[k++] = EE[j+1] || EE[j]; if(EE[j+1] > 0) out[k++] = EE[j]; }\n            else { jj = j-65536;\n              j=2*(0xD800 + ((jj>>10)&1023)); out[k++] = EE[j+1] || EE[j]; if(EE[j+1] > 0) out[k++] = EE[j];\n              j=2*(0xDC00 + (jj&1023)); out[k++] = EE[j+1] || EE[j]; if(EE[j+1] > 0) out[k++] = EE[j];\n            }\n          }\n          out = out.slice(0,k);\n        } else {\n          for(i = k = 0; i < len; i++) {\n            j = data[i].charCodeAt(0)*2;\n            out[k++] = EE[j+1] || EE[j]; if(EE[j+1] > 0) out[k++] = EE[j];\n          }\n        }\n        if(!ofmt || ofmt === 'buf') return out;\n        if(ofmt !== 'arr') return out.toString('binary');\n        return [].slice.call(out);\n      };\n    };\n    var dbcs_decode = function make_dbcs_decode(cp) {\n      var D = cpt[cp].dec;\n      var DD = Buffer.allocUnsafe(131072), d=0, c, w=0, j=0, i=0;\n      for(i = 0; i < 65536; ++i) { DD[2*i] = 0xFF; DD[2*i+1] = 0xFD;}\n      for(d = 0; d < D.length; ++d) {\n        if(!(c=D[d])) continue;\n        w = c.charCodeAt(0);\n        j = 2*d;\n        DD[j] = w&255; DD[j+1] = w>>8;\n      }\n      return function dbcs_d(data) {\n        var len = data.length, out = Buffer.allocUnsafe(2*len), i=0, j=0, k=0;\n        if(Buffer.isBuffer(data)) {\n          for(i = 0; i < len; i++) {\n            j = 2*data[i];\n            if(DD[j]===0xFF && DD[j+1]===0xFD) { j=2*((data[i]<<8)+data[i+1]); ++i; }\n            out[k++] = DD[j]; out[k++] = DD[j+1];\n          }\n        } else if(typeof data === \"string\") {\n          for(i = 0; i < len; i++) {\n            j = 2*data.charCodeAt(i);\n            if(DD[j]===0xFF && DD[j+1]===0xFD) { j=2*((data.charCodeAt(i)<<8)+data.charCodeAt(i+1)); ++i; }\n            out[k++] = DD[j]; out[k++] = DD[j+1];\n          }\n        } else {\n          for(i = 0; i < len; i++) {\n            j = 2*data[i];\n            if(DD[j]===0xFF && DD[j+1]===0xFD) { j=2*((data[i]<<8)+data[i+1]); ++i; }\n            out[k++] = DD[j]; out[k++] = DD[j+1];\n          }\n        }\n        return out.slice(0,k).toString('ucs2');\n      };\n    };\n    magic_decode[65001] = function utf8_d(data) {\n      if(typeof data === \"string\") return utf8_d(data.split(\"\").map(cca));\n      var len = data.length, w = 0, ww = 0;\n      if(4 * len > mdl) { mdl = 4 * len; mdb = Buffer.allocUnsafe(mdl); }\n      var i = 0;\n      if(len >= 3 && data[0] == 0xEF) if(data[1] == 0xBB && data[2] == 0xBF) i = 3;\n      for(var j = 1, k = 0, D = 0; i < len; i+=j) {\n        j = 1; D = data[i];\n        if(D < 128) w = D;\n        else if(D < 224) { w=(D&31)*64+(data[i+1]&63); j=2; }\n        else if(D < 240) { w=((D&15)<<12)+(data[i+1]&63)*64+(data[i+2]&63); j=3; }\n        else { w=(D&7)*262144+((data[i+1]&63)<<12)+(data[i+2]&63)*64+(data[i+3]&63); j=4; }\n        if(w < 65536) { mdb[k++] = w&255; mdb[k++] = w>>8; }\n        else {\n          w -= 65536; ww = 0xD800 + ((w>>10)&1023); w = 0xDC00 + (w&1023);\n          mdb[k++] = ww&255; mdb[k++] = ww>>>8; mdb[k++] = w&255; mdb[k++] = (w>>>8)&255;\n        }\n      }\n      return mdb.slice(0,k).toString('ucs2');\n    };\n    magic_encode[65001] = function utf8_e(data, ofmt) {\n      if(has_buf && Buffer.isBuffer(data)) {\n        if(!ofmt || ofmt === 'buf') return data;\n        if(ofmt !== 'arr') return data.toString('binary');\n        return [].slice.call(data);\n      }\n      var len = data.length, w = 0, ww = 0, j = 0;\n      var direct = typeof data === \"string\";\n      if(4 * len > mdl) { mdl = 4 * len; mdb = Buffer.allocUnsafe(mdl); }\n      for(var i = 0; i < len; ++i) {\n        w = direct ? data.charCodeAt(i) : data[i].charCodeAt(0);\n        if(w <= 0x007F) mdb[j++] = w;\n        else if(w <= 0x07FF) {\n          mdb[j++] = 192 + (w >> 6);\n          mdb[j++] = 128 + (w&63);\n        } else if(w >= 0xD800 && w <= 0xDFFF) {\n          w -= 0xD800; ++i;\n          ww = (direct ? data.charCodeAt(i) : data[i].charCodeAt(0)) - 0xDC00 + (w << 10);\n          mdb[j++] = 240 + ((ww>>>18) & 0x07);\n          mdb[j++] = 144 + ((ww>>>12) & 0x3F);\n          mdb[j++] = 128 + ((ww>>>6) & 0x3F);\n          mdb[j++] = 128 + (ww & 0x3F);\n        } else {\n          mdb[j++] = 224 + (w >> 12);\n          mdb[j++] = 128 + ((w >> 6)&63);\n          mdb[j++] = 128 + (w&63);\n        }\n      }\n      if(!ofmt || ofmt === 'buf') return mdb.slice(0,j);\n      if(ofmt !== 'arr') return mdb.slice(0,j).toString('binary');\n      return [].slice.call(mdb, 0, j);\n    };\n  }\n\n  var encache = function encache() {\n    if(has_buf) {\n      if(cpdcache[sbcs_cache[0]]) return;\n      var i=0, s=0;\n      for(i = 0; i < sbcs_cache.length; ++i) {\n        s = sbcs_cache[i];\n        if(cpt[s]) {\n          cpdcache[s] = sbcs_decode(s);\n          cpecache[s] = sbcs_encode(s);\n        }\n      }\n      for(i = 0; i < dbcs_cache.length; ++i) {\n        s = dbcs_cache[i];\n        if(cpt[s]) {\n          cpdcache[s] = dbcs_decode(s);\n          cpecache[s] = dbcs_encode(s);\n        }\n      }\n      for(i = 0; i < magic_cache.length; ++i) {\n        s = magic_cache[i];\n        if(magic_decode[s]) cpdcache[s] = magic_decode[s];\n        if(magic_encode[s]) cpecache[s] = magic_encode[s];\n      }\n    }\n  };\n  var null_enc = function(data, ofmt) { void ofmt; return \"\"; };\n  var cp_decache = function cp_decache(cp) { delete cpdcache[cp]; delete cpecache[cp]; };\n  var decache = function decache() {\n    if(has_buf) {\n      if(!cpdcache[sbcs_cache[0]]) return;\n      sbcs_cache.forEach(cp_decache);\n      dbcs_cache.forEach(cp_decache);\n      magic_cache.forEach(cp_decache);\n    }\n    last_enc = null_enc; last_cp = 0;\n  };\n  var cache = {\n    encache: encache,\n    decache: decache,\n    sbcs: sbcs_cache,\n    dbcs: dbcs_cache\n  };\n\n  encache();\n\n  var BM = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  var SetD = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'(),-./:?\";\n  var last_enc = null_enc, last_cp = 0;\n  var encode = function encode(cp, data, ofmt) {\n    if(cp === last_cp && last_enc) { return last_enc(data, ofmt); }\n    if(cpecache[cp]) { last_enc = cpecache[last_cp=cp]; return last_enc(data, ofmt); }\n    if(has_buf && Buffer.isBuffer(data)) data = data.toString('utf8');\n    var len = data.length;\n    var out = has_buf ? Buffer.allocUnsafe(4*len) : [], w=0, i=0, j = 0, ww=0;\n    var C = cpt[cp], E, M = \"\";\n    var isstr = typeof data === 'string';\n    if(C && (E=C.enc)) for(i = 0; i < len; ++i, ++j) {\n      w = E[isstr? data.charAt(i) : data[i]];\n      if(w > 255) {\n        out[j] = w>>8;\n        out[++j] = w&255;\n      } else out[j] = w&255;\n    }\n    else if((M=magic[cp])) switch(M) {\n      case \"utf8\":\n        if(has_buf && isstr) { out = Buffer_from(data, M); j = out.length; break; }\n        for(i = 0; i < len; ++i, ++j) {\n          w = isstr ? data.charCodeAt(i) : data[i].charCodeAt(0);\n          if(w <= 0x007F) out[j] = w;\n          else if(w <= 0x07FF) {\n            out[j]   = 192 + (w >> 6);\n            out[++j] = 128 + (w&63);\n          } else if(w >= 0xD800 && w <= 0xDFFF) {\n            w -= 0xD800;\n            ww = (isstr ? data.charCodeAt(++i) : data[++i].charCodeAt(0)) - 0xDC00 + (w << 10);\n            out[j]   = 240 + ((ww>>>18) & 0x07);\n            out[++j] = 144 + ((ww>>>12) & 0x3F);\n            out[++j] = 128 + ((ww>>>6) & 0x3F);\n            out[++j] = 128 + (ww & 0x3F);\n          } else {\n            out[j]   = 224 + (w >> 12);\n            out[++j] = 128 + ((w >> 6)&63);\n            out[++j] = 128 + (w&63);\n          }\n        }\n        break;\n      case \"ascii\":\n        if(has_buf && typeof data === \"string\") { out = Buffer_from(data, M); j = out.length; break; }\n        for(i = 0; i < len; ++i, ++j) {\n          w = isstr ? data.charCodeAt(i) : data[i].charCodeAt(0);\n          if(w <= 0x007F) out[j] = w;\n          else throw new Error(\"bad ascii \" + w);\n        }\n        break;\n      case \"utf16le\":\n        if(has_buf && typeof data === \"string\") { out = Buffer_from(data, M); j = out.length; break; }\n        for(i = 0; i < len; ++i) {\n          w = isstr ? data.charCodeAt(i) : data[i].charCodeAt(0);\n          out[j++] = w&255;\n          out[j++] = w>>8;\n        }\n        break;\n      case \"utf16be\":\n        for(i = 0; i < len; ++i) {\n          w = isstr ? data.charCodeAt(i) : data[i].charCodeAt(0);\n          out[j++] = w>>8;\n          out[j++] = w&255;\n        }\n        break;\n      case \"utf32le\":\n        for(i = 0; i < len; ++i) {\n          w = isstr ? data.charCodeAt(i) : data[i].charCodeAt(0);\n          if(w >= 0xD800 && w <= 0xDFFF) w = 0x10000 + ((w - 0xD800) << 10) + (data[++i].charCodeAt(0) - 0xDC00);\n          out[j++] = w&255; w >>= 8;\n          out[j++] = w&255; w >>= 8;\n          out[j++] = w&255; w >>= 8;\n          out[j++] = w&255;\n        }\n        break;\n      case \"utf32be\":\n        for(i = 0; i < len; ++i) {\n          w = isstr ? data.charCodeAt(i) : data[i].charCodeAt(0);\n          if(w >= 0xD800 && w <= 0xDFFF) w = 0x10000 + ((w - 0xD800) << 10) + (data[++i].charCodeAt(0) - 0xDC00);\n          out[j+3] = w&255; w >>= 8;\n          out[j+2] = w&255; w >>= 8;\n          out[j+1] = w&255; w >>= 8;\n          out[j] = w&255;\n          j+=4;\n        }\n        break;\n      case \"utf7\":\n        for(i = 0; i < len; i++) {\n          var c = isstr ? data.charAt(i) : data[i].charAt(0);\n          if(c === \"+\") { out[j++] = 0x2b; out[j++] = 0x2d; continue; }\n          if(SetD.indexOf(c) > -1) { out[j++] = c.charCodeAt(0); continue; }\n          var tt = encode(1201, c);\n          out[j++] = 0x2b;\n          out[j++] = BM.charCodeAt(tt[0]>>2);\n          out[j++] = BM.charCodeAt(((tt[0]&0x03)<<4) + ((tt[1]||0)>>4));\n          out[j++] = BM.charCodeAt(((tt[1]&0x0F)<<2) + ((tt[2]||0)>>6));\n          out[j++] = 0x2d;\n        }\n        break;\n      default: throw new Error(\"Unsupported magic: \" + cp + \" \" + magic[cp]);\n    }\n    else throw new Error(\"Unrecognized CP: \" + cp);\n    out = out.slice(0,j);\n    if(!has_buf) return (ofmt == 'str') ? (out).map(sfcc).join(\"\") : out;\n    if(!ofmt || ofmt === 'buf') return out;\n    if(ofmt !== 'arr') return out.toString('binary');\n    return [].slice.call(out);\n  };\n  var decode = function decode(cp, data) {\n    var F; if((F=cpdcache[cp])) return F(data);\n    if(typeof data === \"string\") return decode(cp, data.split(\"\").map(cca));\n    var len = data.length, out = new Array(len), s=\"\", w=0, i=0, j=1, k=0, ww=0;\n    var C = cpt[cp], D, M=\"\";\n    if(C && (D=C.dec)) {\n      for(i = 0; i < len; i+=j) {\n        j = 2;\n        s = D[(data[i]<<8)+ data[i+1]];\n        if(!s) {\n          j = 1;\n          s = D[data[i]];\n        }\n        if(!s) throw new Error('Unrecognized code: ' + data[i] + ' ' + data[i+j-1] + ' ' + i + ' ' + j + ' ' + D[data[i]]);\n        out[k++] = s;\n      }\n    }\n    else if((M=magic[cp])) switch(M) {\n      case \"utf8\":\n        if(len >= 3 && data[0] == 0xEF) if(data[1] == 0xBB && data[2] == 0xBF) i = 3;\n        for(; i < len; i+=j) {\n          j = 1;\n          if(data[i] < 128) w = data[i];\n          else if(data[i] < 224) { w=(data[i]&31)*64+(data[i+1]&63); j=2; }\n          else if(data[i] < 240) { w=((data[i]&15)<<12)+(data[i+1]&63)*64+(data[i+2]&63); j=3; }\n          else { w=(data[i]&7)*262144+((data[i+1]&63)<<12)+(data[i+2]&63)*64+(data[i+3]&63); j=4; }\n          if(w < 65536) { out[k++] = String.fromCharCode(w); }\n          else {\n            w -= 65536; ww = 0xD800 + ((w>>10)&1023); w = 0xDC00 + (w&1023);\n            out[k++] = String.fromCharCode(ww); out[k++] = String.fromCharCode(w);\n          }\n        }\n        break;\n      case \"ascii\":\n        if(has_buf && Buffer.isBuffer(data)) return data.toString(M);\n        for(i = 0; i < len; i++) out[i] = String.fromCharCode(data[i]);\n        k = len; break;\n      case \"utf16le\":\n        if(len >= 2 && data[0] == 0xFF) if(data[1] == 0xFE) i = 2;\n        if(has_buf && Buffer.isBuffer(data)) return data.toString(M);\n        j = 2;\n        for(; i+1 < len; i+=j) {\n          out[k++] = String.fromCharCode((data[i+1]<<8) + data[i]);\n        }\n        break;\n      case \"utf16be\":\n        if(len >= 2 && data[0] == 0xFE) if(data[1] == 0xFF) i = 2;\n        j = 2;\n        for(; i+1 < len; i+=j) {\n          out[k++] = String.fromCharCode((data[i]<<8) + data[i+1]);\n        }\n        break;\n      case \"utf32le\":\n        if(len >= 4 && data[0] == 0xFF) if(data[1] == 0xFE && data[2] === 0 && data[3] === 0) i = 4;\n        j = 4;\n        for(; i < len; i+=j) {\n          w = (data[i+3]<<24) + (data[i+2]<<16) + (data[i+1]<<8) + (data[i]);\n          if(w > 0xFFFF) {\n            w -= 0x10000;\n            out[k++] = String.fromCharCode(0xD800 + ((w >> 10) & 0x3FF));\n            out[k++] = String.fromCharCode(0xDC00 + (w & 0x3FF));\n          }\n          else out[k++] = String.fromCharCode(w);\n        }\n        break;\n      case \"utf32be\":\n        if(len >= 4 && data[3] == 0xFF) if(data[2] == 0xFE && data[1] === 0 && data[0] === 0) i = 4;\n        j = 4;\n        for(; i < len; i+=j) {\n          w = (data[i]<<24) + (data[i+1]<<16) + (data[i+2]<<8) + (data[i+3]);\n          if(w > 0xFFFF) {\n            w -= 0x10000;\n            out[k++] = String.fromCharCode(0xD800 + ((w >> 10) & 0x3FF));\n            out[k++] = String.fromCharCode(0xDC00 + (w & 0x3FF));\n          }\n          else out[k++] = String.fromCharCode(w);\n        }\n        break;\n      case \"utf7\":\n        if(len >= 4 && data[0] == 0x2B && data[1] == 0x2F && data[2] == 0x76) {\n          if(len >= 5 && data[3] == 0x38 && data[4] == 0x2D) i = 5;\n          else if(data[3] == 0x38 || data[3] == 0x39 || data[3] == 0x2B || data[3] == 0x2F) i = 4;\n        }\n        for(; i < len; i+=j) {\n          if(data[i] !== 0x2b) { j=1; out[k++] = String.fromCharCode(data[i]); continue; }\n          j=1;\n          if(data[i+1] === 0x2d) { j = 2; out[k++] = \"+\"; continue; }\n          // eslint-disable-next-line no-useless-escape\n          while(String.fromCharCode(data[i+j]).match(/[A-Za-z0-9+\\/]/)) j++;\n          var dash = 0;\n          if(data[i+j] === 0x2d) { ++j; dash=1; }\n          var tt = [];\n          var o64 = \"\";\n          var c1=0, c2=0, c3=0;\n          var e1=0, e2=0, e3=0, e4=0;\n          for(var l = 1; l < j - dash;) {\n            e1 = BM.indexOf(String.fromCharCode(data[i+l++]));\n            e2 = BM.indexOf(String.fromCharCode(data[i+l++]));\n            c1 = e1 << 2 | e2 >> 4;\n            tt.push(c1);\n            e3 = BM.indexOf(String.fromCharCode(data[i+l++]));\n            if(e3 === -1) break;\n            c2 = (e2 & 15) << 4 | e3 >> 2;\n            tt.push(c2);\n            e4 = BM.indexOf(String.fromCharCode(data[i+l++]));\n            if(e4 === -1) break;\n            c3 = (e3 & 3) << 6 | e4;\n            if(e4 < 64) tt.push(c3);\n          }\n          o64 = decode(1201, tt);\n          for(l = 0; l < o64.length; ++l) out[k++] = o64.charAt(l);\n        }\n        break;\n      default: throw new Error(\"Unsupported magic: \" + cp + \" \" + magic[cp]);\n    }\n    else throw new Error(\"Unrecognized CP: \" + cp);\n    return out.slice(0,k).join(\"\");\n  };\n  var hascp = function hascp(cp) { return !!(cpt[cp] || magic[cp]); };\n  cpt.utils = { decode: decode, encode: encode, hascp: hascp, magic: magic, cache:cache };\n  return cpt;\n}));\n","/**\n * LokiJS\n * @author Joe Minichino <joe.minichino@gmail.com>\n *\n * A lightweight document oriented javascript database\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // Browser globals\n    root.loki = factory();\n  }\n}(this, function () {\n\n  return (function () {\n    'use strict';\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    var Utils = {\n      copyProperties: function (src, dest) {\n        var prop;\n        for (prop in src) {\n          dest[prop] = src[prop];\n        }\n      },\n      // used to recursively scan hierarchical transform step object for param substitution\n      resolveTransformObject: function (subObj, params, depth) {\n        var prop,\n          pname;\n\n        if (typeof depth !== 'number') {\n          depth = 0;\n        }\n\n        if (++depth >= 10) return subObj;\n\n        for (prop in subObj) {\n          if (typeof subObj[prop] === 'string' && subObj[prop].indexOf(\"[%lktxp]\") === 0) {\n            pname = subObj[prop].substring(8);\n            if (params.hasOwnProperty(pname)) {\n              subObj[prop] = params[pname];\n            }\n          } else if (typeof subObj[prop] === \"object\") {\n            subObj[prop] = Utils.resolveTransformObject(subObj[prop], params, depth);\n          }\n        }\n\n        return subObj;\n      },\n      // top level utility to resolve an entire (single) transform (array of steps) for parameter substitution\n      resolveTransformParams: function (transform, params) {\n        var idx,\n          clonedStep,\n          resolvedTransform = [];\n\n        if (typeof params === 'undefined') return transform;\n\n        // iterate all steps in the transform array\n        for (idx = 0; idx < transform.length; idx++) {\n          // clone transform so our scan/replace can operate directly on cloned transform\n          clonedStep = clone(transform[idx], \"shallow-recurse-objects\");\n          resolvedTransform.push(Utils.resolveTransformObject(clonedStep, params));\n        }\n\n        return resolvedTransform;\n      },\n\n      // By default (if usingDotNotation is false), looks up path in\n      // object via `object[path]`\n      //\n      // If `usingDotNotation` is true, then the path is assumed to\n      // represent a nested path. It can be in the form of an array of\n      // field names, or a period delimited string. The function will\n      // look up the value of object[path[0]], and then call\n      // result[path[1]] on the result, etc etc.\n      //\n      // If `usingDotNotation` is true, this function still supports\n      // non nested fields.\n      //\n      // `usingDotNotation` is a performance optimization. The caller\n      // may know that a path is *not* nested. In which case, this\n      // function avoids a costly string.split('.')\n      //\n      // examples:\n      // getIn({a: 1}, \"a\") => 1\n      // getIn({a: 1}, \"a\", true) => 1\n      // getIn({a: {b: 1}}, [\"a\", \"b\"], true) => 1\n      // getIn({a: {b: 1}}, \"a.b\", true) => 1\n      getIn: function (object, path, usingDotNotation) {\n        if (object == null) {\n          return undefined;\n        }\n        if (!usingDotNotation) {\n          return object[path];\n        }\n\n        if (typeof(path) === \"string\") {\n          path = path.split(\".\");\n        }\n\n        if (!Array.isArray(path)) {\n          throw new Error(\"path must be a string or array. Found \" + typeof(path));\n        }\n\n        var index = 0,\n          length = path.length;\n\n        while (object != null && index < length) {\n          object = object[path[index++]];\n        }\n        return (index && index == length) ? object : undefined;\n      }\n    };\n\n    // wrapping in object to expose to default export for potential user override.\n    // warning: overriding these methods will override behavior for all loki db instances in memory.\n    // warning: if you use binary indices these comparators should be the same for all inserts/updates/removes.\n    var Comparators = {\n      aeq: aeqHelper,\n      lt: ltHelper,\n      gt: gtHelper\n    };\n\n    /** Helper function for determining 'loki' abstract equality which is a little more abstract than ==\n     *     aeqHelper(5, '5') === true\n     *     aeqHelper(5.0, '5') === true\n     *     aeqHelper(new Date(\"1/1/2011\"), new Date(\"1/1/2011\")) === true\n     *     aeqHelper({a:1}, {z:4}) === true (all objects sorted equally)\n     *     aeqHelper([1, 2, 3], [1, 3]) === false\n     *     aeqHelper([1, 2, 3], [1, 2, 3]) === true\n     *     aeqHelper(undefined, null) === true\n     */\n    function aeqHelper(prop1, prop2) {\n      var cv1, cv2, t1, t2;\n\n      if (prop1 === prop2) return true;\n\n      // 'falsy' and Boolean handling\n      if (!prop1 || !prop2 || prop1 === true || prop2 === true || prop1 !== prop1 || prop2 !== prop2) {\n        // dates and NaN conditions (typed dates before serialization)\n        switch (prop1) {\n          case undefined: t1 = 1; break;\n          case null: t1 = 1; break;\n          case false: t1 = 3; break;\n          case true: t1 = 4; break;\n          case \"\": t1 = 5; break;\n          default: t1 = (prop1 === prop1)?9:0; break;\n        }\n\n        switch (prop2) {\n          case undefined: t2 = 1; break;\n          case null: t2 = 1; break;\n          case false: t2 = 3; break;\n          case true: t2 = 4; break;\n          case \"\": t2 = 5; break;\n          default: t2 = (prop2 === prop2)?9:0; break;\n        }\n\n        // one or both is edge case\n        if (t1 !== 9 || t2 !== 9) {\n          return (t1===t2);\n        }\n      }\n\n      // Handle 'Number-like' comparisons\n      cv1 = Number(prop1);\n      cv2 = Number(prop2);\n\n      // if one or both are 'number-like'...\n      if (cv1 === cv1 || cv2 === cv2) {\n        return (cv1 === cv2);\n      }\n\n      // not strict equal nor less than nor gt so must be mixed types, convert to string and use that to compare\n      cv1 = prop1.toString();\n      cv2 = prop2.toString();\n\n      return (cv1 == cv2);\n    }\n\n    /** Helper function for determining 'less-than' conditions for ops, sorting, and binary indices.\n     *     In the future we might want $lt and $gt ops to use their own functionality/helper.\n     *     Since binary indices on a property might need to index [12, NaN, new Date(), Infinity], we\n     *     need this function (as well as gtHelper) to always ensure one value is LT, GT, or EQ to another.\n     */\n    function ltHelper(prop1, prop2, equal) {\n      var cv1, cv2, t1, t2;\n\n      // if one of the params is falsy or strictly true or not equal to itself\n      // 0, 0.0, \"\", NaN, null, undefined, not defined, false, true\n      if (!prop1 || !prop2 || prop1 === true || prop2 === true || prop1 !== prop1 || prop2 !== prop2) {\n        switch (prop1) {\n          case undefined: t1 = 1; break;\n          case null: t1 = 1; break;\n          case false: t1 = 3; break;\n          case true: t1 = 4; break;\n          case \"\": t1 = 5; break;\n          // if strict equal probably 0 so sort higher, otherwise probably NaN so sort lower than even null\n          default: t1 = (prop1 === prop1)?9:0; break;\n        }\n\n        switch (prop2) {\n          case undefined: t2 = 1; break;\n          case null: t2 = 1; break;\n          case false: t2 = 3; break;\n          case true: t2 = 4; break;\n          case \"\": t2 = 5; break;\n          default: t2 = (prop2 === prop2)?9:0; break;\n        }\n\n        // one or both is edge case\n        if (t1 !== 9 || t2 !== 9) {\n          return (t1===t2)?equal:(t1<t2);\n        }\n      }\n\n      // if both are numbers (string encoded or not), compare as numbers\n      cv1 = Number(prop1);\n      cv2 = Number(prop2);\n\n      if (cv1 === cv1 && cv2 === cv2) {\n        if (cv1 < cv2) return true;\n        if (cv1 > cv2) return false;\n        return equal;\n      }\n\n      if (cv1 === cv1 && cv2 !== cv2) {\n        return true;\n      }\n\n      if (cv2 === cv2 && cv1 !== cv1) {\n        return false;\n      }\n\n      if (prop1 < prop2) return true;\n      if (prop1 > prop2) return false;\n      if (prop1 == prop2) return equal;\n\n      // not strict equal nor less than nor gt so must be mixed types, convert to string and use that to compare\n      cv1 = prop1.toString();\n      cv2 = prop2.toString();\n\n      if (cv1 < cv2) {\n        return true;\n      }\n\n      if (cv1 == cv2) {\n        return equal;\n      }\n\n      return false;\n    }\n\n    function gtHelper(prop1, prop2, equal) {\n      var cv1, cv2, t1, t2;\n\n      // 'falsy' and Boolean handling\n      if (!prop1 || !prop2 || prop1 === true || prop2 === true || prop1 !== prop1 || prop2 !== prop2) {\n        switch (prop1) {\n          case undefined: t1 = 1; break;\n          case null: t1 = 1; break;\n          case false: t1 = 3; break;\n          case true: t1 = 4; break;\n          case \"\": t1 = 5; break;\n          // NaN 0\n          default: t1 = (prop1 === prop1)?9:0; break;\n        }\n\n        switch (prop2) {\n          case undefined: t2 = 1; break;\n          case null: t2 = 1; break;\n          case false: t2 = 3; break;\n          case true: t2 = 4; break;\n          case \"\": t2 = 5; break;\n          default: t2 = (prop2 === prop2)?9:0; break;\n        }\n\n        // one or both is edge case\n        if (t1 !== 9 || t2 !== 9) {\n          return (t1===t2)?equal:(t1>t2);\n        }\n      }\n\n      // if both are numbers (string encoded or not), compare as numbers\n      cv1 = Number(prop1);\n      cv2 = Number(prop2);\n      if (cv1 === cv1 && cv2 === cv2) {\n        if (cv1 > cv2) return true;\n        if (cv1 < cv2) return false;\n        return equal;\n      }\n\n      if (cv1 === cv1 && cv2 !== cv2) {\n        return false;\n      }\n\n      if (cv2 === cv2 && cv1 !== cv1) {\n        return true;\n      }\n\n      if (prop1 > prop2) return true;\n      if (prop1 < prop2) return false;\n      if (prop1 == prop2) return equal;\n\n      // not strict equal nor less than nor gt so must be dates or mixed types\n      // convert to string and use that to compare\n      cv1 = prop1.toString();\n      cv2 = prop2.toString();\n\n      if (cv1 > cv2) {\n        return true;\n      }\n\n      if (cv1 == cv2) {\n        return equal;\n      }\n\n      return false;\n    }\n\n    function sortHelper(prop1, prop2, desc) {\n      if (Comparators.aeq(prop1, prop2)) return 0;\n\n      if (Comparators.lt(prop1, prop2, false)) {\n        return (desc) ? (1) : (-1);\n      }\n\n      if (Comparators.gt(prop1, prop2, false)) {\n        return (desc) ? (-1) : (1);\n      }\n\n      // not lt, not gt so implied equality-- date compatible\n      return 0;\n    }\n\n    /**\n     * compoundeval() - helper function for compoundsort(), performing individual object comparisons\n     *\n     * @param {array} properties - array of property names, in order, by which to evaluate sort order\n     * @param {object} obj1 - first object to compare\n     * @param {object} obj2 - second object to compare\n     * @returns {integer} 0, -1, or 1 to designate if identical (sortwise) or which should be first\n     */\n    function compoundeval(properties, obj1, obj2) {\n      var res = 0;\n      var prop, field, val1, val2, arr, path;\n      for (var i = 0, len = properties.length; i < len; i++) {\n        prop = properties[i];\n        field = prop[0];\n        if (~field.indexOf('.')) {\n          arr = field.split('.');\n          val1 = Utils.getIn(obj1, arr, true);\n          val2 = Utils.getIn(obj2, arr, true);\n        } else {\n          val1 = obj1[field];\n          val2 = obj2[field];\n        }\n        res = sortHelper(val1, val2, prop[1]);\n        if (res !== 0) {\n          return res;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * dotSubScan - helper function used for dot notation queries.\n     *\n     * @param {object} root - object to traverse\n     * @param {array} paths - array of properties to drill into\n     * @param {function} fun - evaluation function to test with\n     * @param {any} value - comparative value to also pass to (compare) fun\n     * @param {number} poffset - index of the item in 'paths' to start the sub-scan from\n     */\n    function dotSubScan(root, paths, fun, value, poffset) {\n      var pathOffset = poffset || 0;\n      var path = paths[pathOffset];\n\n      var valueFound = false;\n      var element;\n      if (typeof root === 'object' && path in root) {\n        element = root[path];\n      }\n      if (pathOffset + 1 >= paths.length) {\n        // if we have already expanded out the dot notation,\n        // then just evaluate the test function and value on the element\n        valueFound = fun(element, value);\n      } else if (Array.isArray(element)) {\n        for (var index = 0, len = element.length; index < len; index += 1) {\n          valueFound = dotSubScan(element[index], paths, fun, value, pathOffset + 1);\n          if (valueFound === true) {\n            break;\n          }\n        }\n      } else {\n        valueFound = dotSubScan(element, paths, fun, value, pathOffset + 1);\n      }\n\n      return valueFound;\n    }\n\n    function containsCheckFn(a) {\n      if (typeof a === 'string' || Array.isArray(a)) {\n        return function (b) {\n          return a.indexOf(b) !== -1;\n        };\n      } else if (typeof a === 'object' && a !== null) {\n        return function (b) {\n          return hasOwnProperty.call(a, b);\n        };\n      }\n      return null;\n    }\n\n    function doQueryOp(val, op) {\n      for (var p in op) {\n        if (hasOwnProperty.call(op, p)) {\n          return LokiOps[p](val, op[p]);\n        }\n      }\n      return false;\n    }\n\n    var LokiOps = {\n      // comparison operators\n      // a is the value in the collection\n      // b is the query value\n      $eq: function (a, b) {\n        return a === b;\n      },\n\n      // abstract/loose equality\n      $aeq: function (a, b) {\n        return a == b;\n      },\n\n      $ne: function (a, b) {\n        // ecma 5 safe test for NaN\n        if (b !== b) {\n          // ecma 5 test value is not NaN\n          return (a === a);\n        }\n\n        return a !== b;\n      },\n      // date equality / loki abstract equality test\n      $dteq: function (a, b) {\n        return Comparators.aeq(a, b);\n      },\n\n      // loki comparisons: return identical unindexed results as indexed comparisons\n      $gt: function (a, b) {\n        return Comparators.gt(a, b, false);\n      },\n\n      $gte: function (a, b) {\n        return Comparators.gt(a, b, true);\n      },\n\n      $lt: function (a, b) {\n        return Comparators.lt(a, b, false);\n      },\n\n      $lte: function (a, b) {\n        return Comparators.lt(a, b, true);\n      },\n\n      // lightweight javascript comparisons\n      $jgt: function (a, b) {\n        return a > b;\n      },\n\n      $jgte: function (a, b) {\n        return a >= b;\n      },\n\n      $jlt: function (a, b) {\n        return a < b;\n      },\n\n      $jlte: function (a, b) {\n        return a <= b;\n      },\n\n      // ex : coll.find({'orderCount': {$between: [10, 50]}});\n      $between: function (a, vals) {\n        if (a === undefined || a === null) return false;\n        return (Comparators.gt(a, vals[0], true) && Comparators.lt(a, vals[1], true));\n      },\n\n      $jbetween: function (a, vals) {\n        if (a === undefined || a === null) return false;\n        return (a >= vals[0] && a <= vals[1]);\n      },\n\n      $in: function (a, b) {\n        return b.indexOf(a) !== -1;\n      },\n\n      $nin: function (a, b) {\n        return b.indexOf(a) === -1;\n      },\n\n      $keyin: function (a, b) {\n        return a in b;\n      },\n\n      $nkeyin: function (a, b) {\n        return !(a in b);\n      },\n\n      $definedin: function (a, b) {\n        return b[a] !== undefined;\n      },\n\n      $undefinedin: function (a, b) {\n        return b[a] === undefined;\n      },\n\n      $regex: function (a, b) {\n        return b.test(a);\n      },\n\n      $containsString: function (a, b) {\n        return (typeof a === 'string') && (a.indexOf(b) !== -1);\n      },\n\n      $containsNone: function (a, b) {\n        return !LokiOps.$containsAny(a, b);\n      },\n\n      $containsAny: function (a, b) {\n        var checkFn = containsCheckFn(a);\n        if (checkFn !== null) {\n          return (Array.isArray(b)) ? (b.some(checkFn)) : (checkFn(b));\n        }\n        return false;\n      },\n\n      $contains: function (a, b) {\n        var checkFn = containsCheckFn(a);\n        if (checkFn !== null) {\n          return (Array.isArray(b)) ? (b.every(checkFn)) : (checkFn(b));\n        }\n        return false;\n      },\n\n      $type: function (a, b) {\n        var type = typeof a;\n        if (type === 'object') {\n          if (Array.isArray(a)) {\n            type = 'array';\n          } else if (a instanceof Date) {\n            type = 'date';\n          }\n        }\n        return (typeof b !== 'object') ? (type === b) : doQueryOp(type, b);\n      },\n\n      $finite: function(a, b) {\n        return (b === isFinite(a));\n      },\n\n      $size: function (a, b) {\n        if (Array.isArray(a)) {\n          return (typeof b !== 'object') ? (a.length === b) : doQueryOp(a.length, b);\n        }\n        return false;\n      },\n\n      $len: function (a, b) {\n        if (typeof a === 'string') {\n          return (typeof b !== 'object') ? (a.length === b) : doQueryOp(a.length, b);\n        }\n        return false;\n      },\n\n      $where: function (a, b) {\n        return b(a) === true;\n      },\n\n      // field-level logical operators\n      // a is the value in the collection\n      // b is the nested query operation (for '$not')\n      //   or an array of nested query operations (for '$and' and '$or')\n      $not: function (a, b) {\n        return !doQueryOp(a, b);\n      },\n\n      $and: function (a, b) {\n        for (var idx = 0, len = b.length; idx < len; idx += 1) {\n          if (!doQueryOp(a, b[idx])) {\n            return false;\n          }\n        }\n        return true;\n      },\n\n      $or: function (a, b) {\n        for (var idx = 0, len = b.length; idx < len; idx += 1) {\n          if (doQueryOp(a, b[idx])) {\n            return true;\n          }\n        }\n        return false;\n      },\n\n      $exists: function (a, b) {\n        if (b) {\n          return a !== undefined;\n        } else {\n          return a === undefined;\n        }\n      }\n    };\n\n    // if an op is registered in this object, our 'calculateRange' can use it with our binary indices.\n    // if the op is registered to a function, we will run that function/op as a 2nd pass filter on results.\n    // those 2nd pass filter functions should be similar to LokiOps functions, accepting 2 vals to compare.\n    var indexedOps = {\n      $eq: LokiOps.$eq,\n      $aeq: true,\n      $dteq: true,\n      $gt: true,\n      $gte: true,\n      $lt: true,\n      $lte: true,\n      $in: true,\n      $between: true\n    };\n\n    function clone(data, method) {\n      if (data === null || data === undefined) {\n        return null;\n      }\n\n      var cloneMethod = method || 'parse-stringify',\n        cloned;\n\n      switch (cloneMethod) {\n      case \"parse-stringify\":\n        cloned = JSON.parse(JSON.stringify(data));\n        break;\n      case \"jquery-extend-deep\":\n        cloned = jQuery.extend(true, {}, data);\n        break;\n      case \"shallow\":\n        // more compatible method for older browsers\n        cloned = Object.create(data.constructor.prototype);\n        Object.keys(data).map(function (i) {\n          cloned[i] = data[i];\n        });\n        break;\n      case \"shallow-assign\":\n        // should be supported by newer environments/browsers\n        cloned = Object.create(data.constructor.prototype);\n        Object.assign(cloned, data);\n        break;\n      case \"shallow-recurse-objects\":\n        // shallow clone top level properties\n        cloned = clone(data, \"shallow\");\n        var keys = Object.keys(data);\n        // for each of the top level properties which are object literals, recursively shallow copy\n        keys.forEach(function(key) {\n          if (typeof data[key] === \"object\" && data[key].constructor.name === \"Object\")  {\n            cloned[key] = clone(data[key], \"shallow-recurse-objects\");\n          }else if(Array.isArray(data[key])){\n            cloned[key] = cloneObjectArray(data[key], \"shallow-recurse-objects\");\n          }\n        });\n        break;\n      default:\n        break;\n      }\n\n      return cloned;\n    }\n\n    function cloneObjectArray(objarray, method) {\n      if (method == \"parse-stringify\") {\n        return clone(objarray, method);\n      }\n      var result = [];\n      for (var i = 0, len = objarray.length; i < len; i++) {\n        result[i] = clone(objarray[i], method);\n      }\n      return result;\n    }\n\n    function localStorageAvailable() {\n      try {\n        return (window && window.localStorage !== undefined && window.localStorage !== null);\n      } catch (e) {\n        return false;\n      }\n    }\n\n\n    /**\n     * LokiEventEmitter is a minimalist version of EventEmitter. It enables any\n     * constructor that inherits EventEmitter to emit events and trigger\n     * listeners that have been added to the event through the on(event, callback) method\n     *\n     * @constructor LokiEventEmitter\n     */\n    function LokiEventEmitter() {}\n\n    /**\n     * @prop {hashmap} events - a hashmap, with each property being an array of callbacks\n     * @memberof LokiEventEmitter\n     */\n    LokiEventEmitter.prototype.events = {};\n\n    /**\n     * @prop {boolean} asyncListeners - boolean determines whether or not the callbacks associated with each event\n     * should happen in an async fashion or not\n     * Default is false, which means events are synchronous\n     * @memberof LokiEventEmitter\n     */\n    LokiEventEmitter.prototype.asyncListeners = false;\n\n    /**\n     * on(eventName, listener) - adds a listener to the queue of callbacks associated to an event\n     * @param {string|string[]} eventName - the name(s) of the event(s) to listen to\n     * @param {function} listener - callback function of listener to attach\n     * @returns {int} the index of the callback in the array of listeners for a particular event\n     * @memberof LokiEventEmitter\n     */\n    LokiEventEmitter.prototype.on = function (eventName, listener) {\n      var event;\n      var self = this;\n\n      if (Array.isArray(eventName)) {\n        eventName.forEach(function(currentEventName) {\n          self.on(currentEventName, listener);\n        });\n        return listener;\n      }\n\n      event = this.events[eventName];\n      if (!event) {\n        event = this.events[eventName] = [];\n      }\n      event.push(listener);\n      return listener;\n    };\n\n    /**\n     * emit(eventName, data) - emits a particular event\n     * with the option of passing optional parameters which are going to be processed by the callback\n     * provided signatures match (i.e. if passing emit(event, arg0, arg1) the listener should take two parameters)\n     * @param {string} eventName - the name of the event\n     * @param {object=} data - optional object passed with the event\n     * @memberof LokiEventEmitter\n     */\n    LokiEventEmitter.prototype.emit = function (eventName) {\n      var self = this;\n      var selfArgs = Array.prototype.slice.call(arguments, 1);\n      if (eventName && this.events[eventName]) {\n        this.events[eventName].forEach(function (listener) {\n          if (self.asyncListeners) {\n            setTimeout(function () {\n              listener.apply(self, selfArgs);\n            }, 1);\n          } else {\n            listener.apply(self, selfArgs);\n          }\n\n        });\n      } else {\n        throw new Error('No event ' + eventName + ' defined');\n      }\n    };\n\n    /**\n     * Alias of LokiEventEmitter.prototype.on\n     * addListener(eventName, listener) - adds a listener to the queue of callbacks associated to an event\n     * @param {string|string[]} eventName - the name(s) of the event(s) to listen to\n     * @param {function} listener - callback function of listener to attach\n     * @returns {int} the index of the callback in the array of listeners for a particular event\n     * @memberof LokiEventEmitter\n     */\n    LokiEventEmitter.prototype.addListener = LokiEventEmitter.prototype.on;\n\n    /**\n     * removeListener() - removes the listener at position 'index' from the event 'eventName'\n     * @param {string|string[]} eventName - the name(s) of the event(s) which the listener is attached to\n     * @param {function} listener - the listener callback function to remove from emitter\n     * @memberof LokiEventEmitter\n     */\n    LokiEventEmitter.prototype.removeListener = function (eventName, listener) {\n      var self = this;\n\n      if (Array.isArray(eventName)) {\n        eventName.forEach(function(currentEventName) {\n          self.removeListener(currentEventName, listener);\n        });\n\n        return;\n      }\n\n      if (this.events[eventName]) {\n        var listeners = this.events[eventName];\n        listeners.splice(listeners.indexOf(listener), 1);\n      }\n    };\n\n    /**\n     * Loki: The main database class\n     * @constructor Loki\n     * @implements LokiEventEmitter\n     * @param {string} filename - name of the file to be saved to\n     * @param {object=} options - (Optional) config options object\n     * @param {string} options.env - override environment detection as 'NODEJS', 'BROWSER', 'CORDOVA'\n     * @param {boolean} [options.verbose=false] - enable console output\n     * @param {boolean} [options.autosave=false] - enables autosave\n     * @param {int} [options.autosaveInterval=5000] - time interval (in milliseconds) between saves (if dirty)\n     * @param {boolean} [options.autoload=false] - enables autoload on loki instantiation\n     * @param {function} options.autoloadCallback - user callback called after database load\n     * @param {adapter} options.adapter - an instance of a loki persistence adapter\n     * @param {string} [options.serializationMethod='normal'] - ['normal', 'pretty', 'destructured']\n     * @param {string} options.destructureDelimiter - string delimiter used for destructured serialization\n     * @param {boolean} [options.throttledSaves=true] - debounces multiple calls to to saveDatabase reducing number of disk I/O operations\n                                                and guaranteeing proper serialization of the calls.\n     */\n    function Loki(filename, options) {\n      this.filename = filename || 'loki.db';\n      this.collections = [];\n\n      // persist version of code which created the database to the database.\n      // could use for upgrade scenarios\n      this.databaseVersion = 1.5;\n      this.engineVersion = 1.5;\n\n      // autosave support (disabled by default)\n      // pass autosave: true, autosaveInterval: 6000 in options to set 6 second autosave\n      this.autosave = false;\n      this.autosaveInterval = 5000;\n      this.autosaveHandle = null;\n      this.throttledSaves = true;\n\n      this.options = {};\n\n      // currently keeping persistenceMethod and persistenceAdapter as loki level properties that\n      // will not or cannot be deserialized.  You are required to configure persistence every time\n      // you instantiate a loki object (or use default environment detection) in order to load the database anyways.\n\n      // persistenceMethod could be 'fs', 'localStorage', or 'adapter'\n      // this is optional option param, otherwise environment detection will be used\n      // if user passes their own adapter we will force this method to 'adapter' later, so no need to pass method option.\n      this.persistenceMethod = null;\n\n      // retain reference to optional (non-serializable) persistenceAdapter 'instance'\n      this.persistenceAdapter = null;\n\n      // flags used to throttle saves\n      this.throttledSavePending = false;\n      this.throttledCallbacks = [];\n\n      // enable console output if verbose flag is set (disabled by default)\n      this.verbose = options && options.hasOwnProperty('verbose') ? options.verbose : false;\n\n      this.events = {\n        'init': [],\n        'loaded': [],\n        'flushChanges': [],\n        'close': [],\n        'changes': [],\n        'warning': []\n      };\n\n      var getENV = function () {\n        if (typeof global !== 'undefined' && (global.android || global.NSObject)) {\n           // If no adapter assume nativescript which needs adapter to be passed manually\n           return 'NATIVESCRIPT'; //nativescript\n        }\n\n        if (typeof window === 'undefined') {\n          return 'NODEJS';\n        }\n\n        if (typeof global !== 'undefined' && global.window && typeof process !== 'undefined') {\n          return 'NODEJS'; //node-webkit\n        }\n\n        if (typeof document !== 'undefined') {\n          if (document.URL.indexOf('http://') === -1 && document.URL.indexOf('https://') === -1) {\n            return 'CORDOVA';\n          }\n          return 'BROWSER';\n        }\n        return 'CORDOVA';\n      };\n\n      // refactored environment detection due to invalid detection for browser environments.\n      // if they do not specify an options.env we want to detect env rather than default to nodejs.\n      // currently keeping two properties for similar thing (options.env and options.persistenceMethod)\n      //   might want to review whether we can consolidate.\n      if (options && options.hasOwnProperty('env')) {\n        this.ENV = options.env;\n      } else {\n        this.ENV = getENV();\n      }\n\n      // not sure if this is necessary now that i have refactored the line above\n      if (this.ENV === 'undefined') {\n        this.ENV = 'NODEJS';\n      }\n\n      this.configureOptions(options, true);\n\n      this.on('init', this.clearChanges);\n\n    }\n\n    // db class is an EventEmitter\n    Loki.prototype = new LokiEventEmitter();\n    Loki.prototype.constructor = Loki;\n\n    // experimental support for browserify's abstract syntax scan to pick up dependency of indexed adapter.\n    // Hopefully, once this hits npm a browserify require of lokijs should scan the main file and detect this indexed adapter reference.\n    Loki.prototype.getIndexedAdapter = function () {\n      var adapter;\n\n      if (typeof require === 'function') {\n        adapter = require(\"./loki-indexed-adapter.js\");\n      }\n\n      return adapter;\n    };\n\n\n    /**\n     * Allows reconfiguring database options\n     *\n     * @param {object} options - configuration options to apply to loki db object\n     * @param {string} options.env - override environment detection as 'NODEJS', 'BROWSER', 'CORDOVA'\n     * @param {boolean} options.verbose - enable console output (default is 'false')\n     * @param {boolean} options.autosave - enables autosave\n     * @param {int} options.autosaveInterval - time interval (in milliseconds) between saves (if dirty)\n     * @param {boolean} options.autoload - enables autoload on loki instantiation\n     * @param {function} options.autoloadCallback - user callback called after database load\n     * @param {adapter} options.adapter - an instance of a loki persistence adapter\n     * @param {string} options.serializationMethod - ['normal', 'pretty', 'destructured']\n     * @param {string} options.destructureDelimiter - string delimiter used for destructured serialization\n     * @param {boolean} initialConfig - (internal) true is passed when loki ctor is invoking\n     * @memberof Loki\n     */\n    Loki.prototype.configureOptions = function (options, initialConfig) {\n      var defaultPersistence = {\n          'NODEJS': 'fs',\n          'BROWSER': 'localStorage',\n          'CORDOVA': 'localStorage',\n          'MEMORY': 'memory'\n        },\n        persistenceMethods = {\n          'fs': LokiFsAdapter,\n          'localStorage': LokiLocalStorageAdapter,\n          'memory': LokiMemoryAdapter\n        };\n\n      this.options = {};\n\n      this.persistenceMethod = null;\n      // retain reference to optional persistence adapter 'instance'\n      // currently keeping outside options because it can't be serialized\n      this.persistenceAdapter = null;\n\n      // process the options\n      if (typeof (options) !== 'undefined') {\n        this.options = options;\n\n        if (this.options.hasOwnProperty('persistenceMethod')) {\n          // check if the specified persistence method is known\n          if (typeof (persistenceMethods[options.persistenceMethod]) == 'function') {\n            this.persistenceMethod = options.persistenceMethod;\n            this.persistenceAdapter = new persistenceMethods[options.persistenceMethod]();\n          }\n          // should be throw an error here, or just fall back to defaults ??\n        }\n\n        // if user passes adapter, set persistence mode to adapter and retain persistence adapter instance\n        if (this.options.hasOwnProperty('adapter')) {\n          this.persistenceMethod = 'adapter';\n          this.persistenceAdapter = options.adapter;\n          this.options.adapter = null;\n        }\n\n\n        // if they want to load database on loki instantiation, now is a good time to load... after adapter set and before possible autosave initiation\n        if (options.autoload && initialConfig) {\n          // for autoload, let the constructor complete before firing callback\n          var self = this;\n          setTimeout(function () {\n            self.loadDatabase(options, options.autoloadCallback);\n          }, 1);\n        }\n\n        if (this.options.hasOwnProperty('autosaveInterval')) {\n          this.autosaveDisable();\n          this.autosaveInterval = parseInt(this.options.autosaveInterval, 10);\n        }\n\n        if (this.options.hasOwnProperty('autosave') && this.options.autosave) {\n          this.autosaveDisable();\n          this.autosave = true;\n\n          if (this.options.hasOwnProperty('autosaveCallback')) {\n            this.autosaveEnable(options, options.autosaveCallback);\n          } else {\n            this.autosaveEnable();\n          }\n        }\n\n        if (this.options.hasOwnProperty('throttledSaves')) {\n          this.throttledSaves = this.options.throttledSaves;\n        }\n      } // end of options processing\n\n      // ensure defaults exists for options which were not set\n      if (!this.options.hasOwnProperty('serializationMethod')) {\n        this.options.serializationMethod = 'normal';\n      }\n\n      // ensure passed or default option exists\n      if (!this.options.hasOwnProperty('destructureDelimiter')) {\n        this.options.destructureDelimiter = '$<\\n';\n      }\n\n      // if by now there is no adapter specified by user nor derived from persistenceMethod: use sensible defaults\n      if (this.persistenceAdapter === null) {\n        this.persistenceMethod = defaultPersistence[this.ENV];\n        if (this.persistenceMethod) {\n          this.persistenceAdapter = new persistenceMethods[this.persistenceMethod]();\n        }\n      }\n\n    };\n\n    /**\n     * Copies 'this' database into a new Loki instance. Object references are shared to make lightweight.\n     *\n     * @param {object} options - apply or override collection level settings\n     * @param {bool} options.removeNonSerializable - nulls properties not safe for serialization.\n     * @memberof Loki\n     */\n    Loki.prototype.copy = function(options) {\n      // in case running in an environment without accurate environment detection, pass 'NA'\n      var databaseCopy = new Loki(this.filename, { env: \"NA\" });\n      var clen, idx;\n\n      options = options || {};\n\n      // currently inverting and letting loadJSONObject do most of the work\n      databaseCopy.loadJSONObject(this, { retainDirtyFlags: true });\n\n      // since our JSON serializeReplacer is not invoked for reference database adapters, this will let us mimic\n      if(options.hasOwnProperty(\"removeNonSerializable\") && options.removeNonSerializable === true) {\n        databaseCopy.autosaveHandle = null;\n        databaseCopy.persistenceAdapter = null;\n\n        clen = databaseCopy.collections.length;\n        for (idx=0; idx<clen; idx++) {\n          databaseCopy.collections[idx].constraints = null;\n          databaseCopy.collections[idx].ttl = null;\n        }\n      }\n\n      return databaseCopy;\n    };\n\n    /**\n     * Adds a collection to the database.\n     * @param {string} name - name of collection to add\n     * @param {object=} options - (optional) options to configure collection with.\n     * @param {array=} [options.unique=[]] - array of property names to define unique constraints for\n     * @param {array=} [options.exact=[]] - array of property names to define exact constraints for\n     * @param {array=} [options.indices=[]] - array property names to define binary indexes for\n     * @param {boolean} [options.asyncListeners=false] - whether listeners are called asynchronously\n     * @param {boolean} [options.disableMeta=false] - set to true to disable meta property on documents\n     * @param {boolean} [options.disableChangesApi=true] - set to false to enable Changes Api\n     * @param {boolean} [options.disableDeltaChangesApi=true] - set to false to enable Delta Changes API (requires Changes API, forces cloning)\n     * @param {boolean} [options.autoupdate=false] - use Object.observe to update objects automatically\n     * @param {boolean} [options.clone=false] - specify whether inserts and queries clone to/from user\n     * @param {string} [options.cloneMethod='parse-stringify'] - 'parse-stringify', 'jquery-extend-deep', 'shallow, 'shallow-assign'\n     * @param {int=} options.ttl - age of document (in ms.) before document is considered aged/stale.\n     * @param {int=} options.ttlInterval - time interval for clearing out 'aged' documents; not set by default.\n     * @returns {Collection} a reference to the collection which was just added\n     * @memberof Loki\n     */\n    Loki.prototype.addCollection = function (name, options) {\n      var i,\n        len = this.collections.length;\n\n      if (options && options.disableMeta === true) {\n        if (options.disableChangesApi === false) {\n          throw new Error(\"disableMeta option cannot be passed as true when disableChangesApi is passed as false\");\n        }\n        if (options.disableDeltaChangesApi === false) {\n          throw new Error(\"disableMeta option cannot be passed as true when disableDeltaChangesApi is passed as false\");\n        }\n        if (typeof options.ttl === \"number\" && options.ttl > 0) {\n          throw new Error(\"disableMeta option cannot be passed as true when ttl is enabled\");\n        }\n      }\n\n      for (i = 0; i < len; i += 1) {\n        if (this.collections[i].name === name) {\n          return this.collections[i];\n        }\n      }\n\n      var collection = new Collection(name, options);\n      this.collections.push(collection);\n\n      if (this.verbose)\n        collection.console = console;\n\n      return collection;\n    };\n\n    Loki.prototype.loadCollection = function (collection) {\n      if (!collection.name) {\n        throw new Error('Collection must have a name property to be loaded');\n      }\n      this.collections.push(collection);\n    };\n\n    /**\n     * Retrieves reference to a collection by name.\n     * @param {string} collectionName - name of collection to look up\n     * @returns {Collection} Reference to collection in database by that name, or null if not found\n     * @memberof Loki\n     */\n    Loki.prototype.getCollection = function (collectionName) {\n      var i,\n        len = this.collections.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.collections[i].name === collectionName) {\n          return this.collections[i];\n        }\n      }\n\n      // no such collection\n      this.emit('warning', 'collection ' + collectionName + ' not found');\n      return null;\n    };\n\n    /**\n     * Renames an existing loki collection\n     * @param {string} oldName - name of collection to rename\n     * @param {string} newName - new name of collection\n     * @returns {Collection} reference to the newly renamed collection\n     * @memberof Loki\n     */\n    Loki.prototype.renameCollection = function (oldName, newName) {\n      var c = this.getCollection(oldName);\n\n      if (c) {\n        c.name = newName;\n      }\n\n      return c;\n    };\n\n    /**\n     * Returns a list of collections in the database.\n     * @returns {object[]} array of objects containing 'name', 'type', and 'count' properties.\n     * @memberof Loki\n     */\n    Loki.prototype.listCollections = function () {\n\n      var i = this.collections.length,\n        colls = [];\n\n      while (i--) {\n        colls.push({\n          name: this.collections[i].name,\n          type: this.collections[i].objType,\n          count: this.collections[i].data.length\n        });\n      }\n      return colls;\n    };\n\n    /**\n     * Removes a collection from the database.\n     * @param {string} collectionName - name of collection to remove\n     * @memberof Loki\n     */\n    Loki.prototype.removeCollection = function (collectionName) {\n      var i,\n        len = this.collections.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.collections[i].name === collectionName) {\n          var tmpcol = new Collection(collectionName, {});\n          var curcol = this.collections[i];\n          for (var prop in curcol) {\n            if (curcol.hasOwnProperty(prop) && tmpcol.hasOwnProperty(prop)) {\n              curcol[prop] = tmpcol[prop];\n            }\n          }\n          this.collections.splice(i, 1);\n          return;\n        }\n      }\n    };\n\n    Loki.prototype.getName = function () {\n      return this.name;\n    };\n\n    /**\n     * serializeReplacer - used to prevent certain properties from being serialized\n     *\n     */\n    Loki.prototype.serializeReplacer = function (key, value) {\n      switch (key) {\n      case 'autosaveHandle':\n      case 'persistenceAdapter':\n      case 'constraints':\n      case 'ttl':\n        return null;\n      case 'throttledSavePending':\n      case 'throttledCallbacks':\n        return undefined;\n      default:\n        return value;\n      }\n    };\n\n    /**\n     * Serialize database to a string which can be loaded via {@link Loki#loadJSON}\n     *\n     * @returns {string} Stringified representation of the loki database.\n     * @memberof Loki\n     */\n    Loki.prototype.serialize = function (options) {\n      options = options || {};\n\n      if (!options.hasOwnProperty(\"serializationMethod\")) {\n        options.serializationMethod = this.options.serializationMethod;\n      }\n\n      switch(options.serializationMethod) {\n        case \"normal\": return JSON.stringify(this, this.serializeReplacer);\n        case \"pretty\": return JSON.stringify(this, this.serializeReplacer, 2);\n        case \"destructured\": return this.serializeDestructured(); // use default options\n        default: return JSON.stringify(this, this.serializeReplacer);\n      }\n    };\n\n    // alias of serialize\n    Loki.prototype.toJson = Loki.prototype.serialize;\n\n    /**\n     * Database level destructured JSON serialization routine to allow alternate serialization methods.\n     * Internally, Loki supports destructuring via loki \"serializationMethod' option and\n     * the optional LokiPartitioningAdapter class. It is also available if you wish to do\n     * your own structured persistence or data exchange.\n     *\n     * @param {object=} options - output format options for use externally to loki\n     * @param {bool=} options.partitioned - (default: false) whether db and each collection are separate\n     * @param {int=} options.partition - can be used to only output an individual collection or db (-1)\n     * @param {bool=} options.delimited - (default: true) whether subitems are delimited or subarrays\n     * @param {string=} options.delimiter - override default delimiter\n     *\n     * @returns {string|array} A custom, restructured aggregation of independent serializations.\n     * @memberof Loki\n     */\n    Loki.prototype.serializeDestructured = function(options) {\n      var idx, sidx, result, resultlen;\n      var reconstruct = [];\n      var dbcopy;\n\n      options = options || {};\n\n      if (!options.hasOwnProperty(\"partitioned\")) {\n        options.partitioned = false;\n      }\n\n      if (!options.hasOwnProperty(\"delimited\")) {\n        options.delimited = true;\n      }\n\n      if (!options.hasOwnProperty(\"delimiter\")) {\n        options.delimiter = this.options.destructureDelimiter;\n      }\n\n      // 'partitioned' along with 'partition' of 0 or greater is a request for single collection serialization\n      if (options.partitioned === true && options.hasOwnProperty(\"partition\") && options.partition >= 0) {\n        return this.serializeCollection({\n          delimited: options.delimited,\n          delimiter: options.delimiter,\n          collectionIndex: options.partition\n        });\n      }\n\n      // not just an individual collection, so we will need to serialize db container via shallow copy\n      dbcopy = new Loki(this.filename);\n      dbcopy.loadJSONObject(this);\n\n      for(idx=0; idx < dbcopy.collections.length; idx++) {\n        dbcopy.collections[idx].data = [];\n      }\n\n      // if we -only- wanted the db container portion, return it now\n      if (options.partitioned === true && options.partition === -1) {\n        // since we are deconstructing, override serializationMethod to normal for here\n        return dbcopy.serialize({\n          serializationMethod: \"normal\"\n        });\n      }\n\n      // at this point we must be deconstructing the entire database\n      // start by pushing db serialization into first array element\n      reconstruct.push(dbcopy.serialize({\n          serializationMethod: \"normal\"\n      }));\n\n      dbcopy = null;\n\n      // push collection data into subsequent elements\n      for(idx=0; idx < this.collections.length; idx++) {\n        result = this.serializeCollection({\n          delimited: options.delimited,\n          delimiter: options.delimiter,\n          collectionIndex: idx\n        });\n\n        // NDA : Non-Delimited Array : one iterable concatenated array with empty string collection partitions\n        if (options.partitioned === false && options.delimited === false) {\n          if (!Array.isArray(result)) {\n            throw new Error(\"a nondelimited, non partitioned collection serialization did not return an expected array\");\n          }\n\n          // Array.concat would probably duplicate memory overhead for copying strings.\n          // Instead copy each individually, and clear old value after each copy.\n          // Hopefully this will allow g.c. to reduce memory pressure, if needed.\n          resultlen = result.length;\n\n          for (sidx=0; sidx < resultlen; sidx++) {\n            reconstruct.push(result[sidx]);\n            result[sidx] = null;\n          }\n\n          reconstruct.push(\"\");\n        }\n        else {\n          reconstruct.push(result);\n        }\n      }\n\n      // Reconstruct / present results according to four combinations : D, DA, NDA, NDAA\n      if (options.partitioned) {\n        // DA : Delimited Array of strings [0] db [1] collection [n] collection { partitioned: true, delimited: true }\n        // useful for simple future adaptations of existing persistence adapters to save collections separately\n        if (options.delimited) {\n          return reconstruct;\n        }\n        // NDAA : Non-Delimited Array with subArrays. db at [0] and collection subarrays at [n] { partitioned: true, delimited : false }\n        // This format might be the most versatile for 'rolling your own' partitioned sync or save.\n        // Memory overhead can be reduced by specifying a specific partition, but at this code path they did not, so its all.\n        else {\n          return reconstruct;\n        }\n      }\n      else {\n        // D : one big Delimited string { partitioned: false, delimited : true }\n        // This is the method Loki will use internally if 'destructured'.\n        // Little memory overhead improvements but does not require multiple asynchronous adapter call scheduling\n        if (options.delimited) {\n          // indicate no more collections\n          reconstruct.push(\"\");\n\n          return reconstruct.join(options.delimiter);\n        }\n        // NDA : Non-Delimited Array : one iterable array with empty string collection partitions { partitioned: false, delimited: false }\n        // This format might be best candidate for custom synchronous syncs or saves\n        else {\n          // indicate no more collections\n          reconstruct.push(\"\");\n\n          return reconstruct;\n        }\n      }\n\n      reconstruct.push(\"\");\n\n      return reconstruct.join(delim);\n    };\n\n    /**\n     * Collection level utility method to serialize a collection in a 'destructured' format\n     *\n     * @param {object=} options - used to determine output of method\n     * @param {int} options.delimited - whether to return single delimited string or an array\n     * @param {string} options.delimiter - (optional) if delimited, this is delimiter to use\n     * @param {int} options.collectionIndex -  specify which collection to serialize data for\n     *\n     * @returns {string|array} A custom, restructured aggregation of independent serializations for a single collection.\n     * @memberof Loki\n     */\n    Loki.prototype.serializeCollection = function(options) {\n      var doccount,\n        docidx,\n        resultlines = [];\n\n      options = options || {};\n\n      if (!options.hasOwnProperty(\"delimited\")) {\n        options.delimited = true;\n      }\n\n      if (!options.hasOwnProperty(\"collectionIndex\")) {\n        throw new Error(\"serializeCollection called without 'collectionIndex' option\");\n      }\n\n      doccount = this.collections[options.collectionIndex].data.length;\n\n      resultlines = [];\n\n      for(docidx=0; docidx<doccount; docidx++) {\n        resultlines.push(JSON.stringify(this.collections[options.collectionIndex].data[docidx]));\n      }\n\n      // D and DA\n      if (options.delimited) {\n         // indicate no more documents in collection (via empty delimited string)\n        resultlines.push(\"\");\n\n        return resultlines.join(options.delimiter);\n      }\n      else {\n        // NDAA and NDA\n        return resultlines;\n      }\n    };\n\n    /**\n     * Database level destructured JSON deserialization routine to minimize memory overhead.\n     * Internally, Loki supports destructuring via loki \"serializationMethod' option and\n     * the optional LokiPartitioningAdapter class. It is also available if you wish to do\n     * your own structured persistence or data exchange.\n     *\n     * @param {string|array} destructuredSource - destructured json or array to deserialize from\n     * @param {object=} options - source format options\n     * @param {bool=} [options.partitioned=false] - whether db and each collection are separate\n     * @param {int=} options.partition - can be used to deserialize only a single partition\n     * @param {bool=} [options.delimited=true] - whether subitems are delimited or subarrays\n     * @param {string=} options.delimiter - override default delimiter\n     *\n     * @returns {object|array} An object representation of the deserialized database, not yet applied to 'this' db or document array\n     * @memberof Loki\n     */\n    Loki.prototype.deserializeDestructured = function(destructuredSource, options) {\n      var workarray=[];\n      var len, cdb;\n      var idx, collIndex=0, collCount, lineIndex=1, done=false;\n      var currLine, currObject;\n\n      options = options || {};\n\n      if (!options.hasOwnProperty(\"partitioned\")) {\n        options.partitioned = false;\n      }\n\n      if (!options.hasOwnProperty(\"delimited\")) {\n        options.delimited = true;\n      }\n\n      if (!options.hasOwnProperty(\"delimiter\")) {\n        options.delimiter = this.options.destructureDelimiter;\n      }\n\n      // Partitioned\n      // DA : Delimited Array of strings [0] db [1] collection [n] collection { partitioned: true, delimited: true }\n      // NDAA : Non-Delimited Array with subArrays. db at [0] and collection subarrays at [n] { partitioned: true, delimited : false }\n      // -or- single partition\n      if (options.partitioned) {\n        // handle single partition\n        if (options.hasOwnProperty('partition')) {\n          // db only\n          if (options.partition === -1) {\n            cdb = JSON.parse(destructuredSource[0]);\n\n            return cdb;\n          }\n\n          // single collection, return doc array\n          return this.deserializeCollection(destructuredSource[options.partition+1], options);\n        }\n\n        // Otherwise we are restoring an entire partitioned db\n        cdb = JSON.parse(destructuredSource[0]);\n        collCount = cdb.collections.length;\n        for(collIndex=0; collIndex<collCount; collIndex++) {\n          // attach each collection docarray to container collection data, add 1 to collection array index since db is at 0\n          cdb.collections[collIndex].data = this.deserializeCollection(destructuredSource[collIndex+1], options);\n        }\n\n        return cdb;\n      }\n\n      // Non-Partitioned\n      // D : one big Delimited string { partitioned: false, delimited : true }\n      // NDA : Non-Delimited Array : one iterable array with empty string collection partitions { partitioned: false, delimited: false }\n\n      // D\n      if (options.delimited) {\n        workarray = destructuredSource.split(options.delimiter);\n        destructuredSource = null; // lower memory pressure\n        len = workarray.length;\n\n        if (len === 0) {\n          return null;\n        }\n      }\n      // NDA\n      else {\n        workarray = destructuredSource;\n      }\n\n      // first line is database and collection shells\n      cdb = JSON.parse(workarray[0]);\n      collCount = cdb.collections.length;\n      workarray[0] = null;\n\n      while (!done) {\n        currLine = workarray[lineIndex];\n\n        // empty string indicates either end of collection or end of file\n        if (workarray[lineIndex] === \"\") {\n          // if no more collections to load into, we are done\n          if (++collIndex > collCount) {\n            done = true;\n          }\n        }\n        else {\n          currObject = JSON.parse(workarray[lineIndex]);\n          cdb.collections[collIndex].data.push(currObject);\n        }\n\n        // lower memory pressure and advance iterator\n        workarray[lineIndex++] = null;\n      }\n\n      return cdb;\n    };\n\n    /**\n     * Collection level utility function to deserializes a destructured collection.\n     *\n     * @param {string|array} destructuredSource - destructured representation of collection to inflate\n     * @param {object=} options - used to describe format of destructuredSource input\n     * @param {int=} [options.delimited=false] - whether source is delimited string or an array\n     * @param {string=} options.delimiter - if delimited, this is delimiter to use (if other than default)\n     *\n     * @returns {array} an array of documents to attach to collection.data.\n     * @memberof Loki\n     */\n    Loki.prototype.deserializeCollection = function(destructuredSource, options) {\n      var workarray=[];\n      var idx, len;\n\n      options = options || {};\n\n      if (!options.hasOwnProperty(\"partitioned\")) {\n        options.partitioned = false;\n      }\n\n      if (!options.hasOwnProperty(\"delimited\")) {\n        options.delimited = true;\n      }\n\n      if (!options.hasOwnProperty(\"delimiter\")) {\n        options.delimiter = this.options.destructureDelimiter;\n      }\n\n      if (options.delimited) {\n        workarray = destructuredSource.split(options.delimiter);\n        workarray.pop();\n      }\n      else {\n        workarray = destructuredSource;\n      }\n\n      len = workarray.length;\n      for (idx=0; idx < len; idx++) {\n        workarray[idx] = JSON.parse(workarray[idx]);\n      }\n\n      return workarray;\n    };\n\n    /**\n     * Inflates a loki database from a serialized JSON string\n     *\n     * @param {string} serializedDb - a serialized loki database string\n     * @param {object=} options - apply or override collection level settings\n     * @param {bool} options.retainDirtyFlags - whether collection dirty flags will be preserved\n     * @memberof Loki\n     */\n    Loki.prototype.loadJSON = function (serializedDb, options) {\n      var dbObject;\n      if (serializedDb.length === 0) {\n        dbObject = {};\n      } else {\n        // using option defined in instantiated db not what was in serialized db\n        switch (this.options.serializationMethod) {\n          case \"normal\":\n          case \"pretty\": dbObject = JSON.parse(serializedDb); break;\n          case \"destructured\": dbObject = this.deserializeDestructured(serializedDb); break;\n          default:  dbObject = JSON.parse(serializedDb); break;\n        }\n      }\n\n      this.loadJSONObject(dbObject, options);\n    };\n\n    /**\n     * Inflates a loki database from a JS object\n     *\n     * @param {object} dbObject - a serialized loki database string\n     * @param {object=} options - apply or override collection level settings\n     * @param {bool} options.retainDirtyFlags - whether collection dirty flags will be preserved\n     * @memberof Loki\n     */\n    Loki.prototype.loadJSONObject = function (dbObject, options) {\n      var i = 0,\n        len = dbObject.collections ? dbObject.collections.length : 0,\n        coll,\n        copyColl,\n        clen,\n        j,\n        loader,\n        collObj;\n\n      this.name = dbObject.name;\n\n      // restore save throttled boolean only if not defined in options\n      if (dbObject.hasOwnProperty('throttledSaves') && options && !options.hasOwnProperty('throttledSaves')) {\n        this.throttledSaves = dbObject.throttledSaves;\n      }\n\n      this.collections = [];\n\n      function makeLoader(coll) {\n        var collOptions = options[coll.name];\n        var inflater;\n\n        if(collOptions.proto) {\n          inflater = collOptions.inflate || Utils.copyProperties;\n\n          return function(data) {\n            var collObj = new(collOptions.proto)();\n            inflater(data, collObj);\n            return collObj;\n          };\n        }\n\n        return collOptions.inflate;\n      }\n\n      for (i; i < len; i += 1) {\n        coll = dbObject.collections[i];\n\n        copyColl = this.addCollection(coll.name, { disableChangesApi: coll.disableChangesApi, disableDeltaChangesApi: coll.disableDeltaChangesApi, disableMeta: coll.disableMeta });\n\n        copyColl.adaptiveBinaryIndices = coll.hasOwnProperty('adaptiveBinaryIndices')?(coll.adaptiveBinaryIndices === true): false;\n        copyColl.transactional = coll.transactional;\n        copyColl.asyncListeners = coll.asyncListeners;\n        copyColl.cloneObjects = coll.cloneObjects;\n        copyColl.cloneMethod = coll.cloneMethod || \"parse-stringify\";\n        copyColl.autoupdate = coll.autoupdate;\n        copyColl.changes = coll.changes;\n\n        if (options && options.retainDirtyFlags === true) {\n          copyColl.dirty = coll.dirty;\n        }\n        else {\n          copyColl.dirty = false;\n        }\n\n        // load each element individually\n        clen = coll.data.length;\n        j = 0;\n        if (options && options.hasOwnProperty(coll.name)) {\n          loader = makeLoader(coll);\n\n          for (j; j < clen; j++) {\n            collObj = loader(coll.data[j]);\n            copyColl.data[j] = collObj;\n            copyColl.addAutoUpdateObserver(collObj);\n          }\n        } else {\n\n          for (j; j < clen; j++) {\n            copyColl.data[j] = coll.data[j];\n            copyColl.addAutoUpdateObserver(copyColl.data[j]);\n          }\n        }\n\n        copyColl.maxId = (typeof coll.maxId === 'undefined') ? 0 : coll.maxId;\n        copyColl.idIndex = coll.idIndex;\n        if (typeof (coll.binaryIndices) !== 'undefined') {\n          copyColl.binaryIndices = coll.binaryIndices;\n        }\n        if (typeof coll.transforms !== 'undefined') {\n          copyColl.transforms = coll.transforms;\n        }\n\n        copyColl.ensureId();\n\n        // regenerate unique indexes\n        copyColl.uniqueNames = [];\n        if (coll.hasOwnProperty(\"uniqueNames\")) {\n          copyColl.uniqueNames = coll.uniqueNames;\n          for (j = 0; j < copyColl.uniqueNames.length; j++) {\n            copyColl.ensureUniqueIndex(copyColl.uniqueNames[j]);\n          }\n        }\n\n        // in case they are loading a database created before we added dynamic views, handle undefined\n        if (typeof (coll.DynamicViews) === 'undefined') continue;\n\n        // reinflate DynamicViews and attached Resultsets\n        for (var idx = 0; idx < coll.DynamicViews.length; idx++) {\n          var colldv = coll.DynamicViews[idx];\n\n          var dv = copyColl.addDynamicView(colldv.name, colldv.options);\n          dv.resultdata = colldv.resultdata;\n          dv.resultsdirty = colldv.resultsdirty;\n          dv.filterPipeline = colldv.filterPipeline;\n\n          dv.sortCriteria = colldv.sortCriteria;\n          dv.sortFunction = null;\n\n          dv.sortDirty = colldv.sortDirty;\n          dv.resultset.filteredrows = colldv.resultset.filteredrows;\n          dv.resultset.filterInitialized = colldv.resultset.filterInitialized;\n\n          dv.rematerialize({\n            removeWhereFilters: true\n          });\n        }\n\n        // Upgrade Logic for binary index refactoring at version 1.5\n        if (dbObject.databaseVersion < 1.5) {\n            // rebuild all indices\n            copyColl.ensureAllIndexes(true);\n            copyColl.dirty = true;\n        }\n      }\n    };\n\n    /**\n     * Emits the close event. In autosave scenarios, if the database is dirty, this will save and disable timer.\n     * Does not actually destroy the db.\n     *\n     * @param {function=} callback - (Optional) if supplied will be registered with close event before emitting.\n     * @memberof Loki\n     */\n    Loki.prototype.close = function (callback) {\n      // for autosave scenarios, we will let close perform final save (if dirty)\n      // For web use, you might call from window.onbeforeunload to shutdown database, saving pending changes\n      if (this.autosave) {\n        this.autosaveDisable();\n        if (this.autosaveDirty()) {\n          this.saveDatabase(callback);\n          callback = undefined;\n        }\n      }\n\n      if (callback) {\n        this.on('close', callback);\n      }\n      this.emit('close');\n    };\n\n    /**-------------------------+\n    | Changes API               |\n    +--------------------------*/\n\n    /**\n     * The Changes API enables the tracking the changes occurred in the collections since the beginning of the session,\n     * so it's possible to create a differential dataset for synchronization purposes (possibly to a remote db)\n     */\n\n    /**\n     * (Changes API) : takes all the changes stored in each\n     * collection and creates a single array for the entire database. If an array of names\n     * of collections is passed then only the included collections will be tracked.\n     *\n     * @param {array=} optional array of collection names. No arg means all collections are processed.\n     * @returns {array} array of changes\n     * @see private method createChange() in Collection\n     * @memberof Loki\n     */\n    Loki.prototype.generateChangesNotification = function (arrayOfCollectionNames) {\n      function getCollName(coll) {\n        return coll.name;\n      }\n      var changes = [],\n        selectedCollections = arrayOfCollectionNames || this.collections.map(getCollName);\n\n      this.collections.forEach(function (coll) {\n        if (selectedCollections.indexOf(getCollName(coll)) !== -1) {\n          changes = changes.concat(coll.getChanges());\n        }\n      });\n      return changes;\n    };\n\n    /**\n     * (Changes API) - stringify changes for network transmission\n     * @returns {string} string representation of the changes\n     * @memberof Loki\n     */\n    Loki.prototype.serializeChanges = function (collectionNamesArray) {\n      return JSON.stringify(this.generateChangesNotification(collectionNamesArray));\n    };\n\n    /**\n     * (Changes API) : clears all the changes in all collections.\n     * @memberof Loki\n     */\n    Loki.prototype.clearChanges = function () {\n      this.collections.forEach(function (coll) {\n        if (coll.flushChanges) {\n          coll.flushChanges();\n        }\n      });\n    };\n\n    /*------------------+\n    | PERSISTENCE       |\n    -------------------*/\n\n    /** there are two build in persistence adapters for internal use\n     * fs             for use in Nodejs type environments\n     * localStorage   for use in browser environment\n     * defined as helper classes here so its easy and clean to use\n     */\n\n    /**\n     * In in-memory persistence adapter for an in-memory database.\n     * This simple 'key/value' adapter is intended for unit testing and diagnostics.\n     *\n     * @param {object=} options - memory adapter options\n     * @param {boolean} [options.asyncResponses=false] - whether callbacks are invoked asynchronously\n     * @param {int} [options.asyncTimeout=50] - timeout in ms to queue callbacks\n     * @constructor LokiMemoryAdapter\n     */\n    function LokiMemoryAdapter(options) {\n      this.hashStore = {};\n      this.options = options || {};\n\n      if (!this.options.hasOwnProperty('asyncResponses')) {\n        this.options.asyncResponses = false;\n      }\n\n      if (!this.options.hasOwnProperty('asyncTimeout')) {\n        this.options.asyncTimeout = 50; // 50 ms default\n      }\n    }\n\n    /**\n     * Loads a serialized database from its in-memory store.\n     * (Loki persistence adapter interface function)\n     *\n     * @param {string} dbname - name of the database (filename/keyname)\n     * @param {function} callback - adapter callback to return load result to caller\n     * @memberof LokiMemoryAdapter\n     */\n    LokiMemoryAdapter.prototype.loadDatabase = function (dbname, callback) {\n      var self=this;\n\n      if (this.options.asyncResponses) {\n        setTimeout(function() {\n          if (self.hashStore.hasOwnProperty(dbname)) {\n            callback(self.hashStore[dbname].value);\n          }\n          else {\n            // database doesn't exist, return falsy\n            callback (null);\n          }\n        }, this.options.asyncTimeout);\n      }\n      else {\n        if (this.hashStore.hasOwnProperty(dbname)) {\n          // database doesn't exist, return falsy\n          callback(this.hashStore[dbname].value);\n        }\n        else {\n          callback (null);\n        }\n      }\n    };\n\n    /**\n     * Saves a serialized database to its in-memory store.\n     * (Loki persistence adapter interface function)\n     *\n     * @param {string} dbname - name of the database (filename/keyname)\n     * @param {function} callback - adapter callback to return load result to caller\n     * @memberof LokiMemoryAdapter\n     */\n    LokiMemoryAdapter.prototype.saveDatabase = function (dbname, dbstring, callback) {\n      var self=this;\n      var saveCount;\n\n      if (this.options.asyncResponses) {\n        setTimeout(function() {\n          saveCount = (self.hashStore.hasOwnProperty(dbname)?self.hashStore[dbname].savecount:0);\n\n          self.hashStore[dbname] = {\n            savecount: saveCount+1,\n            lastsave: new Date(),\n            value: dbstring\n          };\n\n          callback();\n        }, this.options.asyncTimeout);\n      }\n      else {\n        saveCount = (this.hashStore.hasOwnProperty(dbname)?this.hashStore[dbname].savecount:0);\n\n        this.hashStore[dbname] = {\n          savecount: saveCount+1,\n          lastsave: new Date(),\n          value: dbstring\n        };\n\n        callback();\n      }\n    };\n\n    /**\n     * Deletes a database from its in-memory store.\n     *\n     * @param {string} dbname - name of the database (filename/keyname)\n     * @param {function} callback - function to call when done\n     * @memberof LokiMemoryAdapter\n     */\n    LokiMemoryAdapter.prototype.deleteDatabase = function(dbname, callback) {\n      if (this.hashStore.hasOwnProperty(dbname)) {\n        delete this.hashStore[dbname];\n      }\n\n      if (typeof callback === \"function\") {\n        callback();\n      }\n    };\n\n    /**\n     * An adapter for adapters.  Converts a non reference mode adapter into a reference mode adapter\n     * which can perform destructuring and partioning.  Each collection will be stored in its own key/save and\n     * only dirty collections will be saved.  If you  turn on paging with default page size of 25megs and save\n     * a 75 meg collection it should use up roughly 3 save slots (key/value pairs sent to inner adapter).\n     * A dirty collection that spans three pages will save all three pages again\n     * Paging mode was added mainly because Chrome has issues saving 'too large' of a string within a\n     * single indexeddb row.  If a single document update causes the collection to be flagged as dirty, all\n     * of that collection's pages will be written on next save.\n     *\n     * @param {object} adapter - reference to a 'non-reference' mode loki adapter instance.\n     * @param {object=} options - configuration options for partitioning and paging\n     * @param {bool} options.paging - (default: false) set to true to enable paging collection data.\n     * @param {int} options.pageSize - (default : 25MB) you can use this to limit size of strings passed to inner adapter.\n     * @param {string} options.delimiter - allows you to override the default delimeter\n     * @constructor LokiPartitioningAdapter\n     */\n    function LokiPartitioningAdapter(adapter, options) {\n      this.mode = \"reference\";\n      this.adapter = null;\n      this.options = options || {};\n      this.dbref = null;\n      this.dbname = \"\";\n      this.pageIterator = {};\n\n      // verify user passed an appropriate adapter\n      if (adapter) {\n        if (adapter.mode === \"reference\") {\n          throw new Error(\"LokiPartitioningAdapter cannot be instantiated with a reference mode adapter\");\n        }\n        else {\n          this.adapter = adapter;\n        }\n      }\n      else {\n        throw new Error(\"LokiPartitioningAdapter requires a (non-reference mode) adapter on construction\");\n      }\n\n      // set collection paging defaults\n      if (!this.options.hasOwnProperty(\"paging\")) {\n        this.options.paging = false;\n      }\n\n      // default to page size of 25 megs (can be up to your largest serialized object size larger than this)\n      if (!this.options.hasOwnProperty(\"pageSize\")) {\n        this.options.pageSize = 25*1024*1024;\n      }\n\n      if (!this.options.hasOwnProperty(\"delimiter\")) {\n        this.options.delimiter = '$<\\n';\n      }\n    }\n\n    /**\n     * Loads a database which was partitioned into several key/value saves.\n     * (Loki persistence adapter interface function)\n     *\n     * @param {string} dbname - name of the database (filename/keyname)\n     * @param {function} callback - adapter callback to return load result to caller\n     * @memberof LokiPartitioningAdapter\n     */\n    LokiPartitioningAdapter.prototype.loadDatabase = function (dbname, callback) {\n      var self=this;\n      this.dbname = dbname;\n      this.dbref = new Loki(dbname);\n\n      // load the db container (without data)\n      this.adapter.loadDatabase(dbname, function(result) {\n        // empty database condition is for inner adapter return null/undefined/falsy\n        if (!result) {\n          // partition 0 not found so new database, no need to try to load other partitions.\n          // return same falsy result to loadDatabase to signify no database exists (yet)\n          callback(result);\n          return;\n        }\n\n        if (typeof result !== \"string\") {\n          callback(new Error(\"LokiPartitioningAdapter received an unexpected response from inner adapter loadDatabase()\"));\n        }\n\n        // I will want to use loki destructuring helper methods so i will inflate into typed instance\n        var db = JSON.parse(result);\n        self.dbref.loadJSONObject(db);\n        db = null;\n\n        var clen = self.dbref.collections.length;\n\n        if (self.dbref.collections.length === 0) {\n          callback(self.dbref);\n          return;\n        }\n\n        self.pageIterator = {\n          collection: 0,\n          pageIndex: 0\n        };\n\n        self.loadNextPartition(0, function() {\n          callback(self.dbref);\n        });\n      });\n    };\n\n    /**\n     * Used to sequentially load each collection partition, one at a time.\n     *\n     * @param {int} partition - ordinal collection position to load next\n     * @param {function} callback - adapter callback to return load result to caller\n     */\n    LokiPartitioningAdapter.prototype.loadNextPartition = function(partition, callback) {\n      var keyname = this.dbname + \".\" + partition;\n      var self=this;\n\n      if (this.options.paging === true) {\n        this.pageIterator.pageIndex = 0;\n        this.loadNextPage(callback);\n        return;\n      }\n\n      this.adapter.loadDatabase(keyname, function(result) {\n        var data = self.dbref.deserializeCollection(result, { delimited: true, collectionIndex: partition });\n        self.dbref.collections[partition].data = data;\n\n        if (++partition < self.dbref.collections.length) {\n          self.loadNextPartition(partition, callback);\n        }\n        else {\n          callback();\n        }\n      });\n    };\n\n    /**\n     * Used to sequentially load the next page of collection partition, one at a time.\n     *\n     * @param {function} callback - adapter callback to return load result to caller\n     */\n    LokiPartitioningAdapter.prototype.loadNextPage = function(callback) {\n      // calculate name for next saved page in sequence\n      var keyname = this.dbname + \".\" + this.pageIterator.collection + \".\" + this.pageIterator.pageIndex;\n      var self=this;\n\n      // load whatever page is next in sequence\n      this.adapter.loadDatabase(keyname, function(result) {\n        var data = result.split(self.options.delimiter);\n        result = \"\"; // free up memory now that we have split it into array\n        var dlen = data.length;\n        var idx;\n\n        // detect if last page by presence of final empty string element and remove it if so\n        var isLastPage = (data[dlen-1] === \"\");\n        if (isLastPage) {\n          data.pop();\n          dlen = data.length;\n          // empty collections are just a delimiter meaning two blank items\n          if (data[dlen-1] === \"\" && dlen === 1) {\n            data.pop();\n            dlen = data.length;\n          }\n        }\n\n        // convert stringified array elements to object instances and push to collection data\n        for(idx=0; idx < dlen; idx++) {\n          self.dbref.collections[self.pageIterator.collection].data.push(JSON.parse(data[idx]));\n          data[idx] = null;\n        }\n        data = [];\n\n        // if last page, we are done with this partition\n        if (isLastPage) {\n\n          // if there are more partitions, kick off next partition load\n          if (++self.pageIterator.collection < self.dbref.collections.length) {\n            self.loadNextPartition(self.pageIterator.collection, callback);\n          }\n          else {\n            callback();\n          }\n        }\n        else {\n          self.pageIterator.pageIndex++;\n          self.loadNextPage(callback);\n        }\n      });\n    };\n\n    /**\n     * Saves a database by partioning into separate key/value saves.\n     * (Loki 'reference mode' persistence adapter interface function)\n     *\n     * @param {string} dbname - name of the database (filename/keyname)\n     * @param {object} dbref - reference to database which we will partition and save.\n     * @param {function} callback - adapter callback to return load result to caller\n     *\n     * @memberof LokiPartitioningAdapter\n     */\n    LokiPartitioningAdapter.prototype.exportDatabase = function(dbname, dbref, callback) {\n      var self=this;\n      var idx, clen = dbref.collections.length;\n\n      this.dbref = dbref;\n      this.dbname = dbname;\n\n      // queue up dirty partitions to be saved\n      this.dirtyPartitions = [-1];\n      for(idx=0; idx<clen; idx++) {\n        if (dbref.collections[idx].dirty) {\n          this.dirtyPartitions.push(idx);\n        }\n      }\n\n      this.saveNextPartition(function(err) {\n        callback(err);\n      });\n    };\n\n    /**\n     * Helper method used internally to save each dirty collection, one at a time.\n     *\n     * @param {function} callback - adapter callback to return load result to caller\n     */\n    LokiPartitioningAdapter.prototype.saveNextPartition = function(callback) {\n      var self=this;\n      var partition = this.dirtyPartitions.shift();\n      var keyname = this.dbname + ((partition===-1)?\"\":(\".\" + partition));\n\n      // if we are doing paging and this is collection partition\n      if (this.options.paging && partition !== -1) {\n        this.pageIterator = {\n          collection: partition,\n          docIndex: 0,\n          pageIndex: 0\n        };\n\n        // since saveNextPage recursively calls itself until done, our callback means this whole paged partition is finished\n        this.saveNextPage(function(err) {\n          if (self.dirtyPartitions.length === 0) {\n            callback(err);\n          }\n          else {\n            self.saveNextPartition(callback);\n          }\n        });\n        return;\n      }\n\n      // otherwise this is 'non-paged' partioning...\n      var result = this.dbref.serializeDestructured({\n        partitioned : true,\n        delimited: true,\n        partition: partition\n      });\n\n      this.adapter.saveDatabase(keyname, result, function(err) {\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        if (self.dirtyPartitions.length === 0) {\n          callback(null);\n        }\n        else {\n          self.saveNextPartition(callback);\n        }\n      });\n    };\n\n    /**\n     * Helper method used internally to generate and save the next page of the current (dirty) partition.\n     *\n     * @param {function} callback - adapter callback to return load result to caller\n     */\n    LokiPartitioningAdapter.prototype.saveNextPage = function(callback) {\n      var self=this;\n      var coll = this.dbref.collections[this.pageIterator.collection];\n      var keyname = this.dbname + \".\" + this.pageIterator.collection + \".\" + this.pageIterator.pageIndex;\n      var pageLen=0,\n        cdlen = coll.data.length,\n        delimlen = this.options.delimiter.length;\n      var serializedObject = \"\",\n        pageBuilder = \"\";\n      var doneWithPartition=false,\n        doneWithPage=false;\n\n      var pageSaveCallback = function(err) {\n        pageBuilder = \"\";\n\n        if (err) {\n          callback(err);\n        }\n\n        // update meta properties then continue process by invoking callback\n        if (doneWithPartition) {\n          callback(null);\n        }\n        else {\n          self.pageIterator.pageIndex++;\n          self.saveNextPage(callback);\n        }\n      };\n\n      if (coll.data.length === 0) {\n        doneWithPartition = true;\n      }\n\n      while (true) {\n        if (!doneWithPartition) {\n          // serialize object\n          serializedObject = JSON.stringify(coll.data[this.pageIterator.docIndex]);\n          pageBuilder += serializedObject;\n          pageLen += serializedObject.length;\n\n          // if no more documents in collection to add, we are done with partition\n          if (++this.pageIterator.docIndex >= cdlen) doneWithPartition = true;\n        }\n        // if our current page is bigger than defined pageSize, we are done with page\n        if (pageLen >= this.options.pageSize) doneWithPage = true;\n\n        // if not done with current page, need delimiter before next item\n        // if done with partition we also want a delmiter to indicate 'end of pages' final empty row\n        if (!doneWithPage || doneWithPartition) {\n          pageBuilder += this.options.delimiter;\n          pageLen += delimlen;\n        }\n\n        // if we are done with page save it and pass off to next recursive call or callback\n        if (doneWithPartition || doneWithPage) {\n          this.adapter.saveDatabase(keyname, pageBuilder, pageSaveCallback);\n          return;\n        }\n      }\n    };\n\n    /**\n     * A loki persistence adapter which persists using node fs module\n     * @constructor LokiFsAdapter\n     */\n    function LokiFsAdapter() {\n      try {\n        this.fs = require('fs');\n      }catch(e) {\n        this.fs = null;\n      }\n    }\n\n    /**\n     * loadDatabase() - Load data from file, will throw an error if the file does not exist\n     * @param {string} dbname - the filename of the database to load\n     * @param {function} callback - the callback to handle the result\n     * @memberof LokiFsAdapter\n     */\n    LokiFsAdapter.prototype.loadDatabase = function loadDatabase(dbname, callback) {\n      var self = this;\n\n      this.fs.stat(dbname, function (err, stats) {\n        if (!err && stats.isFile()) {\n          self.fs.readFile(dbname, {\n            encoding: 'utf8'\n          }, function readFileCallback(err, data) {\n            if (err) {\n              callback(new Error(err));\n            } else {\n              callback(data);\n            }\n          });\n        }\n        else {\n          callback(null);\n        }\n      });\n    };\n\n    /**\n     * saveDatabase() - save data to file, will throw an error if the file can't be saved\n     * might want to expand this to avoid dataloss on partial save\n     * @param {string} dbname - the filename of the database to load\n     * @param {function} callback - the callback to handle the result\n     * @memberof LokiFsAdapter\n     */\n    LokiFsAdapter.prototype.saveDatabase = function saveDatabase(dbname, dbstring, callback) {\n      var self = this;\n      var tmpdbname = dbname + '~';\n      this.fs.writeFile(tmpdbname, dbstring, function writeFileCallback(err) {\n        if (err) {\n          callback(new Error(err));\n        } else {\n          self.fs.rename(tmpdbname,dbname,callback);\n        }\n      });\n    };\n\n    /**\n     * deleteDatabase() - delete the database file, will throw an error if the\n     * file can't be deleted\n     * @param {string} dbname - the filename of the database to delete\n     * @param {function} callback - the callback to handle the result\n     * @memberof LokiFsAdapter\n     */\n    LokiFsAdapter.prototype.deleteDatabase = function deleteDatabase(dbname, callback) {\n      this.fs.unlink(dbname, function deleteDatabaseCallback(err) {\n        if (err) {\n          callback(new Error(err));\n        } else {\n          callback();\n        }\n      });\n    };\n\n\n    /**\n     * A loki persistence adapter which persists to web browser's local storage object\n     * @constructor LokiLocalStorageAdapter\n     */\n    function LokiLocalStorageAdapter() {}\n\n    /**\n     * loadDatabase() - Load data from localstorage\n     * @param {string} dbname - the name of the database to load\n     * @param {function} callback - the callback to handle the result\n     * @memberof LokiLocalStorageAdapter\n     */\n    LokiLocalStorageAdapter.prototype.loadDatabase = function loadDatabase(dbname, callback) {\n      if (localStorageAvailable()) {\n        callback(localStorage.getItem(dbname));\n      } else {\n        callback(new Error('localStorage is not available'));\n      }\n    };\n\n    /**\n     * saveDatabase() - save data to localstorage, will throw an error if the file can't be saved\n     * might want to expand this to avoid dataloss on partial save\n     * @param {string} dbname - the filename of the database to load\n     * @param {function} callback - the callback to handle the result\n     * @memberof LokiLocalStorageAdapter\n     */\n    LokiLocalStorageAdapter.prototype.saveDatabase = function saveDatabase(dbname, dbstring, callback) {\n      if (localStorageAvailable()) {\n        localStorage.setItem(dbname, dbstring);\n        callback(null);\n      } else {\n        callback(new Error('localStorage is not available'));\n      }\n    };\n\n    /**\n     * deleteDatabase() - delete the database from localstorage, will throw an error if it\n     * can't be deleted\n     * @param {string} dbname - the filename of the database to delete\n     * @param {function} callback - the callback to handle the result\n     * @memberof LokiLocalStorageAdapter\n     */\n    LokiLocalStorageAdapter.prototype.deleteDatabase = function deleteDatabase(dbname, callback) {\n      if (localStorageAvailable()) {\n        localStorage.removeItem(dbname);\n        callback(null);\n      } else {\n        callback(new Error('localStorage is not available'));\n      }\n    };\n\n    /**\n     * Wait for throttledSaves to complete and invoke your callback when drained or duration is met.\n     *\n     * @param {function} callback - callback to fire when save queue is drained, it is passed a sucess parameter value\n     * @param {object=} options - configuration options\n     * @param {boolean} options.recursiveWait - (default: true) if after queue is drained, another save was kicked off, wait for it\n     * @param {bool} options.recursiveWaitLimit - (default: false) limit our recursive waiting to a duration\n     * @param {int} options.recursiveWaitLimitDelay - (default: 2000) cutoff in ms to stop recursively re-draining\n     * @memberof Loki\n     */\n    Loki.prototype.throttledSaveDrain = function(callback, options) {\n      var self = this;\n      var now = (new Date()).getTime();\n\n      if (!this.throttledSaves) {\n        callback(true);\n      }\n\n      options = options || {};\n      if (!options.hasOwnProperty('recursiveWait')) {\n        options.recursiveWait = true;\n      }\n      if (!options.hasOwnProperty('recursiveWaitLimit')) {\n        options.recursiveWaitLimit = false;\n      }\n      if (!options.hasOwnProperty('recursiveWaitLimitDuration')) {\n        options.recursiveWaitLimitDuration = 2000;\n      }\n      if (!options.hasOwnProperty('started')) {\n        options.started = (new Date()).getTime();\n      }\n\n      // if save is pending\n      if (this.throttledSaves && this.throttledSavePending) {\n        // if we want to wait until we are in a state where there are no pending saves at all\n        if (options.recursiveWait) {\n          // queue the following meta callback for when it completes\n          this.throttledCallbacks.push(function() {\n            // if there is now another save pending...\n            if (self.throttledSavePending) {\n              // if we wish to wait only so long and we have exceeded limit of our waiting, callback with false success value\n              if (options.recursiveWaitLimit && (now - options.started > options.recursiveWaitLimitDuration)) {\n                callback(false);\n                return;\n              }\n              // it must be ok to wait on next queue drain\n              self.throttledSaveDrain(callback, options);\n              return;\n            }\n            // no pending saves so callback with true success\n            else {\n              callback(true);\n              return;\n            }\n          });\n        }\n        // just notify when current queue is depleted\n        else {\n          this.throttledCallbacks.push(callback);\n          return;\n        }\n      }\n      // no save pending, just callback\n      else {\n        callback(true);\n      }\n    };\n\n    /**\n     * Internal load logic, decoupled from throttling/contention logic\n     *\n     * @param {object} options - not currently used (remove or allow overrides?)\n     * @param {function=} callback - (Optional) user supplied async callback / error handler\n     */\n    Loki.prototype.loadDatabaseInternal = function (options, callback) {\n      var cFun = callback || function (err, data) {\n          if (err) {\n            throw err;\n          }\n        },\n        self = this;\n\n      // the persistenceAdapter should be present if all is ok, but check to be sure.\n      if (this.persistenceAdapter !== null) {\n\n        this.persistenceAdapter.loadDatabase(this.filename, function loadDatabaseCallback(dbString) {\n          if (typeof (dbString) === 'string') {\n            var parseSuccess = false;\n            try {\n              self.loadJSON(dbString, options || {});\n              parseSuccess = true;\n            } catch (err) {\n              cFun(err);\n            }\n            if (parseSuccess) {\n              cFun(null);\n              self.emit('loaded', 'database ' + self.filename + ' loaded');\n            }\n          } else {\n            // falsy result means new database\n            if (!dbString) {\n              cFun(null);\n              self.emit('loaded', 'empty database ' + self.filename + ' loaded');\n              return;\n            }\n\n            // instanceof error means load faulted\n            if (dbString instanceof Error) {\n                cFun(dbString);\n                return;\n            }\n\n            // if adapter has returned an js object (other than null or error) attempt to load from JSON object\n            if (typeof (dbString) === \"object\") {\n              self.loadJSONObject(dbString, options || {});\n              cFun(null); // return null on success\n              self.emit('loaded', 'database ' + self.filename + ' loaded');\n              return;\n            }\n\n            cFun(\"unexpected adapter response : \" + dbString);\n          }\n        });\n\n      } else {\n        cFun(new Error('persistenceAdapter not configured'));\n      }\n    };\n\n    /**\n     * Handles manually loading from file system, local storage, or adapter (such as indexeddb)\n     *    This method utilizes loki configuration options (if provided) to determine which\n     *    persistence method to use, or environment detection (if configuration was not provided).\n     *    To avoid contention with any throttledSaves, we will drain the save queue first.\n     *\n     * If you are configured with autosave, you do not need to call this method yourself.\n     *\n     * @param {object} options - if throttling saves and loads, this controls how we drain save queue before loading\n     * @param {boolean} options.recursiveWait - (default: true) wait recursively until no saves are queued\n     * @param {bool} options.recursiveWaitLimit - (default: false) limit our recursive waiting to a duration\n     * @param {int} options.recursiveWaitLimitDelay - (default: 2000) cutoff in ms to stop recursively re-draining\n     * @param {function=} callback - (Optional) user supplied async callback / error handler\n     * @memberof Loki\n     * @example\n     * db.loadDatabase({}, function(err) {\n     *   if (err) {\n     *     console.log(\"error : \" + err);\n     *   }\n     *   else {\n     *     console.log(\"database loaded.\");\n     *   }\n     * });\n     */\n    Loki.prototype.loadDatabase = function (options, callback) {\n      var self=this;\n\n      // if throttling disabled, just call internal\n      if (!this.throttledSaves) {\n        this.loadDatabaseInternal(options, callback);\n        return;\n      }\n\n      // try to drain any pending saves in the queue to lock it for loading\n      this.throttledSaveDrain(function(success) {\n        if (success) {\n          // pause/throttle saving until loading is done\n          self.throttledSavePending = true;\n\n          self.loadDatabaseInternal(options, function(err) {\n            // now that we are finished loading, if no saves were throttled, disable flag\n            if (self.throttledCallbacks.length === 0) {\n              self.throttledSavePending = false;\n            }\n            // if saves requests came in while loading, kick off new save to kick off resume saves\n            else {\n              self.saveDatabase();\n            }\n\n            if (typeof callback === 'function') {\n              callback(err);\n            }\n          });\n          return;\n        }\n        else {\n          if (typeof callback === 'function') {\n            callback(new Error(\"Unable to pause save throttling long enough to read database\"));\n          }\n        }\n      }, options);\n    };\n\n    /**\n     * Internal save logic, decoupled from save throttling logic\n     */\n    Loki.prototype.saveDatabaseInternal = function (callback) {\n      var cFun = callback || function (err) {\n          if (err) {\n            throw err;\n          }\n          return;\n        },\n        self = this;\n\n      // the persistenceAdapter should be present if all is ok, but check to be sure.\n      if (this.persistenceAdapter !== null) {\n        // check if the adapter is requesting (and supports) a 'reference' mode export\n        if (this.persistenceAdapter.mode === \"reference\" && typeof this.persistenceAdapter.exportDatabase === \"function\") {\n          // filename may seem redundant but loadDatabase will need to expect this same filename\n          this.persistenceAdapter.exportDatabase(this.filename, this.copy({removeNonSerializable:true}), function exportDatabaseCallback(err) {\n            self.autosaveClearFlags();\n            cFun(err);\n          });\n        }\n        // otherwise just pass the serialized database to adapter\n        else {\n          // persistenceAdapter might be asynchronous, so we must clear `dirty` immediately\n          // or autosave won't work if an update occurs between here and the callback\n          self.autosaveClearFlags();\n          this.persistenceAdapter.saveDatabase(this.filename, self.serialize(), function saveDatabasecallback(err) {\n            cFun(err);\n          });\n        }\n      } else {\n        cFun(new Error('persistenceAdapter not configured'));\n      }\n    };\n\n    /**\n     * Handles manually saving to file system, local storage, or adapter (such as indexeddb)\n     *    This method utilizes loki configuration options (if provided) to determine which\n     *    persistence method to use, or environment detection (if configuration was not provided).\n     *\n     * If you are configured with autosave, you do not need to call this method yourself.\n     *\n     * @param {function=} callback - (Optional) user supplied async callback / error handler\n     * @memberof Loki\n     * @example\n     * db.saveDatabase(function(err) {\n     *   if (err) {\n     *     console.log(\"error : \" + err);\n     *   }\n     *   else {\n     *     console.log(\"database saved.\");\n     *   }\n     * });\n     */\n    Loki.prototype.saveDatabase = function (callback) {\n      if (!this.throttledSaves) {\n        this.saveDatabaseInternal(callback);\n        return;\n      }\n\n      if (this.throttledSavePending) {\n        this.throttledCallbacks.push(callback);\n        return;\n      }\n\n      var localCallbacks = this.throttledCallbacks;\n      this.throttledCallbacks = [];\n      localCallbacks.unshift(callback);\n      this.throttledSavePending = true;\n\n      var self = this;\n      this.saveDatabaseInternal(function(err) {\n        self.throttledSavePending = false;\n        localCallbacks.forEach(function(pcb) {\n          if (typeof pcb === 'function') {\n            // Queue the callbacks so we first finish this method execution\n            setTimeout(function() {\n              pcb(err);\n            }, 1);\n          }\n        });\n\n        // since this is called async, future requests may have come in, if so.. kick off next save\n        if (self.throttledCallbacks.length > 0) {\n          self.saveDatabase();\n        }\n      });\n    };\n\n    // alias\n    Loki.prototype.save = Loki.prototype.saveDatabase;\n\n    /**\n     * Handles deleting a database from file system, local\n     *    storage, or adapter (indexeddb)\n     *    This method utilizes loki configuration options (if provided) to determine which\n     *    persistence method to use, or environment detection (if configuration was not provided).\n     *\n     * @param {function=} callback - (Optional) user supplied async callback / error handler\n     * @memberof Loki\n     */\n    Loki.prototype.deleteDatabase = function (options, callback) {\n      var cFun = callback || function (err, data) {\n        if (err) {\n          throw err;\n        }\n      };\n\n      // we aren't even using options, so we will support syntax where\n      // callback is passed as first and only argument\n      if (typeof options === 'function' && !callback) {\n        cFun = options;\n      }\n\n      // the persistenceAdapter should be present if all is ok, but check to be sure.\n      if (this.persistenceAdapter !== null) {\n        this.persistenceAdapter.deleteDatabase(this.filename, function deleteDatabaseCallback(err) {\n          cFun(err);\n        });\n      } else {\n        cFun(new Error('persistenceAdapter not configured'));\n      }\n    };\n\n    /**\n     * autosaveDirty - check whether any collections are 'dirty' meaning we need to save (entire) database\n     *\n     * @returns {boolean} - true if database has changed since last autosave, false if not.\n     */\n    Loki.prototype.autosaveDirty = function () {\n      for (var idx = 0; idx < this.collections.length; idx++) {\n        if (this.collections[idx].dirty) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    /**\n     * autosaveClearFlags - resets dirty flags on all collections.\n     *    Called from saveDatabase() after db is saved.\n     *\n     */\n    Loki.prototype.autosaveClearFlags = function () {\n      for (var idx = 0; idx < this.collections.length; idx++) {\n        this.collections[idx].dirty = false;\n      }\n    };\n\n    /**\n     * autosaveEnable - begin a javascript interval to periodically save the database.\n     *\n     * @param {object} options - not currently used (remove or allow overrides?)\n     * @param {function=} callback - (Optional) user supplied async callback\n     */\n    Loki.prototype.autosaveEnable = function (options, callback) {\n      this.autosave = true;\n\n      var delay = 5000,\n        self = this;\n\n      if (typeof (this.autosaveInterval) !== 'undefined' && this.autosaveInterval !== null) {\n        delay = this.autosaveInterval;\n      }\n\n      this.autosaveHandle = setInterval(function autosaveHandleInterval() {\n        // use of dirty flag will need to be hierarchical since mods are done at collection level with no visibility of 'db'\n        // so next step will be to implement collection level dirty flags set on insert/update/remove\n        // along with loki level isdirty() function which iterates all collections to see if any are dirty\n\n        if (self.autosaveDirty()) {\n          self.saveDatabase(callback);\n        }\n      }, delay);\n    };\n\n    /**\n     * autosaveDisable - stop the autosave interval timer.\n     *\n     */\n    Loki.prototype.autosaveDisable = function () {\n      if (typeof (this.autosaveHandle) !== 'undefined' && this.autosaveHandle !== null) {\n        clearInterval(this.autosaveHandle);\n        this.autosaveHandle = null;\n      }\n    };\n\n\n    /**\n     * Resultset class allowing chainable queries.  Intended to be instanced internally.\n     *    Collection.find(), Collection.where(), and Collection.chain() instantiate this.\n     *\n     * @example\n     *    mycollection.chain()\n     *      .find({ 'doors' : 4 })\n     *      .where(function(obj) { return obj.name === 'Toyota' })\n     *      .data();\n     *\n     * @constructor Resultset\n     * @param {Collection} collection - The collection which this Resultset will query against.\n     */\n    function Resultset(collection, options) {\n      options = options || {};\n\n      // retain reference to collection we are querying against\n      this.collection = collection;\n      this.filteredrows = [];\n      this.filterInitialized = false;\n\n      return this;\n    }\n\n    /**\n     * reset() - Reset the resultset to its initial state.\n     *\n     * @returns {Resultset} Reference to this resultset, for future chain operations.\n     */\n    Resultset.prototype.reset = function () {\n      if (this.filteredrows.length > 0) {\n        this.filteredrows = [];\n      }\n      this.filterInitialized = false;\n      return this;\n    };\n\n    /**\n     * toJSON() - Override of toJSON to avoid circular references\n     *\n     */\n    Resultset.prototype.toJSON = function () {\n      var copy = this.copy();\n      copy.collection = null;\n      return copy;\n    };\n\n    /**\n     * Allows you to limit the number of documents passed to next chain operation.\n     *    A resultset copy() is made to avoid altering original resultset.\n     *\n     * @param {int} qty - The number of documents to return.\n     * @returns {Resultset} Returns a copy of the resultset, limited by qty, for subsequent chain ops.\n     * @memberof Resultset\n     * // find the two oldest users\n     * var result = users.chain().simplesort(\"age\", true).limit(2).data();\n     */\n    Resultset.prototype.limit = function (qty) {\n      // if this has no filters applied, we need to populate filteredrows first\n      if (!this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      var rscopy = new Resultset(this.collection);\n      rscopy.filteredrows = this.filteredrows.slice(0, qty);\n      rscopy.filterInitialized = true;\n      return rscopy;\n    };\n\n    /**\n     * Used for skipping 'pos' number of documents in the resultset.\n     *\n     * @param {int} pos - Number of documents to skip; all preceding documents are filtered out.\n     * @returns {Resultset} Returns a copy of the resultset, containing docs starting at 'pos' for subsequent chain ops.\n     * @memberof Resultset\n     * // find everyone but the two oldest users\n     * var result = users.chain().simplesort(\"age\", true).offset(2).data();\n     */\n    Resultset.prototype.offset = function (pos) {\n      // if this has no filters applied, we need to populate filteredrows first\n      if (!this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      var rscopy = new Resultset(this.collection);\n      rscopy.filteredrows = this.filteredrows.slice(pos);\n      rscopy.filterInitialized = true;\n      return rscopy;\n    };\n\n    /**\n     * copy() - To support reuse of resultset in branched query situations.\n     *\n     * @returns {Resultset} Returns a copy of the resultset (set) but the underlying document references will be the same.\n     * @memberof Resultset\n     */\n    Resultset.prototype.copy = function () {\n      var result = new Resultset(this.collection);\n\n      if (this.filteredrows.length > 0) {\n        result.filteredrows = this.filteredrows.slice();\n      }\n      result.filterInitialized = this.filterInitialized;\n\n      return result;\n    };\n\n    /**\n     * Alias of copy()\n     * @memberof Resultset\n     */\n    Resultset.prototype.branch = Resultset.prototype.copy;\n\n    /**\n     * transform() - executes a named collection transform or raw array of transform steps against the resultset.\n     *\n     * @param transform {(string|array)} - name of collection transform or raw transform array\n     * @param parameters {object=} - (Optional) object property hash of parameters, if the transform requires them.\n     * @returns {Resultset} either (this) resultset or a clone of of this resultset (depending on steps)\n     * @memberof Resultset\n     * @example\n     * users.addTransform('CountryFilter', [\n     *   {\n     *     type: 'find',\n     *     value: {\n     *       'country': { $eq: '[%lktxp]Country' }\n     *     }\n     *   },\n     *   {\n     *     type: 'simplesort',\n     *     property: 'age',\n     *     options: { desc: false}\n     *   }\n     * ]);\n     * var results = users.chain().transform(\"CountryFilter\", { Country: 'fr' }).data();\n     */\n    Resultset.prototype.transform = function (transform, parameters) {\n      var idx,\n        step,\n        rs = this;\n\n      // if transform is name, then do lookup first\n      if (typeof transform === 'string') {\n        if (this.collection.transforms.hasOwnProperty(transform)) {\n          transform = this.collection.transforms[transform];\n        }\n      }\n\n      // either they passed in raw transform array or we looked it up, so process\n      if (typeof transform !== 'object' || !Array.isArray(transform)) {\n        throw new Error(\"Invalid transform\");\n      }\n\n      if (typeof parameters !== 'undefined') {\n        transform = Utils.resolveTransformParams(transform, parameters);\n      }\n\n      for (idx = 0; idx < transform.length; idx++) {\n        step = transform[idx];\n\n        switch (step.type) {\n        case \"find\":\n          rs.find(step.value);\n          break;\n        case \"where\":\n          rs.where(step.value);\n          break;\n        case \"simplesort\":\n          rs.simplesort(step.property, step.desc || step.options);\n          break;\n        case \"compoundsort\":\n          rs.compoundsort(step.value);\n          break;\n        case \"sort\":\n          rs.sort(step.value);\n          break;\n        case \"limit\":\n          rs = rs.limit(step.value);\n          break; // limit makes copy so update reference\n        case \"offset\":\n          rs = rs.offset(step.value);\n          break; // offset makes copy so update reference\n        case \"map\":\n          rs = rs.map(step.value, step.dataOptions);\n          break;\n        case \"eqJoin\":\n          rs = rs.eqJoin(step.joinData, step.leftJoinKey, step.rightJoinKey, step.mapFun, step.dataOptions);\n          break;\n          // following cases break chain by returning array data so make any of these last in transform steps\n        case \"mapReduce\":\n          rs = rs.mapReduce(step.mapFunction, step.reduceFunction);\n          break;\n          // following cases update documents in current filtered resultset (use carefully)\n        case \"update\":\n          rs.update(step.value);\n          break;\n        case \"remove\":\n          rs.remove();\n          break;\n        default:\n          break;\n        }\n      }\n\n      return rs;\n    };\n\n    /**\n     * User supplied compare function is provided two documents to compare. (chainable)\n     * @example\n     *    rslt.sort(function(obj1, obj2) {\n     *      if (obj1.name === obj2.name) return 0;\n     *      if (obj1.name > obj2.name) return 1;\n     *      if (obj1.name < obj2.name) return -1;\n     *    });\n     *\n     * @param {function} comparefun - A javascript compare function used for sorting.\n     * @returns {Resultset} Reference to this resultset, sorted, for future chain operations.\n     * @memberof Resultset\n     */\n    Resultset.prototype.sort = function (comparefun) {\n      // if this has no filters applied, just we need to populate filteredrows first\n      if (!this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      var wrappedComparer =\n        (function (userComparer, data) {\n          return function (a, b) {\n            return userComparer(data[a], data[b]);\n          };\n        })(comparefun, this.collection.data);\n\n      this.filteredrows.sort(wrappedComparer);\n\n      return this;\n    };\n\n    /**\n     * Simpler, loose evaluation for user to sort based on a property name. (chainable).\n     *    Sorting based on the same lt/gt helper functions used for binary indices.\n     *\n     * @param {string} propname - name of property to sort by.\n     * @param {object|bool=} options - boolean to specify if isdescending, or options object\n     * @param {boolean} [options.desc=false] - whether to sort descending\n     * @param {boolean} [options.disableIndexIntersect=false] - whether we should explicity not use array intersection.\n     * @param {boolean} [options.forceIndexIntersect=false] - force array intersection (if binary index exists).\n     * @param {boolean} [options.useJavascriptSorting=false] - whether results are sorted via basic javascript sort.\n     * @returns {Resultset} Reference to this resultset, sorted, for future chain operations.\n     * @memberof Resultset\n     * @example\n     * var results = users.chain().simplesort('age').data();\n     */\n    Resultset.prototype.simplesort = function (propname, options) {\n      var eff, \n        targetEff = 10,\n        dc = this.collection.data.length, \n        frl = this.filteredrows.length,\n        hasBinaryIndex = this.collection.binaryIndices.hasOwnProperty(propname);\n\n      if (typeof (options) === 'undefined' || options === false) {\n        options = { desc: false };\n      }\n      if (options === true) {\n        options = { desc: true };\n      }\n\n      // if nothing in filtered rows array...\n      if (frl === 0) {\n        // if the filter is initialized to be empty resultset, do nothing\n        if (this.filterInitialized) {\n          return this;\n        }\n        \n        // otherwise no filters applied implies all documents, so we need to populate filteredrows first\n        \n        // if we have a binary index, we can just use that instead of sorting (again)\n        if (this.collection.binaryIndices.hasOwnProperty(propname)) {\n          // make sure index is up-to-date\n          this.collection.ensureIndex(propname);\n          // copy index values into filteredrows\n          this.filteredrows = this.collection.binaryIndices[propname].values.slice(0);\n\n          if (options.desc) {\n            this.filteredrows.reverse();\n          }\n\n          // we are done, return this (resultset) for further chain ops\n          return this;\n        }\n        // otherwise initialize array for sort below\n        else {\n          // build full document index (to be sorted subsequently)\n          this.filteredrows = this.collection.prepareFullDocIndex();\n        }\n      }\n      // otherwise we had results to begin with, see if we qualify for index intercept optimization\n      else {\n\n        // If already filtered, but we want to leverage binary index on sort.\n        // This will use custom array intection algorithm.\n        if (!options.disableIndexIntersect && hasBinaryIndex) {\n\n          // calculate filter efficiency\n          eff = dc/frl;\n\n          // when javascript sort fallback is enabled, you generally need more than ~17% of total docs in resultset\n          // before array intersect is determined to be the faster algorithm, otherwise leave at 10% for loki sort.\n          if (options.useJavascriptSorting) {\n            targetEff = 6;\n          }\n\n          // anything more than ratio of 10:1 (total documents/current results) should use old sort code path\n          // So we will only use array intersection if you have more than 10% of total docs in your current resultset.\n          if (eff <= targetEff || options.forceIndexIntersect) {\n            var idx, fr=this.filteredrows;\n            var io = {};\n            // set up hashobject for simple 'inclusion test' with existing (filtered) results\n            for(idx=0; idx<frl; idx++) {\n              io[fr[idx]] = true;\n            }\n            // grab full sorted binary index array\n            var pv = this.collection.binaryIndices[propname].values;\n\n            // filter by existing results\n            this.filteredrows = pv.filter(function(n) { return io[n]; });\n\n            if (options.desc) {\n              this.filteredrows.reverse();\n            }\n\n            return this;\n          }\n        }\n      }\n\n      // at this point, we will not be able to leverage binary index so we will have to do an array sort\n      \n      // if we have opted to use simplified javascript comparison function...\n      if (options.useJavascriptSorting) {\n        return this.sort(function(obj1, obj2) {\n          if (obj1[propname] === obj2[propname]) return 0;\n          if (obj1[propname] > obj2[propname]) return 1;\n          if (obj1[propname] < obj2[propname]) return -1;\n        });\n      }\n\n      // otherwise use loki sort which will return same results if column is indexed or not\n      var wrappedComparer =\n        (function (prop, desc, data) {\n          var val1, val2, arr;\n          return function (a, b) {\n            if (~prop.indexOf('.')) {\n              arr = prop.split('.');\n              val1 = Utils.getIn(data[a], arr, true);\n              val2 = Utils.getIn(data[b], arr, true);\n            } else {\n              val1 = data[a][prop];\n              val2 = data[b][prop];\n            }\n            return sortHelper(val1, val2, desc);\n          };\n        })(propname, options.desc, this.collection.data);\n\n      this.filteredrows.sort(wrappedComparer);\n\n      return this;\n    };\n\n    /**\n     * Allows sorting a resultset based on multiple columns.\n     * @example\n     * // to sort by age and then name (both ascending)\n     * rs.compoundsort(['age', 'name']);\n     * // to sort by age (ascending) and then by name (descending)\n     * rs.compoundsort(['age', ['name', true]]);\n     *\n     * @param {array} properties - array of property names or subarray of [propertyname, isdesc] used evaluate sort order\n     * @returns {Resultset} Reference to this resultset, sorted, for future chain operations.\n     * @memberof Resultset\n     */\n    Resultset.prototype.compoundsort = function (properties) {\n      if (properties.length === 0) {\n        throw new Error(\"Invalid call to compoundsort, need at least one property\");\n      }\n\n      var prop;\n      if (properties.length === 1) {\n        prop = properties[0];\n        if (Array.isArray(prop)) {\n          return this.simplesort(prop[0], prop[1]);\n        }\n        return this.simplesort(prop, false);\n      }\n\n      // unify the structure of 'properties' to avoid checking it repeatedly while sorting\n      for (var i = 0, len = properties.length; i < len; i += 1) {\n        prop = properties[i];\n        if (!Array.isArray(prop)) {\n          properties[i] = [prop, false];\n        }\n      }\n\n      // if this has no filters applied, just we need to populate filteredrows first\n      if (!this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      var wrappedComparer =\n        (function (props, data) {\n          return function (a, b) {\n            return compoundeval(props, data[a], data[b]);\n          };\n        })(properties, this.collection.data);\n\n      this.filteredrows.sort(wrappedComparer);\n\n      return this;\n    };\n\n    /**\n     * findOr() - oversee the operation of OR'ed query expressions.\n     *    OR'ed expression evaluation runs each expression individually against the full collection,\n     *    and finally does a set OR on each expression's results.\n     *    Each evaluation can utilize a binary index to prevent multiple linear array scans.\n     *\n     * @param {array} expressionArray - array of expressions\n     * @returns {Resultset} this resultset for further chain ops.\n     */\n    Resultset.prototype.findOr = function (expressionArray) {\n      var fr = null,\n        fri = 0,\n        frlen = 0,\n        docset = [],\n        idxset = [],\n        idx = 0,\n        origCount = this.count();\n\n      // If filter is already initialized, then we query against only those items already in filter.\n      // This means no index utilization for fields, so hopefully its filtered to a smallish filteredrows.\n      for (var ei = 0, elen = expressionArray.length; ei < elen; ei++) {\n        // we need to branch existing query to run each filter separately and combine results\n        fr = this.branch().find(expressionArray[ei]).filteredrows;\n        frlen = fr.length;\n        // if the find operation did not reduce the initial set, then the initial set is the actual result\n        if (frlen === origCount) {\n          return this;\n        }\n\n        // add any document 'hits'\n        for (fri = 0; fri < frlen; fri++) {\n          idx = fr[fri];\n          if (idxset[idx] === undefined) {\n            idxset[idx] = true;\n            docset.push(idx);\n          }\n        }\n      }\n\n      this.filteredrows = docset;\n      this.filterInitialized = true;\n\n      return this;\n    };\n    Resultset.prototype.$or = Resultset.prototype.findOr;\n\n    // precompile recursively\n    function precompileQuery (operator, value) {\n      // for regex ops, precompile\n      if (operator === '$regex') {\n        if (Array.isArray(value)) {\n          value = new RegExp(value[0], value[1]);\n        } else if (!(value instanceof RegExp)) {\n          value = new RegExp(value);\n        }\n      }\n      else if (typeof value === 'object') {\n        for (var key in value) {\n          if (key === '$regex' || typeof value[key] === 'object') {\n            value[key] = precompileQuery(key, value[key]);\n          }\n        }\n      }\n\n      return value;\n    }\n\n    /**\n     * findAnd() - oversee the operation of AND'ed query expressions.\n     *    AND'ed expression evaluation runs each expression progressively against the full collection,\n     *    internally utilizing existing chained resultset functionality.\n     *    Only the first filter can utilize a binary index.\n     *\n     * @param {array} expressionArray - array of expressions\n     * @returns {Resultset} this resultset for further chain ops.\n     */\n    Resultset.prototype.findAnd = function (expressionArray) {\n      // we have already implementing method chaining in this (our Resultset class)\n      // so lets just progressively apply user supplied and filters\n      for (var i = 0, len = expressionArray.length; i < len; i++) {\n        if (this.count() === 0) {\n          return this;\n        }\n        this.find(expressionArray[i]);\n      }\n      return this;\n    };\n    Resultset.prototype.$and = Resultset.prototype.findAnd;\n\n    /**\n     * Used for querying via a mongo-style query object.\n     *\n     * @param {object} query - A mongo-style query object used for filtering current results.\n     * @param {boolean=} firstOnly - (Optional) Used by collection.findOne()\n     * @returns {Resultset} this resultset for further chain ops.\n     * @memberof Resultset\n     * @example\n     * var over30 = users.chain().find({ age: { $gte: 30 } }).data();\n     */\n    Resultset.prototype.find = function (query, firstOnly) {\n      if (this.collection.data.length === 0) {\n        this.filteredrows = [];\n        this.filterInitialized = true;\n        return this;\n      }\n\n      var queryObject = query || 'getAll',\n        p,\n        property,\n        queryObjectOp,\n        obj,\n        operator,\n        value,\n        key,\n        searchByIndex = false,\n        result = [],\n        filters = [],\n        index = null;\n\n      // flag if this was invoked via findOne()\n      firstOnly = firstOnly || false;\n\n      if (typeof queryObject === 'object') {\n        for (p in queryObject) {\n          obj = {};\n          obj[p] = queryObject[p];\n          filters.push(obj);\n\n          if (hasOwnProperty.call(queryObject, p)) {\n            property = p;\n            queryObjectOp = queryObject[p];\n          }\n        }\n        // if more than one expression in single query object,\n        // convert implicit $and to explicit $and\n        if (filters.length > 1) {\n          return this.find({ '$and': filters }, firstOnly);\n        }\n      }\n\n      // apply no filters if they want all\n      if (!property || queryObject === 'getAll') {\n        if (firstOnly) {\n          this.filteredrows = (this.collection.data.length > 0)?[0]: [];\n          this.filterInitialized = true;\n        }\n\n        return this;\n      }\n\n      // injecting $and and $or expression tree evaluation here.\n      if (property === '$and' || property === '$or') {\n        this[property](queryObjectOp);\n\n        // for chained find with firstonly,\n        if (firstOnly && this.filteredrows.length > 1) {\n          this.filteredrows = this.filteredrows.slice(0, 1);\n        }\n\n        return this;\n      }\n\n      // see if query object is in shorthand mode (assuming eq operator)\n      if (queryObjectOp === null || (typeof queryObjectOp !== 'object' || queryObjectOp instanceof Date)) {\n        operator = '$eq';\n        value = queryObjectOp;\n      } else if (typeof queryObjectOp === 'object') {\n        for (key in queryObjectOp) {\n          if (hasOwnProperty.call(queryObjectOp, key)) {\n            operator = key;\n            value = queryObjectOp[key];\n            break;\n          }\n        }\n      } else {\n        throw new Error('Do not know what you want to do.');\n      }\n\n      if (operator === '$regex' || typeof value === 'object') {\n        value = precompileQuery(operator, value);\n      }\n\n      // if user is deep querying the object such as find('name.first': 'odin')\n      var usingDotNotation = (property.indexOf('.') !== -1);\n\n      // if an index exists for the property being queried against, use it\n      // for now only enabling where it is the first filter applied and prop is indexed\n      var doIndexCheck = !this.filterInitialized;\n\n      if (doIndexCheck && this.collection.binaryIndices[property] && indexedOps[operator]) {\n        // this is where our lazy index rebuilding will take place\n        // basically we will leave all indexes dirty until we need them\n        // so here we will rebuild only the index tied to this property\n        // ensureIndex() will only rebuild if flagged as dirty since we are not passing force=true param\n        if (this.collection.adaptiveBinaryIndices !== true) {\n          this.collection.ensureIndex(property);\n        }\n\n        searchByIndex = true;\n        index = this.collection.binaryIndices[property];\n      }\n\n      // the comparison function\n      var fun = LokiOps[operator];\n\n      // \"shortcut\" for collection data\n      var t = this.collection.data;\n      // filter data length\n      var i = 0,\n        len = 0;\n\n      // Query executed differently depending on :\n      //    - whether the property being queried has an index defined\n      //    - if chained, we handle first pass differently for initial filteredrows[] population\n      //\n      // For performance reasons, each case has its own if block to minimize in-loop calculations\n\n      var filter, rowIdx = 0;\n\n      // If the filteredrows[] is already initialized, use it\n      if (this.filterInitialized) {\n        filter = this.filteredrows;\n        len = filter.length;\n\n        // currently supporting dot notation for non-indexed conditions only\n        if (usingDotNotation) {\n          property = property.split('.');\n          for(i=0; i<len; i++) {\n            rowIdx = filter[i];\n            if (dotSubScan(t[rowIdx], property, fun, value)) {\n              result.push(rowIdx);\n            }\n          }\n        } else {\n          for(i=0; i<len; i++) {\n            rowIdx = filter[i];\n            if (fun(t[rowIdx][property], value)) {\n              result.push(rowIdx);\n            }\n          }\n        }\n      }\n      // first chained query so work against data[] but put results in filteredrows\n      else {\n        // if not searching by index\n        if (!searchByIndex) {\n          len = t.length;\n\n          if (usingDotNotation) {\n            property = property.split('.');\n            for(i=0; i<len; i++) {\n              if (dotSubScan(t[i], property, fun, value)) {\n                result.push(i);\n                if (firstOnly) {\n                  this.filteredrows = result;\n                  this.filterInitialized = true;\n                  return this;\n                }\n              }\n            }\n          } else {\n            for(i=0; i<len; i++) {\n              if (fun(t[i][property], value)) {\n                result.push(i);\n                if (firstOnly) {\n                  this.filteredrows = result;\n                  this.filterInitialized = true;\n                  return this;\n                }\n              }\n            }\n          }\n        } else {\n          // search by index\n          var segm = this.collection.calculateRange(operator, property, value);\n\n          if (operator !== '$in') {\n            for (i = segm[0]; i <= segm[1]; i++) {\n              if (indexedOps[operator] !== true) {\n                // must be a function, implying 2nd phase filtering of results from calculateRange\n                if (indexedOps[operator](Utils.getIn(t[index.values[i]], property, usingDotNotation), value)) {\n                  result.push(index.values[i]);\n                  if (firstOnly) {\n                    this.filteredrows = result;\n                    this.filterInitialized = true;\n                    return this;\n                  }\n                }\n              }\n              else {\n                  result.push(index.values[i]);\n                  if (firstOnly) {\n                    this.filteredrows = result;\n                    this.filterInitialized = true;\n                    return this;\n                  }\n              }\n            }\n          } else {\n            for (i = 0, len = segm.length; i < len; i++) {\n              result.push(index.values[segm[i]]);\n              if (firstOnly) {\n                this.filteredrows = result;\n                this.filterInitialized = true;\n                return this;\n              }\n            }\n          }\n        }\n\n      }\n\n      this.filteredrows = result;\n      this.filterInitialized = true; // next time work against filteredrows[]\n      return this;\n    };\n\n\n    /**\n     * where() - Used for filtering via a javascript filter function.\n     *\n     * @param {function} fun - A javascript function used for filtering current results by.\n     * @returns {Resultset} this resultset for further chain ops.\n     * @memberof Resultset\n     * @example\n     * var over30 = users.chain().where(function(obj) { return obj.age >= 30; }.data();\n     */\n    Resultset.prototype.where = function (fun) {\n      var viewFunction,\n        result = [];\n\n      if ('function' === typeof fun) {\n        viewFunction = fun;\n      } else {\n        throw new TypeError('Argument is not a stored view or a function');\n      }\n      try {\n        // If the filteredrows[] is already initialized, use it\n        if (this.filterInitialized) {\n          var j = this.filteredrows.length;\n\n          while (j--) {\n            if (viewFunction(this.collection.data[this.filteredrows[j]]) === true) {\n              result.push(this.filteredrows[j]);\n            }\n          }\n\n          this.filteredrows = result;\n\n          return this;\n        }\n        // otherwise this is initial chained op, work against data, push into filteredrows[]\n        else {\n          var k = this.collection.data.length;\n\n          while (k--) {\n            if (viewFunction(this.collection.data[k]) === true) {\n              result.push(k);\n            }\n          }\n\n          this.filteredrows = result;\n          this.filterInitialized = true;\n\n          return this;\n        }\n      } catch (err) {\n        throw err;\n      }\n    };\n\n    /**\n     * count() - returns the number of documents in the resultset.\n     *\n     * @returns {number} The number of documents in the resultset.\n     * @memberof Resultset\n     * @example\n     * var over30Count = users.chain().find({ age: { $gte: 30 } }).count();\n     */\n    Resultset.prototype.count = function () {\n      if (this.filterInitialized) {\n        return this.filteredrows.length;\n      }\n      return this.collection.count();\n    };\n\n    /**\n     * Terminates the chain and returns array of filtered documents\n     *\n     * @param {object=} options - allows specifying 'forceClones' and 'forceCloneMethod' options.\n     * @param {boolean} options.forceClones - Allows forcing the return of cloned objects even when\n     *        the collection is not configured for clone object.\n     * @param {string} options.forceCloneMethod - Allows overriding the default or collection specified cloning method.\n     *        Possible values include 'parse-stringify', 'jquery-extend-deep', 'shallow', 'shallow-assign'\n     * @param {bool} options.removeMeta - Will force clones and strip $loki and meta properties from documents\n     *\n     * @returns {array} Array of documents in the resultset\n     * @memberof Resultset\n     * @example\n     * var resutls = users.chain().find({ age: 34 }).data();\n     */\n    Resultset.prototype.data = function (options) {\n      var result = [],\n        data = this.collection.data,\n        obj,\n        len,\n        i,\n        method;\n\n      options = options || {};\n\n      // if user opts to strip meta, then force clones and use 'shallow' if 'force' options are not present\n      if (options.removeMeta && !options.forceClones) {\n        options.forceClones = true;\n        options.forceCloneMethod = options.forceCloneMethod || 'shallow';\n      }\n\n      // if collection has delta changes active, then force clones and use 'parse-stringify' for effective change tracking of nested objects\n      if (!this.collection.disableDeltaChangesApi) {\n        options.forceClones = true;\n        options.forceCloneMethod = 'parse-stringify';\n      }\n\n      // if this has no filters applied, just return collection.data\n      if (!this.filterInitialized) {\n        if (this.filteredrows.length === 0) {\n          // determine whether we need to clone objects or not\n          if (this.collection.cloneObjects || options.forceClones) {\n            len = data.length;\n            method = options.forceCloneMethod || this.collection.cloneMethod;\n\n            for (i = 0; i < len; i++) {\n              obj = clone(data[i], method);\n              if (options.removeMeta) {\n                delete obj.$loki;\n                delete obj.meta;\n              }\n              result.push(obj);\n            }\n            return result;\n          }\n          // otherwise we are not cloning so return sliced array with same object references\n          else {\n            return data.slice();\n          }\n        } else {\n          // filteredrows must have been set manually, so use it\n          this.filterInitialized = true;\n        }\n      }\n\n      var fr = this.filteredrows;\n      len = fr.length;\n\n      if (this.collection.cloneObjects || options.forceClones) {\n        method = options.forceCloneMethod || this.collection.cloneMethod;\n        for (i = 0; i < len; i++) {\n          obj = clone(data[fr[i]], method);\n          if (options.removeMeta) {\n            delete obj.$loki;\n            delete obj.meta;\n          }\n          result.push(obj);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          result.push(data[fr[i]]);\n        }\n      }\n      return result;\n    };\n\n    /**\n     * Used to run an update operation on all documents currently in the resultset.\n     *\n     * @param {function} updateFunction - User supplied updateFunction(obj) will be executed for each document object.\n     * @returns {Resultset} this resultset for further chain ops.\n     * @memberof Resultset\n     * @example\n     * users.chain().find({ country: 'de' }).update(function(user) {\n     *   user.phoneFormat = \"+49 AAAA BBBBBB\";\n     * });\n     */\n    Resultset.prototype.update = function (updateFunction) {\n\n      if (typeof (updateFunction) !== \"function\") {\n        throw new TypeError('Argument is not a function');\n      }\n\n      // if this has no filters applied, we need to populate filteredrows first\n      if (!this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      var obj, len = this.filteredrows.length,\n        rcd = this.collection.data;\n\n      // pass in each document object currently in resultset to user supplied updateFunction\n      for (var idx = 0; idx < len; idx++) {\n        // if we have cloning option specified or are doing differential delta changes, clone object first\n        if (this.collection.cloneObjects || !this.collection.disableDeltaChangesApi) {\n          obj = clone(rcd[this.filteredrows[idx]], this.collection.cloneMethod);\n          updateFunction(obj);\n          this.collection.update(obj);\n        }\n        else {\n          // no need to clone, so just perform update on collection data object instance\n          updateFunction(rcd[this.filteredrows[idx]]);\n          this.collection.update(rcd[this.filteredrows[idx]]);\n        }\n      }\n\n      return this;\n    };\n\n    /**\n     * Removes all document objects which are currently in resultset from collection (as well as resultset)\n     *\n     * @returns {Resultset} this (empty) resultset for further chain ops.\n     * @memberof Resultset\n     * @example\n     * // remove users inactive since 1/1/2001\n     * users.chain().find({ lastActive: { $lte: new Date(\"1/1/2001\").getTime() } }).remove();\n     */\n    Resultset.prototype.remove = function () {\n\n      // if this has no filters applied, we need to populate filteredrows first\n      if (!this.filterInitialized && this.filteredrows.length === 0) {\n        this.filteredrows = this.collection.prepareFullDocIndex();\n      }\n\n      this.collection.removeBatchByPositions(this.filteredrows);\n\n      this.filteredrows = [];\n\n      return this;\n    };\n\n    /**\n     * data transformation via user supplied functions\n     *\n     * @param {function} mapFunction - this function accepts a single document for you to transform and return\n     * @param {function} reduceFunction - this function accepts many (array of map outputs) and returns single value\n     * @returns {value} The output of your reduceFunction\n     * @memberof Resultset\n     * @example\n     * var db = new loki(\"order.db\");\n     * var orders = db.addCollection(\"orders\");\n     * orders.insert([{ qty: 4, unitCost: 100.00 }, { qty: 10, unitCost: 999.99 }, { qty: 2, unitCost: 49.99 }]);\n     *\n     * function mapfun (obj) { return obj.qty*obj.unitCost };\n     * function reducefun(array) {\n     *   var grandTotal=0;\n     *   array.forEach(function(orderTotal) { grandTotal += orderTotal; });\n     *   return grandTotal;\n     * }\n     * var grandOrderTotal = orders.chain().mapReduce(mapfun, reducefun);\n     * console.log(grandOrderTotal);\n     */\n    Resultset.prototype.mapReduce = function (mapFunction, reduceFunction) {\n      try {\n        return reduceFunction(this.data().map(mapFunction));\n      } catch (err) {\n        throw err;\n      }\n    };\n\n    /**\n     * eqJoin() - Left joining two sets of data. Join keys can be defined or calculated properties\n     * eqJoin expects the right join key values to be unique.  Otherwise left data will be joined on the last joinData object with that key\n     * @param {Array|Resultset|Collection} joinData - Data array to join to.\n     * @param {(string|function)} leftJoinKey - Property name in this result set to join on or a function to produce a value to join on\n     * @param {(string|function)} rightJoinKey - Property name in the joinData to join on or a function to produce a value to join on\n     * @param {function=} mapFun - (Optional) A function that receives each matching pair and maps them into output objects - function(left,right){return joinedObject}\n     * @param {object=} dataOptions - options to data() before input to your map function\n     * @param {bool} dataOptions.removeMeta - allows removing meta before calling mapFun\n     * @param {boolean} dataOptions.forceClones - forcing the return of cloned objects to your map object\n     * @param {string} dataOptions.forceCloneMethod - Allows overriding the default or collection specified cloning method.\n     * @returns {Resultset} A resultset with data in the format [{left: leftObj, right: rightObj}]\n     * @memberof Resultset\n     * @example\n     * var db = new loki('sandbox.db');\n     *\n     * var products = db.addCollection('products');\n     * var orders = db.addCollection('orders');\n     *\n     * products.insert({ productId: \"100234\", name: \"flywheel energy storage\", unitCost: 19999.99 });\n     * products.insert({ productId: \"140491\", name: \"300F super capacitor\", unitCost: 129.99 });\n     * products.insert({ productId: \"271941\", name: \"fuel cell\", unitCost: 3999.99 });\n     * products.insert({ productId: \"174592\", name: \"390V 3AH lithium bank\", unitCost: 4999.99 });\n     *\n     * orders.insert({ orderDate : new Date(\"12/1/2017\").getTime(), prodId: \"174592\", qty: 2, customerId: 2 });\n     * orders.insert({ orderDate : new Date(\"4/15/2016\").getTime(), prodId: \"271941\", qty: 1, customerId: 1 });\n     * orders.insert({ orderDate : new Date(\"3/12/2017\").getTime(), prodId: \"140491\", qty: 4, customerId: 4 });\n     * orders.insert({ orderDate : new Date(\"7/31/2017\").getTime(), prodId: \"100234\", qty: 7, customerId: 3 });\n     * orders.insert({ orderDate : new Date(\"8/3/2016\").getTime(), prodId: \"174592\", qty: 3, customerId: 5 });\n     *\n     * var mapfun = function(left, right) {\n     *   return {\n     *     orderId: left.$loki,\n     *     orderDate: new Date(left.orderDate) + '',\n     *     customerId: left.customerId,\n     *     qty: left.qty,\n     *     productId: left.prodId,\n     *     prodName: right.name,\n     *     prodCost: right.unitCost,\n     *     orderTotal: +((right.unitCost * left.qty).toFixed(2))\n     *   };\n     * };\n     *\n     * // join orders with relevant product info via eqJoin\n     * var orderSummary = orders.chain().eqJoin(products, \"prodId\", \"productId\", mapfun).data();\n     * \n     * console.log(orderSummary);     \n     */\n    Resultset.prototype.eqJoin = function (joinData, leftJoinKey, rightJoinKey, mapFun, dataOptions) {\n\n      var leftData = [],\n        leftDataLength,\n        rightData = [],\n        rightDataLength,\n        key,\n        result = [],\n        leftKeyisFunction = typeof leftJoinKey === 'function',\n        rightKeyisFunction = typeof rightJoinKey === 'function',\n        joinMap = {};\n\n      //get the left data\n      leftData = this.data(dataOptions);\n      leftDataLength = leftData.length;\n\n      //get the right data\n      if (joinData instanceof Collection) {\n        rightData = joinData.chain().data(dataOptions);\n      } else if (joinData instanceof Resultset) {\n        rightData = joinData.data(dataOptions);\n      } else if (Array.isArray(joinData)) {\n        rightData = joinData;\n      } else {\n        throw new TypeError('joinData needs to be an array or result set');\n      }\n      rightDataLength = rightData.length;\n\n      //construct a lookup table\n\n      for (var i = 0; i < rightDataLength; i++) {\n        key = rightKeyisFunction ? rightJoinKey(rightData[i]) : rightData[i][rightJoinKey];\n        joinMap[key] = rightData[i];\n      }\n\n      if (!mapFun) {\n        mapFun = function (left, right) {\n          return {\n            left: left,\n            right: right\n          };\n        };\n      }\n\n      //Run map function over each object in the resultset\n      for (var j = 0; j < leftDataLength; j++) {\n        key = leftKeyisFunction ? leftJoinKey(leftData[j]) : leftData[j][leftJoinKey];\n        result.push(mapFun(leftData[j], joinMap[key] || {}));\n      }\n\n      //return return a new resultset with no filters\n      this.collection = new Collection('joinData');\n      this.collection.insert(result);\n      this.filteredrows = [];\n      this.filterInitialized = false;\n\n      return this;\n    };\n\n    /**\n     * Applies a map function into a new collection for further chaining.\n     * @param {function} mapFun - javascript map function\n     * @param {object=} dataOptions - options to data() before input to your map function\n     * @param {bool} dataOptions.removeMeta - allows removing meta before calling mapFun\n     * @param {boolean} dataOptions.forceClones - forcing the return of cloned objects to your map object\n     * @param {string} dataOptions.forceCloneMethod - Allows overriding the default or collection specified cloning method.\n     * @memberof Resultset\n     * @example\n     * var orders.chain().find({ productId: 32 }).map(function(obj) {\n     *   return {\n     *     orderId: $loki,\n     *     productId: productId,\n     *     quantity: qty\n     *   };\n     * });\n     */\n    Resultset.prototype.map = function (mapFun, dataOptions) {\n      var data = this.data(dataOptions).map(mapFun);\n      //return return a new resultset with no filters\n      this.collection = new Collection('mappedData');\n      this.collection.insert(data);\n      this.filteredrows = [];\n      this.filterInitialized = false;\n\n      return this;\n    };\n\n    /**\n     * DynamicView class is a versatile 'live' view class which can have filters and sorts applied.\n     *    Collection.addDynamicView(name) instantiates this DynamicView object and notifies it\n     *    whenever documents are add/updated/removed so it can remain up-to-date. (chainable)\n     *\n     * @example\n     * var mydv = mycollection.addDynamicView('test');  // default is non-persistent\n     * mydv.applyFind({ 'doors' : 4 });\n     * mydv.applyWhere(function(obj) { return obj.name === 'Toyota'; });\n     * var results = mydv.data();\n     *\n     * @constructor DynamicView\n     * @implements LokiEventEmitter\n     * @param {Collection} collection - A reference to the collection to work against\n     * @param {string} name - The name of this dynamic view\n     * @param {object=} options - (Optional) Pass in object with 'persistent' and/or 'sortPriority' options.\n     * @param {boolean} [options.persistent=false] - indicates if view is to main internal results array in 'resultdata'\n     * @param {string} [options.sortPriority='passive'] - 'passive' (sorts performed on call to data) or 'active' (after updates)\n     * @param {number} options.minRebuildInterval - minimum rebuild interval (need clarification to docs here)\n     * @see {@link Collection#addDynamicView} to construct instances of DynamicView\n     */\n    function DynamicView(collection, name, options) {\n      this.collection = collection;\n      this.name = name;\n      this.rebuildPending = false;\n      this.options = options || {};\n\n      if (!this.options.hasOwnProperty('persistent')) {\n        this.options.persistent = false;\n      }\n\n      // 'persistentSortPriority':\n      // 'passive' will defer the sort phase until they call data(). (most efficient overall)\n      // 'active' will sort async whenever next idle. (prioritizes read speeds)\n      if (!this.options.hasOwnProperty('sortPriority')) {\n        this.options.sortPriority = 'passive';\n      }\n\n      if (!this.options.hasOwnProperty('minRebuildInterval')) {\n        this.options.minRebuildInterval = 1;\n      }\n\n      this.resultset = new Resultset(collection);\n      this.resultdata = [];\n      this.resultsdirty = false;\n\n      this.cachedresultset = null;\n\n      // keep ordered filter pipeline\n      this.filterPipeline = [];\n\n      // sorting member variables\n      // we only support one active search, applied using applySort() or applySimpleSort()\n      this.sortFunction = null;\n      this.sortCriteria = null;\n      this.sortCriteriaSimple = null;\n      this.sortDirty = false;\n\n      // for now just have 1 event for when we finally rebuilt lazy view\n      // once we refactor transactions, i will tie in certain transactional events\n\n      this.events = {\n        'rebuild': []\n      };\n    }\n\n    DynamicView.prototype = new LokiEventEmitter();\n\n\n    /**\n     * rematerialize() - internally used immediately after deserialization (loading)\n     *    This will clear out and reapply filterPipeline ops, recreating the view.\n     *    Since where filters do not persist correctly, this method allows\n     *    restoring the view to state where user can re-apply those where filters.\n     *\n     * @param {Object=} options - (Optional) allows specification of 'removeWhereFilters' option\n     * @returns {DynamicView} This dynamic view for further chained ops.\n     * @memberof DynamicView\n     * @fires DynamicView.rebuild\n     */\n    DynamicView.prototype.rematerialize = function (options) {\n      var fpl,\n        fpi,\n        idx;\n\n      options = options || {};\n\n      this.resultdata = [];\n      this.resultsdirty = true;\n      this.resultset = new Resultset(this.collection);\n\n      if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n        this.sortDirty = true;\n      }\n\n      if (options.hasOwnProperty('removeWhereFilters')) {\n        // for each view see if it had any where filters applied... since they don't\n        // serialize those functions lets remove those invalid filters\n        fpl = this.filterPipeline.length;\n        fpi = fpl;\n        while (fpi--) {\n          if (this.filterPipeline[fpi].type === 'where') {\n            if (fpi !== this.filterPipeline.length - 1) {\n              this.filterPipeline[fpi] = this.filterPipeline[this.filterPipeline.length - 1];\n            }\n\n            this.filterPipeline.length--;\n          }\n        }\n      }\n\n      // back up old filter pipeline, clear filter pipeline, and reapply pipeline ops\n      var ofp = this.filterPipeline;\n      this.filterPipeline = [];\n\n      // now re-apply 'find' filterPipeline ops\n      fpl = ofp.length;\n      for (idx = 0; idx < fpl; idx++) {\n        this.applyFind(ofp[idx].val);\n      }\n\n      // during creation of unit tests, i will remove this forced refresh and leave lazy\n      this.data();\n\n      // emit rebuild event in case user wants to be notified\n      this.emit('rebuild', this);\n\n      return this;\n    };\n\n    /**\n     * branchResultset() - Makes a copy of the internal resultset for branched queries.\n     *    Unlike this dynamic view, the branched resultset will not be 'live' updated,\n     *    so your branched query should be immediately resolved and not held for future evaluation.\n     *\n     * @param {(string|array=)} transform - Optional name of collection transform, or an array of transform steps\n     * @param {object=} parameters - optional parameters (if optional transform requires them)\n     * @returns {Resultset} A copy of the internal resultset for branched queries.\n     * @memberof DynamicView\n     * @example\n     * var db = new loki('test');\n     * var coll = db.addCollection('mydocs');\n     * var dv = coll.addDynamicView('myview');\n     * var tx = [\n     *   {\n     *     type: 'offset',\n     *     value: '[%lktxp]pageStart'\n     *   },\n     *   {\n     *     type: 'limit',\n     *     value: '[%lktxp]pageSize'\n     *   }\n     * ];\n     * coll.addTransform('viewPaging', tx);\n     * \n     * // add some records\n     * \n     * var results = dv.branchResultset('viewPaging', { pageStart: 10, pageSize: 10 }).data();     \n     */\n    DynamicView.prototype.branchResultset = function (transform, parameters) {\n      var rs = this.resultset.branch();\n\n      if (typeof transform === 'undefined') {\n        return rs;\n      }\n\n      return rs.transform(transform, parameters);\n    };\n\n    /**\n     * toJSON() - Override of toJSON to avoid circular references\n     *\n     */\n    DynamicView.prototype.toJSON = function () {\n      var copy = new DynamicView(this.collection, this.name, this.options);\n\n      copy.resultset = this.resultset;\n      copy.resultdata = []; // let's not save data (copy) to minimize size\n      copy.resultsdirty = true;\n      copy.filterPipeline = this.filterPipeline;\n      copy.sortFunction = this.sortFunction;\n      copy.sortCriteria = this.sortCriteria;\n      copy.sortCriteriaSimple = this.sortCriteriaSimple || null;\n      copy.sortDirty = this.sortDirty;\n\n      // avoid circular reference, reapply in db.loadJSON()\n      copy.collection = null;\n\n      return copy;\n    };\n\n    /**\n     * removeFilters() - Used to clear pipeline and reset dynamic view to initial state.\n     *     Existing options should be retained.\n     * @param {object=} options - configure removeFilter behavior\n     * @param {boolean=} options.queueSortPhase - (default: false) if true we will async rebuild view (maybe set default to true in future?)\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.removeFilters = function (options) {\n      options = options || {};\n\n      this.rebuildPending = false;\n      this.resultset.reset();\n      this.resultdata = [];\n      this.resultsdirty = true;\n\n      this.cachedresultset = null;\n\n      // keep ordered filter pipeline\n      this.filterPipeline = [];\n\n      // sorting member variables\n      // we only support one active search, applied using applySort() or applySimpleSort()\n      this.sortFunction = null;\n      this.sortCriteria = null;\n      this.sortCriteriaSimple = null;\n      this.sortDirty = false;\n\n      if (options.queueSortPhase === true) {\n        this.queueSortPhase();\n      }\n    };\n\n    /**\n     * applySort() - Used to apply a sort to the dynamic view\n     * @example\n     * dv.applySort(function(obj1, obj2) {\n     *   if (obj1.name === obj2.name) return 0;\n     *   if (obj1.name > obj2.name) return 1;\n     *   if (obj1.name < obj2.name) return -1;\n     * });\n     *\n     * @param {function} comparefun - a javascript compare function used for sorting\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applySort = function (comparefun) {\n      this.sortFunction = comparefun;\n      this.sortCriteria = null;\n      this.sortCriteriaSimple = null;\n\n      this.queueSortPhase();\n\n      return this;\n    };\n\n    /**\n     * applySimpleSort() - Used to specify a property used for view translation.\n     * @example\n     * dv.applySimpleSort(\"name\");\n     *\n     * @param {string} propname - Name of property by which to sort.\n     * @param {object|boolean=} options - boolean for sort descending or options object\n     * @param {boolean} [options.desc=false] - whether we should sort descending.\n     * @param {boolean} [options.disableIndexIntersect=false] - whether we should explicity not use array intersection.\n     * @param {boolean} [options.forceIndexIntersect=false] - force array intersection (if binary index exists).\n     * @param {boolean} [options.useJavascriptSorting=false] - whether results are sorted via basic javascript sort.\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applySimpleSort = function (propname, options) {\n      this.sortCriteriaSimple = { propname: propname, options: options || false };\n      this.sortCriteria = null;\n      this.sortFunction = null;\n\n      this.queueSortPhase();\n\n      return this;\n    };\n\n    /**\n     * applySortCriteria() - Allows sorting a resultset based on multiple columns.\n     * @example\n     * // to sort by age and then name (both ascending)\n     * dv.applySortCriteria(['age', 'name']);\n     * // to sort by age (ascending) and then by name (descending)\n     * dv.applySortCriteria(['age', ['name', true]);\n     * // to sort by age (descending) and then by name (descending)\n     * dv.applySortCriteria(['age', true], ['name', true]);\n     *\n     * @param {array} properties - array of property names or subarray of [propertyname, isdesc] used evaluate sort order\n     * @returns {DynamicView} Reference to this DynamicView, sorted, for future chain operations.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applySortCriteria = function (criteria) {\n      this.sortCriteria = criteria;\n      this.sortCriteriaSimple = null;\n      this.sortFunction = null;\n\n      this.queueSortPhase();\n\n      return this;\n    };\n\n    /**\n     * startTransaction() - marks the beginning of a transaction.\n     *\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     */\n    DynamicView.prototype.startTransaction = function () {\n      this.cachedresultset = this.resultset.copy();\n\n      return this;\n    };\n\n    /**\n     * commit() - commits a transaction.\n     *\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     */\n    DynamicView.prototype.commit = function () {\n      this.cachedresultset = null;\n\n      return this;\n    };\n\n    /**\n     * rollback() - rolls back a transaction.\n     *\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     */\n    DynamicView.prototype.rollback = function () {\n      this.resultset = this.cachedresultset;\n\n      if (this.options.persistent) {\n        // for now just rebuild the persistent dynamic view data in this worst case scenario\n        // (a persistent view utilizing transactions which get rolled back), we already know the filter so not too bad.\n        this.resultdata = this.resultset.data();\n\n        this.emit('rebuild', this);\n      }\n\n      return this;\n    };\n\n\n    /**\n     * Implementation detail.\n     * _indexOfFilterWithId() - Find the index of a filter in the pipeline, by that filter's ID.\n     *\n     * @param {(string|number)} uid - The unique ID of the filter.\n     * @returns {number}: index of the referenced filter in the pipeline; -1 if not found.\n     */\n    DynamicView.prototype._indexOfFilterWithId = function (uid) {\n      if (typeof uid === 'string' || typeof uid === 'number') {\n        for (var idx = 0, len = this.filterPipeline.length; idx < len; idx += 1) {\n          if (uid === this.filterPipeline[idx].uid) {\n            return idx;\n          }\n        }\n      }\n      return -1;\n    };\n\n    /**\n     * Implementation detail.\n     * _addFilter() - Add the filter object to the end of view's filter pipeline and apply the filter to the resultset.\n     *\n     * @param {object} filter - The filter object. Refer to applyFilter() for extra details.\n     */\n    DynamicView.prototype._addFilter = function (filter) {\n      this.filterPipeline.push(filter);\n      this.resultset[filter.type](filter.val);\n    };\n\n    /**\n     * reapplyFilters() - Reapply all the filters in the current pipeline.\n     *\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     */\n    DynamicView.prototype.reapplyFilters = function () {\n      this.resultset.reset();\n\n      this.cachedresultset = null;\n      if (this.options.persistent) {\n        this.resultdata = [];\n        this.resultsdirty = true;\n      }\n\n      var filters = this.filterPipeline;\n      this.filterPipeline = [];\n\n      for (var idx = 0, len = filters.length; idx < len; idx += 1) {\n        this._addFilter(filters[idx]);\n      }\n\n      if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n        this.queueSortPhase();\n      } else {\n        this.queueRebuildEvent();\n      }\n\n      return this;\n    };\n\n    /**\n     * applyFilter() - Adds or updates a filter in the DynamicView filter pipeline\n     *\n     * @param {object} filter - A filter object to add to the pipeline.\n     *    The object is in the format { 'type': filter_type, 'val', filter_param, 'uid', optional_filter_id }\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applyFilter = function (filter) {\n      var idx = this._indexOfFilterWithId(filter.uid);\n      if (idx >= 0) {\n        this.filterPipeline[idx] = filter;\n        return this.reapplyFilters();\n      }\n\n      this.cachedresultset = null;\n      if (this.options.persistent) {\n        this.resultdata = [];\n        this.resultsdirty = true;\n      }\n\n      this._addFilter(filter);\n\n      if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n        this.queueSortPhase();\n      } else {\n        this.queueRebuildEvent();\n      }\n\n      return this;\n    };\n\n    /**\n     * applyFind() - Adds or updates a mongo-style query option in the DynamicView filter pipeline\n     *\n     * @param {object} query - A mongo-style query object to apply to pipeline\n     * @param {(string|number)=} uid - Optional: The unique ID of this filter, to reference it in the future.\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applyFind = function (query, uid) {\n      this.applyFilter({\n        type: 'find',\n        val: query,\n        uid: uid\n      });\n      return this;\n    };\n\n    /**\n     * applyWhere() - Adds or updates a javascript filter function in the DynamicView filter pipeline\n     *\n     * @param {function} fun - A javascript filter function to apply to pipeline\n     * @param {(string|number)=} uid - Optional: The unique ID of this filter, to reference it in the future.\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.applyWhere = function (fun, uid) {\n      this.applyFilter({\n        type: 'where',\n        val: fun,\n        uid: uid\n      });\n      return this;\n    };\n\n    /**\n     * removeFilter() - Remove the specified filter from the DynamicView filter pipeline\n     *\n     * @param {(string|number)} uid - The unique ID of the filter to be removed.\n     * @returns {DynamicView} this DynamicView object, for further chain ops.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.removeFilter = function (uid) {\n      var idx = this._indexOfFilterWithId(uid);\n      if (idx < 0) {\n        throw new Error(\"Dynamic view does not contain a filter with ID: \" + uid);\n      }\n\n      this.filterPipeline.splice(idx, 1);\n      this.reapplyFilters();\n      return this;\n    };\n\n    /**\n     * count() - returns the number of documents representing the current DynamicView contents.\n     *\n     * @returns {number} The number of documents representing the current DynamicView contents.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.count = function () {\n      // in order to be accurate we will pay the minimum cost (and not alter dv state management)\n      // recurring resultset data resolutions should know internally its already up to date.\n      // for persistent data this will not update resultdata nor fire rebuild event.\n      if (this.resultsdirty) {\n        this.resultdata = this.resultset.data();\n      }\n\n      return this.resultset.count();\n    };\n\n    /**\n     * data() - resolves and pending filtering and sorting, then returns document array as result.\n     *\n     * @param {object=} options - optional parameters to pass to resultset.data() if non-persistent\n     * @param {boolean} options.forceClones - Allows forcing the return of cloned objects even when\n     *        the collection is not configured for clone object.\n     * @param {string} options.forceCloneMethod - Allows overriding the default or collection specified cloning method.\n     *        Possible values include 'parse-stringify', 'jquery-extend-deep', 'shallow', 'shallow-assign'\n     * @param {bool} options.removeMeta - Will force clones and strip $loki and meta properties from documents\n     * @returns {array} An array of documents representing the current DynamicView contents.\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.data = function (options) {\n      // using final sort phase as 'catch all' for a few use cases which require full rebuild\n      if (this.sortDirty || this.resultsdirty) {\n        this.performSortPhase({\n          suppressRebuildEvent: true\n        });\n      }\n      return (this.options.persistent) ? (this.resultdata) : (this.resultset.data(options));\n    };\n\n    /**\n     * queueRebuildEvent() - When the view is not sorted we may still wish to be notified of rebuild events.\n     *     This event will throttle and queue a single rebuild event when batches of updates affect the view.\n     */\n    DynamicView.prototype.queueRebuildEvent = function () {\n      if (this.rebuildPending) {\n        return;\n      }\n      this.rebuildPending = true;\n\n      var self = this;\n      setTimeout(function () {\n        if (self.rebuildPending) {\n          self.rebuildPending = false;\n          self.emit('rebuild', self);\n        }\n      }, this.options.minRebuildInterval);\n    };\n\n    /**\n     * queueSortPhase : If the view is sorted we will throttle sorting to either :\n     *    (1) passive - when the user calls data(), or\n     *    (2) active - once they stop updating and yield js thread control\n     */\n    DynamicView.prototype.queueSortPhase = function () {\n      // already queued? exit without queuing again\n      if (this.sortDirty) {\n        return;\n      }\n      this.sortDirty = true;\n\n      var self = this;\n      if (this.options.sortPriority === \"active\") {\n        // active sorting... once they are done and yield js thread, run async performSortPhase()\n        setTimeout(function () {\n          self.performSortPhase();\n        }, this.options.minRebuildInterval);\n      } else {\n        // must be passive sorting... since not calling performSortPhase (until data call), lets use queueRebuildEvent to\n        // potentially notify user that data has changed.\n        this.queueRebuildEvent();\n      }\n    };\n\n    /**\n     * performSortPhase() - invoked synchronously or asynchronously to perform final sort phase (if needed)\n     *\n     */\n    DynamicView.prototype.performSortPhase = function (options) {\n      // async call to this may have been pre-empted by synchronous call to data before async could fire\n      if (!this.sortDirty && !this.resultsdirty) {\n        return;\n      }\n\n      options = options || {};\n\n      if (this.sortDirty) {\n        if (this.sortFunction) {\n          this.resultset.sort(this.sortFunction);\n        } else if (this.sortCriteria) {\n          this.resultset.compoundsort(this.sortCriteria);\n        } else if (this.sortCriteriaSimple) {\n          this.resultset.simplesort(this.sortCriteriaSimple.propname, this.sortCriteriaSimple.options);\n        }\n\n        this.sortDirty = false;\n      }\n\n      if (this.options.persistent) {\n        // persistent view, rebuild local resultdata array\n        this.resultdata = this.resultset.data();\n        this.resultsdirty = false;\n      }\n\n      if (!options.suppressRebuildEvent) {\n        this.emit('rebuild', this);\n      }\n    };\n\n    /**\n     * evaluateDocument() - internal method for (re)evaluating document inclusion.\n     *    Called by : collection.insert() and collection.update().\n     *\n     * @param {int} objIndex - index of document to (re)run through filter pipeline.\n     * @param {bool} isNew - true if the document was just added to the collection.\n     */\n    DynamicView.prototype.evaluateDocument = function (objIndex, isNew) {\n      // if no filter applied yet, the result 'set' should remain 'everything'\n      if (!this.resultset.filterInitialized) {\n        if (this.options.persistent) {\n          this.resultdata = this.resultset.data();\n        }\n        // need to re-sort to sort new document\n        if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n        return;\n      }\n\n      var ofr = this.resultset.filteredrows;\n      var oldPos = (isNew) ? (-1) : (ofr.indexOf(+objIndex));\n      var oldlen = ofr.length;\n\n      // creating a 1-element resultset to run filter chain ops on to see if that doc passes filters;\n      // mostly efficient algorithm, slight stack overhead price (this function is called on inserts and updates)\n      var evalResultset = new Resultset(this.collection);\n      evalResultset.filteredrows = [objIndex];\n      evalResultset.filterInitialized = true;\n      var filter;\n      for (var idx = 0, len = this.filterPipeline.length; idx < len; idx++) {\n        filter = this.filterPipeline[idx];\n        evalResultset[filter.type](filter.val);\n      }\n\n      // not a true position, but -1 if not pass our filter(s), 0 if passed filter(s)\n      var newPos = (evalResultset.filteredrows.length === 0) ? -1 : 0;\n\n      // wasn't in old, shouldn't be now... do nothing\n      if (oldPos === -1 && newPos === -1) return;\n\n      // wasn't in resultset, should be now... add\n      if (oldPos === -1 && newPos !== -1) {\n        ofr.push(objIndex);\n\n        if (this.options.persistent) {\n          this.resultdata.push(this.collection.data[objIndex]);\n        }\n\n        // need to re-sort to sort new document\n        if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n\n        return;\n      }\n\n      // was in resultset, shouldn't be now... delete\n      if (oldPos !== -1 && newPos === -1) {\n        if (oldPos < oldlen - 1) {\n          ofr.splice(oldPos, 1);\n\n          if (this.options.persistent) {\n            this.resultdata.splice(oldPos, 1);\n          }\n        } else {\n          ofr.length = oldlen - 1;\n\n          if (this.options.persistent) {\n            this.resultdata.length = oldlen - 1;\n          }\n        }\n\n        // in case changes to data altered a sort column\n        if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n\n        return;\n      }\n\n      // was in resultset, should still be now... (update persistent only?)\n      if (oldPos !== -1 && newPos !== -1) {\n        if (this.options.persistent) {\n          // in case document changed, replace persistent view data with the latest collection.data document\n          this.resultdata[oldPos] = this.collection.data[objIndex];\n        }\n\n        // in case changes to data altered a sort column\n        if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n\n        return;\n      }\n    };\n\n    /**\n     * removeDocument() - internal function called on collection.delete()\n     * @param {number|number[]} objIndex - index of document to (re)run through filter pipeline.\n     */\n    DynamicView.prototype.removeDocument = function (objIndex) {\n      var idx, rmidx, rmlen, rxo = {}, fxo = {};\n      var adjels = [];\n      var drs = this.resultset;\n      var fr = this.resultset.filteredrows;\n      var frlen = fr.length;\n\n      // if no filter applied yet, the result 'set' should remain 'everything'\n      if (!this.resultset.filterInitialized) {\n        if (this.options.persistent) {\n          this.resultdata = this.resultset.data();\n        }\n        // in case changes to data altered a sort column\n        if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n        return;\n      }\n\n      // if passed single index, wrap in array\n      if (!Array.isArray(objIndex)) {\n        objIndex = [objIndex];\n      }\n\n      rmlen = objIndex.length;\n      // create intersection object of data indices to remove\n      for(rmidx=0;rmidx<rmlen; rmidx++) {\n        rxo[objIndex[rmidx]] = true;\n      }\n\n      // pivot remove data indices into remove filteredrows indices and dump in hashobject\n      for (idx=0; idx<frlen; idx++) {\n        if (rxo[fr[idx]]) fxo[idx] = true;\n      }\n\n      // if any of the removed items were in our filteredrows...\n      if (Object.keys(fxo).length > 0) {\n        // remove them from filtered rows\n        this.resultset.filteredrows = this.resultset.filteredrows.filter(function(di, idx) { return !fxo[idx]; });\n        // if persistent...\n        if (this.options.persistent) {\n          // remove from resultdata\n          this.resultdata = this.resultdata.filter(function(obj, idx) { return !fxo[idx]; });\n        }\n\n        // and queue sorts \n        if (this.sortFunction || this.sortCriteria || this.sortCriteriaSimple) {\n          this.queueSortPhase();\n        } else {\n          this.queueRebuildEvent();\n        }\n      }\n\n      // to remove holes, we need to 'shift down' indices, this filter function finds number of positions to shift\n      var filt = function(idx) { return function(di) { return di < drs.filteredrows[idx]; }; };\n\n      frlen = drs.filteredrows.length;\n      for (idx = 0; idx < frlen; idx++) {\n        // grab subset of removed elements where data index is less than current filtered row data index;\n        // use this to determine how many positions iterated remaining data index needs to be 'shifted down'\n        adjels = objIndex.filter(filt(idx));\n        drs.filteredrows[idx] -= adjels.length;\n      }\n    };\n\n    /**\n     * mapReduce() - data transformation via user supplied functions\n     *\n     * @param {function} mapFunction - this function accepts a single document for you to transform and return\n     * @param {function} reduceFunction - this function accepts many (array of map outputs) and returns single value\n     * @returns The output of your reduceFunction\n     * @memberof DynamicView\n     */\n    DynamicView.prototype.mapReduce = function (mapFunction, reduceFunction) {\n      try {\n        return reduceFunction(this.data().map(mapFunction));\n      } catch (err) {\n        throw err;\n      }\n    };\n\n\n    /**\n     * Collection class that handles documents of same type\n     * @constructor Collection\n     * @implements LokiEventEmitter\n     * @param {string} name - collection name\n     * @param {(array|object)=} options - (optional) array of property names to be indicized OR a configuration object\n     * @param {array=} [options.unique=[]] - array of property names to define unique constraints for\n     * @param {array=} [options.exact=[]] - array of property names to define exact constraints for\n     * @param {array=} [options.indices=[]] - array property names to define binary indexes for\n     * @param {boolean} [options.adaptiveBinaryIndices=true] - collection indices will be actively rebuilt rather than lazily\n     * @param {boolean} [options.asyncListeners=false] - whether listeners are invoked asynchronously\n     * @param {boolean} [options.disableMeta=false] - set to true to disable meta property on documents\n     * @param {boolean} [options.disableChangesApi=true] - set to false to enable Changes API\n     * @param {boolean} [options.disableDeltaChangesApi=true] - set to false to enable Delta Changes API (requires Changes API, forces cloning)\n     * @param {boolean} [options.autoupdate=false] - use Object.observe to update objects automatically\n     * @param {boolean} [options.clone=false] - specify whether inserts and queries clone to/from user\n     * @param {boolean} [options.serializableIndices=true[]] - converts date values on binary indexed properties to epoch time\n     * @param {string} [options.cloneMethod='parse-stringify'] - 'parse-stringify', 'jquery-extend-deep', 'shallow', 'shallow-assign'\n     * @param {int=} options.ttl - age of document (in ms.) before document is considered aged/stale.\n     * @param {int=} options.ttlInterval - time interval for clearing out 'aged' documents; not set by default.\n     * @see {@link Loki#addCollection} for normal creation of collections\n     */\n    function Collection(name, options) {\n      // the name of the collection\n\n      this.name = name;\n      // the data held by the collection\n      this.data = [];\n      this.idIndex = []; // index of id\n      this.binaryIndices = {}; // user defined indexes\n      this.constraints = {\n        unique: {},\n        exact: {}\n      };\n\n      // unique contraints contain duplicate object references, so they are not persisted.\n      // we will keep track of properties which have unique contraint applied here, and regenerate on load\n      this.uniqueNames = [];\n\n      // transforms will be used to store frequently used query chains as a series of steps\n      // which itself can be stored along with the database.\n      this.transforms = {};\n\n      // the object type of the collection\n      this.objType = name;\n\n      // in autosave scenarios we will use collection level dirty flags to determine whether save is needed.\n      // currently, if any collection is dirty we will autosave the whole database if autosave is configured.\n      // defaulting to true since this is called from addCollection and adding a collection should trigger save\n      this.dirty = true;\n\n      // private holders for cached data\n      this.cachedIndex = null;\n      this.cachedBinaryIndex = null;\n      this.cachedData = null;\n      var self = this;\n\n      /* OPTIONS */\n      options = options || {};\n\n      // exact match and unique constraints\n      if (options.hasOwnProperty('unique')) {\n        if (!Array.isArray(options.unique)) {\n          options.unique = [options.unique];\n        }\n        options.unique.forEach(function (prop) {\n          self.uniqueNames.push(prop); // used to regenerate on subsequent database loads\n          self.constraints.unique[prop] = new UniqueIndex(prop);\n        });\n      }\n\n      if (options.hasOwnProperty('exact')) {\n        options.exact.forEach(function (prop) {\n          self.constraints.exact[prop] = new ExactIndex(prop);\n        });\n      }\n\n      // if set to true we will optimally keep indices 'fresh' during insert/update/remove ops (never dirty/never needs rebuild)\n      // if you frequently intersperse insert/update/remove ops between find ops this will likely be significantly faster option.\n      this.adaptiveBinaryIndices = options.hasOwnProperty('adaptiveBinaryIndices') ? options.adaptiveBinaryIndices : true;\n\n      // is collection transactional\n      this.transactional = options.hasOwnProperty('transactional') ? options.transactional : false;\n\n      // options to clone objects when inserting them\n      this.cloneObjects = options.hasOwnProperty('clone') ? options.clone : false;\n\n      // default clone method (if enabled) is parse-stringify\n      this.cloneMethod = options.hasOwnProperty('cloneMethod') ? options.cloneMethod : \"parse-stringify\";\n\n      // option to make event listeners async, default is sync\n      this.asyncListeners = options.hasOwnProperty('asyncListeners') ? options.asyncListeners : false;\n\n      // if set to true we will not maintain a meta property for a document\n      this.disableMeta = options.hasOwnProperty('disableMeta') ? options.disableMeta : false;\n\n      // disable track changes\n      this.disableChangesApi = options.hasOwnProperty('disableChangesApi') ? options.disableChangesApi : true;\n\n      // disable delta update object style on changes\n      this.disableDeltaChangesApi = options.hasOwnProperty('disableDeltaChangesApi') ? options.disableDeltaChangesApi : true;\n      if (this.disableChangesApi) { this.disableDeltaChangesApi = true; }\n\n      // option to observe objects and update them automatically, ignored if Object.observe is not supported\n      this.autoupdate = options.hasOwnProperty('autoupdate') ? options.autoupdate : false;\n\n      // by default, if you insert a document into a collection with binary indices, if those indexed properties contain\n      // a DateTime we will convert to epoch time format so that (across serializations) its value position will be the\n      // same 'after' serialization as it was 'before'.\n      this.serializableIndices = options.hasOwnProperty('serializableIndices') ? options.serializableIndices : true;\n\n      //option to activate a cleaner daemon - clears \"aged\" documents at set intervals.\n      this.ttl = {\n        age: null,\n        ttlInterval: null,\n        daemon: null\n      };\n      this.setTTL(options.ttl || -1, options.ttlInterval);\n\n      // currentMaxId - change manually at your own peril!\n      this.maxId = 0;\n\n      this.DynamicViews = [];\n\n      // events\n      this.events = {\n        'insert': [],\n        'update': [],\n        'pre-insert': [],\n        'pre-update': [],\n        'close': [],\n        'flushbuffer': [],\n        'error': [],\n        'delete': [],\n        'warning': []\n      };\n\n      // changes are tracked by collection and aggregated by the db\n      this.changes = [];\n\n      // initialize the id index\n      this.ensureId();\n      var indices = [];\n      // initialize optional user-supplied indices array ['age', 'lname', 'zip']\n      if (options && options.indices) {\n        if (Object.prototype.toString.call(options.indices) === '[object Array]') {\n          indices = options.indices;\n        } else if (typeof options.indices === 'string') {\n          indices = [options.indices];\n        } else {\n          throw new TypeError('Indices needs to be a string or an array of strings');\n        }\n      }\n\n      for (var idx = 0; idx < indices.length; idx++) {\n        this.ensureIndex(indices[idx]);\n      }\n\n      function observerCallback(changes) {\n\n        var changedObjects = typeof Set === 'function' ? new Set() : [];\n\n        if (!changedObjects.add)\n          changedObjects.add = function (object) {\n            if (this.indexOf(object) === -1)\n              this.push(object);\n            return this;\n          };\n\n        changes.forEach(function (change) {\n          changedObjects.add(change.object);\n        });\n\n        changedObjects.forEach(function (object) {\n          if (!hasOwnProperty.call(object, '$loki'))\n            return self.removeAutoUpdateObserver(object);\n          try {\n            self.update(object);\n          } catch (err) {}\n        });\n      }\n\n      this.observerCallback = observerCallback;\n\n      //Compare changed object (which is a forced clone) with existing object and return the delta\n      function getChangeDelta(obj, old) {\n        if (old) {\n          return getObjectDelta(old, obj);\n        }\n        else {\n          return JSON.parse(JSON.stringify(obj));\n        }\n      }\n\n      this.getChangeDelta = getChangeDelta;\n\n      function getObjectDelta(oldObject, newObject) {\n        var propertyNames = newObject !== null && typeof newObject === 'object' ? Object.keys(newObject) : null;\n        if (propertyNames && propertyNames.length && ['string', 'boolean', 'number'].indexOf(typeof(newObject)) < 0) {\n          var delta = {};\n          for (var i = 0; i < propertyNames.length; i++) {\n            var propertyName = propertyNames[i];\n            if (newObject.hasOwnProperty(propertyName)) {\n              if (!oldObject.hasOwnProperty(propertyName) || self.uniqueNames.indexOf(propertyName) >= 0 || propertyName == '$loki' || propertyName == 'meta') {\n                delta[propertyName] = newObject[propertyName];\n              }\n              else {\n                var propertyDelta = getObjectDelta(oldObject[propertyName], newObject[propertyName]);\n                if (typeof propertyDelta !== \"undefined\" && propertyDelta != {}) {\n                  delta[propertyName] = propertyDelta;\n                }\n              }\n            }\n          }\n          return Object.keys(delta).length === 0 ? undefined : delta;\n        }\n        else {\n          return oldObject === newObject ? undefined : newObject;\n        }\n      }\n\n      this.getObjectDelta = getObjectDelta;\n\n      // clear all the changes\n      function flushChanges() {\n        self.changes = [];\n      }\n\n      this.getChanges = function () {\n        return self.changes;\n      };\n\n      this.flushChanges = flushChanges;\n\n      this.setChangesApi = function (enabled) {\n        self.disableChangesApi = !enabled;\n        if (!enabled) { self.disableDeltaChangesApi = false; }\n      };\n\n      this.on('delete', function deleteCallback(obj) {\n        if (!self.disableChangesApi) {\n          self.createChange(self.name, 'R', obj);\n        }\n      });\n\n      this.on('warning', function (warning) {\n        self.console.warn(warning);\n      });\n      // for de-serialization purposes\n      flushChanges();\n    }\n\n    Collection.prototype = new LokiEventEmitter();\n\n    /*\n      * For ChangeAPI default to clone entire object, for delta changes create object with only differences (+ $loki and meta)\n      */\n    Collection.prototype.createChange = function(name, op, obj, old) {\n      this.changes.push({\n        name: name,\n        operation: op,\n        obj: op == 'U' && !this.disableDeltaChangesApi ? this.getChangeDelta(obj, old) : JSON.parse(JSON.stringify(obj))\n      });\n    };\n\n    Collection.prototype.insertMeta = function(obj) {\n      var len, idx;\n\n      if (this.disableMeta || !obj) {\n        return;\n      }\n\n      // if batch insert\n      if (Array.isArray(obj)) {\n        len = obj.length;\n\n        for(idx=0; idx<len; idx++) {\n          if (!obj[idx].hasOwnProperty('meta')) {\n            obj[idx].meta = {};\n          }\n\n          obj[idx].meta.created = (new Date()).getTime();\n          obj[idx].meta.revision = 0;\n        }\n\n        return;\n      }\n\n      // single object\n      if (!obj.meta) {\n        obj.meta = {};\n      }\n\n      obj.meta.created = (new Date()).getTime();\n      obj.meta.revision = 0;\n    };\n\n    Collection.prototype.updateMeta = function(obj) {\n      if (this.disableMeta || !obj) {\n        return;\n      }\n      obj.meta.updated = (new Date()).getTime();\n      obj.meta.revision += 1;\n    };\n\n    Collection.prototype.createInsertChange = function(obj) {\n      this.createChange(this.name, 'I', obj);\n    };\n\n    Collection.prototype.createUpdateChange = function(obj, old) {\n      this.createChange(this.name, 'U', obj, old);\n    };\n\n    Collection.prototype.insertMetaWithChange = function(obj) {\n      this.insertMeta(obj);\n      this.createInsertChange(obj);\n    };\n\n    Collection.prototype.updateMetaWithChange = function(obj, old) {\n      this.updateMeta(obj);\n      this.createUpdateChange(obj, old);\n    };\n\n    Collection.prototype.console = {\n      log: function () {},\n      warn: function () {},\n      error: function () {},\n    };\n\n    Collection.prototype.addAutoUpdateObserver = function (object) {\n      if (!this.autoupdate || typeof Object.observe !== 'function')\n        return;\n\n      Object.observe(object, this.observerCallback, ['add', 'update', 'delete', 'reconfigure', 'setPrototype']);\n    };\n\n    Collection.prototype.removeAutoUpdateObserver = function (object) {\n      if (!this.autoupdate || typeof Object.observe !== 'function')\n        return;\n\n      Object.unobserve(object, this.observerCallback);\n    };\n\n    /**\n     * Adds a named collection transform to the collection\n     * @param {string} name - name to associate with transform\n     * @param {array} transform - an array of transformation 'step' objects to save into the collection\n     * @memberof Collection\n     * @example\n     * users.addTransform('progeny', [\n     *   {\n     *     type: 'find',\n     *     value: {\n     *       'age': {'$lte': 40}\n     *     }\n     *   }\n     * ]);\n     *\n     * var results = users.chain('progeny').data();\n     */\n    Collection.prototype.addTransform = function (name, transform) {\n      if (this.transforms.hasOwnProperty(name)) {\n        throw new Error(\"a transform by that name already exists\");\n      }\n\n      this.transforms[name] = transform;\n    };\n\n    /**\n     * Retrieves a named transform from the collection.\n     * @param {string} name - name of the transform to lookup.\n     * @memberof Collection\n     */\n    Collection.prototype.getTransform = function (name) {\n      return this.transforms[name];\n    };\n\n    /**\n     * Updates a named collection transform to the collection\n     * @param {string} name - name to associate with transform\n     * @param {object} transform - a transformation object to save into collection\n     * @memberof Collection\n     */\n    Collection.prototype.setTransform = function (name, transform) {\n      this.transforms[name] = transform;\n    };\n\n    /**\n     * Removes a named collection transform from the collection\n     * @param {string} name - name of collection transform to remove\n     * @memberof Collection\n     */\n    Collection.prototype.removeTransform = function (name) {\n      delete this.transforms[name];\n    };\n\n    Collection.prototype.byExample = function (template) {\n      var k, obj, query;\n      query = [];\n      for (k in template) {\n        if (!template.hasOwnProperty(k)) continue;\n        query.push((\n          obj = {},\n          obj[k] = template[k],\n          obj\n        ));\n      }\n      return {\n        '$and': query\n      };\n    };\n\n    Collection.prototype.findObject = function (template) {\n      return this.findOne(this.byExample(template));\n    };\n\n    Collection.prototype.findObjects = function (template) {\n      return this.find(this.byExample(template));\n    };\n\n    /*----------------------------+\n    | TTL daemon                  |\n    +----------------------------*/\n    Collection.prototype.ttlDaemonFuncGen = function () {\n      var collection = this;\n      var age = this.ttl.age;\n      return function ttlDaemon() {\n        var now = Date.now();\n        var toRemove = collection.chain().where(function daemonFilter(member) {\n          var timestamp = member.meta.updated || member.meta.created;\n          var diff = now - timestamp;\n          return age < diff;\n        });\n        toRemove.remove();\n      };\n    };\n\n    /**\n     * Updates or applies collection TTL settings.\n     * @param {int} age - age (in ms) to expire document from collection\n     * @param {int} interval - time (in ms) to clear collection of aged documents.\n     * @memberof Collection\n     */\n    Collection.prototype.setTTL = function (age, interval) {\n      if (age < 0) {\n        clearInterval(this.ttl.daemon);\n      } else {\n        this.ttl.age = age;\n        this.ttl.ttlInterval = interval;\n        this.ttl.daemon = setInterval(this.ttlDaemonFuncGen(), interval);\n      }\n    };\n\n    /*----------------------------+\n    | INDEXING                    |\n    +----------------------------*/\n\n    /**\n     * create a row filter that covers all documents in the collection\n     */\n    Collection.prototype.prepareFullDocIndex = function () {\n      var len = this.data.length;\n      var indexes = new Array(len);\n      for (var i = 0; i < len; i += 1) {\n        indexes[i] = i;\n      }\n      return indexes;\n    };\n\n    /**\n     * Will allow reconfiguring certain collection options.\n     * @param {boolean} options.adaptiveBinaryIndices - collection indices will be actively rebuilt rather than lazily\n     * @memberof Collection\n     */\n    Collection.prototype.configureOptions = function (options) {\n      options = options || {};\n\n      if (options.hasOwnProperty('adaptiveBinaryIndices')) {\n        this.adaptiveBinaryIndices = options.adaptiveBinaryIndices;\n\n        // if switching to adaptive binary indices, make sure none are 'dirty'\n        if (this.adaptiveBinaryIndices) {\n          this.ensureAllIndexes();\n        }\n      }\n    };\n\n    /**\n     * Ensure binary index on a certain field\n     * @param {string} property - name of property to create binary index on\n     * @param {boolean=} force - (Optional) flag indicating whether to construct index immediately\n     * @memberof Collection\n     */\n    Collection.prototype.ensureIndex = function (property, force) {\n      // optional parameter to force rebuild whether flagged as dirty or not\n      if (typeof (force) === 'undefined') {\n        force = false;\n      }\n\n      if (property === null || property === undefined) {\n        throw new Error('Attempting to set index without an associated property');\n      }\n\n      if (this.binaryIndices[property] && !force) {\n        if (!this.binaryIndices[property].dirty) return;\n      }\n\n      // if the index is already defined and we are using adaptiveBinaryIndices and we are not forcing a rebuild, return.\n      if (this.adaptiveBinaryIndices === true && this.binaryIndices.hasOwnProperty(property) && !force) {\n        return;\n      }\n\n      var index = {\n        'name': property,\n        'dirty': true,\n        'values': this.prepareFullDocIndex()\n      };\n      this.binaryIndices[property] = index;\n\n      var wrappedComparer =\n        (function (prop, data) {\n          var val1, val2, arr;\n          return function (a, b) {\n            if (~prop.indexOf('.')) {\n              arr = prop.split('.');\n              val1 = Utils.getIn(data[a], arr, true);\n              val2 = Utils.getIn(data[b], arr, true);\n            } else {\n              val1 = data[a][prop];\n              val2 = data[b][prop];\n            }\n\n            if (val1 !== val2) {\n              if (Comparators.lt(val1, val2, false)) return -1;\n              if (Comparators.gt(val1, val2, false)) return 1;\n            }\n            return 0;\n          };\n        })(property, this.data);\n\n      index.values.sort(wrappedComparer);\n      index.dirty = false;\n\n      this.dirty = true; // for autosave scenarios\n    };\n\n    /**\n     * Perform checks to determine validity/consistency of all binary indices\n     * @param {object=} options - optional configuration object\n     * @param {boolean} [options.randomSampling=false] - whether (faster) random sampling should be used\n     * @param {number} [options.randomSamplingFactor=0.10] - percentage of total rows to randomly sample\n     * @param {boolean} [options.repair=false] - whether to fix problems if they are encountered\n     * @returns {string[]} array of index names where problems were found.\n     * @memberof Collection\n     * @example\n     * // check all indices on a collection, returns array of invalid index names\n     * var result = coll.checkAllIndexes({ repair: true, randomSampling: true, randomSamplingFactor: 0.15 });\n     * if (result.length > 0) {\n     *   results.forEach(function(name) { \n     *     console.log('problem encountered with index : ' + name); \n     *   });\n     * }     \n     */\n    Collection.prototype.checkAllIndexes = function (options) {\n      var key, bIndices = this.binaryIndices;\n      var results = [], result;\n\n      for (key in bIndices) {\n        if (hasOwnProperty.call(bIndices, key)) {\n          result = this.checkIndex(key, options);\n          if (!result) {\n            results.push(key);\n          }\n        }\n      }\n\n      return results;\n    };\n\n    /**\n     * Perform checks to determine validity/consistency of a binary index\n     * @param {string} property - name of the binary-indexed property to check\n     * @param {object=} options - optional configuration object\n     * @param {boolean} [options.randomSampling=false] - whether (faster) random sampling should be used\n     * @param {number} [options.randomSamplingFactor=0.10] - percentage of total rows to randomly sample\n     * @param {boolean} [options.repair=false] - whether to fix problems if they are encountered\n     * @returns {boolean} whether the index was found to be valid (before optional correcting).\n     * @memberof Collection\n     * @example\n     * // full test\n     * var valid = coll.checkIndex('name');\n     * // full test with repair (if issues found)\n     * valid = coll.checkIndex('name', { repair: true });\n     * // random sampling (default is 10% of total document count)\n     * valid = coll.checkIndex('name', { randomSampling: true });\n     * // random sampling (sample 20% of total document count)\n     * valid = coll.checkIndex('name', { randomSampling: true, randomSamplingFactor: 0.20 });\n     * // random sampling (implied boolean)\n     * valid = coll.checkIndex('name', { randomSamplingFactor: 0.20 });\n     * // random sampling with repair (if issues found)\n     * valid = coll.checkIndex('name', { repair: true, randomSampling: true });\n     */\n    Collection.prototype.checkIndex = function (property, options) {\n      options = options || {};\n      // if 'randomSamplingFactor' specified but not 'randomSampling', assume true\n      if (options.randomSamplingFactor && options.randomSampling !== false) {\n        options.randomSampling = true;\n      }\n      options.randomSamplingFactor = options.randomSamplingFactor || 0.1;\n      if (options.randomSamplingFactor < 0 || options.randomSamplingFactor > 1) {\n        options.randomSamplingFactor = 0.1;\n      }\n\n      var valid=true, idx, iter, pos, len, biv;\n\n      // make sure we are passed a valid binary index name\n      if (!this.binaryIndices.hasOwnProperty(property)) {\n        throw new Error(\"called checkIndex on property without an index: \" + property);\n      }\n\n      // if lazy indexing, rebuild only if flagged as dirty\n      if (!this.adaptiveBinaryIndices) {\n        this.ensureIndex(property);\n      }\n\n      biv = this.binaryIndices[property].values;\n      len = biv.length;\n\n      // if the index has an incorrect number of values\n      if (len !== this.data.length) {\n        if (options.repair) {\n          this.ensureIndex(property, true);\n        }\n        return false;\n      }\n\n      if (len === 0) {\n        return true;\n      }\n\n      var usingDotNotation = (property.indexOf('.') !== -1);\n\n      if (len === 1) {\n        valid = (biv[0] === 0);\n      }\n      else {\n        if (options.randomSampling) {\n          // validate first and last\n          if (!LokiOps.$lte(Utils.getIn(this.data[biv[0]], property, usingDotNotation),\n                            Utils.getIn(this.data[biv[1]], property, usingDotNotation))) {\n            valid=false;\n          }\n          if (!LokiOps.$lte(Utils.getIn(this.data[biv[len-2]], property, usingDotNotation),\n                            Utils.getIn(this.data[biv[len-1]], property, usingDotNotation))) {\n            valid=false;\n          }\n\n          // if first and last positions are sorted correctly with their nearest neighbor,\n          // continue onto random sampling phase...\n          if (valid) {\n            // # random samplings = total count * sampling factor\n            iter = Math.floor((len-1) * options.randomSamplingFactor);\n\n            // for each random sampling, validate that the binary index is sequenced properly\n            // with next higher value.\n            for(idx=0; idx<iter-1; idx++) {\n              // calculate random position\n              pos = Math.floor(Math.random() * (len-1));\n              if (!LokiOps.$lte(Utils.getIn(this.data[biv[pos]], property, usingDotNotation),\n                                Utils.getIn(this.data[biv[pos+1]], property, usingDotNotation))) {\n                valid=false;\n                break;\n              }\n            }\n          }\n        }\n        else {\n          // validate that the binary index is sequenced properly\n          for(idx=0; idx<len-1; idx++) {\n            if (!LokiOps.$lte(Utils.getIn(this.data[biv[idx]], property, usingDotNotation),\n                              Utils.getIn(this.data[biv[idx+1]], property, usingDotNotation))) {\n              valid=false;\n              break;\n            }\n          }\n        }\n      }\n\n      // if incorrectly sequenced and we are to fix problems, rebuild index\n      if (!valid && options.repair) {\n        this.ensureIndex(property, true);\n      }\n\n      return valid;\n    };\n\n    Collection.prototype.getBinaryIndexValues = function (property) {\n      var idx, idxvals = this.binaryIndices[property].values;\n      var result = [];\n\n      for (idx = 0; idx < idxvals.length; idx++) {\n        result.push(Utils.getIn(this.data[idxvals[idx]], property, true));\n      }\n\n      return result;\n    };\n\n    Collection.prototype.ensureUniqueIndex = function (field) {\n      var index = this.constraints.unique[field];\n      if (!index) {\n        // keep track of new unique index for regenerate after database (re)load.\n        if (this.uniqueNames.indexOf(field) == -1) {\n          this.uniqueNames.push(field);\n        }\n      }\n\n      // if index already existed, (re)loading it will likely cause collisions, rebuild always\n      this.constraints.unique[field] = index = new UniqueIndex(field);\n      this.data.forEach(function (obj) {\n        index.set(obj);\n      });\n      return index;\n    };\n\n    /**\n     * Ensure all binary indices\n     * @param {boolean} force - whether to force rebuild of existing lazy binary indices\n     * @memberof Collection\n     */\n    Collection.prototype.ensureAllIndexes = function (force) {\n      var key, bIndices = this.binaryIndices;\n      for (key in bIndices) {\n        if (hasOwnProperty.call(bIndices, key)) {\n          this.ensureIndex(key, force);\n        }\n      }\n    };\n\n    /**\n     * Internal method used to flag all lazy index as dirty\n     */\n    Collection.prototype.flagBinaryIndexesDirty = function () {\n      var key, bIndices = this.binaryIndices;\n      for (key in bIndices) {\n        if (hasOwnProperty.call(bIndices, key)) {\n          bIndices[key].dirty = true;\n        }\n      }\n    };\n\n    /**\n     * Internal method used to flag a lazy index as dirty\n     */\n    Collection.prototype.flagBinaryIndexDirty = function (index) {\n      if (this.binaryIndices[index])\n        this.binaryIndices[index].dirty = true;\n    };\n\n    /**\n     * Quickly determine number of documents in collection (or query)\n     * @param {object=} query - (optional) query object to count results of\n     * @returns {number} number of documents in the collection\n     * @memberof Collection\n     */\n    Collection.prototype.count = function (query) {\n      if (!query) {\n        return this.data.length;\n      }\n\n      return this.chain().find(query).filteredrows.length;\n    };\n\n    /**\n     * Rebuild idIndex\n     */\n    Collection.prototype.ensureId = function () {\n      var len = this.data.length,\n        i = 0;\n\n      this.idIndex = [];\n      for (i; i < len; i += 1) {\n        this.idIndex.push(this.data[i].$loki);\n      }\n    };\n\n    /**\n     * Rebuild idIndex async with callback - useful for background syncing with a remote server\n     */\n    Collection.prototype.ensureIdAsync = function (callback) {\n      this.async(function () {\n        this.ensureId();\n      }, callback);\n    };\n\n    /**\n     * Add a dynamic view to the collection\n     * @param {string} name - name of dynamic view to add\n     * @param {object=} options - options to configure dynamic view with\n     * @param {boolean} [options.persistent=false] - indicates if view is to main internal results array in 'resultdata'\n     * @param {string} [options.sortPriority='passive'] - 'passive' (sorts performed on call to data) or 'active' (after updates)\n     * @param {number} options.minRebuildInterval - minimum rebuild interval (need clarification to docs here)\n     * @returns {DynamicView} reference to the dynamic view added\n     * @memberof Collection\n     * @example\n     * var pview = users.addDynamicView('progeny');\n     * pview.applyFind({'age': {'$lte': 40}});\n     * pview.applySimpleSort('name');\n     *\n     * var results = pview.data();\n     **/\n\n    Collection.prototype.addDynamicView = function (name, options) {\n      var dv = new DynamicView(this, name, options);\n      this.DynamicViews.push(dv);\n\n      return dv;\n    };\n\n    /**\n     * Remove a dynamic view from the collection\n     * @param {string} name - name of dynamic view to remove\n     * @memberof Collection\n     **/\n    Collection.prototype.removeDynamicView = function (name) {\n      this.DynamicViews = \n        this.DynamicViews.filter(function(dv) { return dv.name !== name; });\n    };\n\n    /**\n     * Look up dynamic view reference from within the collection\n     * @param {string} name - name of dynamic view to retrieve reference of\n     * @returns {DynamicView} A reference to the dynamic view with that name\n     * @memberof Collection\n     **/\n    Collection.prototype.getDynamicView = function (name) {\n      for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n        if (this.DynamicViews[idx].name === name) {\n          return this.DynamicViews[idx];\n        }\n      }\n\n      return null;\n    };\n\n    /**\n     * Applies a 'mongo-like' find query object and passes all results to an update function.\n     * For filter function querying you should migrate to [updateWhere()]{@link Collection#updateWhere}.\n     *\n     * @param {object|function} filterObject - 'mongo-like' query object (or deprecated filterFunction mode)\n     * @param {function} updateFunction - update function to run against filtered documents\n     * @memberof Collection\n     */\n    Collection.prototype.findAndUpdate = function (filterObject, updateFunction) {\n      if (typeof (filterObject) === \"function\") {\n        this.updateWhere(filterObject, updateFunction);\n      }\n      else {\n        this.chain().find(filterObject).update(updateFunction);\n      }\n    };\n\n    /**\n     * Applies a 'mongo-like' find query object removes all documents which match that filter.\n     *\n     * @param {object} filterObject - 'mongo-like' query object\n     * @memberof Collection\n     */\n    Collection.prototype.findAndRemove = function(filterObject) {\n      this.chain().find(filterObject).remove();\n    };\n\n    /**\n     * Adds object(s) to collection, ensure object(s) have meta properties, clone it if necessary, etc.\n     * @param {(object|array)} doc - the document (or array of documents) to be inserted\n     * @returns {(object|array)} document or documents inserted\n     * @memberof Collection\n     * @example\n     * users.insert({\n     *     name: 'Odin',\n     *     age: 50,\n     *     address: 'Asgard'\n     * });\n     *\n     * // alternatively, insert array of documents\n     * users.insert([{ name: 'Thor', age: 35}, { name: 'Loki', age: 30}]);\n     */\n    Collection.prototype.insert = function (doc) {\n      if (!Array.isArray(doc)) {\n        return this.insertOne(doc);\n      }\n\n      // holder to the clone of the object inserted if collections is set to clone objects\n      var obj;\n      var results = [];\n\n      this.emit('pre-insert', doc);\n      for (var i = 0, len = doc.length; i < len; i++) {\n        obj = this.insertOne(doc[i], true);\n        if (!obj) {\n          return undefined;\n        }\n        results.push(obj);\n      }\n\n      // at the 'batch' level, if clone option is true then emitted docs are clones\n      this.emit('insert', results);\n\n      // if clone option is set, clone return values\n      results = this.cloneObjects ? clone(results, this.cloneMethod) : results;\n\n      return results.length === 1 ? results[0] : results;\n    };\n\n    /**\n     * Adds a single object, ensures it has meta properties, clone it if necessary, etc.\n     * @param {object} doc - the document to be inserted\n     * @param {boolean} bulkInsert - quiet pre-insert and insert event emits\n     * @returns {object} document or 'undefined' if there was a problem inserting it\n     */\n    Collection.prototype.insertOne = function (doc, bulkInsert) {\n      var err = null;\n      var returnObj;\n\n      if (typeof doc !== 'object') {\n        err = new TypeError('Document needs to be an object');\n      } else if (doc === null) {\n        err = new TypeError('Object cannot be null');\n      }\n\n      if (err !== null) {\n        this.emit('error', err);\n        throw err;\n      }\n\n      // if configured to clone, do so now... otherwise just use same obj reference\n      var obj = this.cloneObjects ? clone(doc, this.cloneMethod) : doc;\n\n      if (!this.disableMeta && typeof obj.meta === 'undefined') {\n        obj.meta = {\n          revision: 0,\n          created: 0\n        };\n      }\n\n      // both 'pre-insert' and 'insert' events are passed internal data reference even when cloning\n      // insert needs internal reference because that is where loki itself listens to add meta\n      if (!bulkInsert) {\n        this.emit('pre-insert', obj);\n      }\n      if (!this.add(obj)) {\n        return undefined;\n      }\n\n      // update meta and store changes if ChangesAPI is enabled\n      // (moved from \"insert\" event listener to allow internal reference to be used)\n      if (this.disableChangesApi) {\n        this.insertMeta(obj);\n      }\n      else {\n        this.insertMetaWithChange(obj);\n      }\n\n      // if cloning is enabled, emit insert event with clone of new object\n      returnObj = this.cloneObjects ? clone(obj, this.cloneMethod) : obj;\n      if (!bulkInsert) {\n        this.emit('insert', returnObj);\n      }\n\n      this.addAutoUpdateObserver(returnObj);\n      return returnObj;\n    };\n\n    /**\n     * Empties the collection.\n     * @param {object=} options - configure clear behavior\n     * @param {bool=} [options.removeIndices=false] - whether to remove indices in addition to data\n     * @memberof Collection\n     */\n    Collection.prototype.clear = function (options) {\n      var self = this;\n\n      options = options || {};\n\n      this.data = [];\n      this.idIndex = [];\n      this.cachedIndex = null;\n      this.cachedBinaryIndex = null;\n      this.cachedData = null;\n      this.maxId = 0;\n      this.DynamicViews = [];\n      this.dirty = true;\n\n      // if removing indices entirely\n      if (options.removeIndices === true) {\n        this.binaryIndices = {};\n\n        this.constraints = {\n          unique: {},\n          exact: {}\n        };\n        this.uniqueNames = [];\n      }\n      // clear indices but leave definitions in place\n      else {\n        // clear binary indices\n        var keys = Object.keys(this.binaryIndices);\n        keys.forEach(function(biname) {\n          self.binaryIndices[biname].dirty = false;\n          self.binaryIndices[biname].values = [];\n        });\n\n        // clear entire unique indices definition\n        this.constraints = {\n          unique: {},\n          exact: {}\n        };\n\n        // add definitions back\n        this.uniqueNames.forEach(function(uiname) {\n          self.ensureUniqueIndex(uiname);\n        });\n      }\n    };\n\n    /**\n     * Updates an object and notifies collection that the document has changed.\n     * @param {object} doc - document to update within the collection\n     * @memberof Collection\n     */\n    Collection.prototype.update = function (doc) {\n      var adaptiveBatchOverride, k, len;\n\n      if (Array.isArray(doc)) {\n        len = doc.length;\n\n        // if not cloning, disable adaptive binary indices for the duration of the batch update,\n        // followed by lazy rebuild and re-enabling adaptive indices after batch update.\n        adaptiveBatchOverride = !this.cloneObjects &&\n          this.adaptiveBinaryIndices && Object.keys(this.binaryIndices).length > 0;\n\n        if (adaptiveBatchOverride) {\n          this.adaptiveBinaryIndices = false;\n        }\n\n        try {\n          for (k=0; k < len; k += 1) {\n            this.update(doc[k]);\n          }\n        }\n        finally {\n          if (adaptiveBatchOverride) {\n            this.ensureAllIndexes();\n            this.adaptiveBinaryIndices = true;\n          }\n        }\n\n        return;\n      }\n\n      // verify object is a properly formed document\n      if (!hasOwnProperty.call(doc, '$loki')) {\n        throw new Error('Trying to update unsynced document. Please save the document first by using insert() or addMany()');\n      }\n      try {\n        this.startTransaction();\n        var arr = this.get(doc.$loki, true),\n          oldInternal,   // ref to existing obj\n          newInternal, // ref to new internal obj\n          position,\n          self = this;\n\n        if (!arr) {\n          throw new Error('Trying to update a document not in collection.');\n        }\n\n        oldInternal = arr[0]; // -internal- obj ref\n        position = arr[1]; // position in data array\n\n        // if configured to clone, do so now... otherwise just use same obj reference\n        newInternal = this.cloneObjects || !this.disableDeltaChangesApi ? clone(doc, this.cloneMethod) : doc;\n\n        this.emit('pre-update', doc);\n\n        Object.keys(this.constraints.unique).forEach(function (key) {\n          self.constraints.unique[key].update(oldInternal, newInternal);\n        });\n\n        // operate the update\n        this.data[position] = newInternal;\n\n        if (newInternal !== doc) {\n          this.addAutoUpdateObserver(doc);\n        }\n\n        // now that we can efficiently determine the data[] position of newly added document,\n        // submit it for all registered DynamicViews to evaluate for inclusion/exclusion\n        for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n          this.DynamicViews[idx].evaluateDocument(position, false);\n        }\n\n        var key;\n        if (this.adaptiveBinaryIndices) {\n          // for each binary index defined in collection, immediately update rather than flag for lazy rebuild\n          var bIndices = this.binaryIndices;\n          for (key in bIndices) {\n            this.adaptiveBinaryIndexUpdate(position, key);\n          }\n        }\n        else {\n          this.flagBinaryIndexesDirty();\n        }\n\n        this.idIndex[position] = newInternal.$loki;\n        //this.flagBinaryIndexesDirty();\n\n        this.commit();\n        this.dirty = true; // for autosave scenarios\n\n        // update meta and store changes if ChangesAPI is enabled\n        if (this.disableChangesApi) {\n          this.updateMeta(newInternal, null);\n        }\n        else {\n          this.updateMetaWithChange(newInternal, oldInternal);\n        }\n\n        var returnObj;\n\n        // if cloning is enabled, emit 'update' event and return with clone of new object\n        if (this.cloneObjects) {\n          returnObj = clone(newInternal, this.cloneMethod);\n        }\n        else {\n          returnObj = newInternal;\n        }\n\n        this.emit('update', returnObj, oldInternal);\n        return returnObj;\n      } catch (err) {\n        this.rollback();\n        this.console.error(err.message);\n        this.emit('error', err);\n        throw (err); // re-throw error so user does not think it succeeded\n      }\n    };\n\n    /**\n     * Add object to collection\n     */\n    Collection.prototype.add = function (obj) {\n      // if parameter isn't object exit with throw\n      if ('object' !== typeof obj) {\n        throw new TypeError('Object being added needs to be an object');\n      }\n      // if object you are adding already has id column it is either already in the collection\n      // or the object is carrying its own 'id' property.  If it also has a meta property,\n      // then this is already in collection so throw error, otherwise rename to originalId and continue adding.\n      if (typeof (obj.$loki) !== 'undefined') {\n        throw new Error('Document is already in collection, please use update()');\n      }\n\n      /*\n       * try adding object to collection\n       */\n      try {\n        this.startTransaction();\n        this.maxId++;\n\n        if (isNaN(this.maxId)) {\n          this.maxId = (this.data[this.data.length - 1].$loki + 1);\n        }\n\n        obj.$loki = this.maxId;\n\n        if (!this.disableMeta) {\n          obj.meta.version = 0;\n        }\n\n        var key, constrUnique = this.constraints.unique;\n        for (key in constrUnique) {\n          if (hasOwnProperty.call(constrUnique, key)) {\n            constrUnique[key].set(obj);\n          }\n        }\n\n        // add new obj id to idIndex\n        this.idIndex.push(obj.$loki);\n\n        // add the object\n        this.data.push(obj);\n\n        var addedPos = this.data.length - 1;\n\n        // now that we can efficiently determine the data[] position of newly added document,\n        // submit it for all registered DynamicViews to evaluate for inclusion/exclusion\n        var dvlen = this.DynamicViews.length;\n        for (var i = 0; i < dvlen; i++) {\n          this.DynamicViews[i].evaluateDocument(addedPos, true);\n        }\n\n        if (this.adaptiveBinaryIndices) {\n          // for each binary index defined in collection, immediately update rather than flag for lazy rebuild\n          var bIndices = this.binaryIndices;\n          for (key in bIndices) {\n            this.adaptiveBinaryIndexInsert(addedPos, key);\n          }\n        }\n        else {\n          this.flagBinaryIndexesDirty();\n        }\n\n        this.commit();\n        this.dirty = true; // for autosave scenarios\n\n        return (this.cloneObjects) ? (clone(obj, this.cloneMethod)) : (obj);\n      } catch (err) {\n        this.rollback();\n        this.console.error(err.message);\n        this.emit('error', err);\n        throw (err); // re-throw error so user does not think it succeeded\n      }\n    };\n\n    /**\n     * Applies a filter function and passes all results to an update function.\n     *\n     * @param {function} filterFunction - filter function whose results will execute update\n     * @param {function} updateFunction - update function to run against filtered documents\n     * @memberof Collection\n     */\n    Collection.prototype.updateWhere = function(filterFunction, updateFunction) {\n      var results = this.where(filterFunction),\n        i = 0,\n        obj;\n      try {\n        for (i; i < results.length; i++) {\n          obj = updateFunction(results[i]);\n          this.update(obj);\n        }\n\n      } catch (err) {\n        this.rollback();\n        this.console.error(err.message);\n      }\n    };\n\n    /**\n     * Remove all documents matching supplied filter function.\n     * For 'mongo-like' querying you should migrate to [findAndRemove()]{@link Collection#findAndRemove}.\n     * @param {function|object} query - query object to filter on\n     * @memberof Collection\n     */\n    Collection.prototype.removeWhere = function (query) {\n      var list;\n      if (typeof query === 'function') {\n        list = this.data.filter(query);\n        this.remove(list);\n      } else {\n        this.chain().find(query).remove();\n      }\n    };\n\n    Collection.prototype.removeDataOnly = function () {\n      this.remove(this.data.slice());\n    };\n\n    /**\n     * Internal method to remove a batch of documents from the collection.\n     * @param {number[]} positions - data/idIndex positions to remove\n     */\n    Collection.prototype.removeBatchByPositions = function(positions) {\n      var len = positions.length;\n      var xo = {};\n      var dlen, didx, idx;\n      var bic=Object.keys(this.binaryIndices).length;\n      var uic=Object.keys(this.constraints.unique).length;\n      var adaptiveOverride = this.adaptiveBinaryIndices && Object.keys(this.binaryIndices).length > 0;\n      var doc, self=this;\n\n      try {\n        this.startTransaction();\n\n        // create hashobject for positional removal inclusion tests...\n        // all keys defined in this hashobject represent $loki ids of the documents to remove.\n        for(idx=0; idx < len; idx++) {\n          xo[this.idIndex[positions[idx]]] = true;\n        }\n\n        // if we will need to notify dynamic views and/or binary indices to update themselves...\n        dlen = this.DynamicViews.length;\n        if ((dlen > 0) || (bic > 0) || (uic > 0)) {\n          if (dlen > 0) {\n            // notify dynamic views to remove relevant documents at data positions\n            for (didx = 0; didx < dlen; didx++) {\n              // notify dv of remove (passing batch/array of positions)\n              this.DynamicViews[didx].removeDocument(positions);\n            }\n          }\n\n          // notify binary indices to update\n          if (this.adaptiveBinaryIndices && !adaptiveOverride) {\n            // for each binary index defined in collection, immediately update rather than flag for lazy rebuild\n            var key, bIndices = this.binaryIndices;\n\n            for (key in bIndices) {\n              this.adaptiveBinaryIndexRemove(positions, key);\n            }\n          }\n          else {\n            this.flagBinaryIndexesDirty();\n          }\n\n          if (uic) {\n            Object.keys(this.constraints.unique).forEach(function (key) {\n              for(idx=0; idx < len; idx++) {\n                doc = self.data[positions[idx]];\n                if (doc[key] !== null && doc[key] !== undefined) {\n                  self.constraints.unique[key].remove(doc[key]);\n                }\n              }\n            });\n          }\n        }\n\n        // emit 'delete' events only of listeners are attached.\n        // since data not removed yet, in future we can emit single delete event with array...\n        // for now that might be breaking change to put in potential 1.6 or LokiDB (lokijs2) version\n        if (!this.disableChangesApi || this.events.delete.length > 1) {\n          for(idx=0; idx < len; idx++) {\n            this.emit('delete', this.data[positions[idx]]);\n          }\n        }\n\n        // remove from data[] :\n        // filter collection data for items not in inclusion hashobject\n        this.data = this.data.filter(function(obj) {\n          return !xo[obj.$loki];\n        });\n\n        // remove from idIndex[] :\n        // filter idIndex for items not in inclusion hashobject\n        this.idIndex = this.idIndex.filter(function(id) {\n            return !xo[id];\n        });\n\n        if (this.adaptiveBinaryIndices && adaptiveOverride) {\n          this.adaptiveBinaryIndices = false;\n          this.ensureAllIndexes(true);\n          this.adaptiveBinaryIndices = true;\n        }\n\n        this.commit();\n\n        // flag collection as dirty for autosave\n        this.dirty = true;\n      } \n      catch (err) {\n        this.rollback();\n        if (adaptiveOverride) {\n          this.adaptiveBinaryIndices = true;\n        }\n        this.console.error(err.message);\n        this.emit('error', err);\n        return null;\n      }      \n    };\n\n    /**\n     *  Internal method called by remove()\n     * @param {object[]|number[]} batch - array of documents or $loki ids to remove\n     */\n    Collection.prototype.removeBatch = function(batch) {\n      var len = batch.length, \n        dlen=this.data.length, \n        idx;\n      var xlt = {};\n      var posx = [];\n      \n      // create lookup hashobject to translate $loki id to position\n      for (idx=0; idx < dlen; idx++) {\n        xlt[this.data[idx].$loki] = idx;\n      }\n\n      // iterate the batch\n      for (idx=0; idx < len; idx++) {\n        if (typeof(batch[idx]) === 'object') {\n          posx.push(xlt[batch[idx].$loki]);\n        }\n        else {\n          posx.push(xlt[batch[idx]]);\n        }\n      }\n\n      this.removeBatchByPositions(posx);\n    };\n\n    /**\n     * Remove a document from the collection\n     * @param {object} doc - document to remove from collection\n     * @memberof Collection\n     */\n    Collection.prototype.remove = function (doc) {\n      if (typeof doc === 'number') {\n        doc = this.get(doc);\n      }\n\n      if ('object' !== typeof doc) {\n        throw new Error('Parameter is not an object');\n      }\n      if (Array.isArray(doc)) {\n        this.removeBatch(doc);\n        return;\n      }\n\n      if (!hasOwnProperty.call(doc, '$loki')) {\n        throw new Error('Object is not a document stored in the collection');\n      }\n\n      try {\n        this.startTransaction();\n        var arr = this.get(doc.$loki, true),\n          // obj = arr[0],\n          position = arr[1];\n        var self = this;\n        Object.keys(this.constraints.unique).forEach(function (key) {\n          if (doc[key] !== null && typeof doc[key] !== 'undefined') {\n            self.constraints.unique[key].remove(doc[key]);\n          }\n        });\n        // now that we can efficiently determine the data[] position of newly added document,\n        // submit it for all registered DynamicViews to remove\n        for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n          this.DynamicViews[idx].removeDocument(position);\n        }\n\n        if (this.adaptiveBinaryIndices) {\n          // for each binary index defined in collection, immediately update rather than flag for lazy rebuild\n          var key, bIndices = this.binaryIndices;\n          for (key in bIndices) {\n            this.adaptiveBinaryIndexRemove(position, key);\n          }\n        }\n        else {\n          this.flagBinaryIndexesDirty();\n        }\n\n        this.data.splice(position, 1);\n        this.removeAutoUpdateObserver(doc);\n\n        // remove id from idIndex\n        this.idIndex.splice(position, 1);\n\n        this.commit();\n        this.dirty = true; // for autosave scenarios\n        this.emit('delete', arr[0]);\n        delete doc.$loki;\n        delete doc.meta;\n        return doc;\n\n      } catch (err) {\n        this.rollback();\n        this.console.error(err.message);\n        this.emit('error', err);\n        return null;\n      }\n    };\n\n    /*---------------------+\n    | Finding methods     |\n    +----------------------*/\n\n    /**\n     * Get by Id - faster than other methods because of the searching algorithm\n     * @param {int} id - $loki id of document you want to retrieve\n     * @param {boolean} returnPosition - if 'true' we will return [object, position]\n     * @returns {(object|array|null)} Object reference if document was found, null if not,\n     *     or an array if 'returnPosition' was passed.\n     * @memberof Collection\n     */\n    Collection.prototype.get = function (id, returnPosition) {\n      var retpos = returnPosition || false,\n        data = this.idIndex,\n        max = data.length - 1,\n        min = 0,\n        mid = (min + max) >> 1;\n\n      id = typeof id === 'number' ? id : parseInt(id, 10);\n\n      if (isNaN(id)) {\n        throw new TypeError('Passed id is not an integer');\n      }\n\n      while (data[min] < data[max]) {\n        mid = (min + max) >> 1;\n\n        if (data[mid] < id) {\n          min = mid + 1;\n        } else {\n          max = mid;\n        }\n      }\n\n      if (max === min && data[min] === id) {\n        if (retpos) {\n          return [this.data[min], min];\n        }\n        return this.data[min];\n      }\n      return null;\n\n    };\n\n    /**\n     * Perform binary range lookup for the data[dataPosition][binaryIndexName] property value\n     *    Since multiple documents may contain the same value (which the index is sorted on),\n     *    we hone in on range and then linear scan range to find exact index array position.\n     * @param {int} dataPosition : coll.data array index/position\n     * @param {string} binaryIndexName : index to search for dataPosition in\n     */\n    Collection.prototype.getBinaryIndexPosition = function(dataPosition, binaryIndexName) {\n      var val = Utils.getIn(this.data[dataPosition], binaryIndexName, true);\n      var index = this.binaryIndices[binaryIndexName].values;\n\n      // i think calculateRange can probably be moved to collection\n      // as it doesn't seem to need resultset.  need to verify\n      var range = this.calculateRange(\"$eq\", binaryIndexName, val);\n\n      if (range[0] === 0 && range[1] === -1) {\n        // uhoh didn't find range\n        return null;\n      }\n\n      var min = range[0];\n      var max = range[1];\n\n      // narrow down the sub-segment of index values\n      // where the indexed property value exactly matches our\n      // value and then linear scan to find exact -index- position\n      for(var idx = min; idx <= max; idx++) {\n        if (index[idx] === dataPosition) return idx;\n      }\n\n      // uhoh\n      return null;\n    };\n\n    /**\n     * Adaptively insert a selected item to the index.\n     * @param {int} dataPosition : coll.data array index/position\n     * @param {string} binaryIndexName : index to search for dataPosition in\n     */\n    Collection.prototype.adaptiveBinaryIndexInsert = function(dataPosition, binaryIndexName) {\n      var usingDotNotation = (binaryIndexName.indexOf('.') !== -1);\n      var index = this.binaryIndices[binaryIndexName].values;\n      var val = Utils.getIn(this.data[dataPosition], binaryIndexName, usingDotNotation);\n\n      // If you are inserting a javascript Date value into a binary index, convert to epoch time\n      if (this.serializableIndices === true && val instanceof Date) {\n        this.data[dataPosition][binaryIndexName] = val.getTime();\n        val = Utils.getIn(this.data[dataPosition], binaryIndexName);\n      }\n\n      var idxPos = (index.length === 0)?0:this.calculateRangeStart(binaryIndexName, val, true, usingDotNotation);\n\n      // insert new data index into our binary index at the proper sorted location for relevant property calculated by idxPos.\n      // doing this after adjusting dataPositions so no clash with previous item at that position.\n      this.binaryIndices[binaryIndexName].values.splice(idxPos, 0, dataPosition);\n    };\n\n    /**\n     * Adaptively update a selected item within an index.\n     * @param {int} dataPosition : coll.data array index/position\n     * @param {string} binaryIndexName : index to search for dataPosition in\n     */\n    Collection.prototype.adaptiveBinaryIndexUpdate = function(dataPosition, binaryIndexName) {\n      // linear scan needed to find old position within index unless we optimize for clone scenarios later\n      // within (my) node 5.6.0, the following for() loop with strict compare is -much- faster than indexOf()\n      var idxPos,\n        index = this.binaryIndices[binaryIndexName].values,\n        len=index.length;\n\n      for(idxPos=0; idxPos < len; idxPos++) {\n        if (index[idxPos] === dataPosition) break;\n      }\n\n      //var idxPos = this.binaryIndices[binaryIndexName].values.indexOf(dataPosition);\n      this.binaryIndices[binaryIndexName].values.splice(idxPos, 1);\n\n      //this.adaptiveBinaryIndexRemove(dataPosition, binaryIndexName, true);\n      this.adaptiveBinaryIndexInsert(dataPosition, binaryIndexName);\n    };\n\n    /**\n     * Adaptively remove a selected item from the index.\n     * @param {number|number[]} dataPosition : coll.data array index/position\n     * @param {string} binaryIndexName : index to search for dataPosition in\n     */\n    Collection.prototype.adaptiveBinaryIndexRemove = function(dataPosition, binaryIndexName, removedFromIndexOnly) {\n      var bi = this.binaryIndices[binaryIndexName];\n      var len, idx, rmidx, rmlen, rxo = {};\n      var curr, shift, idxPos;\n\n      if (Array.isArray(dataPosition)) {\n        // when called from chained remove, and only one document in array,\n        // it will be faster to use old algorithm\n        rmlen = dataPosition.length;\n        if (rmlen === 1) {\n          dataPosition = dataPosition[0];\n        }\n        // we were passed an array (batch) of documents so use this 'batch optimized' algorithm\n        else {\n          for(rmidx=0;rmidx<rmlen; rmidx++) {\n            rxo[dataPosition[rmidx]] = true;\n          }\n    \n          // remove document from index (with filter function)\n          bi.values = bi.values.filter(function(di) { return !rxo[di]; });\n    \n          // if we passed this optional flag parameter, we are calling from adaptiveBinaryIndexUpdate,\n          // in which case data positions stay the same.\n          if (removedFromIndexOnly === true) {\n            return;\n          }\n    \n          var sortedPositions = dataPosition.slice();\n          sortedPositions.sort(function (a, b) { return a-b; });\n    \n          // to remove holes, we need to 'shift down' the index's data array positions\n          // we need to adjust array positions -1 for each index data positions greater than removed positions\n          len = bi.values.length;\n          for (idx=0; idx<len; idx++) {\n            curr=bi.values[idx];\n            shift=0;\n            for(rmidx=0; rmidx<rmlen && curr > sortedPositions[rmidx]; rmidx++) {\n                shift++;\n            }\n            bi.values[idx]-=shift;\n          }\n\n          // batch processed, bail out\n          return;\n        }\n\n        // not a batch so continue...\n      }\n\n      idxPos = this.getBinaryIndexPosition(dataPosition, binaryIndexName);\n\n      if (idxPos === null) {\n        // throw new Error('unable to determine binary index position');\n        return null;\n      }\n\n      // remove document from index (with splice)\n      bi.values.splice(idxPos, 1);\n\n      // if we passed this optional flag parameter, we are calling from adaptiveBinaryIndexUpdate,\n      // in which case data positions stay the same.\n      if (removedFromIndexOnly === true) {\n        return;\n      }\n\n      // since index stores data array positions, if we remove a document\n      // we need to adjust array positions -1 for all document positions greater than removed position\n      len = bi.values.length;\n      for (idx = 0; idx < len; idx++) {\n        if (bi.values[idx] > dataPosition) {\n          bi.values[idx]--;\n        }\n      }\n    };\n\n    /**\n     * Internal method used for index maintenance and indexed searching.\n     * Calculates the beginning of an index range for a given value.\n     * For index maintainance (adaptive:true), we will return a valid index position to insert to.\n     * For querying (adaptive:false/undefined), we will :\n     *    return lower bound/index of range of that value (if found)\n     *    return next lower index position if not found (hole)\n     * If index is empty it is assumed to be handled at higher level, so\n     * this method assumes there is at least 1 document in index.\n     *\n     * @param {string} prop - name of property which has binary index\n     * @param {any} val - value to find within index\n     * @param {bool?} adaptive - if true, we will return insert position\n     */\n    Collection.prototype.calculateRangeStart = function (prop, val, adaptive, usingDotNotation) {\n      var rcd = this.data;\n      var index = this.binaryIndices[prop].values;\n      var min = 0;\n      var max = index.length - 1;\n      var mid = 0;\n\n      if (index.length === 0) {\n        return -1;\n      }\n\n      var minVal = Utils.getIn(rcd[index[min]], prop, usingDotNotation);\n      var maxVal = Utils.getIn(rcd[index[max]], prop, usingDotNotation);\n\n      // hone in on start position of value\n      while (min < max) {\n        mid = (min + max) >> 1;\n\n        if (Comparators.lt(Utils.getIn(rcd[index[mid]], prop, usingDotNotation), val, false)) {\n          min = mid + 1;\n        } else {\n          max = mid;\n        }\n      }\n\n      var lbound = min;\n\n      // found it... return it\n      if (Comparators.aeq(val, Utils.getIn(rcd[index[lbound]], prop, usingDotNotation))) {\n        return lbound;\n      }\n\n      // if not in index and our value is less than the found one\n      if (Comparators.lt(val, Utils.getIn(rcd[index[lbound]], prop, usingDotNotation), false)) {\n        return adaptive?lbound:lbound-1;\n      }\n\n      // not in index and our value is greater than the found one\n      return adaptive?lbound+1:lbound;\n    };\n\n    /**\n     * Internal method used for indexed $between.  Given a prop (index name), and a value\n     * (which may or may not yet exist) this will find the final position of that upper range value.\n     */\n    Collection.prototype.calculateRangeEnd = function (prop, val, usingDotNotation) {\n      var rcd = this.data;\n      var index = this.binaryIndices[prop].values;\n      var min = 0;\n      var max = index.length - 1;\n      var mid = 0;\n\n      if (index.length === 0) {\n        return -1;\n      }\n\n      var minVal = Utils.getIn(rcd[index[min]], prop, usingDotNotation);\n      var maxVal = Utils.getIn(rcd[index[max]], prop, usingDotNotation);\n\n      // hone in on start position of value\n      while (min < max) {\n        mid = (min + max) >> 1;\n\n        if (Comparators.lt(val, Utils.getIn(rcd[index[mid]], prop, usingDotNotation), false)) {\n          max = mid;\n        } else {\n          min = mid + 1;\n        }\n      }\n\n      var ubound = max;\n\n      // only eq if last element in array is our val\n      if (Comparators.aeq(val, Utils.getIn(rcd[index[ubound]], prop, usingDotNotation))) {\n        return ubound;\n      }\n\n       // if not in index and our value is less than the found one\n      if (Comparators.gt(val, Utils.getIn(rcd[index[ubound]], prop, usingDotNotation), false)) {\n        return ubound+1;\n      }\n\n      // either hole or first nonmatch\n      if (Comparators.aeq(val, Utils.getIn(rcd[index[ubound-1]], prop, usingDotNotation))) {\n        return ubound-1;\n      }\n\n      // hole, so ubound if nearest gt than the val we were looking for\n      return ubound;\n    };\n\n    /**\n     * calculateRange() - Binary Search utility method to find range/segment of values matching criteria.\n     *    this is used for collection.find() and first find filter of resultset/dynview\n     *    slightly different than get() binary search in that get() hones in on 1 value,\n     *    but we have to hone in on many (range)\n     * @param {string} op - operation, such as $eq\n     * @param {string} prop - name of property to calculate range for\n     * @param {object} val - value to use for range calculation.\n     * @returns {array} [start, end] index array positions\n     */\n    Collection.prototype.calculateRange = function (op, prop, val) {\n      var rcd = this.data;\n      var index = this.binaryIndices[prop].values;\n      var min = 0;\n      var max = index.length - 1;\n      var mid = 0;\n      var lbound, lval;\n      var ubound, uval;\n\n      // when no documents are in collection, return empty range condition\n      if (rcd.length === 0) {\n        return [0, -1];\n      }\n\n      var usingDotNotation = (prop.indexOf('.') !== -1);\n\n      var minVal = Utils.getIn(rcd[index[min]], prop, usingDotNotation);\n      var maxVal = Utils.getIn(rcd[index[max]], prop, usingDotNotation);\n\n      // if value falls outside of our range return [0, -1] to designate no results\n      switch (op) {\n      case '$eq':\n      case '$aeq':\n        if (Comparators.lt(val, minVal, false) || Comparators.gt(val, maxVal, false)) {\n          return [0, -1];\n        }\n        break;\n      case '$dteq':\n        if (Comparators.lt(val, minVal, false) || Comparators.gt(val, maxVal, false)) {\n          return [0, -1];\n        }\n        break;\n      case '$gt':\n        // none are within range\n        if (Comparators.gt(val, maxVal, true)) {\n          return [0, -1];\n        }\n        // all are within range\n        if (Comparators.gt(minVal, val, false)) {\n          return [min, max];\n        }\n        break;\n      case '$gte':\n        // none are within range\n        if (Comparators.gt(val, maxVal, false)) {\n          return [0, -1];\n        }\n        // all are within range\n        if (Comparators.gt(minVal, val, true)) {\n            return [min, max];\n        }\n        break;\n      case '$lt':\n        // none are within range\n        if (Comparators.lt(val, minVal, true)) {\n          return [0, -1];\n        }\n        // all are within range\n        if (Comparators.lt(maxVal, val, false)) {\n          return [min, max];\n        }\n        break;\n      case '$lte':\n        // none are within range\n        if (Comparators.lt(val, minVal, false)) {\n          return [0, -1];\n        }\n        // all are within range\n        if (Comparators.lt(maxVal, val, true)) {\n          return [min, max];\n        }\n        break;\n      case '$between':\n        // none are within range (low range is greater)\n        if (Comparators.gt(val[0], maxVal, false)) {\n          return [0, -1];\n        }\n        // none are within range (high range lower)\n        if (Comparators.lt(val[1], minVal, false)) {\n          return [0, -1];\n        }\n\n        lbound = this.calculateRangeStart(prop, val[0], false, usingDotNotation);\n        ubound = this.calculateRangeEnd(prop, val[1], usingDotNotation);\n\n        if (lbound < 0) lbound++;\n        if (ubound > max) ubound--;\n\n        if (!Comparators.gt(Utils.getIn(rcd[index[lbound]], prop, usingDotNotation), val[0], true)) lbound++;\n        if (!Comparators.lt(Utils.getIn(rcd[index[ubound]], prop, usingDotNotation), val[1], true)) ubound--;\n\n        if (ubound < lbound) return [0, -1];\n\n        return ([lbound, ubound]);\n      case '$in':\n        var idxset = [],\n          segResult = [];\n        // query each value '$eq' operator and merge the seqment results.\n        for (var j = 0, len = val.length; j < len; j++) {\n            var seg = this.calculateRange('$eq', prop, val[j]);\n\n            for (var i = seg[0]; i <= seg[1]; i++) {\n                if (idxset[i] === undefined) {\n                    idxset[i] = true;\n                    segResult.push(i);\n                }\n            }\n        }\n        return segResult;\n      }\n\n      // determine lbound where needed\n      switch (op) {\n        case '$eq':\n        case '$aeq':\n        case '$dteq':\n        case '$gte':\n        case '$lt':\n        lbound = this.calculateRangeStart(prop, val, false, usingDotNotation);\n        lval = Utils.getIn(rcd[index[lbound]], prop, usingDotNotation);\n          break;\n        default: break;\n      }\n\n      // determine ubound where needed\n      switch (op) {\n        case '$eq':\n        case '$aeq':\n        case '$dteq':\n        case '$lte':\n        case '$gt':\n          ubound = this.calculateRangeEnd(prop, val, usingDotNotation);\n          uval = Utils.getIn(rcd[index[ubound]], prop, usingDotNotation);\n          break;\n        default: break;\n      }\n\n\n      switch (op) {\n      case '$eq':\n      case '$aeq':\n      case '$dteq':\n        // if hole (not found)\n        if (!Comparators.aeq(lval, val)) {\n          return [0, -1];\n        }\n\n        return [lbound, ubound];\n\n      case '$gt':\n        // if hole (not found) ub position is already greater\n        if (!Comparators.aeq(Utils.getIn(rcd[index[ubound]], prop, usingDotNotation), val)) {\n          return [ubound, max];\n        }\n        // otherwise (found) so ubound is still equal, get next\n        return [ubound+1, max];\n\n      case '$gte':\n        // if hole (not found) lb position marks left outside of range\n        if (!Comparators.aeq(Utils.getIn(rcd[index[lbound]], prop, usingDotNotation), val)) {\n          return [lbound+1, max];\n        }\n        // otherwise (found) so lb is first position where its equal\n        return [lbound, max];\n\n      case '$lt':\n        // if hole (not found) position already is less than\n        if (!Comparators.aeq(Utils.getIn(rcd[index[lbound]], prop, usingDotNotation), val)) {\n          return [min, lbound];\n        }\n        // otherwise (found) so lb marks left inside of eq range, get previous\n        return [min, lbound-1];\n\n      case '$lte':\n        // if hole (not found) ub position marks right outside so get previous\n        if (!Comparators.aeq(Utils.getIn(rcd[index[ubound]], prop, usingDotNotation), val)) {\n          return [min, ubound-1];\n        }\n        // otherwise (found) so ub is last position where its still equal\n        return [min, ubound];\n\n      default:\n        return [0, rcd.length - 1];\n      }\n    };\n\n    /**\n     * Retrieve doc by Unique index\n     * @param {string} field - name of uniquely indexed property to use when doing lookup\n     * @param {value} value - unique value to search for\n     * @returns {object} document matching the value passed\n     * @memberof Collection\n     */\n    Collection.prototype.by = function (field, value) {\n      var self;\n      if (value === undefined) {\n        self = this;\n        return function (value) {\n          return self.by(field, value);\n        };\n      }\n\n      var result = this.constraints.unique[field].get(value);\n      if (!this.cloneObjects) {\n        return result;\n      } else {\n        return clone(result, this.cloneMethod);\n      }\n    };\n\n    /**\n     * Find one object by index property, by property equal to value\n     * @param {object} query - query object used to perform search with\n     * @returns {(object|null)} First matching document, or null if none\n     * @memberof Collection\n     */\n    Collection.prototype.findOne = function (query) {\n      query = query || {};\n\n      // Instantiate Resultset and exec find op passing firstOnly = true param\n      var result = this.chain().find(query,true).data();\n\n      if (Array.isArray(result) && result.length === 0) {\n        return null;\n      } else {\n        if (!this.cloneObjects) {\n          return result[0];\n        } else {\n          return clone(result[0], this.cloneMethod);\n        }\n      }\n    };\n\n    /**\n     * Chain method, used for beginning a series of chained find() and/or view() operations\n     * on a collection.\n     *\n     * @param {string|array=} transform - named transform or array of transform steps\n     * @param {object=} parameters - Object containing properties representing parameters to substitute\n     * @returns {Resultset} (this) resultset, or data array if any map or join functions where called\n     * @memberof Collection\n     */\n    Collection.prototype.chain = function (transform, parameters) {\n      var rs = new Resultset(this);\n\n      if (typeof transform === 'undefined') {\n        return rs;\n      }\n\n      return rs.transform(transform, parameters);\n    };\n\n    /**\n     * Find method, api is similar to mongodb.\n     * for more complex queries use [chain()]{@link Collection#chain} or [where()]{@link Collection#where}.\n     * @example {@tutorial Query Examples}\n     * @param {object} query - 'mongo-like' query object\n     * @returns {array} Array of matching documents\n     * @memberof Collection\n     */\n    Collection.prototype.find = function (query) {\n      return this.chain().find(query).data();\n    };\n\n    /**\n     * Find object by unindexed field by property equal to value,\n     * simply iterates and returns the first element matching the query\n     */\n    Collection.prototype.findOneUnindexed = function (prop, value) {\n      var i = this.data.length,\n        doc;\n      while (i--) {\n        if (Utils.getIn(this.data[i], prop, true) === value) {\n          doc = this.data[i];\n          return doc;\n        }\n      }\n      return null;\n    };\n\n    /**\n     * Transaction methods\n     */\n\n    /** start the transation */\n    Collection.prototype.startTransaction = function () {\n      if (this.transactional) {\n        this.cachedData = clone(this.data, this.cloneMethod);\n        this.cachedIndex = this.idIndex;\n        this.cachedBinaryIndex = this.binaryIndices;\n\n        // propagate startTransaction to dynamic views\n        for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n          this.DynamicViews[idx].startTransaction();\n        }\n      }\n    };\n\n    /** commit the transation */\n    Collection.prototype.commit = function () {\n      if (this.transactional) {\n        this.cachedData = null;\n        this.cachedIndex = null;\n        this.cachedBinaryIndex = null;\n\n        // propagate commit to dynamic views\n        for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n          this.DynamicViews[idx].commit();\n        }\n      }\n    };\n\n    /** roll back the transation */\n    Collection.prototype.rollback = function () {\n      if (this.transactional) {\n        if (this.cachedData !== null && this.cachedIndex !== null) {\n          this.data = this.cachedData;\n          this.idIndex = this.cachedIndex;\n          this.binaryIndices = this.cachedBinaryIndex;\n        }\n\n        // propagate rollback to dynamic views\n        for (var idx = 0; idx < this.DynamicViews.length; idx++) {\n          this.DynamicViews[idx].rollback();\n        }\n      }\n    };\n\n    // async executor. This is only to enable callbacks at the end of the execution.\n    Collection.prototype.async = function (fun, callback) {\n      setTimeout(function () {\n        if (typeof fun === 'function') {\n          fun();\n          callback();\n        } else {\n          throw new TypeError('Argument passed for async execution is not a function');\n        }\n      }, 0);\n    };\n\n    /**\n     * Query the collection by supplying a javascript filter function.\n     * @example\n     * var results = coll.where(function(obj) {\n     *   return obj.legs === 8;\n     * });\n     *\n     * @param {function} fun - filter function to run against all collection docs\n     * @returns {array} all documents which pass your filter function\n     * @memberof Collection\n     */\n    Collection.prototype.where = function (fun) {\n      return this.chain().where(fun).data();\n    };\n\n    /**\n     * Map Reduce operation\n     *\n     * @param {function} mapFunction - function to use as map function\n     * @param {function} reduceFunction - function to use as reduce function\n     * @returns {data} The result of your mapReduce operation\n     * @memberof Collection\n     */\n    Collection.prototype.mapReduce = function (mapFunction, reduceFunction) {\n      try {\n        return reduceFunction(this.data.map(mapFunction));\n      } catch (err) {\n        throw err;\n      }\n    };\n\n    /**\n     * Join two collections on specified properties\n     *\n     * @param {array|Resultset|Collection} joinData - array of documents to 'join' to this collection\n     * @param {string} leftJoinProp - property name in collection\n     * @param {string} rightJoinProp - property name in joinData\n     * @param {function=} mapFun - (Optional) map function to use\n     * @param {object=} dataOptions - options to data() before input to your map function\n     * @param {bool} dataOptions.removeMeta - allows removing meta before calling mapFun\n     * @param {boolean} dataOptions.forceClones - forcing the return of cloned objects to your map object\n     * @param {string} dataOptions.forceCloneMethod - Allows overriding the default or collection specified cloning method.\n     * @returns {Resultset} Result of the mapping operation\n     * @memberof Collection\n     */\n    Collection.prototype.eqJoin = function (joinData, leftJoinProp, rightJoinProp, mapFun, dataOptions) {\n      // logic in Resultset class\n      return new Resultset(this).eqJoin(joinData, leftJoinProp, rightJoinProp, mapFun, dataOptions);\n    };\n\n    /* ------ STAGING API -------- */\n    /**\n     * stages: a map of uniquely identified 'stages', which hold copies of objects to be\n     * manipulated without affecting the data in the original collection\n     */\n    Collection.prototype.stages = {};\n\n    /**\n     * (Staging API) create a stage and/or retrieve it\n     * @memberof Collection\n     */\n    Collection.prototype.getStage = function (name) {\n      if (!this.stages[name]) {\n        this.stages[name] = {};\n      }\n      return this.stages[name];\n    };\n    /**\n     * a collection of objects recording the changes applied through a commmitStage\n     */\n    Collection.prototype.commitLog = [];\n\n    /**\n     * (Staging API) create a copy of an object and insert it into a stage\n     * @memberof Collection\n     */\n    Collection.prototype.stage = function (stageName, obj) {\n      var copy = JSON.parse(JSON.stringify(obj));\n      this.getStage(stageName)[obj.$loki] = copy;\n      return copy;\n    };\n\n    /**\n     * (Staging API) re-attach all objects to the original collection, so indexes and views can be rebuilt\n     * then create a message to be inserted in the commitlog\n     * @param {string} stageName - name of stage\n     * @param {string} message\n     * @memberof Collection\n     */\n    Collection.prototype.commitStage = function (stageName, message) {\n      var stage = this.getStage(stageName),\n        prop,\n        timestamp = new Date().getTime();\n\n      for (prop in stage) {\n\n        this.update(stage[prop]);\n        this.commitLog.push({\n          timestamp: timestamp,\n          message: message,\n          data: JSON.parse(JSON.stringify(stage[prop]))\n        });\n      }\n      this.stages[stageName] = {};\n    };\n\n    Collection.prototype.no_op = function () {\n      return;\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.extract = function (field) {\n      var i = 0,\n        len = this.data.length,\n        isDotNotation = isDeepProperty(field),\n        result = [];\n      for (i; i < len; i += 1) {\n        result.push(deepProperty(this.data[i], field, isDotNotation));\n      }\n      return result;\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.max = function (field) {\n      return Math.max.apply(null, this.extract(field));\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.min = function (field) {\n      return Math.min.apply(null, this.extract(field));\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.maxRecord = function (field) {\n      var i = 0,\n        len = this.data.length,\n        deep = isDeepProperty(field),\n        result = {\n          index: 0,\n          value: undefined\n        },\n        max;\n\n      for (i; i < len; i += 1) {\n        if (max !== undefined) {\n          if (max < deepProperty(this.data[i], field, deep)) {\n            max = deepProperty(this.data[i], field, deep);\n            result.index = this.data[i].$loki;\n          }\n        } else {\n          max = deepProperty(this.data[i], field, deep);\n          result.index = this.data[i].$loki;\n        }\n      }\n      result.value = max;\n      return result;\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.minRecord = function (field) {\n      var i = 0,\n        len = this.data.length,\n        deep = isDeepProperty(field),\n        result = {\n          index: 0,\n          value: undefined\n        },\n        min;\n\n      for (i; i < len; i += 1) {\n        if (min !== undefined) {\n          if (min > deepProperty(this.data[i], field, deep)) {\n            min = deepProperty(this.data[i], field, deep);\n            result.index = this.data[i].$loki;\n          }\n        } else {\n          min = deepProperty(this.data[i], field, deep);\n          result.index = this.data[i].$loki;\n        }\n      }\n      result.value = min;\n      return result;\n    };\n\n    /**\n     * @memberof Collection\n     */\n    Collection.prototype.extractNumerical = function (field) {\n      return this.extract(field).map(parseBase10).filter(Number).filter(function (n) {\n        return !(isNaN(n));\n      });\n    };\n\n    /**\n     * Calculates the average numerical value of a property\n     *\n     * @param {string} field - name of property in docs to average\n     * @returns {number} average of property in all docs in the collection\n     * @memberof Collection\n     */\n    Collection.prototype.avg = function (field) {\n      return average(this.extractNumerical(field));\n    };\n\n    /**\n     * Calculate standard deviation of a field\n     * @memberof Collection\n     * @param {string} field\n     */\n    Collection.prototype.stdDev = function (field) {\n      return standardDeviation(this.extractNumerical(field));\n    };\n\n    /**\n     * @memberof Collection\n     * @param {string} field\n     */\n    Collection.prototype.mode = function (field) {\n      var dict = {},\n        data = this.extract(field);\n      data.forEach(function (obj) {\n        if (dict[obj]) {\n          dict[obj] += 1;\n        } else {\n          dict[obj] = 1;\n        }\n      });\n      var max,\n        prop, mode;\n      for (prop in dict) {\n        if (max) {\n          if (max < dict[prop]) {\n            mode = prop;\n          }\n        } else {\n          mode = prop;\n          max = dict[prop];\n        }\n      }\n      return mode;\n    };\n\n    /**\n     * @memberof Collection\n     * @param {string} field - property name\n     */\n    Collection.prototype.median = function (field) {\n      var values = this.extractNumerical(field);\n      values.sort(sub);\n\n      var half = Math.floor(values.length / 2);\n\n      if (values.length % 2) {\n        return values[half];\n      } else {\n        return (values[half - 1] + values[half]) / 2.0;\n      }\n    };\n\n    /**\n     * General utils, including statistical functions\n     */\n    function isDeepProperty(field) {\n      return field.indexOf('.') !== -1;\n    }\n\n    function parseBase10(num) {\n      return parseFloat(num, 10);\n    }\n\n    function isNotUndefined(obj) {\n      return obj !== undefined;\n    }\n\n    function add(a, b) {\n      return a + b;\n    }\n\n    function sub(a, b) {\n      return a - b;\n    }\n\n    function median(values) {\n      values.sort(sub);\n      var half = Math.floor(values.length / 2);\n      return (values.length % 2) ? values[half] : ((values[half - 1] + values[half]) / 2.0);\n    }\n\n    function average(array) {\n      return (array.reduce(add, 0)) / array.length;\n    }\n\n    function standardDeviation(values) {\n      var avg = average(values);\n      var squareDiffs = values.map(function (value) {\n        var diff = value - avg;\n        var sqrDiff = diff * diff;\n        return sqrDiff;\n      });\n\n      var avgSquareDiff = average(squareDiffs);\n\n      var stdDev = Math.sqrt(avgSquareDiff);\n      return stdDev;\n    }\n\n    function deepProperty(obj, property, isDeep) {\n      if (isDeep === false) {\n        // pass without processing\n        return obj[property];\n      }\n      var pieces = property.split('.'),\n        root = obj;\n      while (pieces.length > 0) {\n        root = root[pieces.shift()];\n      }\n      return root;\n    }\n\n    function binarySearch(array, item, fun) {\n      var lo = 0,\n        hi = array.length,\n        compared,\n        mid;\n      while (lo < hi) {\n        mid = (lo + hi) >> 1;\n        compared = fun.apply(null, [item, array[mid]]);\n        if (compared === 0) {\n          return {\n            found: true,\n            index: mid\n          };\n        } else if (compared < 0) {\n          hi = mid;\n        } else {\n          lo = mid + 1;\n        }\n      }\n      return {\n        found: false,\n        index: hi\n      };\n    }\n\n    function BSonSort(fun) {\n      return function (array, item) {\n        return binarySearch(array, item, fun);\n      };\n    }\n\n    function KeyValueStore() {}\n\n    KeyValueStore.prototype = {\n      keys: [],\n      values: [],\n      sort: function (a, b) {\n        return (a < b) ? -1 : ((a > b) ? 1 : 0);\n      },\n      setSort: function (fun) {\n        this.bs = new BSonSort(fun);\n      },\n      bs: function () {\n        return new BSonSort(this.sort);\n      },\n      set: function (key, value) {\n        var pos = this.bs(this.keys, key);\n        if (pos.found) {\n          this.values[pos.index] = value;\n        } else {\n          this.keys.splice(pos.index, 0, key);\n          this.values.splice(pos.index, 0, value);\n        }\n      },\n      get: function (key) {\n        return this.values[binarySearch(this.keys, key, this.sort).index];\n      }\n    };\n\n    function UniqueIndex(uniqueField) {\n      this.field = uniqueField;\n      this.keyMap = {};\n      this.lokiMap = {};\n    }\n    UniqueIndex.prototype.keyMap = {};\n    UniqueIndex.prototype.lokiMap = {};\n    UniqueIndex.prototype.set = function (obj) {\n      var fieldValue = obj[this.field];\n      if (fieldValue !== null && typeof (fieldValue) !== 'undefined') {\n        if (this.keyMap[fieldValue]) {\n          throw new Error('Duplicate key for property ' + this.field + ': ' + fieldValue);\n        } else {\n          this.keyMap[fieldValue] = obj;\n          this.lokiMap[obj.$loki] = fieldValue;\n        }\n      }\n    };\n    UniqueIndex.prototype.get = function (key) {\n      return this.keyMap[key];\n    };\n\n    UniqueIndex.prototype.byId = function (id) {\n      return this.keyMap[this.lokiMap[id]];\n    };\n    /**\n     * Updates a document's unique index given an updated object.\n     * @param  {Object} obj Original document object\n     * @param  {Object} doc New document object (likely the same as obj)\n     */\n    UniqueIndex.prototype.update = function (obj, doc) {\n      if (this.lokiMap[obj.$loki] !== doc[this.field]) {\n        var old = this.lokiMap[obj.$loki];\n        this.set(doc);\n        // make the old key fail bool test, while avoiding the use of delete (mem-leak prone)\n        this.keyMap[old] = undefined;\n      } else {\n        this.keyMap[obj[this.field]] = doc;\n      }\n    };\n    UniqueIndex.prototype.remove = function (key) {\n      var obj = this.keyMap[key];\n      if (obj !== null && typeof obj !== 'undefined') {\n        this.keyMap[key] = undefined;\n        this.lokiMap[obj.$loki] = undefined;\n      } else {\n        throw new Error('Key is not in unique index: ' + this.field);\n      }\n    };\n    UniqueIndex.prototype.clear = function () {\n      this.keyMap = {};\n      this.lokiMap = {};\n    };\n\n    function ExactIndex(exactField) {\n      this.index = {};\n      this.field = exactField;\n    }\n\n    // add the value you want returned to the key in the index\n    ExactIndex.prototype = {\n      set: function add(key, val) {\n        if (this.index[key]) {\n          this.index[key].push(val);\n        } else {\n          this.index[key] = [val];\n        }\n      },\n\n      // remove the value from the index, if the value was the last one, remove the key\n      remove: function remove(key, val) {\n        var idxSet = this.index[key];\n        for (var i in idxSet) {\n          if (idxSet[i] == val) {\n            idxSet.splice(i, 1);\n          }\n        }\n        if (idxSet.length < 1) {\n          this.index[key] = undefined;\n        }\n      },\n\n      // get the values related to the key, could be more than one\n      get: function get(key) {\n        return this.index[key];\n      },\n\n      // clear will zap the index\n      clear: function clear(key) {\n        this.index = {};\n      }\n    };\n\n    function SortedIndex(sortedField) {\n      this.field = sortedField;\n    }\n\n    SortedIndex.prototype = {\n      keys: [],\n      values: [],\n      // set the default sort\n      sort: function (a, b) {\n        return (a < b) ? -1 : ((a > b) ? 1 : 0);\n      },\n      bs: function () {\n        return new BSonSort(this.sort);\n      },\n      // and allow override of the default sort\n      setSort: function (fun) {\n        this.bs = new BSonSort(fun);\n      },\n      // add the value you want returned  to the key in the index\n      set: function (key, value) {\n        var pos = binarySearch(this.keys, key, this.sort);\n        if (pos.found) {\n          this.values[pos.index].push(value);\n        } else {\n          this.keys.splice(pos.index, 0, key);\n          this.values.splice(pos.index, 0, [value]);\n        }\n      },\n      // get all values which have a key == the given key\n      get: function (key) {\n        var bsr = binarySearch(this.keys, key, this.sort);\n        if (bsr.found) {\n          return this.values[bsr.index];\n        } else {\n          return [];\n        }\n      },\n      // get all values which have a key < the given key\n      getLt: function (key) {\n        var bsr = binarySearch(this.keys, key, this.sort);\n        var pos = bsr.index;\n        if (bsr.found) pos--;\n        return this.getAll(key, 0, pos);\n      },\n      // get all values which have a key > the given key\n      getGt: function (key) {\n        var bsr = binarySearch(this.keys, key, this.sort);\n        var pos = bsr.index;\n        if (bsr.found) pos++;\n        return this.getAll(key, pos, this.keys.length);\n      },\n\n      // get all vals from start to end\n      getAll: function (key, start, end) {\n        var results = [];\n        for (var i = start; i < end; i++) {\n          results = results.concat(this.values[i]);\n        }\n        return results;\n      },\n      // just in case someone wants to do something smart with ranges\n      getPos: function (key) {\n        return binarySearch(this.keys, key, this.sort);\n      },\n      // remove the value from the index, if the value was the last one, remove the key\n      remove: function (key, value) {\n        var pos = binarySearch(this.keys, key, this.sort).index;\n        var idxSet = this.values[pos];\n        for (var i in idxSet) {\n          if (idxSet[i] == value) idxSet.splice(i, 1);\n        }\n        if (idxSet.length < 1) {\n          this.keys.splice(pos, 1);\n          this.values.splice(pos, 1);\n        }\n      },\n      // clear will zap the index\n      clear: function () {\n        this.keys = [];\n        this.values = [];\n      }\n    };\n\n\n    Loki.LokiOps = LokiOps;\n    Loki.Collection = Collection;\n    Loki.KeyValueStore = KeyValueStore;\n    Loki.LokiMemoryAdapter = LokiMemoryAdapter;\n    Loki.LokiPartitioningAdapter = LokiPartitioningAdapter;\n    Loki.LokiLocalStorageAdapter = LokiLocalStorageAdapter;\n    Loki.LokiFsAdapter = LokiFsAdapter;\n    Loki.persistenceAdapters = {\n      fs: LokiFsAdapter,\n      localStorage: LokiLocalStorageAdapter\n    };\n    Loki.aeq = aeqHelper;\n    Loki.lt = ltHelper;\n    Loki.gt = gtHelper;\n    Loki.Comparators = Comparators;\n    return Loki;\n  }());\n\n}));\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n\nNote: since JSZip 3 removed critical functionality, this version assigns to the\n`JSZipSync` variable.  Another JSZip version can be loaded in parallel.\n*/\n(function(e){\n\tif(\"object\"==typeof exports&&\"undefined\"!=typeof module&&\"undefined\"==typeof DO_NOT_EXPORT_JSZIP)module.exports=e();\n\telse if(\"function\"==typeof define&&define.amd&&\"undefined\"==typeof DO_NOT_EXPORT_JSZIP){JSZipSync=e();define([],e);}\n\telse{\n\t\tvar f;\n\t\t\"undefined\"!=typeof window?f=window:\n\t\t\"undefined\"!=typeof global?f=global:\n\t\t\"undefined\"!=typeof $ && $.global?f=$.global:\n\t\t\"undefined\"!=typeof self&&(f=self),f.JSZipSync=e()\n\t}\n}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n'use strict';\n// private property\nvar _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n\n// public method for encoding\nexports.encode = function(input, utf8) {\n    var output = \"\";\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n\n    while (i < input.length) {\n\n        chr1 = input.charCodeAt(i++);\n        chr2 = input.charCodeAt(i++);\n        chr3 = input.charCodeAt(i++);\n\n        enc1 = chr1 >> 2;\n        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n        enc4 = chr3 & 63;\n\n        if (isNaN(chr2)) {\n            enc3 = enc4 = 64;\n        }\n        else if (isNaN(chr3)) {\n            enc4 = 64;\n        }\n\n        output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n\n    }\n\n    return output;\n};\n\n// public method for decoding\nexports.decode = function(input, utf8) {\n    var output = \"\";\n    var chr1, chr2, chr3;\n    var enc1, enc2, enc3, enc4;\n    var i = 0;\n\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n    while (i < input.length) {\n\n        enc1 = _keyStr.indexOf(input.charAt(i++));\n        enc2 = _keyStr.indexOf(input.charAt(i++));\n        enc3 = _keyStr.indexOf(input.charAt(i++));\n        enc4 = _keyStr.indexOf(input.charAt(i++));\n\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n\n        output = output + String.fromCharCode(chr1);\n\n        if (enc3 != 64) {\n            output = output + String.fromCharCode(chr2);\n        }\n        if (enc4 != 64) {\n            output = output + String.fromCharCode(chr3);\n        }\n\n    }\n\n    return output;\n\n};\n\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nfunction CompressedObject() {\n    this.compressedSize = 0;\n    this.uncompressedSize = 0;\n    this.crc32 = 0;\n    this.compressionMethod = null;\n    this.compressedContent = null;\n}\n\nCompressedObject.prototype = {\n    /**\n     * Return the decompressed content in an unspecified format.\n     * The format will depend on the decompressor.\n     * @return {Object} the decompressed content.\n     */\n    getContent: function() {\n        return null; // see implementation\n    },\n    /**\n     * Return the compressed content in an unspecified format.\n     * The format will depend on the compressed conten source.\n     * @return {Object} the compressed content.\n     */\n    getCompressedContent: function() {\n        return null; // see implementation\n    }\n};\nmodule.exports = CompressedObject;\n\n},{}],3:[function(_dereq_,module,exports){\n'use strict';\nexports.STORE = {\n    magic: \"\\x00\\x00\",\n    compress: function(content) {\n        return content; // no compression\n    },\n    uncompress: function(content) {\n        return content; // no compression\n    },\n    compressInputType: null,\n    uncompressInputType: null\n};\nexports.DEFLATE = _dereq_('./flate');\n\n},{\"./flate\":8}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar utils = _dereq_('./utils');\n\nvar table = [\n    0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA,\n    0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,\n    0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988,\n    0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91,\n    0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,\n    0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,\n    0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC,\n    0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5,\n    0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172,\n    0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,\n    0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940,\n    0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59,\n    0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116,\n    0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,\n    0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,\n    0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,\n    0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A,\n    0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,\n    0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818,\n    0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,\n    0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E,\n    0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457,\n    0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C,\n    0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65,\n    0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,\n    0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB,\n    0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0,\n    0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9,\n    0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086,\n    0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,\n    0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4,\n    0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD,\n    0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A,\n    0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683,\n    0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,\n    0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1,\n    0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE,\n    0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7,\n    0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC,\n    0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,\n    0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252,\n    0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B,\n    0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60,\n    0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79,\n    0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,\n    0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F,\n    0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04,\n    0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D,\n    0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A,\n    0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,\n    0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38,\n    0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21,\n    0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E,\n    0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777,\n    0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,\n    0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45,\n    0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2,\n    0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB,\n    0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0,\n    0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,\n    0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6,\n    0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF,\n    0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94,\n    0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D\n];\n\n/**\n *\n *  Javascript crc32\n *  http://www.webtoolkit.info/\n *\n */\nmodule.exports = function crc32(input, crc) {\n    if (typeof input === \"undefined\" || !input.length) {\n        return 0;\n    }\n\n    var isArray = utils.getTypeOf(input) !== \"string\";\n\n    if (typeof(crc) == \"undefined\") {\n        crc = 0;\n    }\n    var x = 0;\n    var y = 0;\n    var b = 0;\n\n    crc = crc ^ (-1);\n    for (var i = 0, iTop = input.length; i < iTop; i++) {\n        b = isArray ? input[i] : input.charCodeAt(i);\n        y = (crc ^ b) & 0xFF;\n        x = table[y];\n        crc = (crc >>> 8) ^ x;\n    }\n\n    return crc ^ (-1);\n};\n// vim: set shiftwidth=4 softtabstop=4:\n\n},{\"./utils\":21}],5:[function(_dereq_,module,exports){\n'use strict';\nvar utils = _dereq_('./utils');\n\nfunction DataReader(data) {\n    this.data = null; // type : see implementation\n    this.length = 0;\n    this.index = 0;\n}\nDataReader.prototype = {\n    /**\n     * Check that the offset will not go too far.\n     * @param {string} offset the additional offset to check.\n     * @throws {Error} an Error if the offset is out of bounds.\n     */\n    checkOffset: function(offset) {\n        this.checkIndex(this.index + offset);\n    },\n    /**\n     * Check that the specifed index will not be too far.\n     * @param {string} newIndex the index to check.\n     * @throws {Error} an Error if the index is out of bounds.\n     */\n    checkIndex: function(newIndex) {\n        if (this.length < newIndex || newIndex < 0) {\n            throw new Error(\"End of data reached (data length = \" + this.length + \", asked index = \" + (newIndex) + \"). Corrupted zip ?\");\n        }\n    },\n    /**\n     * Change the index.\n     * @param {number} newIndex The new index.\n     * @throws {Error} if the new index is out of the data.\n     */\n    setIndex: function(newIndex) {\n        this.checkIndex(newIndex);\n        this.index = newIndex;\n    },\n    /**\n     * Skip the next n bytes.\n     * @param {number} n the number of bytes to skip.\n     * @throws {Error} if the new index is out of the data.\n     */\n    skip: function(n) {\n        this.setIndex(this.index + n);\n    },\n    /**\n     * Get the byte at the specified index.\n     * @param {number} i the index to use.\n     * @return {number} a byte.\n     */\n    byteAt: function(i) {\n        // see implementations\n    },\n    /**\n     * Get the next number with a given byte size.\n     * @param {number} size the number of bytes to read.\n     * @return {number} the corresponding number.\n     */\n    readInt: function(size) {\n        var result = 0,\n            i;\n        this.checkOffset(size);\n        for (i = this.index + size - 1; i >= this.index; i--) {\n            result = (result << 8) + this.byteAt(i);\n        }\n        this.index += size;\n        return result;\n    },\n    /**\n     * Get the next string with a given byte size.\n     * @param {number} size the number of bytes to read.\n     * @return {string} the corresponding string.\n     */\n    readString: function(size) {\n        return utils.transformTo(\"string\", this.readData(size));\n    },\n    /**\n     * Get raw data without conversion, <size> bytes.\n     * @param {number} size the number of bytes to read.\n     * @return {Object} the raw data, implementation specific.\n     */\n    readData: function(size) {\n        // see implementations\n    },\n    /**\n     * Find the last occurence of a zip signature (4 bytes).\n     * @param {string} sig the signature to find.\n     * @return {number} the index of the last occurence, -1 if not found.\n     */\n    lastIndexOfSignature: function(sig) {\n        // see implementations\n    },\n    /**\n     * Get the next date.\n     * @return {Date} the date.\n     */\n    readDate: function() {\n        var dostime = this.readInt(4);\n        return new Date(\n        ((dostime >> 25) & 0x7f) + 1980, // year\n        ((dostime >> 21) & 0x0f) - 1, // month\n        (dostime >> 16) & 0x1f, // day\n        (dostime >> 11) & 0x1f, // hour\n        (dostime >> 5) & 0x3f, // minute\n        (dostime & 0x1f) << 1); // second\n    }\n};\nmodule.exports = DataReader;\n\n},{\"./utils\":21}],6:[function(_dereq_,module,exports){\n'use strict';\nexports.base64 = false;\nexports.binary = false;\nexports.dir = false;\nexports.createFolders = false;\nexports.date = null;\nexports.compression = null;\nexports.comment = null;\n\n},{}],7:[function(_dereq_,module,exports){\n'use strict';\nvar utils = _dereq_('./utils');\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2binary = function(str) {\n    return utils.string2binary(str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2Uint8Array = function(str) {\n    return utils.transformTo(\"uint8array\", str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.uint8Array2String = function(array) {\n    return utils.transformTo(\"string\", array);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.string2Blob = function(str) {\n    var buffer = utils.transformTo(\"arraybuffer\", str);\n    return utils.arrayBuffer2Blob(buffer);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.arrayBuffer2Blob = function(buffer) {\n    return utils.arrayBuffer2Blob(buffer);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.transformTo = function(outputType, input) {\n    return utils.transformTo(outputType, input);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.getTypeOf = function(input) {\n    return utils.getTypeOf(input);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.checkSupport = function(type) {\n    return utils.checkSupport(type);\n};\n\n/**\n * @deprecated\n * This value will be removed in a future version without replacement.\n */\nexports.MAX_VALUE_16BITS = utils.MAX_VALUE_16BITS;\n\n/**\n * @deprecated\n * This value will be removed in a future version without replacement.\n */\nexports.MAX_VALUE_32BITS = utils.MAX_VALUE_32BITS;\n\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.pretty = function(str) {\n    return utils.pretty(str);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.findCompression = function(compressionMethod) {\n    return utils.findCompression(compressionMethod);\n};\n\n/**\n * @deprecated\n * This function will be removed in a future version without replacement.\n */\nexports.isRegExp = function (object) {\n    return utils.isRegExp(object);\n};\n\n\n},{\"./utils\":21}],8:[function(_dereq_,module,exports){\n'use strict';\nvar USE_TYPEDARRAY = (typeof Uint8Array !== 'undefined') && (typeof Uint16Array !== 'undefined') && (typeof Uint32Array !== 'undefined');\n\nvar pako = _dereq_(\"pako\");\nexports.uncompressInputType = USE_TYPEDARRAY ? \"uint8array\" : \"array\";\nexports.compressInputType = USE_TYPEDARRAY ? \"uint8array\" : \"array\";\n\nexports.magic = \"\\x08\\x00\";\nexports.compress = function(input) {\n    return pako.deflateRaw(input);\n};\nexports.uncompress =  function(input) {\n    return pako.inflateRaw(input);\n};\n\n},{\"pako\":24}],9:[function(_dereq_,module,exports){\n'use strict';\n\nvar base64 = _dereq_('./base64');\n\n/**\nUsage:\n   zip = new JSZip();\n   zip.file(\"hello.txt\", \"Hello, World!\").file(\"tempfile\", \"nothing\");\n   zip.folder(\"images\").file(\"smile.gif\", base64Data, {base64: true});\n   zip.file(\"Xmas.txt\", \"Ho ho ho !\", {date : new Date(\"December 25, 2007 00:00:01\")});\n   zip.remove(\"tempfile\");\n\n   base64zip = zip.generate();\n\n**/\n\n/**\n * Representation a of zip file in js\n * @constructor\n * @param {String=|ArrayBuffer=|Uint8Array=} data the data to load, if any (optional).\n * @param {Object=} options the options for creating this objects (optional).\n */\nfunction JSZipSync(data, options) {\n    // if this constructor is used without `new`, it adds `new` before itself:\n    if(!(this instanceof JSZipSync)) return new JSZipSync(data, options);\n\n    // object containing the files :\n    // {\n    //   \"folder/\" : {...},\n    //   \"folder/data.txt\" : {...}\n    // }\n    this.files = {};\n\n    this.comment = null;\n\n    // Where we are in the hierarchy\n    this.root = \"\";\n    if (data) {\n        this.load(data, options);\n    }\n    this.clone = function() {\n        var newObj = new JSZipSync();\n        for (var i in this) {\n            if (typeof this[i] !== \"function\") {\n                newObj[i] = this[i];\n            }\n        }\n        return newObj;\n    };\n}\nJSZipSync.prototype = _dereq_('./object');\nJSZipSync.prototype.load = _dereq_('./load');\nJSZipSync.support = _dereq_('./support');\nJSZipSync.defaults = _dereq_('./defaults');\n\n/**\n * @deprecated\n * This namespace will be removed in a future version without replacement.\n */\nJSZipSync.utils = _dereq_('./deprecatedPublicUtils');\n\nJSZipSync.base64 = {\n    /**\n     * @deprecated\n     * This method will be removed in a future version without replacement.\n     */\n    encode : function(input) {\n        return base64.encode(input);\n    },\n    /**\n     * @deprecated\n     * This method will be removed in a future version without replacement.\n     */\n    decode : function(input) {\n        return base64.decode(input);\n    }\n};\nJSZipSync.compressions = _dereq_('./compressions');\nmodule.exports = JSZipSync;\n\n},{\"./base64\":1,\"./compressions\":3,\"./defaults\":6,\"./deprecatedPublicUtils\":7,\"./load\":10,\"./object\":13,\"./support\":17}],10:[function(_dereq_,module,exports){\n'use strict';\nvar base64 = _dereq_('./base64');\nvar ZipEntries = _dereq_('./zipEntries');\nmodule.exports = function(data, options) {\n    var files, zipEntries, i, input;\n    options = options || {};\n    if (options.base64) {\n        data = base64.decode(data);\n    }\n\n    zipEntries = new ZipEntries(data, options);\n    files = zipEntries.files;\n    for (i = 0; i < files.length; i++) {\n        input = files[i];\n        this.file(input.fileName, input.decompressed, {\n            binary: true,\n            optimizedBinaryString: true,\n            date: input.date,\n            dir: input.dir,\n            comment : input.fileComment.length ? input.fileComment : null,\n            createFolders: options.createFolders\n        });\n    }\n    if (zipEntries.zipComment.length) {\n        this.comment = zipEntries.zipComment;\n    }\n\n    return this;\n};\n\n},{\"./base64\":1,\"./zipEntries\":22}],11:[function(_dereq_,module,exports){\n(function (Buffer){\n'use strict';\nvar Buffer_from = /*::(*/function(){}/*:: :any)*/;\nif(typeof Buffer !== 'undefined') {\n\tvar nbfs = !Buffer.from;\n\tif(!nbfs) try { Buffer.from(\"foo\", \"utf8\"); } catch(e) { nbfs = true; }\n\tBuffer_from = nbfs ? function(buf, enc) { return (enc) ? new Buffer(buf, enc) : new Buffer(buf); } : Buffer.from.bind(Buffer);\n\t// $FlowIgnore\n\tif(!Buffer.alloc) Buffer.alloc = function(n) { return new Buffer(n); };\n}\nmodule.exports = function(data, encoding){\n    return typeof data == 'number' ? Buffer.alloc(data) : Buffer_from(data, encoding);\n};\nmodule.exports.test = function(b){\n    return Buffer.isBuffer(b);\n};\n}).call(this,(typeof Buffer !== \"undefined\" ? Buffer : undefined))\n},{}],12:[function(_dereq_,module,exports){\n'use strict';\nvar Uint8ArrayReader = _dereq_('./uint8ArrayReader');\n\nfunction NodeBufferReader(data) {\n    this.data = data;\n    this.length = this.data.length;\n    this.index = 0;\n}\nNodeBufferReader.prototype = new Uint8ArrayReader();\n\n/**\n * @see DataReader.readData\n */\nNodeBufferReader.prototype.readData = function(size) {\n    this.checkOffset(size);\n    var result = this.data.slice(this.index, this.index + size);\n    this.index += size;\n    return result;\n};\nmodule.exports = NodeBufferReader;\n\n},{\"./uint8ArrayReader\":18}],13:[function(_dereq_,module,exports){\n'use strict';\nvar support = _dereq_('./support');\nvar utils = _dereq_('./utils');\nvar crc32 = _dereq_('./crc32');\nvar signature = _dereq_('./signature');\nvar defaults = _dereq_('./defaults');\nvar base64 = _dereq_('./base64');\nvar compressions = _dereq_('./compressions');\nvar CompressedObject = _dereq_('./compressedObject');\nvar nodeBuffer = _dereq_('./nodeBuffer');\nvar utf8 = _dereq_('./utf8');\nvar StringWriter = _dereq_('./stringWriter');\nvar Uint8ArrayWriter = _dereq_('./uint8ArrayWriter');\n\n/**\n * Returns the raw data of a ZipObject, decompress the content if necessary.\n * @param {ZipObject} file the file to use.\n * @return {String|ArrayBuffer|Uint8Array|Buffer} the data.\n */\nvar getRawData = function(file) {\n    if (file._data instanceof CompressedObject) {\n        file._data = file._data.getContent();\n        file.options.binary = true;\n        file.options.base64 = false;\n\n        if (utils.getTypeOf(file._data) === \"uint8array\") {\n            var copy = file._data;\n            // when reading an arraybuffer, the CompressedObject mechanism will keep it and subarray() a Uint8Array.\n            // if we request a file in the same format, we might get the same Uint8Array or its ArrayBuffer (the original zip file).\n            file._data = new Uint8Array(copy.length);\n            // with an empty Uint8Array, Opera fails with a \"Offset larger than array size\"\n            if (copy.length !== 0) {\n                file._data.set(copy, 0);\n            }\n        }\n    }\n    return file._data;\n};\n\n/**\n * Returns the data of a ZipObject in a binary form. If the content is an unicode string, encode it.\n * @param {ZipObject} file the file to use.\n * @return {String|ArrayBuffer|Uint8Array|Buffer} the data.\n */\nvar getBinaryData = function(file) {\n    var result = getRawData(file),\n        type = utils.getTypeOf(result);\n    if (type === \"string\") {\n        if (!file.options.binary) {\n            // unicode text !\n            // unicode string => binary string is a painful process, check if we can avoid it.\n            if (support.nodebuffer) {\n                return nodeBuffer(result, \"utf-8\");\n            }\n        }\n        return file.asBinary();\n    }\n    return result;\n};\n\n/**\n * Transform this._data into a string.\n * @param {function} filter a function String -> String, applied if not null on the result.\n * @return {String} the string representing this._data.\n */\nvar dataToString = function(asUTF8) {\n    var result = getRawData(this);\n    if (result === null || typeof result === \"undefined\") {\n        return \"\";\n    }\n    // if the data is a base64 string, we decode it before checking the encoding !\n    if (this.options.base64) {\n        result = base64.decode(result);\n    }\n    if (asUTF8 && this.options.binary) {\n        // JSZip.prototype.utf8decode supports arrays as input\n        // skip to array => string step, utf8decode will do it.\n        result = out.utf8decode(result);\n    }\n    else {\n        // no utf8 transformation, do the array => string step.\n        result = utils.transformTo(\"string\", result);\n    }\n\n    if (!asUTF8 && !this.options.binary) {\n        result = utils.transformTo(\"string\", out.utf8encode(result));\n    }\n    return result;\n};\n/**\n * A simple object representing a file in the zip file.\n * @constructor\n * @param {string} name the name of the file\n * @param {String|ArrayBuffer|Uint8Array|Buffer} data the data\n * @param {Object} options the options of the file\n */\nvar ZipObject = function(name, data, options) {\n    this.name = name;\n    this.dir = options.dir;\n    this.date = options.date;\n    this.comment = options.comment;\n\n    this._data = data;\n    this.options = options;\n\n    /*\n     * This object contains initial values for dir and date.\n     * With them, we can check if the user changed the deprecated metadata in\n     * `ZipObject#options` or not.\n     */\n    this._initialMetadata = {\n      dir : options.dir,\n      date : options.date\n    };\n};\n\nZipObject.prototype = {\n    /**\n     * Return the content as UTF8 string.\n     * @return {string} the UTF8 string.\n     */\n    asText: function() {\n        return dataToString.call(this, true);\n    },\n    /**\n     * Returns the binary content.\n     * @return {string} the content as binary.\n     */\n    asBinary: function() {\n        return dataToString.call(this, false);\n    },\n    /**\n     * Returns the content as a nodejs Buffer.\n     * @return {Buffer} the content as a Buffer.\n     */\n    asNodeBuffer: function() {\n        var result = getBinaryData(this);\n        return utils.transformTo(\"nodebuffer\", result);\n    },\n    /**\n     * Returns the content as an Uint8Array.\n     * @return {Uint8Array} the content as an Uint8Array.\n     */\n    asUint8Array: function() {\n        var result = getBinaryData(this);\n        return utils.transformTo(\"uint8array\", result);\n    },\n    /**\n     * Returns the content as an ArrayBuffer.\n     * @return {ArrayBuffer} the content as an ArrayBufer.\n     */\n    asArrayBuffer: function() {\n        return this.asUint8Array().buffer;\n    }\n};\n\n/**\n * Transform an integer into a string in hexadecimal.\n * @private\n * @param {number} dec the number to convert.\n * @param {number} bytes the number of bytes to generate.\n * @returns {string} the result.\n */\nvar decToHex = function(dec, bytes) {\n    var hex = \"\",\n        i;\n    for (i = 0; i < bytes; i++) {\n        hex += String.fromCharCode(dec & 0xff);\n        dec = dec >>> 8;\n    }\n    return hex;\n};\n\n/**\n * Merge the objects passed as parameters into a new one.\n * @private\n * @param {...Object} var_args All objects to merge.\n * @return {Object} a new object with the data of the others.\n */\nvar extend = function() {\n    var result = {}, i, attr;\n    for (i = 0; i < arguments.length; i++) { // arguments is not enumerable in some browsers\n        for (attr in arguments[i]) {\n            if (arguments[i].hasOwnProperty(attr) && typeof result[attr] === \"undefined\") {\n                result[attr] = arguments[i][attr];\n            }\n        }\n    }\n    return result;\n};\n\n/**\n * Transforms the (incomplete) options from the user into the complete\n * set of options to create a file.\n * @private\n * @param {Object} o the options from the user.\n * @return {Object} the complete set of options.\n */\nvar prepareFileAttrs = function(o) {\n    o = o || {};\n    if (o.base64 === true && (o.binary === null || o.binary === undefined)) {\n        o.binary = true;\n    }\n    o = extend(o, defaults);\n    o.date = o.date || new Date();\n    if (o.compression !== null) o.compression = o.compression.toUpperCase();\n\n    return o;\n};\n\n/**\n * Add a file in the current folder.\n * @private\n * @param {string} name the name of the file\n * @param {String|ArrayBuffer|Uint8Array|Buffer} data the data of the file\n * @param {Object} o the options of the file\n * @return {Object} the new file.\n */\nvar fileAdd = function(name, data, o) {\n    // be sure sub folders exist\n    var dataType = utils.getTypeOf(data),\n        parent;\n\n    o = prepareFileAttrs(o);\n\n    if (o.createFolders && (parent = parentFolder(name))) {\n        folderAdd.call(this, parent, true);\n    }\n\n    if (o.dir || data === null || typeof data === \"undefined\") {\n        o.base64 = false;\n        o.binary = false;\n        data = null;\n    }\n    else if (dataType === \"string\") {\n        if (o.binary && !o.base64) {\n            // optimizedBinaryString == true means that the file has already been filtered with a 0xFF mask\n            if (o.optimizedBinaryString !== true) {\n                // this is a string, not in a base64 format.\n                // Be sure that this is a correct \"binary string\"\n                data = utils.string2binary(data);\n            }\n        }\n    }\n    else { // arraybuffer, uint8array, ...\n        o.base64 = false;\n        o.binary = true;\n\n        if (!dataType && !(data instanceof CompressedObject)) {\n            throw new Error(\"The data of '\" + name + \"' is in an unsupported format !\");\n        }\n\n        // special case : it's way easier to work with Uint8Array than with ArrayBuffer\n        if (dataType === \"arraybuffer\") {\n            data = utils.transformTo(\"uint8array\", data);\n        }\n    }\n\n    var object = new ZipObject(name, data, o);\n    this.files[name] = object;\n    return object;\n};\n\n/**\n * Find the parent folder of the path.\n * @private\n * @param {string} path the path to use\n * @return {string} the parent folder, or \"\"\n */\nvar parentFolder = function (path) {\n    if (path.slice(-1) == '/') {\n        path = path.substring(0, path.length - 1);\n    }\n    var lastSlash = path.lastIndexOf('/');\n    return (lastSlash > 0) ? path.substring(0, lastSlash) : \"\";\n};\n\n/**\n * Add a (sub) folder in the current folder.\n * @private\n * @param {string} name the folder's name\n * @param {boolean=} [createFolders] If true, automatically create sub\n *  folders. Defaults to false.\n * @return {Object} the new folder.\n */\nvar folderAdd = function(name, createFolders) {\n    // Check the name ends with a /\n    if (name.slice(-1) != \"/\") {\n        name += \"/\"; // IE doesn't like substr(-1)\n    }\n\n    createFolders = (typeof createFolders !== 'undefined') ? createFolders : false;\n\n    // Does this folder already exist?\n    if (!this.files[name]) {\n        fileAdd.call(this, name, null, {\n            dir: true,\n            createFolders: createFolders\n        });\n    }\n    return this.files[name];\n};\n\n/**\n * Generate a JSZip.CompressedObject for a given zipOject.\n * @param {ZipObject} file the object to read.\n * @param {JSZip.compression} compression the compression to use.\n * @return {JSZip.CompressedObject} the compressed result.\n */\nvar generateCompressedObjectFrom = function(file, compression) {\n    var result = new CompressedObject(),\n        content;\n\n    // the data has not been decompressed, we might reuse things !\n    if (file._data instanceof CompressedObject) {\n        result.uncompressedSize = file._data.uncompressedSize;\n        result.crc32 = file._data.crc32;\n\n        if (result.uncompressedSize === 0 || file.dir) {\n            compression = compressions['STORE'];\n            result.compressedContent = \"\";\n            result.crc32 = 0;\n        }\n        else if (file._data.compressionMethod === compression.magic) {\n            result.compressedContent = file._data.getCompressedContent();\n        }\n        else {\n            content = file._data.getContent();\n            // need to decompress / recompress\n            result.compressedContent = compression.compress(utils.transformTo(compression.compressInputType, content));\n        }\n    }\n    else {\n        // have uncompressed data\n        content = getBinaryData(file);\n        if (!content || content.length === 0 || file.dir) {\n            compression = compressions['STORE'];\n            content = \"\";\n        }\n        result.uncompressedSize = content.length;\n        result.crc32 = crc32(content);\n        result.compressedContent = compression.compress(utils.transformTo(compression.compressInputType, content));\n    }\n\n    result.compressedSize = result.compressedContent.length;\n    result.compressionMethod = compression.magic;\n\n    return result;\n};\n\n/**\n * Generate the various parts used in the construction of the final zip file.\n * @param {string} name the file name.\n * @param {ZipObject} file the file content.\n * @param {JSZip.CompressedObject} compressedObject the compressed object.\n * @param {number} offset the current offset from the start of the zip file.\n * @return {object} the zip parts.\n */\nvar generateZipParts = function(name, file, compressedObject, offset) {\n    var data = compressedObject.compressedContent,\n        utfEncodedFileName = utils.transformTo(\"string\", utf8.utf8encode(file.name)),\n        comment = file.comment || \"\",\n        utfEncodedComment = utils.transformTo(\"string\", utf8.utf8encode(comment)),\n        useUTF8ForFileName = utfEncodedFileName.length !== file.name.length,\n        useUTF8ForComment = utfEncodedComment.length !== comment.length,\n        o = file.options,\n        dosTime,\n        dosDate,\n        extraFields = \"\",\n        unicodePathExtraField = \"\",\n        unicodeCommentExtraField = \"\",\n        dir, date;\n\n\n    // handle the deprecated options.dir\n    if (file._initialMetadata.dir !== file.dir) {\n        dir = file.dir;\n    } else {\n        dir = o.dir;\n    }\n\n    // handle the deprecated options.date\n    if(file._initialMetadata.date !== file.date) {\n        date = file.date;\n    } else {\n        date = o.date;\n    }\n\n\n    dosTime = date.getHours();\n    dosTime = dosTime << 6;\n    dosTime = dosTime | date.getMinutes();\n    dosTime = dosTime << 5;\n    dosTime = dosTime | date.getSeconds() / 2;\n\n    dosDate = date.getFullYear() - 1980;\n    dosDate = dosDate << 4;\n    dosDate = dosDate | (date.getMonth() + 1);\n    dosDate = dosDate << 5;\n    dosDate = dosDate | date.getDate();\n\n    if (useUTF8ForFileName) {\n        // set the unicode path extra field. unzip needs at least one extra\n        // field to correctly handle unicode path, so using the path is as good\n        // as any other information. This could improve the situation with\n        // other archive managers too.\n        // This field is usually used without the utf8 flag, with a non\n        // unicode path in the header (winrar, winzip). This helps (a bit)\n        // with the messy Windows' default compressed folders feature but\n        // breaks on p7zip which doesn't seek the unicode path extra field.\n        // So for now, UTF-8 everywhere !\n        unicodePathExtraField =\n            // Version\n            decToHex(1, 1) +\n            // NameCRC32\n            decToHex(crc32(utfEncodedFileName), 4) +\n            // UnicodeName\n            utfEncodedFileName;\n\n        extraFields +=\n            // Info-ZIP Unicode Path Extra Field\n            \"\\x75\\x70\" +\n            // size\n            decToHex(unicodePathExtraField.length, 2) +\n            // content\n            unicodePathExtraField;\n    }\n\n    if(useUTF8ForComment) {\n\n        unicodeCommentExtraField =\n            // Version\n            decToHex(1, 1) +\n            // CommentCRC32\n            decToHex(this.crc32(utfEncodedComment), 4) +\n            // UnicodeName\n            utfEncodedComment;\n\n        extraFields +=\n            // Info-ZIP Unicode Path Extra Field\n            \"\\x75\\x63\" +\n            // size\n            decToHex(unicodeCommentExtraField.length, 2) +\n            // content\n            unicodeCommentExtraField;\n    }\n\n    var header = \"\";\n\n    // version needed to extract\n    header += \"\\x0A\\x00\";\n    // general purpose bit flag\n    // set bit 11 if utf8\n    header += (useUTF8ForFileName || useUTF8ForComment) ? \"\\x00\\x08\" : \"\\x00\\x00\";\n    // compression method\n    header += compressedObject.compressionMethod;\n    // last mod file time\n    header += decToHex(dosTime, 2);\n    // last mod file date\n    header += decToHex(dosDate, 2);\n    // crc-32\n    header += decToHex(compressedObject.crc32, 4);\n    // compressed size\n    header += decToHex(compressedObject.compressedSize, 4);\n    // uncompressed size\n    header += decToHex(compressedObject.uncompressedSize, 4);\n    // file name length\n    header += decToHex(utfEncodedFileName.length, 2);\n    // extra field length\n    header += decToHex(extraFields.length, 2);\n\n\n    var fileRecord = signature.LOCAL_FILE_HEADER + header + utfEncodedFileName + extraFields;\n\n    var dirRecord = signature.CENTRAL_FILE_HEADER +\n    // version made by (00: DOS)\n    \"\\x14\\x00\" +\n    // file header (common to file and central directory)\n    header +\n    // file comment length\n    decToHex(utfEncodedComment.length, 2) +\n    // disk number start\n    \"\\x00\\x00\" +\n    // internal file attributes TODO\n    \"\\x00\\x00\" +\n    // external file attributes\n    (dir === true ? \"\\x10\\x00\\x00\\x00\" : \"\\x00\\x00\\x00\\x00\") +\n    // relative offset of local header\n    decToHex(offset, 4) +\n    // file name\n    utfEncodedFileName +\n    // extra field\n    extraFields +\n    // file comment\n    utfEncodedComment;\n\n    return {\n        fileRecord: fileRecord,\n        dirRecord: dirRecord,\n        compressedObject: compressedObject\n    };\n};\n\n\n// return the actual prototype of JSZip\nvar out = {\n    /**\n     * Read an existing zip and merge the data in the current JSZip object.\n     * The implementation is in jszip-load.js, don't forget to include it.\n     * @param {String|ArrayBuffer|Uint8Array|Buffer} stream  The stream to load\n     * @param {Object} options Options for loading the stream.\n     *  options.base64 : is the stream in base64 ? default : false\n     * @return {JSZip} the current JSZip object\n     */\n    load: function(stream, options) {\n        throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\");\n    },\n\n    /**\n     * Filter nested files/folders with the specified function.\n     * @param {Function} search the predicate to use :\n     * function (relativePath, file) {...}\n     * It takes 2 arguments : the relative path and the file.\n     * @return {Array} An array of matching elements.\n     */\n    filter: function(search) {\n        var result = [],\n            filename, relativePath, file, fileClone;\n        for (filename in this.files) {\n            if (!this.files.hasOwnProperty(filename)) {\n                continue;\n            }\n            file = this.files[filename];\n            // return a new object, don't let the user mess with our internal objects :)\n            fileClone = new ZipObject(file.name, file._data, extend(file.options));\n            relativePath = filename.slice(this.root.length, filename.length);\n            if (filename.slice(0, this.root.length) === this.root && // the file is in the current root\n            search(relativePath, fileClone)) { // and the file matches the function\n                result.push(fileClone);\n            }\n        }\n        return result;\n    },\n\n    /**\n     * Add a file to the zip file, or search a file.\n     * @param   {string|RegExp} name The name of the file to add (if data is defined),\n     * the name of the file to find (if no data) or a regex to match files.\n     * @param   {String|ArrayBuffer|Uint8Array|Buffer} data  The file data, either raw or base64 encoded\n     * @param   {Object} o     File options\n     * @return  {JSZip|Object|Array} this JSZip object (when adding a file),\n     * a file (when searching by string) or an array of files (when searching by regex).\n     */\n    file: function(name, data, o) {\n        if (arguments.length === 1) {\n            if (utils.isRegExp(name)) {\n                var regexp = name;\n                return this.filter(function(relativePath, file) {\n                    return !file.dir && regexp.test(relativePath);\n                });\n            }\n            else { // text\n                return this.filter(function(relativePath, file) {\n                    return !file.dir && relativePath === name;\n                })[0] || null;\n            }\n        }\n        else { // more than one argument : we have data !\n            name = this.root + name;\n            fileAdd.call(this, name, data, o);\n        }\n        return this;\n    },\n\n    /**\n     * Add a directory to the zip file, or search.\n     * @param   {String|RegExp} arg The name of the directory to add, or a regex to search folders.\n     * @return  {JSZip} an object with the new directory as the root, or an array containing matching folders.\n     */\n    folder: function(arg) {\n        if (!arg) {\n            return this;\n        }\n\n        if (utils.isRegExp(arg)) {\n            return this.filter(function(relativePath, file) {\n                return file.dir && arg.test(relativePath);\n            });\n        }\n\n        // else, name is a new folder\n        var name = this.root + arg;\n        var newFolder = folderAdd.call(this, name);\n\n        // Allow chaining by returning a new object with this folder as the root\n        var ret = this.clone();\n        ret.root = newFolder.name;\n        return ret;\n    },\n\n    /**\n     * Delete a file, or a directory and all sub-files, from the zip\n     * @param {string} name the name of the file to delete\n     * @return {JSZip} this JSZip object\n     */\n    remove: function(name) {\n        name = this.root + name;\n        var file = this.files[name];\n        if (!file) {\n            // Look for any folders\n            if (name.slice(-1) != \"/\") {\n                name += \"/\";\n            }\n            file = this.files[name];\n        }\n\n        if (file && !file.dir) {\n            // file\n            delete this.files[name];\n        } else {\n            // maybe a folder, delete recursively\n            var kids = this.filter(function(relativePath, file) {\n                return file.name.slice(0, name.length) === name;\n            });\n            for (var i = 0; i < kids.length; i++) {\n                delete this.files[kids[i].name];\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * Generate the complete zip file\n     * @param {Object} options the options to generate the zip file :\n     * - base64, (deprecated, use type instead) true to generate base64.\n     * - compression, \"STORE\" by default.\n     * - type, \"base64\" by default. Values are : string, base64, uint8array, arraybuffer, blob.\n     * @return {String|Uint8Array|ArrayBuffer|Buffer|Blob} the zip file\n     */\n    generate: function(options) {\n        options = extend(options || {}, {\n            base64: true,\n            compression: \"STORE\",\n            type: \"base64\",\n            comment: null\n        });\n\n        utils.checkSupport(options.type);\n\n        var zipData = [],\n            localDirLength = 0,\n            centralDirLength = 0,\n            writer, i,\n            utfEncodedComment = utils.transformTo(\"string\", this.utf8encode(options.comment || this.comment || \"\"));\n\n        // first, generate all the zip parts.\n        for (var name in this.files) {\n            if (!this.files.hasOwnProperty(name)) {\n                continue;\n            }\n            var file = this.files[name];\n\n            var compressionName = file.options.compression || options.compression.toUpperCase();\n            var compression = compressions[compressionName];\n            if (!compression) {\n                throw new Error(compressionName + \" is not a valid compression method !\");\n            }\n\n            var compressedObject = generateCompressedObjectFrom.call(this, file, compression);\n\n            var zipPart = generateZipParts.call(this, name, file, compressedObject, localDirLength);\n            localDirLength += zipPart.fileRecord.length + compressedObject.compressedSize;\n            centralDirLength += zipPart.dirRecord.length;\n            zipData.push(zipPart);\n        }\n\n        var dirEnd = \"\";\n\n        // end of central dir signature\n        dirEnd = signature.CENTRAL_DIRECTORY_END +\n        // number of this disk\n        \"\\x00\\x00\" +\n        // number of the disk with the start of the central directory\n        \"\\x00\\x00\" +\n        // total number of entries in the central directory on this disk\n        decToHex(zipData.length, 2) +\n        // total number of entries in the central directory\n        decToHex(zipData.length, 2) +\n        // size of the central directory   4 bytes\n        decToHex(centralDirLength, 4) +\n        // offset of start of central directory with respect to the starting disk number\n        decToHex(localDirLength, 4) +\n        // .ZIP file comment length\n        decToHex(utfEncodedComment.length, 2) +\n        // .ZIP file comment\n        utfEncodedComment;\n\n\n        // we have all the parts (and the total length)\n        // time to create a writer !\n        var typeName = options.type.toLowerCase();\n        if(typeName===\"uint8array\"||typeName===\"arraybuffer\"||typeName===\"blob\"||typeName===\"nodebuffer\") {\n            writer = new Uint8ArrayWriter(localDirLength + centralDirLength + dirEnd.length);\n        }else{\n            writer = new StringWriter(localDirLength + centralDirLength + dirEnd.length);\n        }\n\n        for (i = 0; i < zipData.length; i++) {\n            writer.append(zipData[i].fileRecord);\n            writer.append(zipData[i].compressedObject.compressedContent);\n        }\n        for (i = 0; i < zipData.length; i++) {\n            writer.append(zipData[i].dirRecord);\n        }\n\n        writer.append(dirEnd);\n\n        var zip = writer.finalize();\n\n\n\n        switch(options.type.toLowerCase()) {\n            // case \"zip is an Uint8Array\"\n            case \"uint8array\" :\n            case \"arraybuffer\" :\n            case \"nodebuffer\" :\n               return utils.transformTo(options.type.toLowerCase(), zip);\n            case \"blob\" :\n               return utils.arrayBuffer2Blob(utils.transformTo(\"arraybuffer\", zip));\n            // case \"zip is a string\"\n            case \"base64\" :\n               return (options.base64) ? base64.encode(zip) : zip;\n            default : // case \"string\" :\n               return zip;\n         }\n\n    },\n\n    /**\n     * @deprecated\n     * This method will be removed in a future version without replacement.\n     */\n    crc32: function (input, crc) {\n        return crc32(input, crc);\n    },\n\n    /**\n     * @deprecated\n     * This method will be removed in a future version without replacement.\n     */\n    utf8encode: function (string) {\n        return utils.transformTo(\"string\", utf8.utf8encode(string));\n    },\n\n    /**\n     * @deprecated\n     * This method will be removed in a future version without replacement.\n     */\n    utf8decode: function (input) {\n        return utf8.utf8decode(input);\n    }\n};\nmodule.exports = out;\n\n},{\"./base64\":1,\"./compressedObject\":2,\"./compressions\":3,\"./crc32\":4,\"./defaults\":6,\"./nodeBuffer\":11,\"./signature\":14,\"./stringWriter\":16,\"./support\":17,\"./uint8ArrayWriter\":19,\"./utf8\":20,\"./utils\":21}],14:[function(_dereq_,module,exports){\n'use strict';\nexports.LOCAL_FILE_HEADER = \"PK\\x03\\x04\";\nexports.CENTRAL_FILE_HEADER = \"PK\\x01\\x02\";\nexports.CENTRAL_DIRECTORY_END = \"PK\\x05\\x06\";\nexports.ZIP64_CENTRAL_DIRECTORY_LOCATOR = \"PK\\x06\\x07\";\nexports.ZIP64_CENTRAL_DIRECTORY_END = \"PK\\x06\\x06\";\nexports.DATA_DESCRIPTOR = \"PK\\x07\\x08\";\n\n},{}],15:[function(_dereq_,module,exports){\n'use strict';\nvar DataReader = _dereq_('./dataReader');\nvar utils = _dereq_('./utils');\n\nfunction StringReader(data, optimizedBinaryString) {\n    this.data = data;\n    if (!optimizedBinaryString) {\n        this.data = utils.string2binary(this.data);\n    }\n    this.length = this.data.length;\n    this.index = 0;\n}\nStringReader.prototype = new DataReader();\n/**\n * @see DataReader.byteAt\n */\nStringReader.prototype.byteAt = function(i) {\n    return this.data.charCodeAt(i);\n};\n/**\n * @see DataReader.lastIndexOfSignature\n */\nStringReader.prototype.lastIndexOfSignature = function(sig) {\n    return this.data.lastIndexOf(sig);\n};\n/**\n * @see DataReader.readData\n */\nStringReader.prototype.readData = function(size) {\n    this.checkOffset(size);\n    // this will work because the constructor applied the \"& 0xff\" mask.\n    var result = this.data.slice(this.index, this.index + size);\n    this.index += size;\n    return result;\n};\nmodule.exports = StringReader;\n\n},{\"./dataReader\":5,\"./utils\":21}],16:[function(_dereq_,module,exports){\n'use strict';\n\nvar utils = _dereq_('./utils');\n\n/**\n * An object to write any content to a string.\n * @constructor\n */\nvar StringWriter = function() {\n    this.data = [];\n};\nStringWriter.prototype = {\n    /**\n     * Append any content to the current string.\n     * @param {Object} input the content to add.\n     */\n    append: function(input) {\n        input = utils.transformTo(\"string\", input);\n        this.data.push(input);\n    },\n    /**\n     * Finalize the construction an return the result.\n     * @return {string} the generated string.\n     */\n    finalize: function() {\n        return this.data.join(\"\");\n    }\n};\n\nmodule.exports = StringWriter;\n\n},{\"./utils\":21}],17:[function(_dereq_,module,exports){\n(function (Buffer){\n'use strict';\nexports.base64 = true;\nexports.array = true;\nexports.string = true;\nexports.arraybuffer = typeof ArrayBuffer !== \"undefined\" && typeof Uint8Array !== \"undefined\";\n// contains true if JSZip can read/generate nodejs Buffer, false otherwise.\n// Browserify will provide a Buffer implementation for browsers, which is\n// an augmented Uint8Array (i.e., can be used as either Buffer or U8).\nexports.nodebuffer = typeof Buffer !== \"undefined\";\n// contains true if JSZip can read/generate Uint8Array, false otherwise.\nexports.uint8array = typeof Uint8Array !== \"undefined\";\n\nif (typeof ArrayBuffer === \"undefined\") {\n    exports.blob = false;\n}\nelse {\n    var buffer = new ArrayBuffer(0);\n    try {\n        exports.blob = new Blob([buffer], {\n            type: \"application/zip\"\n        }).size === 0;\n    }\n    catch (e) {\n        try {\n            var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n            var builder = new Builder();\n            builder.append(buffer);\n            exports.blob = builder.getBlob('application/zip').size === 0;\n        }\n        catch (e) {\n            exports.blob = false;\n        }\n    }\n}\n\n}).call(this,(typeof Buffer !== \"undefined\" ? Buffer : undefined))\n},{}],18:[function(_dereq_,module,exports){\n'use strict';\nvar DataReader = _dereq_('./dataReader');\n\nfunction Uint8ArrayReader(data) {\n    if (data) {\n        this.data = data;\n        this.length = this.data.length;\n        this.index = 0;\n    }\n}\nUint8ArrayReader.prototype = new DataReader();\n/**\n * @see DataReader.byteAt\n */\nUint8ArrayReader.prototype.byteAt = function(i) {\n    return this.data[i];\n};\n/**\n * @see DataReader.lastIndexOfSignature\n */\nUint8ArrayReader.prototype.lastIndexOfSignature = function(sig) {\n    var sig0 = sig.charCodeAt(0),\n        sig1 = sig.charCodeAt(1),\n        sig2 = sig.charCodeAt(2),\n        sig3 = sig.charCodeAt(3);\n    for (var i = this.length - 4; i >= 0; --i) {\n        if (this.data[i] === sig0 && this.data[i + 1] === sig1 && this.data[i + 2] === sig2 && this.data[i + 3] === sig3) {\n            return i;\n        }\n    }\n\n    return -1;\n};\n/**\n * @see DataReader.readData\n */\nUint8ArrayReader.prototype.readData = function(size) {\n    this.checkOffset(size);\n    if(size === 0) {\n        // in IE10, when using subarray(idx, idx), we get the array [0x00] instead of [].\n        return new Uint8Array(0);\n    }\n    var result = this.data.subarray(this.index, this.index + size);\n    this.index += size;\n    return result;\n};\nmodule.exports = Uint8ArrayReader;\n\n},{\"./dataReader\":5}],19:[function(_dereq_,module,exports){\n'use strict';\n\nvar utils = _dereq_('./utils');\n\n/**\n * An object to write any content to an Uint8Array.\n * @constructor\n * @param {number} length The length of the array.\n */\nvar Uint8ArrayWriter = function(length) {\n    this.data = new Uint8Array(length);\n    this.index = 0;\n};\nUint8ArrayWriter.prototype = {\n    /**\n     * Append any content to the current array.\n     * @param {Object} input the content to add.\n     */\n    append: function(input) {\n        if (input.length !== 0) {\n            // with an empty Uint8Array, Opera fails with a \"Offset larger than array size\"\n            input = utils.transformTo(\"uint8array\", input);\n            this.data.set(input, this.index);\n            this.index += input.length;\n        }\n    },\n    /**\n     * Finalize the construction an return the result.\n     * @return {Uint8Array} the generated array.\n     */\n    finalize: function() {\n        return this.data;\n    }\n};\n\nmodule.exports = Uint8ArrayWriter;\n\n},{\"./utils\":21}],20:[function(_dereq_,module,exports){\n'use strict';\n\nvar utils = _dereq_('./utils');\nvar support = _dereq_('./support');\nvar nodeBuffer = _dereq_('./nodeBuffer');\n\n/**\n * The following functions come from pako, from pako/lib/utils/strings\n * released under the MIT license, see pako https://github.com/nodeca/pako/\n */\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new Array(256);\nfor (var i=0; i<256; i++) {\n  _utf8len[i] = (i >= 252 ? 6 : i >= 248 ? 5 : i >= 240 ? 4 : i >= 224 ? 3 : i >= 192 ? 2 : 1);\n}\n_utf8len[254]=_utf8len[254]=1; // Invalid sequence start\n\n// convert string to array (typed, when possible)\nvar string2buf = function (str) {\n    var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n    // count binary size\n    for (m_pos = 0; m_pos < str_len; m_pos++) {\n        c = str.charCodeAt(m_pos);\n        if (((c & 0xfc00) === 0xd800) && (m_pos+1 < str_len)) {\n            c2 = str.charCodeAt(m_pos+1);\n            if ((c2 & 0xfc00) === 0xdc00) {\n                c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n                m_pos++;\n            }\n        }\n        buf_len += (c < 0x80) ? 1 : ((c < 0x800) ? 2 : ((c < 0x10000) ? 3 : 4));\n    }\n\n    // allocate buffer\n    if (support.uint8array) {\n        buf = new Uint8Array(buf_len);\n    } else {\n        buf = new Array(buf_len);\n    }\n\n    // convert\n    for (i=0, m_pos = 0; i < buf_len; m_pos++) {\n        c = str.charCodeAt(m_pos);\n        if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {\n            c2 = str.charCodeAt(m_pos+1);\n            if ((c2 & 0xfc00) === 0xdc00) {\n                c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n                m_pos++;\n            }\n        }\n        if (c < 0x80) {\n            /* one byte */\n            buf[i++] = c;\n        } else if (c < 0x800) {\n            /* two bytes */\n            buf[i++] = 0xC0 | (c >>> 6);\n            buf[i++] = 0x80 | (c & 0x3f);\n        } else if (c < 0x10000) {\n            /* three bytes */\n            buf[i++] = 0xE0 | (c >>> 12);\n            buf[i++] = 0x80 | ((c >>> 6) & 0x3f);\n            buf[i++] = 0x80 | (c & 0x3f);\n        } else {\n            /* four bytes */\n            buf[i++] = 0xf0 | (c >>> 18);\n            buf[i++] = 0x80 | ((c >>> 12) & 0x3f);\n            buf[i++] = 0x80 | ((c >>> 6) & 0x3f);\n            buf[i++] = 0x80 | (c & 0x3f);\n        }\n    }\n\n    return buf;\n};\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = function(buf, max) {\n    var pos;\n\n    max = max || buf.length;\n    if (max > buf.length) { max = buf.length; }\n\n    // go back from last position, until start of sequence found\n    pos = max-1;\n    while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n    // Fuckup - very small and broken sequence,\n    // return max, because we should return something anyway.\n    if (pos < 0) { return max; }\n\n    // If we came to start of buffer - that means vuffer is too small,\n    // return max too.\n    if (pos === 0) { return max; }\n\n    return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\n// convert array to string\nvar buf2string = function (buf) {\n    var str, i, out, c, c_len;\n    var len = buf.length;\n\n    // Reserve max possible length (2 words per char)\n    // NB: by unknown reasons, Array is significantly faster for\n    //     String.fromCharCode.apply than Uint16Array.\n    var utf16buf = new Array(len*2);\n\n    for (out=0, i=0; i<len;) {\n        c = buf[i++];\n        // quick process ascii\n        if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n        c_len = _utf8len[c];\n        // skip 5 & 6 byte codes\n        if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len-1; continue; }\n\n        // apply mask on first byte\n        c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n        // join the rest\n        while (c_len > 1 && i < len) {\n            c = (c << 6) | (buf[i++] & 0x3f);\n            c_len--;\n        }\n\n        // terminated by end of string?\n        if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n        if (c < 0x10000) {\n            utf16buf[out++] = c;\n        } else {\n            c -= 0x10000;\n            utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n            utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n        }\n    }\n\n    // shrinkBuf(utf16buf, out)\n    if (utf16buf.length !== out) {\n        if(utf16buf.subarray) {\n            utf16buf = utf16buf.subarray(0, out);\n        } else {\n            utf16buf.length = out;\n        }\n    }\n\n    // return String.fromCharCode.apply(null, utf16buf);\n    return utils.applyFromCharCode(utf16buf);\n};\n\n\n// That's all for the pako functions.\n\n\n/**\n * Transform a javascript string into an array (typed if possible) of bytes,\n * UTF-8 encoded.\n * @param {String} str the string to encode\n * @return {Array|Uint8Array|Buffer} the UTF-8 encoded string.\n */\nexports.utf8encode = function utf8encode(str) {\n    if (support.nodebuffer) {\n        return nodeBuffer(str, \"utf-8\");\n    }\n\n    return string2buf(str);\n};\n\n\n/**\n * Transform a bytes array (or a representation) representing an UTF-8 encoded\n * string into a javascript string.\n * @param {Array|Uint8Array|Buffer} buf the data de decode\n * @return {String} the decoded string.\n */\nexports.utf8decode = function utf8decode(buf) {\n    if (support.nodebuffer) {\n        return utils.transformTo(\"nodebuffer\", buf).toString(\"utf-8\");\n    }\n\n    buf = utils.transformTo(support.uint8array ? \"uint8array\" : \"array\", buf);\n\n    // return buf2string(buf);\n    // Chrome prefers to work with \"small\" chunks of data\n    // for the method buf2string.\n    // Firefox and Chrome has their own shortcut, IE doesn't seem to really care.\n    var result = [], k = 0, len = buf.length, chunk = 65536;\n    while (k < len) {\n        var nextBoundary = utf8border(buf, Math.min(k + chunk, len));\n        if (support.uint8array) {\n            result.push(buf2string(buf.subarray(k, nextBoundary)));\n        } else {\n            result.push(buf2string(buf.slice(k, nextBoundary)));\n        }\n        k = nextBoundary;\n    }\n    return result.join(\"\");\n\n};\n// vim: set shiftwidth=4 softtabstop=4:\n\n},{\"./nodeBuffer\":11,\"./support\":17,\"./utils\":21}],21:[function(_dereq_,module,exports){\n'use strict';\nvar support = _dereq_('./support');\nvar compressions = _dereq_('./compressions');\nvar nodeBuffer = _dereq_('./nodeBuffer');\n/**\n * Convert a string to a \"binary string\" : a string containing only char codes between 0 and 255.\n * @param {string} str the string to transform.\n * @return {String} the binary string.\n */\nexports.string2binary = function(str) {\n    var result = \"\";\n    for (var i = 0; i < str.length; i++) {\n        result += String.fromCharCode(str.charCodeAt(i) & 0xff);\n    }\n    return result;\n};\nexports.arrayBuffer2Blob = function(buffer) {\n    exports.checkSupport(\"blob\");\n\n    try {\n        // Blob constructor\n        return new Blob([buffer], {\n            type: \"application/zip\"\n        });\n    }\n    catch (e) {\n\n        try {\n            // deprecated, browser only, old way\n            var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n            var builder = new Builder();\n            builder.append(buffer);\n            return builder.getBlob('application/zip');\n        }\n        catch (e) {\n\n            // well, fuck ?!\n            throw new Error(\"Bug : can't construct the Blob.\");\n        }\n    }\n\n\n};\n/**\n * The identity function.\n * @param {Object} input the input.\n * @return {Object} the same input.\n */\nfunction identity(input) {\n    return input;\n}\n\n/**\n * Fill in an array with a string.\n * @param {String} str the string to use.\n * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to fill in (will be mutated).\n * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated array.\n */\nfunction stringToArrayLike(str, array) {\n    for (var i = 0; i < str.length; ++i) {\n        array[i] = str.charCodeAt(i) & 0xFF;\n    }\n    return array;\n}\n\n/**\n * Transform an array-like object to a string.\n * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to transform.\n * @return {String} the result.\n */\nfunction arrayLikeToString(array) {\n    // Performances notes :\n    // --------------------\n    // String.fromCharCode.apply(null, array) is the fastest, see\n    // see http://jsperf.com/converting-a-uint8array-to-a-string/2\n    // but the stack is limited (and we can get huge arrays !).\n    //\n    // result += String.fromCharCode(array[i]); generate too many strings !\n    //\n    // This code is inspired by http://jsperf.com/arraybuffer-to-string-apply-performance/2\n    var chunk = 65536;\n    var result = [],\n        len = array.length,\n        type = exports.getTypeOf(array),\n        k = 0,\n        canUseApply = true;\n      try {\n         switch(type) {\n            case \"uint8array\":\n               String.fromCharCode.apply(null, new Uint8Array(0));\n               break;\n            case \"nodebuffer\":\n               String.fromCharCode.apply(null, nodeBuffer(0));\n               break;\n         }\n      } catch(e) {\n         canUseApply = false;\n      }\n\n      // no apply : slow and painful algorithm\n      // default browser on android 4.*\n      if (!canUseApply) {\n         var resultStr = \"\";\n         for(var i = 0; i < array.length;i++) {\n            resultStr += String.fromCharCode(array[i]);\n         }\n    return resultStr;\n    }\n    while (k < len && chunk > 1) {\n        try {\n            if (type === \"array\" || type === \"nodebuffer\") {\n                result.push(String.fromCharCode.apply(null, array.slice(k, Math.min(k + chunk, len))));\n            }\n            else {\n                result.push(String.fromCharCode.apply(null, array.subarray(k, Math.min(k + chunk, len))));\n            }\n            k += chunk;\n        }\n        catch (e) {\n            chunk = Math.floor(chunk / 2);\n        }\n    }\n    return result.join(\"\");\n}\n\nexports.applyFromCharCode = arrayLikeToString;\n\n\n/**\n * Copy the data from an array-like to an other array-like.\n * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayFrom the origin array.\n * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayTo the destination array which will be mutated.\n * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated destination array.\n */\nfunction arrayLikeToArrayLike(arrayFrom, arrayTo) {\n    for (var i = 0; i < arrayFrom.length; i++) {\n        arrayTo[i] = arrayFrom[i];\n    }\n    return arrayTo;\n}\n\n// a matrix containing functions to transform everything into everything.\nvar transform = {};\n\n// string to ?\ntransform[\"string\"] = {\n    \"string\": identity,\n    \"array\": function(input) {\n        return stringToArrayLike(input, new Array(input.length));\n    },\n    \"arraybuffer\": function(input) {\n        return transform[\"string\"][\"uint8array\"](input).buffer;\n    },\n    \"uint8array\": function(input) {\n        return stringToArrayLike(input, new Uint8Array(input.length));\n    },\n    \"nodebuffer\": function(input) {\n        return stringToArrayLike(input, nodeBuffer(input.length));\n    }\n};\n\n// array to ?\ntransform[\"array\"] = {\n    \"string\": arrayLikeToString,\n    \"array\": identity,\n    \"arraybuffer\": function(input) {\n        return (new Uint8Array(input)).buffer;\n    },\n    \"uint8array\": function(input) {\n        return new Uint8Array(input);\n    },\n    \"nodebuffer\": function(input) {\n        return nodeBuffer(input);\n    }\n};\n\n// arraybuffer to ?\ntransform[\"arraybuffer\"] = {\n    \"string\": function(input) {\n        return arrayLikeToString(new Uint8Array(input));\n    },\n    \"array\": function(input) {\n        return arrayLikeToArrayLike(new Uint8Array(input), new Array(input.byteLength));\n    },\n    \"arraybuffer\": identity,\n    \"uint8array\": function(input) {\n        return new Uint8Array(input);\n    },\n    \"nodebuffer\": function(input) {\n        return nodeBuffer(new Uint8Array(input));\n    }\n};\n\n// uint8array to ?\ntransform[\"uint8array\"] = {\n    \"string\": arrayLikeToString,\n    \"array\": function(input) {\n        return arrayLikeToArrayLike(input, new Array(input.length));\n    },\n    \"arraybuffer\": function(input) {\n        return input.buffer;\n    },\n    \"uint8array\": identity,\n    \"nodebuffer\": function(input) {\n        return nodeBuffer(input);\n    }\n};\n\n// nodebuffer to ?\ntransform[\"nodebuffer\"] = {\n    \"string\": arrayLikeToString,\n    \"array\": function(input) {\n        return arrayLikeToArrayLike(input, new Array(input.length));\n    },\n    \"arraybuffer\": function(input) {\n        return transform[\"nodebuffer\"][\"uint8array\"](input).buffer;\n    },\n    \"uint8array\": function(input) {\n        return arrayLikeToArrayLike(input, new Uint8Array(input.length));\n    },\n    \"nodebuffer\": identity\n};\n\n/**\n * Transform an input into any type.\n * The supported output type are : string, array, uint8array, arraybuffer, nodebuffer.\n * If no output type is specified, the unmodified input will be returned.\n * @param {String} outputType the output type.\n * @param {String|Array|ArrayBuffer|Uint8Array|Buffer} input the input to convert.\n * @throws {Error} an Error if the browser doesn't support the requested output type.\n */\nexports.transformTo = function(outputType, input) {\n    if (!input) {\n        // undefined, null, etc\n        // an empty string won't harm.\n        input = \"\";\n    }\n    if (!outputType) {\n        return input;\n    }\n    exports.checkSupport(outputType);\n    var inputType = exports.getTypeOf(input);\n    var result = transform[inputType][outputType](input);\n    return result;\n};\n\n/**\n * Return the type of the input.\n * The type will be in a format valid for JSZip.utils.transformTo : string, array, uint8array, arraybuffer.\n * @param {Object} input the input to identify.\n * @return {String} the (lowercase) type of the input.\n */\nexports.getTypeOf = function(input) {\n    if (typeof input === \"string\") {\n        return \"string\";\n    }\n    if (Object.prototype.toString.call(input) === \"[object Array]\") {\n        return \"array\";\n    }\n    if (support.nodebuffer && nodeBuffer.test(input)) {\n        return \"nodebuffer\";\n    }\n    if (support.uint8array && input instanceof Uint8Array) {\n        return \"uint8array\";\n    }\n    if (support.arraybuffer && input instanceof ArrayBuffer) {\n        return \"arraybuffer\";\n    }\n};\n\n/**\n * Throw an exception if the type is not supported.\n * @param {String} type the type to check.\n * @throws {Error} an Error if the browser doesn't support the requested type.\n */\nexports.checkSupport = function(type) {\n    var supported = support[type.toLowerCase()];\n    if (!supported) {\n        throw new Error(type + \" is not supported by this browser\");\n    }\n};\nexports.MAX_VALUE_16BITS = 65535;\nexports.MAX_VALUE_32BITS = -1; // well, \"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\" is parsed as -1\n\n/**\n * Prettify a string read as binary.\n * @param {string} str the string to prettify.\n * @return {string} a pretty string.\n */\nexports.pretty = function(str) {\n    var res = '',\n        code, i;\n    for (i = 0; i < (str || \"\").length; i++) {\n        code = str.charCodeAt(i);\n        res += '\\\\x' + (code < 16 ? \"0\" : \"\") + code.toString(16).toUpperCase();\n    }\n    return res;\n};\n\n/**\n * Find a compression registered in JSZip.\n * @param {string} compressionMethod the method magic to find.\n * @return {Object|null} the JSZip compression object, null if none found.\n */\nexports.findCompression = function(compressionMethod) {\n    for (var method in compressions) {\n        if (!compressions.hasOwnProperty(method)) {\n            continue;\n        }\n        if (compressions[method].magic === compressionMethod) {\n            return compressions[method];\n        }\n    }\n    return null;\n};\n/**\n* Cross-window, cross-Node-context regular expression detection\n* @param  {Object}  object Anything\n* @return {Boolean}        true if the object is a regular expression,\n* false otherwise\n*/\nexports.isRegExp = function (object) {\n    return Object.prototype.toString.call(object) === \"[object RegExp]\";\n};\n\n\n},{\"./compressions\":3,\"./nodeBuffer\":11,\"./support\":17}],22:[function(_dereq_,module,exports){\n'use strict';\nvar StringReader = _dereq_('./stringReader');\nvar NodeBufferReader = _dereq_('./nodeBufferReader');\nvar Uint8ArrayReader = _dereq_('./uint8ArrayReader');\nvar utils = _dereq_('./utils');\nvar sig = _dereq_('./signature');\nvar ZipEntry = _dereq_('./zipEntry');\nvar support = _dereq_('./support');\nvar jszipProto = _dereq_('./object');\n//  class ZipEntries {{{\n/**\n * All the entries in the zip file.\n * @constructor\n * @param {String|ArrayBuffer|Uint8Array} data the binary stream to load.\n * @param {Object} loadOptions Options for loading the stream.\n */\nfunction ZipEntries(data, loadOptions) {\n    this.files = [];\n    this.loadOptions = loadOptions;\n    if (data) {\n        this.load(data);\n    }\n}\nZipEntries.prototype = {\n    /**\n     * Check that the reader is on the speficied signature.\n     * @param {string} expectedSignature the expected signature.\n     * @throws {Error} if it is an other signature.\n     */\n    checkSignature: function(expectedSignature) {\n        var signature = this.reader.readString(4);\n        if (signature !== expectedSignature) {\n            throw new Error(\"Corrupted zip or bug : unexpected signature \" + \"(\" + utils.pretty(signature) + \", expected \" + utils.pretty(expectedSignature) + \")\");\n        }\n    },\n    /**\n     * Read the end of the central directory.\n     */\n    readBlockEndOfCentral: function() {\n        this.diskNumber = this.reader.readInt(2);\n        this.diskWithCentralDirStart = this.reader.readInt(2);\n        this.centralDirRecordsOnThisDisk = this.reader.readInt(2);\n        this.centralDirRecords = this.reader.readInt(2);\n        this.centralDirSize = this.reader.readInt(4);\n        this.centralDirOffset = this.reader.readInt(4);\n\n        this.zipCommentLength = this.reader.readInt(2);\n        // warning : the encoding depends of the system locale\n        // On a linux machine with LANG=en_US.utf8, this field is utf8 encoded.\n        // On a windows machine, this field is encoded with the localized windows code page.\n        this.zipComment = this.reader.readString(this.zipCommentLength);\n        // To get consistent behavior with the generation part, we will assume that\n        // this is utf8 encoded.\n        this.zipComment = jszipProto.utf8decode(this.zipComment);\n    },\n    /**\n     * Read the end of the Zip 64 central directory.\n     * Not merged with the method readEndOfCentral :\n     * The end of central can coexist with its Zip64 brother,\n     * I don't want to read the wrong number of bytes !\n     */\n    readBlockZip64EndOfCentral: function() {\n        this.zip64EndOfCentralSize = this.reader.readInt(8);\n        this.versionMadeBy = this.reader.readString(2);\n        this.versionNeeded = this.reader.readInt(2);\n        this.diskNumber = this.reader.readInt(4);\n        this.diskWithCentralDirStart = this.reader.readInt(4);\n        this.centralDirRecordsOnThisDisk = this.reader.readInt(8);\n        this.centralDirRecords = this.reader.readInt(8);\n        this.centralDirSize = this.reader.readInt(8);\n        this.centralDirOffset = this.reader.readInt(8);\n\n        this.zip64ExtensibleData = {};\n        var extraDataSize = this.zip64EndOfCentralSize - 44,\n            index = 0,\n            extraFieldId,\n            extraFieldLength,\n            extraFieldValue;\n        while (index < extraDataSize) {\n            extraFieldId = this.reader.readInt(2);\n            extraFieldLength = this.reader.readInt(4);\n            extraFieldValue = this.reader.readString(extraFieldLength);\n            this.zip64ExtensibleData[extraFieldId] = {\n                id: extraFieldId,\n                length: extraFieldLength,\n                value: extraFieldValue\n            };\n        }\n    },\n    /**\n     * Read the end of the Zip 64 central directory locator.\n     */\n    readBlockZip64EndOfCentralLocator: function() {\n        this.diskWithZip64CentralDirStart = this.reader.readInt(4);\n        this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8);\n        this.disksCount = this.reader.readInt(4);\n        if (this.disksCount > 1) {\n            throw new Error(\"Multi-volumes zip are not supported\");\n        }\n    },\n    /**\n     * Read the local files, based on the offset read in the central part.\n     */\n    readLocalFiles: function() {\n        var i, file;\n        for (i = 0; i < this.files.length; i++) {\n            file = this.files[i];\n            this.reader.setIndex(file.localHeaderOffset);\n            this.checkSignature(sig.LOCAL_FILE_HEADER);\n            file.readLocalPart(this.reader);\n            file.handleUTF8();\n        }\n    },\n    /**\n     * Read the central directory.\n     */\n    readCentralDir: function() {\n        var file;\n\n        this.reader.setIndex(this.centralDirOffset);\n        while (this.reader.readString(4) === sig.CENTRAL_FILE_HEADER) {\n            file = new ZipEntry({\n                zip64: this.zip64\n            }, this.loadOptions);\n            file.readCentralPart(this.reader);\n            this.files.push(file);\n        }\n    },\n    /**\n     * Read the end of central directory.\n     */\n    readEndOfCentral: function() {\n        var offset = this.reader.lastIndexOfSignature(sig.CENTRAL_DIRECTORY_END);\n        if (offset === -1) {\n            throw new Error(\"Corrupted zip : can't find end of central directory\");\n        }\n        this.reader.setIndex(offset);\n        this.checkSignature(sig.CENTRAL_DIRECTORY_END);\n        this.readBlockEndOfCentral();\n\n\n        /* extract from the zip spec :\n            4)  If one of the fields in the end of central directory\n                record is too small to hold required data, the field\n                should be set to -1 (0xFFFF or 0xFFFFFFFF) and the\n                ZIP64 format record should be created.\n            5)  The end of central directory record and the\n                Zip64 end of central directory locator record must\n                reside on the same disk when splitting or spanning\n                an archive.\n         */\n        if (this.diskNumber === utils.MAX_VALUE_16BITS || this.diskWithCentralDirStart === utils.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === utils.MAX_VALUE_16BITS || this.centralDirRecords === utils.MAX_VALUE_16BITS || this.centralDirSize === utils.MAX_VALUE_32BITS || this.centralDirOffset === utils.MAX_VALUE_32BITS) {\n            this.zip64 = true;\n\n            /*\n            Warning : the zip64 extension is supported, but ONLY if the 64bits integer read from\n            the zip file can fit into a 32bits integer. This cannot be solved : Javascript represents\n            all numbers as 64-bit double precision IEEE 754 floating point numbers.\n            So, we have 53bits for integers and bitwise operations treat everything as 32bits.\n            see https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Bitwise_Operators\n            and http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf section 8.5\n            */\n\n            // should look for a zip64 EOCD locator\n            offset = this.reader.lastIndexOfSignature(sig.ZIP64_CENTRAL_DIRECTORY_LOCATOR);\n            if (offset === -1) {\n                throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");\n            }\n            this.reader.setIndex(offset);\n            this.checkSignature(sig.ZIP64_CENTRAL_DIRECTORY_LOCATOR);\n            this.readBlockZip64EndOfCentralLocator();\n\n            // now the zip64 EOCD record\n            this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir);\n            this.checkSignature(sig.ZIP64_CENTRAL_DIRECTORY_END);\n            this.readBlockZip64EndOfCentral();\n        }\n    },\n    prepareReader: function(data) {\n        var type = utils.getTypeOf(data);\n        if (type === \"string\" && !support.uint8array) {\n            this.reader = new StringReader(data, this.loadOptions.optimizedBinaryString);\n        }\n        else if (type === \"nodebuffer\") {\n            this.reader = new NodeBufferReader(data);\n        }\n        else {\n            this.reader = new Uint8ArrayReader(utils.transformTo(\"uint8array\", data));\n        }\n    },\n    /**\n     * Read a zip file and create ZipEntries.\n     * @param {String|ArrayBuffer|Uint8Array|Buffer} data the binary string representing a zip file.\n     */\n    load: function(data) {\n        this.prepareReader(data);\n        this.readEndOfCentral();\n        this.readCentralDir();\n        this.readLocalFiles();\n    }\n};\n// }}} end of ZipEntries\nmodule.exports = ZipEntries;\n\n},{\"./nodeBufferReader\":12,\"./object\":13,\"./signature\":14,\"./stringReader\":15,\"./support\":17,\"./uint8ArrayReader\":18,\"./utils\":21,\"./zipEntry\":23}],23:[function(_dereq_,module,exports){\n'use strict';\nvar StringReader = _dereq_('./stringReader');\nvar utils = _dereq_('./utils');\nvar CompressedObject = _dereq_('./compressedObject');\nvar jszipProto = _dereq_('./object');\n// class ZipEntry {{{\n/**\n * An entry in the zip file.\n * @constructor\n * @param {Object} options Options of the current file.\n * @param {Object} loadOptions Options for loading the stream.\n */\nfunction ZipEntry(options, loadOptions) {\n    this.options = options;\n    this.loadOptions = loadOptions;\n}\nZipEntry.prototype = {\n    /**\n     * say if the file is encrypted.\n     * @return {boolean} true if the file is encrypted, false otherwise.\n     */\n    isEncrypted: function() {\n        // bit 1 is set\n        return (this.bitFlag & 0x0001) === 0x0001;\n    },\n    /**\n     * say if the file has utf-8 filename/comment.\n     * @return {boolean} true if the filename/comment is in utf-8, false otherwise.\n     */\n    useUTF8: function() {\n        // bit 11 is set\n        return (this.bitFlag & 0x0800) === 0x0800;\n    },\n    /**\n     * Prepare the function used to generate the compressed content from this ZipFile.\n     * @param {DataReader} reader the reader to use.\n     * @param {number} from the offset from where we should read the data.\n     * @param {number} length the length of the data to read.\n     * @return {Function} the callback to get the compressed content (the type depends of the DataReader class).\n     */\n    prepareCompressedContent: function(reader, from, length) {\n        return function() {\n            var previousIndex = reader.index;\n            reader.setIndex(from);\n            var compressedFileData = reader.readData(length);\n            reader.setIndex(previousIndex);\n\n            return compressedFileData;\n        };\n    },\n    /**\n     * Prepare the function used to generate the uncompressed content from this ZipFile.\n     * @param {DataReader} reader the reader to use.\n     * @param {number} from the offset from where we should read the data.\n     * @param {number} length the length of the data to read.\n     * @param {JSZip.compression} compression the compression used on this file.\n     * @param {number} uncompressedSize the uncompressed size to expect.\n     * @return {Function} the callback to get the uncompressed content (the type depends of the DataReader class).\n     */\n    prepareContent: function(reader, from, length, compression, uncompressedSize) {\n        return function() {\n\n            var compressedFileData = utils.transformTo(compression.uncompressInputType, this.getCompressedContent());\n            var uncompressedFileData = compression.uncompress(compressedFileData);\n\n            if (uncompressedFileData.length !== uncompressedSize) {\n                throw new Error(\"Bug : uncompressed data size mismatch\");\n            }\n\n            return uncompressedFileData;\n        };\n    },\n    /**\n     * Read the local part of a zip file and add the info in this object.\n     * @param {DataReader} reader the reader to use.\n     */\n    readLocalPart: function(reader) {\n        var compression, localExtraFieldsLength;\n\n        // we already know everything from the central dir !\n        // If the central dir data are false, we are doomed.\n        // On the bright side, the local part is scary  : zip64, data descriptors, both, etc.\n        // The less data we get here, the more reliable this should be.\n        // Let's skip the whole header and dash to the data !\n        reader.skip(22);\n        // in some zip created on windows, the filename stored in the central dir contains \\ instead of /.\n        // Strangely, the filename here is OK.\n        // I would love to treat these zip files as corrupted (see http://www.info-zip.org/FAQ.html#backslashes\n        // or APPNOTE#4.4.17.1, \"All slashes MUST be forward slashes '/'\") but there are a lot of bad zip generators...\n        // Search \"unzip mismatching \"local\" filename continuing with \"central\" filename version\" on\n        // the internet.\n        //\n        // I think I see the logic here : the central directory is used to display\n        // content and the local directory is used to extract the files. Mixing / and \\\n        // may be used to display \\ to windows users and use / when extracting the files.\n        // Unfortunately, this lead also to some issues : http://seclists.org/fulldisclosure/2009/Sep/394\n        this.fileNameLength = reader.readInt(2);\n        localExtraFieldsLength = reader.readInt(2); // can't be sure this will be the same as the central dir\n        this.fileName = reader.readString(this.fileNameLength);\n        reader.skip(localExtraFieldsLength);\n\n        if (this.compressedSize == -1 || this.uncompressedSize == -1) {\n            throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory \" + \"(compressedSize == -1 || uncompressedSize == -1)\");\n        }\n\n        compression = utils.findCompression(this.compressionMethod);\n        if (compression === null) { // no compression found\n            throw new Error(\"Corrupted zip : compression \" + utils.pretty(this.compressionMethod) + \" unknown (inner file : \" + this.fileName + \")\");\n        }\n        this.decompressed = new CompressedObject();\n        this.decompressed.compressedSize = this.compressedSize;\n        this.decompressed.uncompressedSize = this.uncompressedSize;\n        this.decompressed.crc32 = this.crc32;\n        this.decompressed.compressionMethod = this.compressionMethod;\n        this.decompressed.getCompressedContent = this.prepareCompressedContent(reader, reader.index, this.compressedSize, compression);\n        this.decompressed.getContent = this.prepareContent(reader, reader.index, this.compressedSize, compression, this.uncompressedSize);\n\n        // we need to compute the crc32...\n        if (this.loadOptions.checkCRC32) {\n            this.decompressed = utils.transformTo(\"string\", this.decompressed.getContent());\n            if (jszipProto.crc32(this.decompressed) !== this.crc32) {\n                throw new Error(\"Corrupted zip : CRC32 mismatch\");\n            }\n        }\n    },\n\n    /**\n     * Read the central part of a zip file and add the info in this object.\n     * @param {DataReader} reader the reader to use.\n     */\n    readCentralPart: function(reader) {\n        this.versionMadeBy = reader.readString(2);\n        this.versionNeeded = reader.readInt(2);\n        this.bitFlag = reader.readInt(2);\n        this.compressionMethod = reader.readString(2);\n        this.date = reader.readDate();\n        this.crc32 = reader.readInt(4);\n        this.compressedSize = reader.readInt(4);\n        this.uncompressedSize = reader.readInt(4);\n        this.fileNameLength = reader.readInt(2);\n        this.extraFieldsLength = reader.readInt(2);\n        this.fileCommentLength = reader.readInt(2);\n        this.diskNumberStart = reader.readInt(2);\n        this.internalFileAttributes = reader.readInt(2);\n        this.externalFileAttributes = reader.readInt(4);\n        this.localHeaderOffset = reader.readInt(4);\n\n        if (this.isEncrypted()) {\n            throw new Error(\"Encrypted zip are not supported\");\n        }\n\n        this.fileName = reader.readString(this.fileNameLength);\n        this.readExtraFields(reader);\n        this.parseZIP64ExtraField(reader);\n        this.fileComment = reader.readString(this.fileCommentLength);\n\n        // warning, this is true only for zip with madeBy == DOS (plateform dependent feature)\n        this.dir = this.externalFileAttributes & 0x00000010 ? true : false;\n    },\n    /**\n     * Parse the ZIP64 extra field and merge the info in the current ZipEntry.\n     * @param {DataReader} reader the reader to use.\n     */\n    parseZIP64ExtraField: function(reader) {\n\n        if (!this.extraFields[0x0001]) {\n            return;\n        }\n\n        // should be something, preparing the extra reader\n        var extraReader = new StringReader(this.extraFields[0x0001].value);\n\n        // I really hope that these 64bits integer can fit in 32 bits integer, because js\n        // won't let us have more.\n        if (this.uncompressedSize === utils.MAX_VALUE_32BITS) {\n            this.uncompressedSize = extraReader.readInt(8);\n        }\n        if (this.compressedSize === utils.MAX_VALUE_32BITS) {\n            this.compressedSize = extraReader.readInt(8);\n        }\n        if (this.localHeaderOffset === utils.MAX_VALUE_32BITS) {\n            this.localHeaderOffset = extraReader.readInt(8);\n        }\n        if (this.diskNumberStart === utils.MAX_VALUE_32BITS) {\n            this.diskNumberStart = extraReader.readInt(4);\n        }\n    },\n    /**\n     * Read the central part of a zip file and add the info in this object.\n     * @param {DataReader} reader the reader to use.\n     */\n    readExtraFields: function(reader) {\n        var start = reader.index,\n            extraFieldId,\n            extraFieldLength,\n            extraFieldValue;\n\n        this.extraFields = this.extraFields || {};\n\n        while (reader.index < start + this.extraFieldsLength) {\n            extraFieldId = reader.readInt(2);\n            extraFieldLength = reader.readInt(2);\n            extraFieldValue = reader.readString(extraFieldLength);\n\n            this.extraFields[extraFieldId] = {\n                id: extraFieldId,\n                length: extraFieldLength,\n                value: extraFieldValue\n            };\n        }\n    },\n    /**\n     * Apply an UTF8 transformation if needed.\n     */\n    handleUTF8: function() {\n        if (this.useUTF8()) {\n            this.fileName = jszipProto.utf8decode(this.fileName);\n            this.fileComment = jszipProto.utf8decode(this.fileComment);\n        } else {\n            var upath = this.findExtraFieldUnicodePath();\n            if (upath !== null) {\n                this.fileName = upath;\n            }\n            var ucomment = this.findExtraFieldUnicodeComment();\n            if (ucomment !== null) {\n                this.fileComment = ucomment;\n            }\n        }\n    },\n\n    /**\n     * Find the unicode path declared in the extra field, if any.\n     * @return {String} the unicode path, null otherwise.\n     */\n    findExtraFieldUnicodePath: function() {\n        var upathField = this.extraFields[0x7075];\n        if (upathField) {\n            var extraReader = new StringReader(upathField.value);\n\n            // wrong version\n            if (extraReader.readInt(1) !== 1) {\n                return null;\n            }\n\n            // the crc of the filename changed, this field is out of date.\n            if (jszipProto.crc32(this.fileName) !== extraReader.readInt(4)) {\n                return null;\n            }\n\n            return jszipProto.utf8decode(extraReader.readString(upathField.length - 5));\n        }\n        return null;\n    },\n\n    /**\n     * Find the unicode comment declared in the extra field, if any.\n     * @return {String} the unicode comment, null otherwise.\n     */\n    findExtraFieldUnicodeComment: function() {\n        var ucommentField = this.extraFields[0x6375];\n        if (ucommentField) {\n            var extraReader = new StringReader(ucommentField.value);\n\n            // wrong version\n            if (extraReader.readInt(1) !== 1) {\n                return null;\n            }\n\n            // the crc of the comment changed, this field is out of date.\n            if (jszipProto.crc32(this.fileComment) !== extraReader.readInt(4)) {\n                return null;\n            }\n\n            return jszipProto.utf8decode(extraReader.readString(ucommentField.length - 5));\n        }\n        return null;\n    }\n};\nmodule.exports = ZipEntry;\n\n},{\"./compressedObject\":2,\"./object\":13,\"./stringReader\":15,\"./utils\":21}],24:[function(_dereq_,module,exports){\n// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = _dereq_('./lib/utils/common').assign;\n\nvar deflate   = _dereq_('./lib/deflate');\nvar inflate   = _dereq_('./lib/inflate');\nvar constants = _dereq_('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n},{\"./lib/deflate\":25,\"./lib/inflate\":26,\"./lib/utils/common\":27,\"./lib/zlib/constants\":30}],25:[function(_dereq_,module,exports){\n'use strict';\n\n\nvar zlib_deflate = _dereq_('./zlib/deflate.js');\nvar utils = _dereq_('./utils/common');\nvar strings = _dereq_('./utils/strings');\nvar msg = _dereq_('./zlib/messages');\nvar zstream = _dereq_('./zlib/zstream');\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overriden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nvar Deflate = function(options) {\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n};\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|String): input data. Strings will be converted to\n *   utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That flush internal pending buffers and call\n * [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function(data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && _mode === Z_FINISH)) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): ouput data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function(chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that input stream complete\n * or error happenned. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function(status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate alrorythm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n},{\"./utils/common\":27,\"./utils/strings\":28,\"./zlib/deflate.js\":32,\"./zlib/messages\":37,\"./zlib/zstream\":39}],26:[function(_dereq_,module,exports){\n'use strict';\n\n\nvar zlib_inflate = _dereq_('./zlib/inflate.js');\nvar utils = _dereq_('./utils/common');\nvar strings = _dereq_('./utils/strings');\nvar c = _dereq_('./zlib/constants');\nvar msg = _dereq_('./zlib/messages');\nvar zstream = _dereq_('./zlib/zstream');\nvar gzheader = _dereq_('./zlib/gzheader');\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overriden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nvar Inflate = function(options) {\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new gzheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n};\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That flush internal pending buffers and call\n * [[Inflate#onEnd]].\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function(data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && _mode === c.Z_FINISH)) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n  } while ((strm.avail_in > 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): ouput data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function(chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell inflate that input stream complete\n * or error happenned. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function(status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 alligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n\n},{\"./utils/common\":27,\"./utils/strings\":28,\"./zlib/constants\":30,\"./zlib/gzheader\":33,\"./zlib/inflate.js\":35,\"./zlib/messages\":37,\"./zlib/zstream\":39}],27:[function(_dereq_,module,exports){\n'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof(source) !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (source.hasOwnProperty(p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs+len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for(var i=0; i<len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function(chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i=0, l=chunks.length; i<l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i=0, l=chunks.length; i<l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for(var i=0; i<len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function(chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n},{}],28:[function(_dereq_,module,exports){\n// String encode/decode helpers\n'use strict';\n\n\nvar utils = _dereq_('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safary\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [0]); } catch(__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch(__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var i=0; i<256; i++) {\n  _utf8len[i] = (i >= 252 ? 6 : i >= 248 ? 5 : i >= 240 ? 4 : i >= 224 ? 3 : i >= 192 ? 2 : 1);\n}\n_utf8len[254]=_utf8len[254]=1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {\n      c2 = str.charCodeAt(m_pos+1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i=0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {\n      c2 = str.charCodeAt(m_pos+1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // use fallback for big arrays to avoid stack overflow\n  if (len < 65537) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for(var i=0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function(buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function(str) {\n  var buf = new utils.Buf8(str.length);\n  for(var i=0, len=buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len*2);\n\n  for (out=0, i=0; i<len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len-1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function(buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max-1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Fuckup - very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means vuffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\n},{\"./common\":27}],29:[function(_dereq_,module,exports){\n'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It doesn't worth to make additional optimizationa as in original.\n// Small size is preferable.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0\n    , s2 = ((adler >>> 16) & 0xffff) |0\n    , n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n},{}],30:[function(_dereq_,module,exports){\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n},{}],31:[function(_dereq_,module,exports){\n'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for(var n =0; n < 256; n++){\n    c = n;\n    for(var k =0; k < 8; k++){\n      c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable\n    , end = pos + len;\n\n  crc = crc ^ (-1);\n\n  for (var i = pos; i < end; i++ ) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n},{}],32:[function(_dereq_,module,exports){\n'use strict';\n\nvar utils   = _dereq_('../utils/common');\nvar trees   = _dereq_('./trees');\nvar adler32 = _dereq_('./adler32');\nvar crc32   = _dereq_('./crc32');\nvar msg   = _dereq_('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2*L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only (s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH-1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH-1)) ? s.strstart : MIN_MATCH-1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH-1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size-MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH-1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1- s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length-1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH-1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart-1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart-1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH-1 ? s.strstart : MIN_MATCH-1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nvar Config = function (good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n};\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2*D_CODES+1) * 2);\n  this.bl_tree    = new utils.Buf16((2*BL_CODES+1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS+1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2*L_CODES+1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2*L_CODES+1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  s.d_buf = s.lit_bufsize >> 1;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n                );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg){\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n/* =========================================================================\n * Copy the source state to the destination state\n */\n//function deflateCopy(dest, source) {\n//\n//}\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n},{\"../utils/common\":27,\"./adler32\":29,\"./crc32\":31,\"./messages\":37,\"./trees\":38}],33:[function(_dereq_,module,exports){\n'use strict';\n\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n},{}],34:[function(_dereq_,module,exports){\n'use strict';\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  var window;                 /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n},{}],35:[function(_dereq_,module,exports){\n'use strict';\n\n\nvar utils = _dereq_('../utils/common');\nvar adler32 = _dereq_('./adler32');\nvar crc32   = _dereq_('./crc32');\nvar inflate_fast = _dereq_('./inffast');\nvar inflate_table = _dereq_('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction ZSWAP32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, {bits: 9});\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, {bits: 5});\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window,src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window,src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window,src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n    case HEAD:\n      if (state.wrap === 0) {\n        state.mode = TYPEDO;\n        break;\n      }\n      //=== NEEDBITS(16);\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n        state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = FLAGS;\n        break;\n      }\n      state.flags = 0;           /* expect zlib header */\n      if (state.head) {\n        state.head.done = false;\n      }\n      if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n        (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n        strm.msg = 'incorrect header check';\n        state.mode = BAD;\n        break;\n      }\n      if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n        strm.msg = 'unknown compression method';\n        state.mode = BAD;\n        break;\n      }\n      //--- DROPBITS(4) ---//\n      hold >>>= 4;\n      bits -= 4;\n      //---//\n      len = (hold & 0x0f)/*BITS(4)*/ + 8;\n      if (state.wbits === 0) {\n        state.wbits = len;\n      }\n      else if (len > state.wbits) {\n        strm.msg = 'invalid window size';\n        state.mode = BAD;\n        break;\n      }\n      state.dmax = 1 << len;\n      //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n      state.mode = hold & 0x200 ? DICTID : TYPE;\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      break;\n    case FLAGS:\n      //=== NEEDBITS(16); */\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.flags = hold;\n      if ((state.flags & 0xff) !== Z_DEFLATED) {\n        strm.msg = 'unknown compression method';\n        state.mode = BAD;\n        break;\n      }\n      if (state.flags & 0xe000) {\n        strm.msg = 'unknown header flags set';\n        state.mode = BAD;\n        break;\n      }\n      if (state.head) {\n        state.head.text = ((hold >> 8) & 1);\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = TIME;\n      /* falls through */\n    case TIME:\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if (state.head) {\n        state.head.time = hold;\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC4(state.check, hold)\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        hbuf[2] = (hold >>> 16) & 0xff;\n        hbuf[3] = (hold >>> 24) & 0xff;\n        state.check = crc32(state.check, hbuf, 4, 0);\n        //===\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = OS;\n      /* falls through */\n    case OS:\n      //=== NEEDBITS(16); */\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if (state.head) {\n        state.head.xflags = (hold & 0xff);\n        state.head.os = (hold >> 8);\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = EXLEN;\n      /* falls through */\n    case EXLEN:\n      if (state.flags & 0x0400) {\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.length = hold;\n        if (state.head) {\n          state.head.extra_len = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n      }\n      else if (state.head) {\n        state.head.extra = null/*Z_NULL*/;\n      }\n      state.mode = EXTRA;\n      /* falls through */\n    case EXTRA:\n      if (state.flags & 0x0400) {\n        copy = state.length;\n        if (copy > have) { copy = have; }\n        if (copy) {\n          if (state.head) {\n            len = state.head.extra_len - state.length;\n            if (!state.head.extra) {\n              // Use untyped array for more conveniend processing later\n              state.head.extra = new Array(state.head.extra_len);\n            }\n            utils.arraySet(\n              state.head.extra,\n              input,\n              next,\n              // extra field is limited to 65536 bytes\n              // - no need for additional size check\n              copy,\n              /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n              len\n            );\n            //zmemcpy(state.head.extra + len, next,\n            //        len + copy > state.head.extra_max ?\n            //        state.head.extra_max - len : copy);\n          }\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          state.length -= copy;\n        }\n        if (state.length) { break inf_leave; }\n      }\n      state.length = 0;\n      state.mode = NAME;\n      /* falls through */\n    case NAME:\n      if (state.flags & 0x0800) {\n        if (have === 0) { break inf_leave; }\n        copy = 0;\n        do {\n          // TODO: 2 or 1 bytes?\n          len = input[next + copy++];\n          /* use constant limit because in js we should not preallocate memory */\n          if (state.head && len &&\n              (state.length < 65536 /*state.head.name_max*/)) {\n            state.head.name += String.fromCharCode(len);\n          }\n        } while (len && copy < have);\n\n        if (state.flags & 0x0200) {\n          state.check = crc32(state.check, input, copy, next);\n        }\n        have -= copy;\n        next += copy;\n        if (len) { break inf_leave; }\n      }\n      else if (state.head) {\n        state.head.name = null;\n      }\n      state.length = 0;\n      state.mode = COMMENT;\n      /* falls through */\n    case COMMENT:\n      if (state.flags & 0x1000) {\n        if (have === 0) { break inf_leave; }\n        copy = 0;\n        do {\n          len = input[next + copy++];\n          /* use constant limit because in js we should not preallocate memory */\n          if (state.head && len &&\n              (state.length < 65536 /*state.head.comm_max*/)) {\n            state.head.comment += String.fromCharCode(len);\n          }\n        } while (len && copy < have);\n        if (state.flags & 0x0200) {\n          state.check = crc32(state.check, input, copy, next);\n        }\n        have -= copy;\n        next += copy;\n        if (len) { break inf_leave; }\n      }\n      else if (state.head) {\n        state.head.comment = null;\n      }\n      state.mode = HCRC;\n      /* falls through */\n    case HCRC:\n      if (state.flags & 0x0200) {\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (hold !== (state.check & 0xffff)) {\n          strm.msg = 'header crc mismatch';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n      }\n      if (state.head) {\n        state.head.hcrc = ((state.flags >> 9) & 1);\n        state.head.done = true;\n      }\n      strm.adler = state.check = 0 /*crc32(0L, Z_NULL, 0)*/;\n      state.mode = TYPE;\n      break;\n    case DICTID:\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      strm.adler = state.check = ZSWAP32(hold);\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = DICT;\n      /* falls through */\n    case DICT:\n      if (state.havedict === 0) {\n        //--- RESTORE() ---\n        strm.next_out = put;\n        strm.avail_out = left;\n        strm.next_in = next;\n        strm.avail_in = have;\n        state.hold = hold;\n        state.bits = bits;\n        //---\n        return Z_NEED_DICT;\n      }\n      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n      state.mode = TYPE;\n      /* falls through */\n    case TYPE:\n      if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case TYPEDO:\n      if (state.last) {\n        //--- BYTEBITS() ---//\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        state.mode = CHECK;\n        break;\n      }\n      //=== NEEDBITS(3); */\n      while (bits < 3) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.last = (hold & 0x01)/*BITS(1)*/;\n      //--- DROPBITS(1) ---//\n      hold >>>= 1;\n      bits -= 1;\n      //---//\n\n      switch ((hold & 0x03)/*BITS(2)*/) {\n      case 0:                             /* stored block */\n        //Tracev((stderr, \"inflate:     stored block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = STORED;\n        break;\n      case 1:                             /* fixed block */\n        fixedtables(state);\n        //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = LEN_;             /* decode codes */\n        if (flush === Z_TREES) {\n          //--- DROPBITS(2) ---//\n          hold >>>= 2;\n          bits -= 2;\n          //---//\n          break inf_leave;\n        }\n        break;\n      case 2:                             /* dynamic block */\n        //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = TABLE;\n        break;\n      case 3:\n        strm.msg = 'invalid block type';\n        state.mode = BAD;\n      }\n      //--- DROPBITS(2) ---//\n      hold >>>= 2;\n      bits -= 2;\n      //---//\n      break;\n    case STORED:\n      //--- BYTEBITS() ---// /* go to byte boundary */\n      hold >>>= bits & 7;\n      bits -= bits & 7;\n      //---//\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n        strm.msg = 'invalid stored block lengths';\n        state.mode = BAD;\n        break;\n      }\n      state.length = hold & 0xffff;\n      //Tracev((stderr, \"inflate:       stored length %u\\n\",\n      //        state.length));\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = COPY_;\n      if (flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case COPY_:\n      state.mode = COPY;\n      /* falls through */\n    case COPY:\n      copy = state.length;\n      if (copy) {\n        if (copy > have) { copy = have; }\n        if (copy > left) { copy = left; }\n        if (copy === 0) { break inf_leave; }\n        //--- zmemcpy(put, next, copy); ---\n        utils.arraySet(output, input, next, copy, put);\n        //---//\n        have -= copy;\n        next += copy;\n        left -= copy;\n        put += copy;\n        state.length -= copy;\n        break;\n      }\n      //Tracev((stderr, \"inflate:       stored end\\n\"));\n      state.mode = TYPE;\n      break;\n    case TABLE:\n      //=== NEEDBITS(14); */\n      while (bits < 14) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n      //--- DROPBITS(5) ---//\n      hold >>>= 5;\n      bits -= 5;\n      //---//\n      state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n      //--- DROPBITS(5) ---//\n      hold >>>= 5;\n      bits -= 5;\n      //---//\n      state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n      //--- DROPBITS(4) ---//\n      hold >>>= 4;\n      bits -= 4;\n      //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n      if (state.nlen > 286 || state.ndist > 30) {\n        strm.msg = 'too many length or distance symbols';\n        state.mode = BAD;\n        break;\n      }\n//#endif\n      //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n      state.have = 0;\n      state.mode = LENLENS;\n      /* falls through */\n    case LENLENS:\n      while (state.have < state.ncode) {\n        //=== NEEDBITS(3);\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n        //--- DROPBITS(3) ---//\n        hold >>>= 3;\n        bits -= 3;\n        //---//\n      }\n      while (state.have < 19) {\n        state.lens[order[state.have++]] = 0;\n      }\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      //state.next = state.codes;\n      //state.lencode = state.next;\n      // Switch to use dynamic table\n      state.lencode = state.lendyn;\n      state.lenbits = 7;\n\n      opts = {bits: state.lenbits};\n      ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n      state.lenbits = opts.bits;\n\n      if (ret) {\n        strm.msg = 'invalid code lengths set';\n        state.mode = BAD;\n        break;\n      }\n      //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n      state.have = 0;\n      state.mode = CODELENS;\n      /* falls through */\n    case CODELENS:\n      while (state.have < state.nlen + state.ndist) {\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_val < 16) {\n          //--- DROPBITS(here.bits) ---//\n          hold >>>= here_bits;\n          bits -= here_bits;\n          //---//\n          state.lens[state.have++] = here_val;\n        }\n        else {\n          if (here_val === 16) {\n            //=== NEEDBITS(here.bits + 2);\n            n = here_bits + 2;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            if (state.have === 0) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            len = state.lens[state.have - 1];\n            copy = 3 + (hold & 0x03);//BITS(2);\n            //--- DROPBITS(2) ---//\n            hold >>>= 2;\n            bits -= 2;\n            //---//\n          }\n          else if (here_val === 17) {\n            //=== NEEDBITS(here.bits + 3);\n            n = here_bits + 3;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            len = 0;\n            copy = 3 + (hold & 0x07);//BITS(3);\n            //--- DROPBITS(3) ---//\n            hold >>>= 3;\n            bits -= 3;\n            //---//\n          }\n          else {\n            //=== NEEDBITS(here.bits + 7);\n            n = here_bits + 7;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            len = 0;\n            copy = 11 + (hold & 0x7f);//BITS(7);\n            //--- DROPBITS(7) ---//\n            hold >>>= 7;\n            bits -= 7;\n            //---//\n          }\n          if (state.have + copy > state.nlen + state.ndist) {\n            strm.msg = 'invalid bit length repeat';\n            state.mode = BAD;\n            break;\n          }\n          while (copy--) {\n            state.lens[state.have++] = len;\n          }\n        }\n      }\n\n      /* handle error breaks in while */\n      if (state.mode === BAD) { break; }\n\n      /* check for end-of-block code (better have one) */\n      if (state.lens[256] === 0) {\n        strm.msg = 'invalid code -- missing end-of-block';\n        state.mode = BAD;\n        break;\n      }\n\n      /* build code tables -- note: do not change the lenbits or distbits\n         values here (9 and 6) without reading the comments in inftrees.h\n         concerning the ENOUGH constants, which depend on those values */\n      state.lenbits = 9;\n\n      opts = {bits: state.lenbits};\n      ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      // state.next_index = opts.table_index;\n      state.lenbits = opts.bits;\n      // state.lencode = state.next;\n\n      if (ret) {\n        strm.msg = 'invalid literal/lengths set';\n        state.mode = BAD;\n        break;\n      }\n\n      state.distbits = 6;\n      //state.distcode.copy(state.codes);\n      // Switch to use dynamic table\n      state.distcode = state.distdyn;\n      opts = {bits: state.distbits};\n      ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      // state.next_index = opts.table_index;\n      state.distbits = opts.bits;\n      // state.distcode = state.next;\n\n      if (ret) {\n        strm.msg = 'invalid distances set';\n        state.mode = BAD;\n        break;\n      }\n      //Tracev((stderr, 'inflate:       codes ok\\n'));\n      state.mode = LEN_;\n      if (flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case LEN_:\n      state.mode = LEN;\n      /* falls through */\n    case LEN:\n      if (have >= 6 && left >= 258) {\n        //--- RESTORE() ---\n        strm.next_out = put;\n        strm.avail_out = left;\n        strm.next_in = next;\n        strm.avail_in = have;\n        state.hold = hold;\n        state.bits = bits;\n        //---\n        inflate_fast(strm, _out);\n        //--- LOAD() ---\n        put = strm.next_out;\n        output = strm.output;\n        left = strm.avail_out;\n        next = strm.next_in;\n        input = strm.input;\n        have = strm.avail_in;\n        hold = state.hold;\n        bits = state.bits;\n        //---\n\n        if (state.mode === TYPE) {\n          state.back = -1;\n        }\n        break;\n      }\n      state.back = 0;\n      for (;;) {\n        here = state.lencode[hold & ((1 << state.lenbits) -1)];  /*BITS(state.lenbits)*/\n        here_bits = here >>> 24;\n        here_op = (here >>> 16) & 0xff;\n        here_val = here & 0xffff;\n\n        if (here_bits <= bits) { break; }\n        //--- PULLBYTE() ---//\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n        //---//\n      }\n      if (here_op && (here_op & 0xf0) === 0) {\n        last_bits = here_bits;\n        last_op = here_op;\n        last_val = here_val;\n        for (;;) {\n          here = state.lencode[last_val +\n                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((last_bits + here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        //--- DROPBITS(last.bits) ---//\n        hold >>>= last_bits;\n        bits -= last_bits;\n        //---//\n        state.back += last_bits;\n      }\n      //--- DROPBITS(here.bits) ---//\n      hold >>>= here_bits;\n      bits -= here_bits;\n      //---//\n      state.back += here_bits;\n      state.length = here_val;\n      if (here_op === 0) {\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        state.mode = LIT;\n        break;\n      }\n      if (here_op & 32) {\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.back = -1;\n        state.mode = TYPE;\n        break;\n      }\n      if (here_op & 64) {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break;\n      }\n      state.extra = here_op & 15;\n      state.mode = LENEXT;\n      /* falls through */\n    case LENEXT:\n      if (state.extra) {\n        //=== NEEDBITS(state.extra);\n        n = state.extra;\n        while (bits < n) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.length += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;\n        //--- DROPBITS(state.extra) ---//\n        hold >>>= state.extra;\n        bits -= state.extra;\n        //---//\n        state.back += state.extra;\n      }\n      //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n      state.was = state.length;\n      state.mode = DIST;\n      /* falls through */\n    case DIST:\n      for (;;) {\n        here = state.distcode[hold & ((1 << state.distbits) -1)];/*BITS(state.distbits)*/\n        here_bits = here >>> 24;\n        here_op = (here >>> 16) & 0xff;\n        here_val = here & 0xffff;\n\n        if ((here_bits) <= bits) { break; }\n        //--- PULLBYTE() ---//\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n        //---//\n      }\n      if ((here_op & 0xf0) === 0) {\n        last_bits = here_bits;\n        last_op = here_op;\n        last_val = here_val;\n        for (;;) {\n          here = state.distcode[last_val +\n                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((last_bits + here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        //--- DROPBITS(last.bits) ---//\n        hold >>>= last_bits;\n        bits -= last_bits;\n        //---//\n        state.back += last_bits;\n      }\n      //--- DROPBITS(here.bits) ---//\n      hold >>>= here_bits;\n      bits -= here_bits;\n      //---//\n      state.back += here_bits;\n      if (here_op & 64) {\n        strm.msg = 'invalid distance code';\n        state.mode = BAD;\n        break;\n      }\n      state.offset = here_val;\n      state.extra = (here_op) & 15;\n      state.mode = DISTEXT;\n      /* falls through */\n    case DISTEXT:\n      if (state.extra) {\n        //=== NEEDBITS(state.extra);\n        n = state.extra;\n        while (bits < n) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.offset += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;\n        //--- DROPBITS(state.extra) ---//\n        hold >>>= state.extra;\n        bits -= state.extra;\n        //---//\n        state.back += state.extra;\n      }\n//#ifdef INFLATE_STRICT\n      if (state.offset > state.dmax) {\n        strm.msg = 'invalid distance too far back';\n        state.mode = BAD;\n        break;\n      }\n//#endif\n      //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n      state.mode = MATCH;\n      /* falls through */\n    case MATCH:\n      if (left === 0) { break inf_leave; }\n      copy = _out - left;\n      if (state.offset > copy) {         /* copy from window */\n        copy = state.offset - copy;\n        if (copy > state.whave) {\n          if (state.sane) {\n            strm.msg = 'invalid distance too far back';\n            state.mode = BAD;\n            break;\n          }\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n        }\n        if (copy > state.wnext) {\n          copy -= state.wnext;\n          from = state.wsize - copy;\n        }\n        else {\n          from = state.wnext - copy;\n        }\n        if (copy > state.length) { copy = state.length; }\n        from_source = state.window;\n      }\n      else {                              /* copy from output */\n        from_source = output;\n        from = put - state.offset;\n        copy = state.length;\n      }\n      if (copy > left) { copy = left; }\n      left -= copy;\n      state.length -= copy;\n      do {\n        output[put++] = from_source[from++];\n      } while (--copy);\n      if (state.length === 0) { state.mode = LEN; }\n      break;\n    case LIT:\n      if (left === 0) { break inf_leave; }\n      output[put++] = state.length;\n      left--;\n      state.mode = LEN;\n      break;\n    case CHECK:\n      if (state.wrap) {\n        //=== NEEDBITS(32);\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          // Use '|' insdead of '+' to make sure that result is signed\n          hold |= input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        _out -= left;\n        strm.total_out += _out;\n        state.total += _out;\n        if (_out) {\n          strm.adler = state.check =\n              /*UPDATE(state.check, put - _out, _out);*/\n              (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n        }\n        _out = left;\n        // NB: crc32 stored as signed 32-bit int, ZSWAP32 returns signed too\n        if ((state.flags ? hold : ZSWAP32(hold)) !== state.check) {\n          strm.msg = 'incorrect data check';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n      }\n      state.mode = LENGTH;\n      /* falls through */\n    case LENGTH:\n      if (state.wrap && state.flags) {\n        //=== NEEDBITS(32);\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (hold !== (state.total & 0xffffffff)) {\n          strm.msg = 'incorrect length check';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n      }\n      state.mode = DONE;\n      /* falls through */\n    case DONE:\n      ret = Z_STREAM_END;\n      break inf_leave;\n    case BAD:\n      ret = Z_DATA_ERROR;\n      break inf_leave;\n    case MEM:\n      return Z_MEM_ERROR;\n    case SYNC:\n      /* falls through */\n    default:\n      return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n},{\"../utils/common\":27,\"./adler32\":29,\"./crc32\":31,\"./inffast\":34,\"./inftrees\":36}],36:[function(_dereq_,module,exports){\n'use strict';\n\n\nvar utils = _dereq_('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n      base = extra = work;    /* dummy value--not used */\n      end = 19;\n  } else if (type === LENS) {\n      base = lbase;\n      base_index -= 257;\n      extra = lext;\n      extra_index -= 257;\n      end = 256;\n  } else {                    /* DISTS */\n      base = dbase;\n      extra = dext;\n      end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  var i=0;\n  /* process all codes and make table entries */\n  for (;;) {\n    i++;\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n},{\"../utils/common\":27}],37:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = {\n  '2':    'need dictionary',     /* Z_NEED_DICT       2  */\n  '1':    'stream end',          /* Z_STREAM_END      1  */\n  '0':    '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n},{}],38:[function(_dereq_,module,exports){\n'use strict';\n\n\nvar utils = _dereq_('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2*L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array insdead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES+2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH-MIN_MATCH+1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nvar StaticTreeDesc = function (static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n};\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nvar TreeDesc = function(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n};\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short (s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c*2]/*.Code*/, tree[c*2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max]*2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max+1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n*2 +1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n*2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n-base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n*2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length-1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits+1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m*2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m*2 + 1]/*.Len*/)*tree[m*2]/*.Freq*/;\n        tree[m*2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS+1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits-1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n*2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n*2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS+1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES-1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1<<extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length-1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0 ; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1<<extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for ( ; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1<<(extra_dbits[code]-7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n*2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n*2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n*2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n*2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES+1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n*2 + 1]/*.Len*/ = 5;\n    static_dtree[n*2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS+1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc =new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n*2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n*2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n*2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK*2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n*2;\n  var _m2 = m*2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j+1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx*2] << 8) | (s.pending_buf[s.d_buf + lx*2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code+LITERALS+1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n*2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node*2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n*2 + 1]/*.Dad*/ = tree[m*2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0*2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code+1)*2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n+1)*2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6*2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10*2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138*2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0*2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n+1)*2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count-3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count-3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count-11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES-1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex]*2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3*(max_blindex+1) + 5+5+4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes-257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes-1,   5);\n  send_bits(s, blcodes-4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank]*2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes-1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes-1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n*2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK<<1)+(last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES<<1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len+3+7) >>> 3;\n    static_lenb = (s.static_len+3+7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len+4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES<<1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES<<1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code+1, s.d_desc.max_code+1, max_blindex+1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc*2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc]+LITERALS+1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize-1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n},{\"../utils/common\":27}],39:[function(_dereq_,module,exports){\n'use strict';\n\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n},{}]},{},[9])\n(9)\n}));\n","/*\n  Loki IndexedDb Adapter (need to include this script to use it)\n\n  Console Usage can be used for management/diagnostic, here are a few examples :\n  adapter.getDatabaseList(); // with no callback passed, this method will log results to console\n  adapter.saveDatabase('UserDatabase', JSON.stringify(myDb));\n  adapter.loadDatabase('UserDatabase'); // will log the serialized db to console\n  adapter.deleteDatabase('UserDatabase');\n*/\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define([], factory);\n    } else if (typeof exports === 'object') {\n        // Node, CommonJS-like\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.LokiIndexedAdapter = factory();\n    }\n}(this, function () {\n  return (function() {\n\n    /**\n     * Loki persistence adapter class for indexedDb.\n     *     This class fulfills abstract adapter interface which can be applied to other storage methods. \n     *     Utilizes the included LokiCatalog app/key/value database for actual database persistence.\n     *     Indexeddb is highly async, but this adapter has been made 'console-friendly' as well.\n     *     Anywhere a callback is omitted, it should return results (if applicable) to console.\n     *     IndexedDb storage is provided per-domain, so we implement app/key/value database to \n     *     allow separate contexts for separate apps within a domain.\n     *\n     * @example\n     * var idbAdapter = new LokiIndexedAdapter('finance');\n     *\n     * @constructor LokiIndexedAdapter\n     *\n     * @param {string} appname - (Optional) Application name context can be used to distinguish subdomains, 'loki' by default\n     * @param {object=} options Configuration options for the adapter\n     * @param {boolean} options.closeAfterSave Whether the indexedDB database should be closed after saving.\n     */\n    function LokiIndexedAdapter(appname, options)\n    {\n      this.app = 'loki';\n      this.options = options || {};\n\n      if (typeof (appname) !== 'undefined')\n      {\n        this.app = appname;\n      }\n\n      // keep reference to catalog class for base AKV operations\n      this.catalog = null;\n\n      if (!this.checkAvailability()) {\n        throw new Error('indexedDB does not seem to be supported for your environment');\n      }\n    }\n\n    /**\n     * Used for closing the indexeddb database.\n     */\n    LokiIndexedAdapter.prototype.closeDatabase = function ()\n    {\n      if (this.catalog && this.catalog.db) {\n        this.catalog.db.close();\n        this.catalog.db = null;\n      }\n    };\n\n    /**\n     * Used to check if adapter is available\n     *\n     * @returns {boolean} true if indexeddb is available, false if not.\n     * @memberof LokiIndexedAdapter\n     */\n    LokiIndexedAdapter.prototype.checkAvailability = function()\n    {\n      if (typeof indexedDB !== 'undefined' && indexedDB) return true;\n\n      return false;\n    };\n\n    /**\n     * Retrieves a serialized db string from the catalog.\n     *\n     * @example\n     * // LOAD\n     * var idbAdapter = new LokiIndexedAdapter('finance');\n     * var db = new loki('test', { adapter: idbAdapter });\n     *   db.loadDatabase(function(result) {\n     *   console.log('done');\n     * });\n     *\n     * @param {string} dbname - the name of the database to retrieve.\n     * @param {function} callback - callback should accept string param containing serialized db string.\n     * @memberof LokiIndexedAdapter\n     */\n    LokiIndexedAdapter.prototype.loadDatabase = function(dbname, callback)\n    {\n      var appName = this.app;\n      var adapter = this;\n\n      // lazy open/create db reference so dont -need- callback in constructor\n      if (this.catalog === null || this.catalog.db === null) {\n        this.catalog = new LokiCatalog(function(cat) {\n          adapter.catalog = cat;\n\n          adapter.loadDatabase(dbname, callback);\n        });\n\n        return;\n      }\n\n      // lookup up db string in AKV db\n      this.catalog.getAppKey(appName, dbname, function(result) {\n        if (typeof (callback) === 'function') {\n          if (result.id === 0) {\n            callback(null);\n            return;\n          }\n          callback(result.val);\n        }\n        else {\n          // support console use of api\n          console.log(result.val);\n        }\n      });\n    };\n\n    // alias\n    LokiIndexedAdapter.prototype.loadKey = LokiIndexedAdapter.prototype.loadDatabase;\n\n    /**\n     * Saves a serialized db to the catalog.\n     *\n     * @example\n     * // SAVE : will save App/Key/Val as 'finance'/'test'/{serializedDb}\n     * var idbAdapter = new LokiIndexedAdapter('finance');\n     * var db = new loki('test', { adapter: idbAdapter });\n     * var coll = db.addCollection('testColl');\n     * coll.insert({test: 'val'});\n     * db.saveDatabase();  // could pass callback if needed for async complete\n     *\n     * @param {string} dbname - the name to give the serialized database within the catalog.\n     * @param {string} dbstring - the serialized db string to save.\n     * @param {function} callback - (Optional) callback passed obj.success with true or false\n     * @memberof LokiIndexedAdapter\n     */\n    LokiIndexedAdapter.prototype.saveDatabase = function(dbname, dbstring, callback)\n    {\n      var appName = this.app;\n      var adapter = this;\n\n      function saveCallback(result) {\n        if (result && result.success === true) {\n          callback(null);\n        }\n        else {\n          callback(new Error(\"Error saving database\"));\n        }\n\n        if (adapter.options.closeAfterSave) {\n          adapter.closeDatabase();\n        }\n      }\n\n      // lazy open/create db reference so dont -need- callback in constructor\n      if (this.catalog === null || this.catalog.db === null) {\n        this.catalog = new LokiCatalog(function(cat) {\n          adapter.saveDatabase(dbname, dbstring, saveCallback);\n        });\n\n        return;\n      }\n\n      // set (add/update) entry to AKV database\n      this.catalog.setAppKey(appName, dbname, dbstring, saveCallback);\n    };\n\n    // alias\n    LokiIndexedAdapter.prototype.saveKey = LokiIndexedAdapter.prototype.saveDatabase;\n\n    /**\n     * Deletes a serialized db from the catalog.\n     *\n     * @example\n     * // DELETE DATABASE\n     * // delete 'finance'/'test' value from catalog\n     * idbAdapter.deleteDatabase('test', function {\n     *   // database deleted\n     * });\n     *\n     * @param {string} dbname - the name of the database to delete from the catalog.\n     * @param {function=} callback - (Optional) executed on database delete\n     * @memberof LokiIndexedAdapter\n     */\n    LokiIndexedAdapter.prototype.deleteDatabase = function(dbname, callback)\n    {\n      var appName = this.app;\n      var adapter = this;\n\n      // lazy open/create db reference and pass callback ahead\n      if (this.catalog === null || this.catalog.db === null) {\n        this.catalog = new LokiCatalog(function(cat) {\n          adapter.catalog = cat;\n\n          adapter.deleteDatabase(dbname, callback);\n        });\n\n        return;\n      }\n\n      // catalog was already initialized, so just lookup object and delete by id\n      this.catalog.getAppKey(appName, dbname, function(result) {\n        var id = result.id;\n\n        if (id !== 0) {\n          adapter.catalog.deleteAppKey(id, callback);\n        } else if (typeof (callback) === 'function') {\n          callback({ success: true });\n        }\n      });\n    };\n\n    // alias\n    LokiIndexedAdapter.prototype.deleteKey = LokiIndexedAdapter.prototype.deleteDatabase;\n\n    /**\n     * Removes all database partitions and pages with the base filename passed in.\n     * This utility method does not (yet) guarantee async deletions will be completed before returning\n     *\n     * @param {string} dbname - the base filename which container, partitions, or pages are derived\n     * @memberof LokiIndexedAdapter\n     */\n    LokiIndexedAdapter.prototype.deleteDatabasePartitions = function(dbname) {\n      var self=this;\n      this.getDatabaseList(function(result) {\n        result.forEach(function(str) {\n          if (str.startsWith(dbname)) {\n            self.deleteDatabase(str);\n          }\n        });\n      });\n    };\n\n    /**\n     * Retrieves object array of catalog entries for current app.\n     *\n     * @example\n     * idbAdapter.getDatabaseList(function(result) {\n     *   // result is array of string names for that appcontext ('finance')\n     *   result.forEach(function(str) {\n     *     console.log(str);\n     *   });\n     * });\n     *\n     * @param {function} callback - should accept array of database names in the catalog for current app.\n     * @memberof LokiIndexedAdapter\n     */\n    LokiIndexedAdapter.prototype.getDatabaseList = function(callback)\n    {\n      var appName = this.app;\n      var adapter = this;\n\n      // lazy open/create db reference so dont -need- callback in constructor\n      if (this.catalog === null || this.catalog.db === null) {\n        this.catalog = new LokiCatalog(function(cat) {\n          adapter.catalog = cat;\n\n          adapter.getDatabaseList(callback);\n        });\n\n        return;\n      }\n\n      // catalog already initialized\n      // get all keys for current appName, and transpose results so just string array\n      this.catalog.getAppKeys(appName, function(results) {\n        var names = [];\n\n        for(var idx = 0; idx < results.length; idx++) {\n          names.push(results[idx].key);\n        }\n\n        if (typeof (callback) === 'function') {\n          callback(names);\n        }\n        else {\n          names.forEach(function(obj) {\n            console.log(obj);\n          });\n        }\n      });\n    };\n\n    // alias\n    LokiIndexedAdapter.prototype.getKeyList = LokiIndexedAdapter.prototype.getDatabaseList;\n\n    /**\n     * Allows retrieval of list of all keys in catalog along with size\n     *\n     * @param {function} callback - (Optional) callback to accept result array.\n     * @memberof LokiIndexedAdapter\n     */\n    LokiIndexedAdapter.prototype.getCatalogSummary = function(callback)\n    {\n      var appName = this.app;\n      var adapter = this;\n\n      // lazy open/create db reference\n      if (this.catalog === null || this.catalog.db === null) {\n        this.catalog = new LokiCatalog(function(cat) {\n          adapter.catalog = cat;\n\n          adapter.getCatalogSummary(callback);\n        });\n\n        return;\n      }\n\n      // catalog already initialized\n      // get all keys for current appName, and transpose results so just string array\n      this.catalog.getAllKeys(function(results) {\n        var entries = [];\n        var obj,\n          size,\n          oapp,\n          okey,\n          oval;\n\n        for(var idx = 0; idx < results.length; idx++) {\n          obj = results[idx];\n          oapp = obj.app || '';\n          okey = obj.key || '';\n          oval = obj.val || '';\n\n          // app and key are composited into an appkey column so we will mult by 2\n          size = oapp.length * 2 + okey.length * 2 + oval.length + 1;\n\n          entries.push({ \"app\": obj.app, \"key\": obj.key, \"size\": size });\n        }\n\n        if (typeof (callback) === 'function') {\n          callback(entries);\n        }\n        else {\n          entries.forEach(function(obj) {\n            console.log(obj);\n          });\n        }\n      });\n    };\n\n    /**\n     * LokiCatalog - underlying App/Key/Value catalog persistence\n     *    This non-interface class implements the actual persistence.\n     *    Used by the IndexedAdapter class.\n     */\n    function LokiCatalog(callback)\n    {\n      this.db = null;\n      this.initializeLokiCatalog(callback);\n    }\n\n    LokiCatalog.prototype.initializeLokiCatalog = function(callback) {\n      var openRequest = indexedDB.open('LokiCatalog', 1);\n      var cat = this;\n\n      // If database doesn't exist yet or its version is lower than our version specified above (2nd param in line above)\n      openRequest.onupgradeneeded = function(e) {\n        var thisDB = e.target.result;\n        if (thisDB.objectStoreNames.contains('LokiAKV')) {\n          thisDB.deleteObjectStore('LokiAKV');\n        }\n\n        if(!thisDB.objectStoreNames.contains('LokiAKV')) {\n          var objectStore = thisDB.createObjectStore('LokiAKV', { keyPath: 'id', autoIncrement:true });\n          objectStore.createIndex('app', 'app', {unique:false});\n          objectStore.createIndex('key', 'key', {unique:false});\n          // hack to simulate composite key since overhead is low (main size should be in val field)\n          // user (me) required to duplicate the app and key into comma delimited appkey field off object\n          // This will allow retrieving single record with that composite key as well as\n          // still supporting opening cursors on app or key alone\n          objectStore.createIndex('appkey', 'appkey', {unique:true});\n        }\n      };\n\n      openRequest.onsuccess = function(e) {\n        cat.db = e.target.result;\n\n        if (typeof (callback) === 'function') callback(cat);\n      };\n\n      openRequest.onerror = function(e) {\n        throw e;\n      };\n    };\n\n    LokiCatalog.prototype.getAppKey = function(app, key, callback) {\n      var transaction = this.db.transaction(['LokiAKV'], 'readonly');\n      var store = transaction.objectStore('LokiAKV');\n      var index = store.index('appkey');\n      var appkey = app + \",\" + key;\n      var request = index.get(appkey);\n\n      request.onsuccess = (function(usercallback) {\n        return function(e) {\n          var lres = e.target.result;\n\n          if (lres === null || typeof(lres) === 'undefined') {\n            lres = {\n              id: 0,\n              success: false\n            };\n          }\n\n          if (typeof(usercallback) === 'function') {\n            usercallback(lres);\n          }\n          else {\n            console.log(lres);\n          }\n        };\n      })(callback);\n\n      request.onerror = (function(usercallback) {\n        return function(e) {\n          if (typeof(usercallback) === 'function') {\n            usercallback({ id: 0, success: false });\n          }\n          else {\n            throw e;\n          }\n        };\n      })(callback);\n    };\n\n    LokiCatalog.prototype.getAppKeyById = function (id, callback, data) {\n      var transaction = this.db.transaction(['LokiAKV'], 'readonly');\n      var store = transaction.objectStore('LokiAKV');\n      var request = store.get(id);\n\n      request.onsuccess = (function(data, usercallback){\n        return function(e) {\n          if (typeof(usercallback) === 'function') {\n            usercallback(e.target.result, data);\n          }\n          else {\n            console.log(e.target.result);\n          }\n        };\n      })(data, callback);\n    };\n\n    LokiCatalog.prototype.setAppKey = function (app, key, val, callback) {\n      var transaction = this.db.transaction(['LokiAKV'], 'readwrite');\n      var store = transaction.objectStore('LokiAKV');\n      var index = store.index('appkey');\n      var appkey = app + \",\" + key;\n      var request = index.get(appkey);\n\n      // first try to retrieve an existing object by that key\n      // need to do this because to update an object you need to have id in object, otherwise it will append id with new autocounter and clash the unique index appkey\n      request.onsuccess = function(e) {\n        var res = e.target.result;\n\n        if (res === null || res === undefined) {\n          res = {\n            app:app,\n            key:key,\n            appkey: app + ',' + key,\n            val:val\n          };\n        }\n        else {\n          res.val = val;\n        }\n\n        var requestPut = store.put(res);\n\n        requestPut.onerror = (function(usercallback) {\n          return function(e) {\n            if (typeof(usercallback) === 'function') {\n              usercallback({ success: false });\n            }\n            else {\n              console.error('LokiCatalog.setAppKey (set) onerror');\n              console.error(request.error);\n            }\n          };\n\n        })(callback);\n\n        requestPut.onsuccess = (function(usercallback) {\n          return function(e) {\n            if (typeof(usercallback) === 'function') {\n              usercallback({ success: true });\n            }\n          };\n        })(callback);\n      };\n\n      request.onerror = (function(usercallback) {\n        return function(e) {\n          if (typeof(usercallback) === 'function') {\n            usercallback({ success: false });\n          }\n          else {\n            console.error('LokiCatalog.setAppKey (get) onerror');\n            console.error(request.error);\n          }\n        };\n      })(callback);\n    };\n\n    LokiCatalog.prototype.deleteAppKey = function (id, callback) {\n      var transaction = this.db.transaction(['LokiAKV'], 'readwrite');\n      var store = transaction.objectStore('LokiAKV');\n      var request = store.delete(id);\n\n      request.onsuccess = (function(usercallback) {\n        return function(evt) {\n          if (typeof(usercallback) === 'function') usercallback({ success: true });\n        };\n      })(callback);\n\n      request.onerror = (function(usercallback) {\n        return function(evt) {\n          if (typeof(usercallback) === 'function') {\n            usercallback({ success: false });\n          }\n          else {\n            console.error('LokiCatalog.deleteAppKey raised onerror');\n            console.error(request.error);\n          }\n        };\n      })(callback);\n    };\n\n    LokiCatalog.prototype.getAppKeys = function(app, callback) {\n      var transaction = this.db.transaction(['LokiAKV'], 'readonly');\n      var store = transaction.objectStore('LokiAKV');\n      var index = store.index('app');\n\n      // We want cursor to all values matching our (single) app param\n      var singleKeyRange = IDBKeyRange.only(app);\n\n      // To use one of the key ranges, pass it in as the first argument of openCursor()/openKeyCursor()\n      var cursor = index.openCursor(singleKeyRange);\n\n      // cursor internally, pushing results into this.data[] and return\n      // this.data[] when done (similar to service)\n      var localdata = [];\n\n      cursor.onsuccess = (function(data, callback) {\n        return function(e) {\n          var cursor = e.target.result;\n          if (cursor) {\n            var currObject = cursor.value;\n\n            data.push(currObject);\n\n            cursor.continue();\n          }\n          else {\n            if (typeof(callback) === 'function') {\n              callback(data);\n            }\n            else {\n              console.log(data);\n            }\n          }\n        };\n      })(localdata, callback);\n\n      cursor.onerror = (function(usercallback) {\n        return function(e) {\n          if (typeof(usercallback) === 'function') {\n            usercallback(null);\n          }\n          else {\n            console.error('LokiCatalog.getAppKeys raised onerror');\n            console.error(e);\n          }\n        };\n      })(callback);\n\n    };\n\n    // Hide 'cursoring' and return array of { id: id, key: key }\n    LokiCatalog.prototype.getAllKeys = function (callback) {\n      var transaction = this.db.transaction(['LokiAKV'], 'readonly');\n      var store = transaction.objectStore('LokiAKV');\n      var cursor = store.openCursor();\n\n      var localdata = [];\n\n      cursor.onsuccess = (function(data, callback) {\n        return function(e) {\n          var cursor = e.target.result;\n          if (cursor) {\n            var currObject = cursor.value;\n\n            data.push(currObject);\n\n            cursor.continue();\n          }\n          else {\n            if (typeof(callback) === 'function') {\n              callback(data);\n            }\n            else {\n              console.log(data);\n            }\n          }\n        };\n      })(localdata, callback);\n\n      cursor.onerror = (function(usercallback) {\n        return function(e) {\n          if (typeof(usercallback) === 'function') usercallback(null);\n        };\n      })(callback);\n\n    };\n\n    return LokiIndexedAdapter;\n\n  }());\n}));\n","/**\n * EmbedSheet data store\n * @author Chase Cathcart <https://github.com/ChaseOnTheWeb>\n *\n * Reads the contents of a fetched URL into a Loki in-memory database.\n */\n\nimport XLSX from 'xlsx';\nimport loki from 'lokijs';\n\n// We don't want all the codepages from cpexcel.js because it makes the script\n// huge. However, we may need some of the file encoding utility functions.\nwindow.cptable = {};\nrequire('codepage/cputils');\n\nexport default function EmbedSheetData(data, options) {\n  this.db = new loki();\n  this.items = this.db.addCollection('item');\n  this.headers = {};\n  this.options = options;\n\n  var workbook = XLSX.read(data, { type: 'array', cellFormula: false, cellHTML: false, cellText: false });\n  var sheet = workbook.Sheets[this.options.sheet ? this.options.sheet : workbook.SheetNames[0]];\n  var range = XLSX.utils.decode_range(sheet['!ref']);\n  var filters = {};\n\n  if (this.options.columns) {\n    var columns = this.options.columns\n      .concat(\n        this.options.sortby.map(function (v) { return Array.isArray(v) ? v[0] : v; }),\n        this.options.filters.map(function (v) { return v.col; }),\n        Object.keys(this.options.query)\n        )\n      .sort()\n      .filter(function (v, i, a) { return v != a[i - 1]; });\n  }\n  else {\n    var columns = new Array(range.e.c - range.s.c);\n\n    for (var i = range.s.c; i <= range.e.c; ++i) {\n      output.push(XLSX.utils.encode_col(i));\n    }\n  }\n\n  for (var i = 0; i < this.options.filters.length; ++i) {\n    var col = 'col' + this.options.filters[i].col;\n    filters[col] = this.db.addCollection(col, { unique: ['value'] });\n    this.items.ensureIndex(this.options.filters[i].col);\n  }\n\n  columns.map(function (col) { this.headers[col] = sheet[col + \"1\"].v; }, this);\n\n  for (var i = 2; i <= range.e.r + 1; ++i) {\n    var row = {};\n    columns.map(function (col) { row[col] = sheet[col + i] ? sheet[col + i].v : null; })\n    for (var j = 0; j < this.options.filters.length; ++j) {\n      var col = this.options.filters[j].col;\n      filters['col' + col].by('value', row[col]) || filters['col' + col].insert({ value: row[col] });\n    }\n    this.items.insert(row);\n  }\n\n  return this;\n}\n\nEmbedSheetData.prototype.pagedQuery = function (conditions, page) {\n  var rows_per_page = this.options.rows_per_page;\n  var data = this.items.chain().find(conditions).compoundsort(this.options.sortby);\n  var total_rows = data.count();\n  var max_pages = rows_per_page ? Math.floor(total_rows / rows_per_page) : 0;\n  page = parseInt(max_pages < page ? max_pages : page);\n\n  if (rows_per_page) {\n    data = data.offset(page * rows_per_page).limit(rows_per_page);\n  }\n\n  return {\n    total: total_rows,\n    page: page,\n    max_pages: max_pages,\n    data: data.data()\n  };\n}\n\n/**\n * Returns object of information needed to build filters:\n *    label: Column name\n *    choices: All column values for select list\n */\nEmbedSheetData.prototype.getFilter = function (col) {\n  return {\n    label: this.headers[col],\n    choices: this.db.getCollection('col' + col)\n  };\n}\n\n/**\n * Fetches the given URL and initializes the data store.\n *    url: URL to fetch\n *    options: object of options to pass to EmbedSheetData\n *    complete: callback function to be invoked on success. It is passed an\n *        instance of EmbedSheetData.\n */\nEmbedSheetData.fromURL = function (url, options, complete) {\n  if (typeof FileReader === 'undefined') return;\n\n  var reader = new FileReader();\n  reader.onload = function (e) {\n    var data = new Uint8Array(e.target.result);\n    var datastore = new EmbedSheetData(data, options);\n\n    complete(datastore);\n  };\n\n  fetch(url)\n    .then(function (response) { return response.blob(); })\n    .then(function (file) { reader.readAsArrayBuffer(file); })\n    .catch(function (err) { console.log(err); });\n}","/**\n * EmbedSheet user interface\n * @author Chase Cathcart <https://github.com/ChaseOnTheWeb>\n *\n * Outputs the matching data in a filterable table.\n */\n\n// Debounce function from Underscore.js (MIT license)\n// Rate limits how many times in a time period the function can execute\nfunction debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this, args = arguments;\n    var later = function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n\nexport default function EmbedSheetRenderer(store, options) {\n  this.store = store;\n  this.options = options;\n  this.activePage = 0;\n  this.filterConditions = {};\n  this.component = document.createElement('div');\n}\n\nEmbedSheetRenderer.prototype.getPagedData = function (page) {\n  var conditions = Object.assign({}, this.options.query, this.filterConditions);\n\n  var query = this.store.pagedQuery(conditions, page);\n  this.activePage = query.page;\n\n  var event = new CustomEvent('datarefresh', { detail: { query: query } });\n  this.component.dispatchEvent(event);\n}\n\nEmbedSheetRenderer.prototype.render = function () {\n  var tableContainer = document.createElement('div');\n  tableContainer.classList.add('table-container');\n\n  this.component.appendChild(this.renderFilters());\n  this.component.appendChild(this.renderPager());\n  this.component.appendChild(tableContainer);\n  this.component.appendChild(this.renderPager());\n\n  var updateTable = function (event) {\n    var query = event.detail.query;\n    tableContainer.innerHTML = this.renderTable(query.data);\n    this.component.scrollIntoView({ behavior: \"smooth\" });\n    tableContainer.focus();\n  }\n\n  this.component.addEventListener('datarefresh', updateTable.bind(this), true);\n\n  this.getPagedData(0);\n\n  return this.component;\n}\n\nEmbedSheetRenderer.prototype.renderPager = function () {\n  var container = document.createElement('nav');\n  var total = document.createElement('output');\n  var prevButton = document.createElement('button');\n  var nextButton = document.createElement('button');\n\n  container.classList.add('embed-pager');\n  container.setAttribute('aria-label', 'Data table navigation');\n\n  total.classList.add('embed-pager-current');\n\n  prevButton.classList.add('embed-pager-previous');\n  prevButton.innerHTML = \"Previous\";\n  prevButton.setAttribute('data-pager-jump', '-1');\n\n  nextButton.classList.add('embed-pager-next');\n  nextButton.innerHTML = \"Next\";\n  nextButton.setAttribute('data-pager-jump', '+1');\n\n  container.appendChild(total);\n  container.appendChild(prevButton);\n  container.appendChild(nextButton);\n\n  var onClick = function(event) {\n    if (event.target.hasAttribute('data-pager-jump')) {\n      var newPage = this.activePage + Number(event.target.getAttribute('data-pager-jump'));\n\n      this.getPagedData(newPage);\n    }\n  };\n\n  container.addEventListener('click', onClick.bind(this), false);\n\n  this.component.addEventListener('datarefresh', function(event) {\n    var query = event.detail.query;\n\n    total.innerHTML = \"Page \" + (query.page + 1) + \" of \" + (query.max_pages + 1);\n\n    prevButton.disabled = query.page <= 0;\n    nextButton.disabled = query.page >= query.max_pages;\n  }, true);\n\n  return container;\n}\n\nEmbedSheetRenderer.prototype.renderFilters = function() {\n  var filters = document.createElement('form');\n  filters.classList.add('embed-filter-form');\n\n  for (var i = 0; i < this.options.filters.length; ++i) {\n    filters.appendChild(this.renderFilter(this.options.filters[i]));\n  }\n\n  return filters;\n}\n\nEmbedSheetRenderer.prototype.setFilterValue = function (elem) {\n  var field = elem.name.slice(7);\n\n  if (elem.value) {\n    this.filterConditions[field] = elem.type == 'text' ? { '$regex': [elem.value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i'] } : { '$aeq': elem.value };\n  }\n  else if (field in this.filterConditions) {\n    delete this.filterConditions[field];\n  }\n}\n\nEmbedSheetRenderer.prototype.renderFilter = function (filter) {\n  var filterData = this.store.getFilter(filter.col);\n\n  var label = document.createElement('label');\n  label.classList.add('embed-filter-label');\n  label.textContent = filterData.label;\n\n  var select = document.createElement(filter.textfield ? 'input' : 'select');\n  select.classList.add('embed-filter-input');\n  select.name = 'filter_' + filter.col;\n\n  var onChange = debounce(function() {\n    this.setFilterValue(select);\n    this.getPagedData(this.activePage);\n  }, 300);\n\n  select.addEventListener('change', onChange.bind(this), false);\n  select.addEventListener('keyup', onChange.bind(this), false);\n\n  if (!filter.textfield) {\n    if (!filter.required) {\n      var elem = document.createElement('option');\n      elem.textContent = \" - All - \";\n      elem.value = \"\";\n      select.appendChild(elem);\n    }\n\n    for (var i = 0, l = filterData.choices.data.length; i < l; ++i) {\n      var elem = document.createElement('option');\n\n      elem.textContent = elem.value = filterData.choices.data[i].value;\n      if (filter.required && i == 0) elem.selected = true;\n\n      select.appendChild(elem);\n    }\n  }\n\n  this.setFilterValue(select);\n  label.appendChild(select);\n  return label;\n}\n\nEmbedSheetRenderer.prototype.renderTable = function (data) {\n  var headerrow = this.options.columns.map(function (v) { return '<th>' + this.store.headers[v] + '</th>'; }, this).join('');\n\n  var output = '<table class=\"embed-sheet-table\">';\n  output += '<thead><tr>' + headerrow + '</tr></thead>';\n  for (var i = 0, l = data.length; i < l; ++i) {\n    var row = this.options.columns.map(function (v) { return '<td>' + data[i][v] + '</td>' }).join('');\n    output += '<tr>' + row + '</tr>';\n  }\n  output += '</table>';\n\n  return output;\n}\n","/**\n * EmbedSheet controller\n * @author Chase Cathcart <https://github.com/ChaseOnTheWeb>\n */\n\nimport EmbedSheetData from './data';\nimport EmbedSheetRenderer from './renderer';\nvar _idCounter = 0;\n\nvar defaultOptions = {\n  columns: [],\n  sortby: [],\n  filters: [],\n  query: {},\n  rows_per_page: 500\n};\n\nfunction onReady(cb) {\n  if (document.readyState != 'loading') cb();\n  else if (document.addEventListener) document.addEventListener('DOMContentLoaded', cb);\n  else document.attachEvent('onreadystatechange', function () {\n    if (document.readyState != 'complete') cb(); // IE <= 8 (interactive not supported)\n  });\n}\n\nexport default function EmbedSheet(url, elem, options) {\n  'use strict';\n\n  this.baseID = elem.id ? elem.id : 'embed-sheet-' + _idCounter++;\n\n  this.options = parseOptions(options);\n\n  var container = document.createElement('div');\n  container.id = this.baseID + '-container';\n  elem.parentNode.insertBefore(container, elem);\n  container.innerHTML = 'Loading...';\n\n  var _this = this;\n  EmbedSheetData.fromURL(url, this.options, function (store) {\n    var renderer = new EmbedSheetRenderer(store, _this.options);\n    _this.store = store;\n    container.innerHTML = '';\n    container.insertBefore(renderer.render(), null);\n    container.insertBefore(elem, null);\n  });\n}\n\nEmbedSheet.fromLink = function (elem) {\n  function splitOptions(str) {\n    return str.split(',').map(function (v) { return v.trim(); });\n  }\n\n  var options = {};\n\n  for (var opt in defaultOptions) {\n    var data = elem.getAttribute('data-sheet-' + opt.replace(/_/g, '-'));\n\n    if (data) {\n      switch (opt) {\n        case 'columns':\n        case 'sortby':\n        case 'filters':\n          options[opt] = splitOptions(data);\n          break;\n        case 'query':\n          try {\n            options[opt] = JSON.parse(data);\n          } catch (e) {\n            options[opt] = {};\n          }\n          break;\n        case 'rows_per_page':\n          options[opt] = parseInt(data);\n          break;\n      }\n    }\n  }\n\n  return new EmbedSheet(elem.href, elem, options);\n}\n\nEmbedSheet.fromLinks = function () {\n  var links = document.querySelectorAll('a[data-embed-type=sheet]');\n\n  for (var i=0; i < links.length; ++i) {\n    EmbedSheet.fromLink(links[i]);\n  }\n}\n\nfunction parseOptions(userOptions) {\n  function parseFilter(v) {\n    switch (v[0]) {\n      case '*':\n        return { col: v.slice(1), required: true };\n      case '_':\n        return { col: v.slice(1), required: false, textfield: true };\n      default:\n        return { col: v, required: false };\n    }\n  }\n\n  var inputs = [defaultOptions, userOptions || {}];\n  var options = {};\n\n  for (var i = 0, length = inputs.length; i < length; ++i) {\n    var obj = inputs[i];\n    for (var prop in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n        options[prop] = obj[prop];\n      }\n    }\n  }\n\n  options.sortby = options.sortby.map(function (v) { return v[0] == '-' ? [v.slice(1), true] : v });\n  options.filters = options.filters.map(parseFilter);\n\n  return options;\n}\n\nonReady(EmbedSheet.fromLinks);\n"],"sourceRoot":""}